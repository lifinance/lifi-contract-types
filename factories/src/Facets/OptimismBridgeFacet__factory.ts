/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OptimismBridgeFacet,
  OptimismBridgeFacetInterface,
} from "../../../src/Facets/OptimismBridgeFacet";

const _abi = [
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidConfig",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyContractOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bridge",
        type: "address",
      },
    ],
    name: "OptimismBridgeRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "assetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "bridge",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct OptimismBridgeFacet.Config[]",
        name: "configs",
        type: "tuple[]",
      },
    ],
    name: "OptimismInitialized",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "assetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "bridge",
            type: "address",
          },
        ],
        internalType: "struct OptimismBridgeFacet.Config[]",
        name: "configs",
        type: "tuple[]",
      },
      {
        internalType: "contract IL1StandardBridge",
        name: "standardBridge",
        type: "address",
      },
    ],
    name: "initOptimism",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "bridge",
        type: "address",
      },
    ],
    name: "registerBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "assetIdOnL2",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "l2Gas",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isSynthetix",
            type: "bool",
          },
        ],
        internalType: "struct OptimismBridgeFacet.OptimismData",
        name: "_optimismData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaOptimismBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "assetIdOnL2",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "l2Gas",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isSynthetix",
            type: "bool",
          },
        ],
        internalType: "struct OptimismBridgeFacet.OptimismData",
        name: "_optimismData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaOptimismBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612bfa806100206000396000f3fe60806040526004361061003f5760003560e01c80633961d1ed146100445780635bb5d44814610066578063899cc31714610079578063ce8a97a514610099575b600080fd5b34801561005057600080fd5b5061006461005f366004612286565b6100ac565b005b610064610074366004612500565b610207565b34801561008557600080fd5b506100646100943660046125ac565b610400565b6100646100a7366004612632565b610652565b6100b4610845565b7f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca4547f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca39074010000000000000000000000000000000000000000900460ff16610149576040517f87138d5c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038216610189576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038381166000818152602084815260409182902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169487169485179055905192835290917f8ba151f3405c32cff2d4c159409e00b97b0b46fbcbe59438e7f62c1283f80638910160405180910390a2505050565b33600061021434476126b0565b905085806101000151610253576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610291576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876102a78160a001516001600160a01b03161590565b156102de576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361031c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610397576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155895160c08b01516103af91908b8b336108ad565b60c08b01526103be8a886109e8565b6000908190554793509150508282116103d85760006103e2565b6103e283836126b0565b905080156103f6576103f660008583610cfc565b5050505050505050565b610408610845565b7f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca4547f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca39074010000000000000000000000000000000000000000900460ff161561049e576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b838110156105c55760008585838181106104bd576104bd6126c3565b90506040020160200160208101906104d591906126f2565b6001600160a01b031603610515576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b848482818110610527576105276126c3565b905060400201602001602081019061053f91906126f2565b826000878785818110610554576105546126c3565b61056a92602060409092020190810191506126f2565b6001600160a01b039081168252602082019290925260400160002080547fffffffffffffffffffffffff00000000000000000000000000000000000000001692909116919091179055806105bd8161270f565b9150506104a1565b506001810180547fffffffffffffffffffffff000000000000000000000000000000000000000000166001600160a01b03841617740100000000000000000000000000000000000000001790556040517fd192688003c02a257d1ee3ef083c31f3ba31e400ad8655bf4257081255c91568906106449086908690612747565b60405180910390a150505050565b33600061065f34476126b0565b9050838061010001511561069f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84806101200151156106dd576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856106f38160a001516001600160a01b03161590565b1561072a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610768576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016107e3576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155608088015160c08901516107fb9190610d25565b61080588886109e8565b60009081905547935091505082821161081f576000610829565b61082983836126b0565b9050801561083d5761083d60008583610cfc565b505050505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b031633146108ab576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000828082036108e9576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856108f86001856126b0565b818110610907576109076126c3565b905060200281019061091991906127ad565b61092a9060808101906060016126f2565b9050600061093782610e81565b90506001600160a01b0382166109545761095134826126b0565b90505b60006109608888610f20565b905061096c888861101f565b6109798a89898985611080565b60008261098585610e81565b61098f91906126b0565b9050898110156109da576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b60808201516001600160a01b0390811660009081527f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca360208190526040822054909216908115610a385781610a47565b60018301546001600160a01b03165b9050610a5e85608001516001600160a01b03161590565b15610b1d5760c085015160a08601516001600160a01b03831691639a2ac6d591610a8e6040890160208a016127eb565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b03909216600483015263ffffffff16602482015260606044820152600060648201526084016000604051808303818588803b158015610aff57600080fd5b505af1158015610b13573d6000803e3d6000fd5b5050505050610cbe565b610b308560800151828760c001516113fe565b610b406060850160408601612811565b15610bdd5760a085015160c08601516040517fffaad6a50000000000000000000000000000000000000000000000000000000081526001600160a01b0384169263ffaad6a592610ba6926004016001600160a01b03929092168252602082015260400190565b600060405180830381600087803b158015610bc057600080fd5b505af1158015610bd4573d6000803e3d6000fd5b50505050610cbe565b60808501516001600160a01b0382169063838b252090610c0060208801886126f2565b60a089015160c08a0151610c1a60408b0160208c016127eb565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b1681526001600160a01b0395861660048201529385166024850152939091166044830152606482015263ffffffff91909116608482015260c060a4820152600060c482015260e401600060405180830381600087803b158015610ca557600080fd5b505af1158015610cb9573d6000803e3d6000fd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f185604051610ced919061287e565b60405180910390a15050505050565b6001600160a01b03831615610d1b57610d16838383611522565b505050565b610d168282611637565b6001600160a01b038216610d715780341015610d6d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610dab576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610e0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2f919061294c565b905081811015610e75576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016109d1565b610d1683333085611747565b60006001600160a01b03821615610f18576040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610eef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f13919061294c565b610f1a565b475b92915050565b60608160008167ffffffffffffffff811115610f3e57610f3e6122bf565b604051908082528060200260200182016040528015610f67578160200160208202803683370190505b5090506000805b8381101561101457868682818110610f8857610f886126c3565b9050602002810190610f9a91906127ad565b610fab9060808101906060016126f2565b9150610fb682610e81565b838281518110610fc857610fc86126c3565b60209081029190910101526001600160a01b03821661100c5734838281518110610ff457610ff46126c3565b6020026020010181815161100891906126b0565b9052505b600101610f6e565b509095945050505050565b60005b81811015610d1657600083838381811061103e5761103e6126c3565b905060200281019061105091906127ad565b61105990612965565b90508060c00151156110775761107781604001518260800151610d25565b50600101611022565b838383838260018114611319576000858561109c6001856126b0565b8181106110ab576110ab6126c3565b90506020028101906110bd91906127ad565b6110ce9060808101906060016126f2565b9050600089815b8181101561125f57368d8d838181106110f0576110f06126c3565b905060200281019061110291906127ad565b905061112461111760608301604084016126f2565b6001600160a01b03161590565b8061117a575061117a61113d60408301602084016126f2565b6001600160a01b031660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015611191575061119161113d60208301836126f2565b801561121657506112166111a860a0830183612a0a565b6111b791600491600091612a76565b6111c091612aa0565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61124c576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112568f82611925565b506001016110d5565b505060005b61126f6001856126b0565b81101561131157600088888381811061128a5761128a6126c3565b905060200281019061129c91906127ad565b6112ad9060808101906060016126f2565b9050836001600160a01b0316816001600160a01b031614611308578582815181106112da576112da6126c3565b60200260200101516112eb82610e81565b6112f591906126b0565b9250821561130857611308818885610cfc565b50600101611264565b5050506113f2565b8760005b818110156113ef57368b8b83818110611338576113386126c3565b905060200281019061134a91906127ad565b905061135f61111760608301604084016126f2565b80611378575061137861113d60408301602084016126f2565b801561138f575061138f61113d60208301836126f2565b80156113a657506113a66111a860a0830183612a0a565b6113dc576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113e68d82611925565b5060010161131d565b50505b50505050505050505050565b6001600160a01b03831661141157505050565b6001600160a01b038216611451576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa1580156114ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114de919061294c565b90508181101561151c5761151c8484611517847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6126b0565b611c21565b50505050565b6001600160a01b038316611562576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa1580156115c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e6919061294c565b90508082111561162c576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016109d1565b61151c848484611d65565b6001600160a01b038216611677576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156116ba576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016109d1565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611707576040519150601f19603f3d011682016040523d82523d6000602084013e61170c565b606091505b5050905080610d16576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038416611787576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0382166117c7576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015285916000918316906370a0823190602401602060405180830381865afa15801561182b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184f919061294c565b905061185d82868686611dae565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152849183918516906370a0823190602401602060405180830381865afa1580156118c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e4919061294c565b6118ee91906126b0565b1461083d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61193b61193560208301836126f2565b3b151590565b611971576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036119b1576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006119c661111760608501604086016126f2565b6119d15760006119d7565b82608001355b905060006119f36119ee60608601604087016126f2565b610e81565b90506000611a0a6119ee60808701606088016126f2565b905082600003611a4157611a41611a2760608701604088016126f2565b611a3760408801602089016126f2565b87608001356113fe565b8460800135821015611a8c576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016109d1565b600080611a9c60208801886126f2565b6001600160a01b031685611ab360a08a018a612a0a565b604051611ac1929190612ae8565b60006040518083038185875af1925050503d8060008114611afe576040519150601f19603f3d011682016040523d82523d6000602084013e611b03565b606091505b509150915081611b4e576000611b1882611dff565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d19190612af8565b6000611b636119ee60808a0160608b016126f2565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611b9460208b018b6126f2565b611ba460608c0160408d016126f2565b611bb460808d0160608e016126f2565b8c60800135898711611bc65786611bd0565b611bd08a886126b0565b604080519687526001600160a01b0395861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611c8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611caf919061294c565b611cb99190612b0b565b6040516001600160a01b03851660248201526044810182905290915061151c9085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611e7d565b6040516001600160a01b038316602482015260448101829052610d169084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611d01565b6040516001600160a01b038085166024830152831660448201526064810182905261151c9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611d01565b6060604482511015611e4457505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611e606004808551611e5891906126b0565b859190611f7c565b905080806020019051810190611e769190612b1e565b9392505050565b6000611ed2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166120789092919063ffffffff16565b805190915015610d165780806020019051810190611ef09190612b95565b610d16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016109d1565b606081611f8a81601f612b0b565b1015611fc2576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611fcc8284612b0b565b84511015612006576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015612025576040519150600082526020820160405261206f565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561205e578051835260209283019201612046565b5050858452601f01601f1916604052505b50949350505050565b6060612087848460008561208f565b949350505050565b606082471015612121576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016109d1565b6001600160a01b0385163b612192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109d1565b600080866001600160a01b031685876040516121ae9190612bb2565b60006040518083038185875af1925050503d80600081146121eb576040519150601f19603f3d011682016040523d82523d6000602084013e6121f0565b606091505b509150915061220082828661220b565b979650505050505050565b6060831561221a575081611e76565b82511561222a5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d19190612af8565b6001600160a01b038116811461227357600080fd5b50565b80356122818161225e565b919050565b6000806040838503121561229957600080fd5b82356122a48161225e565b915060208301356122b48161225e565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715612312576123126122bf565b60405290565b60405160e0810167ffffffffffffffff81118282101715612312576123126122bf565b604051601f8201601f1916810167ffffffffffffffff81118282101715612364576123646122bf565b604052919050565b600067ffffffffffffffff821115612386576123866122bf565b50601f01601f191660200190565b600082601f8301126123a557600080fd5b81356123b86123b38261236c565b61233b565b8181528460208386010111156123cd57600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461227357600080fd5b8035612281816123ea565b6000610140828403121561241657600080fd5b61241e6122ee565b905081358152602082013567ffffffffffffffff8082111561243f57600080fd5b61244b85838601612394565b6020840152604084013591508082111561246457600080fd5b5061247184828501612394565b60408301525061248360608301612276565b606082015261249460808301612276565b60808201526124a560a08301612276565b60a082015260c082013560c082015260e082013560e08201526101006124cc8184016123f8565b908201526101206124de8382016123f8565b9082015292915050565b6000606082840312156124fa57600080fd5b50919050565b60008060008060a0858703121561251657600080fd5b843567ffffffffffffffff8082111561252e57600080fd5b61253a88838901612403565b9550602087013591508082111561255057600080fd5b818701915087601f83011261256457600080fd5b81358181111561257357600080fd5b8860208260051b850101111561258857600080fd5b6020830195508094505050506125a186604087016124e8565b905092959194509250565b6000806000604084860312156125c157600080fd5b833567ffffffffffffffff808211156125d957600080fd5b818601915086601f8301126125ed57600080fd5b8135818111156125fc57600080fd5b8760208260061b850101111561261157600080fd5b602092830195509350508401356126278161225e565b809150509250925092565b6000806080838503121561264557600080fd5b823567ffffffffffffffff81111561265c57600080fd5b61266885828601612403565b92505061267884602085016124e8565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610f1a57610f1a612681565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561270457600080fd5b8135611e768161225e565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361274057612740612681565b5060010190565b6020808252818101839052600090604080840186845b878110156127a05781356127708161225e565b6001600160a01b039081168452828601359061278b8261225e565b1683860152918301919083019060010161275d565b5090979650505050505050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126127e157600080fd5b9190910192915050565b6000602082840312156127fd57600080fd5b813563ffffffff81168114611e7657600080fd5b60006020828403121561282357600080fd5b8135611e76816123ea565b60005b83811015612849578181015183820152602001612831565b50506000910152565b6000815180845261286a81602086016020860161282e565b601f01601f19169290920160200192915050565b6020815281516020820152600060208301516101408060408501526128a7610160850183612852565b91506040850151601f198584030160608601526128c48382612852565b92505060608501516128e160808601826001600160a01b03169052565b5060808501516001600160a01b03811660a08601525060a08501516001600160a01b03811660c08601525060c085015160e085015260e085015161010081818701528087015191505061012061293a8187018315159052565b90950151151593019290925250919050565b60006020828403121561295e57600080fd5b5051919050565b600060e0823603121561297757600080fd5b61297f612318565b61298883612276565b815261299660208401612276565b60208201526129a760408401612276565b60408201526129b860608401612276565b60608201526080830135608082015260a083013567ffffffffffffffff8111156129e157600080fd5b6129ed36828601612394565b60a0830152506129ff60c084016123f8565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612a3f57600080fd5b83018035915067ffffffffffffffff821115612a5a57600080fd5b602001915036819003821315612a6f57600080fd5b9250929050565b60008085851115612a8657600080fd5b83861115612a9357600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612ae05780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b602081526000611e766020830184612852565b80820180821115610f1a57610f1a612681565b600060208284031215612b3057600080fd5b815167ffffffffffffffff811115612b4757600080fd5b8201601f81018413612b5857600080fd5b8051612b666123b38261236c565b818152856020838501011115612b7b57600080fd5b612b8c82602083016020860161282e565b95945050505050565b600060208284031215612ba757600080fd5b8151611e76816123ea565b600082516127e181846020870161282e56fea264697066735822122057c19b757a5935cae2edc86f86c96a2aa8be6f71af043a8f6bb698d851a8b69664736f6c63430008110033";

type OptimismBridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismBridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismBridgeFacet__factory extends ContractFactory {
  constructor(...args: OptimismBridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OptimismBridgeFacet> {
    return super.deploy(overrides || {}) as Promise<OptimismBridgeFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OptimismBridgeFacet {
    return super.attach(address) as OptimismBridgeFacet;
  }
  override connect(signer: Signer): OptimismBridgeFacet__factory {
    return super.connect(signer) as OptimismBridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismBridgeFacetInterface {
    return new utils.Interface(_abi) as OptimismBridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismBridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as OptimismBridgeFacet;
  }
}
