"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntentReceiver__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "receive",
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "cancelIntent",
        inputs: [
            {
                name: "intentId",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "refundTo",
                type: "address",
                internalType: "address payable",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "cancelOwnershipTransfer",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "confirmOwnershipTransfer",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "executeIntent",
        inputs: [
            {
                name: "intentId",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "exec",
                type: "tuple",
                internalType: "struct IntentReceiver.IntentExecution",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "value",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "feeAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "feeCollector",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "owner",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "pendingOwner",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "refundExpiredIntent",
        inputs: [
            {
                name: "intentId",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "feeAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "swapIntents",
        inputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        outputs: [
            {
                name: "id",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "fromAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "toAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "minAmountOut",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "deadline",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "address",
                internalType: "address payable",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "transferOwnership",
        inputs: [
            {
                name: "_newOwner",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "event",
        name: "ExpiredIntentRefunded",
        inputs: [
            {
                name: "details",
                type: "tuple",
                indexed: false,
                internalType: "struct IntentReceiver.SwapIntent",
                components: [
                    {
                        name: "id",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "fromAsset",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "toAsset",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "minAmountOut",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address payable",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "IntentAdded",
        inputs: [
            {
                name: "details",
                type: "tuple",
                indexed: false,
                internalType: "struct IntentReceiver.SwapIntent",
                components: [
                    {
                        name: "id",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "fromAsset",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "toAsset",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "minAmountOut",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address payable",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "IntentCancelled",
        inputs: [
            {
                name: "details",
                type: "tuple",
                indexed: false,
                internalType: "struct IntentReceiver.SwapIntent",
                components: [
                    {
                        name: "id",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "fromAsset",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "toAsset",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "minAmountOut",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address payable",
                    },
                ],
            },
            {
                name: "refundedTo",
                type: "address",
                indexed: false,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "IntentExecuted",
        inputs: [
            {
                name: "details",
                type: "tuple",
                indexed: false,
                internalType: "struct IntentReceiver.SwapIntent",
                components: [
                    {
                        name: "id",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "fromAsset",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "toAsset",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "minAmountOut",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address payable",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "OwnershipTransferRequested",
        inputs: [
            {
                name: "_from",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "_to",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
            {
                name: "previousOwner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "newOwner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "BelowMinAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "Expired",
        inputs: [],
    },
    {
        type: "error",
        name: "ExternalCallFailed",
        inputs: [],
    },
    {
        type: "error",
        name: "NewOwnerMustNotBeSelf",
        inputs: [],
    },
    {
        type: "error",
        name: "NoNullOwner",
        inputs: [],
    },
    {
        type: "error",
        name: "NoPendingOwnershipTransfer",
        inputs: [],
    },
    {
        type: "error",
        name: "NotPendingOwner",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
    {
        type: "error",
        name: "UnAuthorized",
        inputs: [],
    },
];
var IntentReceiver__factory = /** @class */ (function () {
    function IntentReceiver__factory() {
    }
    IntentReceiver__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    IntentReceiver__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    IntentReceiver__factory.abi = _abi;
    return IntentReceiver__factory;
}());
exports.IntentReceiver__factory = IntentReceiver__factory;
