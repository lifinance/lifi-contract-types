import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { RelayerCBridge, RelayerCBridgeInterface } from "../RelayerCBridge";
declare type RelayerCBridgeConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class RelayerCBridge__factory extends ContractFactory {
    constructor(...args: RelayerCBridgeConstructorParams);
    deploy(_owner: PromiseOrValue<string>, _cBridgeMessageBusAddress: PromiseOrValue<string>, _diamondAddress: PromiseOrValue<string>, _executorAddress: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<RelayerCBridge>;
    getDeployTransaction(_owner: PromiseOrValue<string>, _cBridgeMessageBusAddress: PromiseOrValue<string>, _diamondAddress: PromiseOrValue<string>, _executorAddress: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): RelayerCBridge;
    connect(signer: Signer): RelayerCBridge__factory;
    static readonly bytecode = "0x60806040523480156200001157600080fd5b506040516200314a3803806200314a8339810160408190526200003491620000a5565b600080546001600160a01b039586166001600160a01b031991821617909155600280549486169482169490941790935560038054928516928416929092179091556004805491909316911617905562000102565b80516001600160a01b0381168114620000a057600080fd5b919050565b60008060008060808587031215620000bc57600080fd5b620000c78562000088565b9350620000d76020860162000088565b9250620000e76040860162000088565b9150620000f76060860162000088565b905092959194509250565b61303880620001126000396000f3fe6080604052600436106100ec5760003560e01c80637200b8291161008a578063c2aad68f11610059578063c2aad68f146102a9578063c34c08e5146102bc578063e30c3978146102e9578063f2fde38b1461031657600080fd5b80637200b8291461021757806375b4c0051461022c5780637cd2bffc146102695780638da5cb5b1461027c57600080fd5b806326eb8b06116100c657806326eb8b06146101585780632b71cb25146101785780633d62fd4d146101ca5780636a60c3b7146101ea57600080fd5b80630bcb4982146100f85780631c3c0ea81461012157806323452b9c1461014357600080fd5b366100f357005b600080fd5b61010b610106366004612592565b610336565b6040516101189190612635565b60405180910390f35b34801561012d57600080fd5b5061014161013c366004612676565b61041a565b005b34801561014f57600080fd5b506101416104da565b34801561016457600080fd5b50610141610173366004612676565b6105a4565b34801561018457600080fd5b506002546101a59073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610118565b3480156101d657600080fd5b506101416101e5366004612676565b610664565b3480156101f657600080fd5b506003546101a59073ffffffffffffffffffffffffffffffffffffffff1681565b34801561022357600080fd5b50610141610724565b61023f61023a366004612916565b61080a565b6040805192835273ffffffffffffffffffffffffffffffffffffffff909116602083015201610118565b61010b610277366004612a42565b6113af565b34801561028857600080fd5b506000546101a59073ffffffffffffffffffffffffffffffffffffffff1681565b6101416102b7366004612ad9565b61143c565b3480156102c857600080fd5b506004546101a59073ffffffffffffffffffffffffffffffffffffffff1681565b3480156102f557600080fd5b506001546101a59073ffffffffffffffffffffffffffffffffffffffff1681565b34801561032257600080fd5b50610141610331366004612676565b611529565b60025460009073ffffffffffffffffffffffffffffffffffffffff16331461038a576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061039985870187612b55565b9350505091506103aa888289611687565b6040805173ffffffffffffffffffffffffffffffffffffffff808b1682528316602082015290810188905242606082015282907f1fbfa988fd46deed0de12c94c7b5dcb537d51b804246d0083f245f7a8997d1709060800160405180910390a26001925050505b95945050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461046b576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f3e3c5e6d5b512eaa5d5a80669846cfbaf8bde70fc6f7a3be9828cffc9ba5f1db90600090a250565b60005473ffffffffffffffffffffffffffffffffffffffff16331461052b576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015473ffffffffffffffffffffffffffffffffffffffff1661057a576040517f75cdea1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105f5576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f2f45394278fc43c32e8e8b251c5aff1b3767fd8acf2d6d0ab39b3ac9fc0ab09b90600090a250565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106b5576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f141784b8d1b0a4dd321cfc3c665bcbb9db3deca1527ecc67be54f6b6c68d6ca990600090a250565b60015473ffffffffffffffffffffffffffffffffffffffff16338114610776576040517f1853971c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b600354600090819073ffffffffffffffffffffffffffffffffffffffff163314610860576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018360a00151600681111561087857610878612606565b03610b0b57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382980dc46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090e9190612cfa565b9050610932846080015173ffffffffffffffffffffffffffffffffffffffff161590565b15610a005760c084015160a085015160e0860151602086015186516040517f3f2e5fc300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff94851660048201526024810186905267ffffffffffffffff938416604482015292909116606483015263ffffffff16608482015290831691633f2e5fc39160a4016000604051808303818588803b1580156109e257600080fd5b505af11580156109f6573d6000803e3d6000fd5b5050505050610ae3565b610a138460800151828660c001516116bd565b60a0840151608085015160c086015160e0870151602087015187516040517fa5977fbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff96871660048201529486166024860152604485019390935267ffffffffffffffff918216606485015216608483015263ffffffff1660a48201529082169063a5977fbb9060c401600060405180830381600087803b158015610aca57600080fd5b505af1158015610ade573d6000803e3d6000fd5b505050505b610b048460a0015185608001518660c001518760e001518760200151611808565b91506113a8565b60028360a001516006811115610b2357610b23612606565b03610cb157600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d8257d176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb99190612cfa565b9050610bce8460800151828660c001516116bd565b608084015160c085015160e086015160a087015160208701516040517f2346362400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9586166004820152602481019490945267ffffffffffffffff928316604485015290841660648401521660848201529082169063234636249060a401600060405180830381600087803b158015610c7857600080fd5b505af1158015610c8c573d6000803e3d6000fd5b50505050610b048460a0015185608001518660c001518760e0015187602001516118bb565b60038360a001516006811115610cc957610cc9612606565b03610e4557600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dfa2dbaf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5f9190612cfa565b9050610d748460800151828660c001516116bd565b608084015160c085015160a086015160208601516040517fde790c7e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff94851660048201526024810193909352908316604483015267ffffffffffffffff1660648201529082169063de790c7e90608401600060405180830381600087803b158015610e1157600080fd5b505af1158015610e25573d6000803e3d6000fd5b50505050610b048460a0015185608001518660c001518660200151611954565b60048360a001516006811115610e5d57610e5d612606565b036110c657600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c66a9c5a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ecf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef39190612cfa565b9050610f17846080015173ffffffffffffffffffffffffffffffffffffffff161590565b15610fdf5760c084015160e085015160a086015160208601516040517ea95fd70000000000000000000000000000000000000000000000000000000081526004810185905267ffffffffffffffff938416602482015273ffffffffffffffffffffffffffffffffffffffff92831660448201529216606483015283169162a95fd79160840160206040518083038185885af1158015610fba573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b049190612d17565b610ff28460800151828660c001516116bd565b608084015160c085015160e086015160a087015160208701516040517f2346362400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9586166004820152602481019490945267ffffffffffffffff928316604485015290841660648401521660848201529082169063234636249060a4015b6020604051808303816000875af11580156110a2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b049190612d17565b60058360a0015160068111156110de576110de612606565b0361121e57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395b12c276040518163ffffffff1660e01b8152600401602060405180830381865afa158015611150573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111749190612cfa565b90506111898460800151828660c001516116bd565b608084015160c085015160e086015160a087015160208701516040517fa002930100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9586166004820152602481019490945267ffffffffffffffff928316604485015290841660648401521660848201529082169063a00293019060a401611083565b60068360a00151600681111561123657611236612606565b0361137657600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395b12c276040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cc9190612cfa565b90506112e18460800151828660c001516116bd565b608084015160c085015160e086015160a087015160208701516040517f9e422c3300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9586166004820152602481019490945267ffffffffffffffff9283166044850152908416606484015216608482015290821690639e422c339060a401611083565b6040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9250929050565b60025460009073ffffffffffffffffffffffffffffffffffffffff163314611403576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080808061141487890189612b55565b935093509350935061142a84848d858e866119fc565b5060019b9a5050505050505050505050565b60035473ffffffffffffffffffffffffffffffffffffffff16331461148d576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002546040517f4289fbb300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690634289fbb39034906114ef908a908a908a908a908a908a90600401612d30565b6000604051808303818588803b15801561150857600080fd5b505af115801561151c573d6000803e3d6000fd5b5050505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461157a576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81166115c7576040517f1beca37400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff821603611616576040517fbf1ea9fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127890600090a350565b73ffffffffffffffffffffffffffffffffffffffff8316156116b3576116ae838383611cec565b505050565b6116ae8282611e20565b73ffffffffffffffffffffffffffffffffffffffff83166116dd57505050565b73ffffffffffffffffffffffffffffffffffffffff821661172a576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa1580156117a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c49190612d17565b9050818110156118025761180284846117fd847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612de5565b611f4a565b50505050565b6040517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000030606090811b8216602084015287811b8216603484015286901b166048820152605c81018490527fffffffffffffffff00000000000000000000000000000000000000000000000060c084811b8216607c84015283811b8216608484015246901b16608c8201526000906094015b60405160208183030381529060405280519060200120905095945050505050565b6040517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000030606090811b8216602084015286811b82166034840152604883018690527fffffffffffffffff00000000000000000000000000000000000000000000000060c086811b821660688601529189901b909216607084015283811b8216608484015246901b16608c82015260009060940161189a565b6040517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000030606090811b8216602084015285811b821660348401526048830185905286901b1660688201527fffffffffffffffff00000000000000000000000000000000000000000000000060c083811b8216607c84015246901b166084820152600090608c016040516020818303038152906040528051906020012090505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff8516611b4d57600480546040517f4f91bc2b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911691634f91bc2b918691611a76918c918c918c918c9101612e6c565b6000604051808303818588803b158015611a8f57600080fd5b505af193505050508015611aa1575060015b611b455760008273ffffffffffffffffffffffffffffffffffffffff168460405160006040518083038185875af1925050503d8060008114611aff576040519150601f19603f3d011682016040523d82523d6000602084013e611b04565b606091505b5050905080611b3f576040517f350c20f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50611c7d565b506001611c7d565b6004548590611b779073ffffffffffffffffffffffffffffffffffffffff808416911660006120c6565b600454611b9e9073ffffffffffffffffffffffffffffffffffffffff838116911686611f4a565b600480546040517f4f91bc2b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911691634f91bc2b91611bf9918c918c918c918c9101612e6c565b600060405180830381600087803b158015611c1357600080fd5b505af1925050508015611c24575060015b611c4e57611c4973ffffffffffffffffffffffffffffffffffffffff82168486612248565b611c53565b600191505b600454611c7b9073ffffffffffffffffffffffffffffffffffffffff838116911660006120c6565b505b80611ce3576040805173ffffffffffffffffffffffffffffffffffffffff80881682528416602082015290810184905242606082015287907f1fbfa988fd46deed0de12c94c7b5dcb537d51b804246d0083f245f7a8997d1709060800160405180910390a25b50505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316611d39576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611da6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dca9190612d17565b905080821115611e15576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b611802848484612248565b73ffffffffffffffffffffffffffffffffffffffff8216611e6d576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611eb0576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401611e0c565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611f0a576040519150601f19603f3d011682016040523d82523d6000602084013e611f0f565b606091505b50509050806116ae576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611fc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fe59190612d17565b611fef9190612fa3565b60405173ffffffffffffffffffffffffffffffffffffffff85166024820152604481018290529091506118029085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261229e565b80158061216657506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015612140573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121649190612d17565b155b6121f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401611e0c565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526116ae9084907f095ea7b30000000000000000000000000000000000000000000000000000000090606401612044565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526116ae9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401612044565b6000612300826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166123aa9092919063ffffffff16565b8051909150156116ae578080602001905181019061231e9190612fb6565b6116ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401611e0c565b60606119f48484600085856000808673ffffffffffffffffffffffffffffffffffffffff1685876040516123de9190612fd3565b60006040518083038185875af1925050503d806000811461241b576040519150601f19603f3d011682016040523d82523d6000602084013e612420565b606091505b50915091506124318783838761243c565b979650505050505050565b606083156124d25782516000036124cb5773ffffffffffffffffffffffffffffffffffffffff85163b6124cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611e0c565b50816119f4565b6119f483838151156124e75781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e0c9190612fef565b73ffffffffffffffffffffffffffffffffffffffff8116811461253d57600080fd5b50565b803561254b8161251b565b919050565b60008083601f84011261256257600080fd5b50813567ffffffffffffffff81111561257a57600080fd5b6020830191508360208285010111156113a857600080fd5b6000806000806000608086880312156125aa57600080fd5b85356125b58161251b565b945060208601359350604086013567ffffffffffffffff8111156125d857600080fd5b6125e488828901612550565b90945092505060608601356125f88161251b565b809150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6020810160038310612670577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b60006020828403121561268857600080fd5b81356126938161251b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156126ec576126ec61269a565b60405290565b604051610140810167ffffffffffffffff811182821017156126ec576126ec61269a565b60405160e0810167ffffffffffffffff811182821017156126ec576126ec61269a565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156127805761278061269a565b604052919050565b600082601f83011261279957600080fd5b813567ffffffffffffffff8111156127b3576127b361269a565b6127e460207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612739565b8181528460208386010111156127f957600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461253d57600080fd5b803561254b81612816565b803563ffffffff8116811461254b57600080fd5b803567ffffffffffffffff8116811461254b57600080fd5b80356007811061254b57600080fd5b600060c0828403121561287c57600080fd5b6128846126c9565b905061288f8261282f565b815261289d60208301612843565b6020820152604082013567ffffffffffffffff808211156128bd57600080fd5b6128c985838601612788565b604084015260608401359150808211156128e257600080fd5b506128ef84828501612788565b6060830152506080820135608082015261290b60a0830161285b565b60a082015292915050565b6000806040838503121561292957600080fd5b823567ffffffffffffffff8082111561294157600080fd5b90840190610140828703121561295657600080fd5b61295e6126f2565b8235815260208301358281111561297457600080fd5b61298088828601612788565b60208301525060408301358281111561299857600080fd5b6129a488828601612788565b6040830152506129b660608401612540565b60608201526129c760808401612540565b60808201526129d860a08401612540565b60a082015260c083013560c082015260e083013560e08201526101006129ff818501612824565b90820152610120612a11848201612824565b9082015293506020850135915080821115612a2b57600080fd5b50612a388582860161286a565b9150509250929050565b600080600080600080600060c0888a031215612a5d57600080fd5b8735612a688161251b565b96506020880135612a788161251b565b955060408801359450612a8d60608901612843565b9350608088013567ffffffffffffffff811115612aa957600080fd5b612ab58a828b01612550565b90945092505060a0880135612ac98161251b565b8091505092959891949750929550565b60008060008060008060a08789031215612af257600080fd5b8635612afd8161251b565b9550602087013594506040870135612b148161251b565b935060608701359250608087013567ffffffffffffffff811115612b3757600080fd5b612b4389828a01612550565b979a9699509497509295939492505050565b60008060008060808587031215612b6b57600080fd5b84359350602085013567ffffffffffffffff80821115612b8a57600080fd5b818701915087601f830112612b9e57600080fd5b813581811115612bb057612bb061269a565b612bbf60208260051b01612739565b8082825260208201915060208360051b86010192508a831115612be157600080fd5b602085015b83811015612ccc578481351115612bfc57600080fd5b8035860160e07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828f03011215612c3257600080fd5b612c3a612716565b612c4660208301612540565b8152612c5460408301612540565b6020820152612c6560608301612540565b6040820152612c7660808301612540565b606082015260a0820135608082015260c082013587811115612c9757600080fd5b612ca68f602083860101612788565b60a083015250612cb860e08301612824565b60c082015284525060209283019201612be6565b508097505050505050612ce160408601612540565b9150612cef60608601612540565b905092959194509250565b600060208284031215612d0c57600080fd5b81516126938161251b565b600060208284031215612d2957600080fd5b5051919050565b600073ffffffffffffffffffffffffffffffffffffffff808916835287602084015280871660408401525084606083015260a060808301528260a0830152828460c0840137600060c0848401015260c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501168301019050979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115612df857612df8612db6565b92915050565b60005b83811015612e19578181015183820152602001612e01565b50506000910152565b60008151808452612e3a816020860160208601612dfe565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600060808083018784526020828186015281885180845260a093508387019150838160051b880101838b0160005b83811015612f57577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608a84030185528151805173ffffffffffffffffffffffffffffffffffffffff9081168552878201518116888601526040808301518216908601526060808301519091169085015288810151898501528781015160e089860181905290612f2b82870182612e22565b91505060c0808301519250612f438187018415159052565b509587019593505090850190600101612e9a565b505073ffffffffffffffffffffffffffffffffffffffff8a1660408901529550612f82945050505050565b73ffffffffffffffffffffffffffffffffffffffff83166060830152610411565b80820180821115612df857612df8612db6565b600060208284031215612fc857600080fd5b815161269381612816565b60008251612fe5818460208701612dfe565b9190910192915050565b6020815260006126936020830184612e2256fea2646970667358221220e0fedfd5e5bff230eadaf3c2459298e3f1c38eece18ef98a7cec467f67d3c70b64736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_cBridgeMessageBusAddress";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_diamondAddress";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_executorAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "ExternalCallFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "required";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidConfig";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeAssetTransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NewOwnerMustNotBeSelf";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoNullOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoPendingOwnershipTransfer";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoTransferToNullAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotPendingOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAValidSpender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ReentrancyError";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnAuthorized";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "messageBusAddress";
            readonly type: "address";
        }];
        readonly name: "CBridgeMessageBusSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "diamondAddress";
            readonly type: "address";
        }];
        readonly name: "DiamondAddressSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "executorAddress";
            readonly type: "address";
        }];
        readonly name: "ExecutorSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferRecovered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly indexed: false;
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "bridgeData";
            readonly type: "tuple";
        }];
        readonly name: "LiFiTransferStarted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "_from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "_to";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferRequested";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "cBridgeMessageBus";
        readonly outputs: readonly [{
            readonly internalType: "contract IMessageBus";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "cancelOwnershipTransfer";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "confirmOwnershipTransfer";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "diamondAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint64";
            readonly name: "";
            readonly type: "uint64";
        }, {
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "executeMessageWithTransfer";
        readonly outputs: readonly [{
            readonly internalType: "enum IMessageReceiverApp.ExecutionStatus";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "executeMessageWithTransferRefund";
        readonly outputs: readonly [{
            readonly internalType: "enum IMessageReceiverApp.ExecutionStatus";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "executor";
        readonly outputs: readonly [{
            readonly internalType: "contract IExecutor";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_receiver";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_dstChainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_srcBridge";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_srcTransferId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }];
        readonly name: "forwardSendMessageWithTransfer";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "maxSlippage";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint64";
                readonly name: "nonce";
                readonly type: "uint64";
            }, {
                readonly internalType: "bytes";
                readonly name: "callTo";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint256";
                readonly name: "messageBusFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "enum MsgDataTypes.BridgeSendType";
                readonly name: "bridgeType";
                readonly type: "uint8";
            }];
            readonly internalType: "struct CelerIMFacet.CelerIMData";
            readonly name: "_cBridgeData";
            readonly type: "tuple";
        }];
        readonly name: "sendTokenTransfer";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "transferId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "bridgeAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_messageBusAddress";
            readonly type: "address";
        }];
        readonly name: "setCBridgeMessageBus";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_diamondAddress";
            readonly type: "address";
        }];
        readonly name: "setDiamondAddress";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_executorAddress";
            readonly type: "address";
        }];
        readonly name: "setExecutor";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly stateMutability: "payable";
        readonly type: "receive";
    }];
    static createInterface(): RelayerCBridgeInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): RelayerCBridge;
}
export {};
