import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { AmarokFacet, AmarokFacetInterface } from "../AmarokFacet";
declare type AmarokFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class AmarokFacet__factory extends ContractFactory {
    constructor(...args: AmarokFacetConstructorParams);
    deploy(_connextHandler: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<AmarokFacet>;
    getDeployTransaction(_connextHandler: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): AmarokFacet;
    connect(signer: Signer): AmarokFacet__factory;
    static readonly bytecode = "0x60a06040523480156200001157600080fd5b5060405162002a1e38038062002a1e833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b6080516129836200009b60003960008181610725015261076501526129836000f3fe6080604052600436106100295760003560e01c80637d1de3dc1461002e5780639901fdc414610043575b600080fd5b61004161003c366004611fff565b610056565b005b6100416100513660046122fd565b6102db565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e234476123eb565b90506100ed856123fe565b8061010001511561012a576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610133866123fe565b60a081015173ffffffffffffffffffffffffffffffffffffffff16610184576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101c2576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101ff576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610208876123fe565b608081015173ffffffffffffffffffffffffffffffffffffffff16610259576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61026b610265896123fe565b8861054b565b61028861027e60a08a0160808b0161240a565b8960c0013561059f565b61029a610294896123fe565b8861071b565b50479150600090508282116102b05760006102ba565b6102ba83836123eb565b905080156102ce576102ce60008583610870565b5050600090925550505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610356576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061036734476123eb565b9050868061010001516103a6576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876103c98160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610400576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361043e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361047b576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8861049e816080015173ffffffffffffffffffffffffffffffffffffffff161590565b156104d5576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104df8a8861054b565b6104f98a600001518b60c001518b8b338c602001356108a1565b60c08b01526105088a8861071b565b504791506000905082821161051e576000610528565b61052883836123eb565b9050801561053c5761053c60008583610870565b50506000909255505050505050565b6101208201511515600061055f8380612425565b90501115151461059b576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b73ffffffffffffffffffffffffffffffffffffffff82166105f4578034101561059b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060000361062e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa15801561069b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bf9190612491565b90508181101561070a576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b61071683333085610a14565b505050565b61074e82608001517f00000000000000000000000000000000000000000000000000000000000000008460c00151610c2e565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016638aac16ba602083013561079f60a08501608086016124aa565b60a0860151608080880151906107ba9088016060890161240a565b60c089015160408901356107ce8a80612425565b6040518a63ffffffff1660e01b81526004016107f19897969594939291906124d0565b60206040518083038185885af115801561080f573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108349190612491565b507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161086491906125da565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff83161561089757610716838383610d79565b6107168282610ea8565b6000838082036108dd576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600086866108ec6001856123eb565b8181106108fb576108fb6126ed565b905060200281019061090d919061271c565b61091e90608081019060600161240a565b9050600061092b82610fd2565b905073ffffffffffffffffffffffffffffffffffffffff82166109555761095234826123eb565b90505b6000610961898961108b565b905061096d8989611197565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff891660208201529081018790526109a8818b8b856111f8565b6000836109b486610fd2565b6109be91906123eb565b90508b811015610a04576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d905260248101829052604401610701565b9c9b505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416610a61576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610aae576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610b1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b439190612491565b9050610b51828686866115ee565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610bc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be59190612491565b610bef91906123eb565b14610c26576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610c4e57505050565b73ffffffffffffffffffffffffffffffffffffffff8216610c9b576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610d11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d359190612491565b905081811015610d7357610d738484610d6e847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6123eb565b6116ca565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610dc6576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610e33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e579190612491565b905080821115610e9d576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610701565b610d738484846117c8565b73ffffffffffffffffffffffffffffffffffffffff8216610ef5576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115610f38576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610701565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610f92576040519150601f19603f3d011682016040523d82523d6000602084013e610f97565b606091505b5050905080610716576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff821615611083576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa15801561105a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107e9190612491565b611085565b475b92915050565b60608160008167ffffffffffffffff8111156110a9576110a961206c565b6040519080825280602002602001820160405280156110d2578160200160208202803683370190505b5090506000805b8381101561118c578686828181106110f3576110f36126ed565b9050602002810190611105919061271c565b61111690608081019060600161240a565b915061112182610fd2565b838281518110611133576111336126ed565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216611184573483828151811061116c5761116c6126ed565b6020026020010181815161118091906123eb565b9052505b6001016110d9565b509095945050505050565b60005b818110156107165760008383838181106111b6576111b66126ed565b90506020028101906111c8919061271c565b6111d19061275a565b90508060c00151156111ef576111ef8160400151826080015161059f565b5060010161119a565b60208401516040850151849184918490836001811461150757600086866112206001856123eb565b81811061122f5761122f6126ed565b9050602002810190611241919061271c565b61125290608081019060600161240a565b9050600089815b818110156113ff57368d8d83818110611274576112746126ed565b9050602002810190611286919061271c565b90506112b561129b606083016040840161240a565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061131857506113186112ce604083016020840161240a565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561132f575061132f6112ce602083018361240a565b80156113b457506113b461134660a0830183612425565b611355916004916000916127ff565b61135e91612829565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6113ea576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e516113f6908261181e565b50600101611259565b505060005b61140f6001856123eb565b8110156114ff57600089898381811061142a5761142a6126ed565b905060200281019061143c919061271c565b61144d90608081019060600161240a565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114f657868281518110611494576114946126ed565b60200260200101516114a582610fd2565b6114af91906123eb565b9250600073ffffffffffffffffffffffffffffffffffffffff8216156114d65760006114d8565b865b905083156114f4576114f4828a6114ef84886123eb565b610870565b505b50600101611404565b5050506115e2565b8760005b818110156115df57368b8b83818110611526576115266126ed565b9050602002810190611538919061271c565b905061154d61129b606083016040840161240a565b8061156657506115666112ce604083016020840161240a565b801561157d575061157d6112ce602083018361240a565b8015611594575061159461134660a0830183612425565b6115ca576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c516115d6908261181e565b5060010161150b565b50505b50505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610d739085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611b34565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611741573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117659190612491565b61176f9190612871565b60405173ffffffffffffffffffffffffffffffffffffffff8516602482015260448101829052909150610d739085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611648565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526107169084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611648565b61183461182e602083018361240a565b3b151590565b61186a576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036118aa576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006118bf61129b606085016040860161240a565b6118ca5760006118d0565b82608001355b905060006118ec6118e7606086016040870161240a565b610fd2565b905060006119036118e7608087016060880161240a565b90508260000361193a5761193a611920606087016040880161240a565b611930604088016020890161240a565b8760800135610c2e565b8460800135821015611985576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610701565b600080611995602088018861240a565b73ffffffffffffffffffffffffffffffffffffffff16856119b960a08a018a612425565b6040516119c7929190612884565b60006040518083038185875af1925050503d8060008114611a04576040519150601f19603f3d011682016040523d82523d6000602084013e611a09565b606091505b509150915081611a54576000611a1e82611c40565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107019190612894565b6000611a696118e760808a0160608b0161240a565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611a9a60208b018b61240a565b611aaa60608c0160408d0161240a565b611aba60808d0160608e0161240a565b8c60800135898711611acc5786611ad6565b611ad68a886123eb565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6000611b96826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611cbe9092919063ffffffff16565b8051909150156107165780806020019051810190611bb491906128a7565b610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610701565b6060604482511015611c8557505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611ca16004808551611c9991906123eb565b859190611cd5565b905080806020019051810190611cb791906128c4565b9392505050565b6060611ccd8484600085611def565b949350505050565b606081611ce381601f612871565b1015611d1b576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d258284612871565b84511015611d5f576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611d7e5760405191506000825260208201604052611de6565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611db7578051835260209283019201611d9f565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b606082471015611e81576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610701565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611eaa919061293b565b60006040518083038185875af1925050503d8060008114611ee7576040519150601f19603f3d011682016040523d82523d6000602084013e611eec565b606091505b5091509150611efd87838387611f08565b979650505050505050565b60608315611f9e578251600003611f975773ffffffffffffffffffffffffffffffffffffffff85163b611f97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610701565b5081611ccd565b611ccd8383815115611fb35781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107019190612894565b600060a08284031215611ff957600080fd5b50919050565b6000806040838503121561201257600080fd5b823567ffffffffffffffff8082111561202a57600080fd5b90840190610140828703121561203f57600080fd5b9092506020840135908082111561205557600080fd5b5061206285828601611fe7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156120bf576120bf61206c565b60405290565b60405160e0810167ffffffffffffffff811182821017156120bf576120bf61206c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561212f5761212f61206c565b604052919050565b600067ffffffffffffffff8211156121515761215161206c565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261218e57600080fd5b81356121a161219c82612137565b6120e8565b8181528460208386010111156121b657600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146121f757600080fd5b919050565b801515811461220a57600080fd5b50565b80356121f7816121fc565b6000610140828403121561222b57600080fd5b61223361209b565b905081358152602082013567ffffffffffffffff8082111561225457600080fd5b6122608583860161217d565b6020840152604084013591508082111561227957600080fd5b506122868482850161217d565b604083015250612298606083016121d3565b60608201526122a9608083016121d3565b60808201526122ba60a083016121d3565b60a082015260c082013560c082015260e082013560e08201526101006122e181840161220d565b908201526101206122f383820161220d565b9082015292915050565b6000806000806060858703121561231357600080fd5b843567ffffffffffffffff8082111561232b57600080fd5b61233788838901612218565b9550602087013591508082111561234d57600080fd5b818701915087601f83011261236157600080fd5b81358181111561237057600080fd5b8860208260051b850101111561238557600080fd5b6020830195508094505060408701359150808211156123a357600080fd5b506123b087828801611fe7565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115611085576110856123bc565b60006110853683612218565b60006020828403121561241c57600080fd5b611cb7826121d3565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261245a57600080fd5b83018035915067ffffffffffffffff82111561247557600080fd5b60200191503681900382131561248a57600080fd5b9250929050565b6000602082840312156124a357600080fd5b5051919050565b6000602082840312156124bc57600080fd5b813563ffffffff81168114611cb757600080fd5b63ffffffff89168152600073ffffffffffffffffffffffffffffffffffffffff808a16602084015280891660408401528088166060840152508560808301528460a083015260e060c08301528260e08301526101008385828501376000838501820152601f9093017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690910190910198975050505050505050565b60005b8381101561258757818101518382015260200161256f565b50506000910152565b600081518084526125a881602086016020860161256c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081528151602082015260006020830151610140806040850152612603610160850183612590565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe085840301606086015261263e8382612590565b9250506060850151612668608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206126db8187018315159052565b90950151151593019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261275057600080fd5b9190910192915050565b600060e0823603121561276c57600080fd5b6127746120c5565b61277d836121d3565b815261278b602084016121d3565b602082015261279c604084016121d3565b60408201526127ad606084016121d3565b60608201526080830135608082015260a083013567ffffffffffffffff8111156127d657600080fd5b6127e23682860161217d565b60a0830152506127f460c0840161220d565b60c082015292915050565b6000808585111561280f57600080fd5b8386111561281c57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156128695780818660040360031b1b83161692505b505092915050565b80820180821115611085576110856123bc565b8183823760009101908152919050565b602081526000611cb76020830184612590565b6000602082840312156128b957600080fd5b8151611cb7816121fc565b6000602082840312156128d657600080fd5b815167ffffffffffffffff8111156128ed57600080fd5b8201601f810184136128fe57600080fd5b805161290c61219c82612137565b81815285602083850101111561292157600080fd5b61293282602083016020860161256c565b95945050505050565b6000825161275081846020870161256c56fea264697066735822122014a10eccb2a1fff44815f1a8316c85f542e3140be0ece447b9abf7f9e76b3e1164736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IConnextHandler";
            readonly name: "_connextHandler";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "CannotBridgeToSameNetwork";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ContractCallNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "minAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "receivedAmount";
            readonly type: "uint256";
        }];
        readonly name: "CumulativeSlippageTooHigh";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InformationMismatch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "required";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidContract";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidReceiver";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeAssetNotSupported";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeAssetTransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapDataProvided";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapFromZeroBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoTransferToNullAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAValidSpender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ReentrancyError";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOutOfBounds";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOverflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferRecovered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly indexed: false;
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "bridgeData";
            readonly type: "tuple";
        }];
        readonly name: "LiFiTransferStarted";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint256";
                readonly name: "relayerFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "slippageTol";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "delegate";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "destChainDomainId";
                readonly type: "uint32";
            }];
            readonly internalType: "struct AmarokFacet.AmarokData";
            readonly name: "_amarokData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaAmarok";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint256";
                readonly name: "relayerFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "slippageTol";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "delegate";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "destChainDomainId";
                readonly type: "uint32";
            }];
            readonly internalType: "struct AmarokFacet.AmarokData";
            readonly name: "_amarokData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaAmarok";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): AmarokFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): AmarokFacet;
}
export {};
