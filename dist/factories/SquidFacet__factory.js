"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SquidFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_squidRouter",
                type: "address",
                internalType: "contract ISquidRouter",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaSquid",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_squidData",
                type: "tuple",
                internalType: "struct SquidFacet.SquidData",
                components: [
                    {
                        name: "routeType",
                        type: "uint8",
                        internalType: "enum SquidFacet.RouteType",
                    },
                    {
                        name: "destinationChain",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "bridgedTokenSymbol",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "sourceCalls",
                        type: "tuple[]",
                        internalType: "struct ISquidMulticall.Call[]",
                        components: [
                            {
                                name: "callType",
                                type: "uint8",
                                internalType: "enum ISquidMulticall.CallType",
                            },
                            {
                                name: "target",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "value",
                                type: "uint256",
                                internalType: "uint256",
                            },
                            {
                                name: "callData",
                                type: "bytes",
                                internalType: "bytes",
                            },
                            {
                                name: "payload",
                                type: "bytes",
                                internalType: "bytes",
                            },
                        ],
                    },
                    {
                        name: "destinationCalls",
                        type: "tuple[]",
                        internalType: "struct ISquidMulticall.Call[]",
                        components: [
                            {
                                name: "callType",
                                type: "uint8",
                                internalType: "enum ISquidMulticall.CallType",
                            },
                            {
                                name: "target",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "value",
                                type: "uint256",
                                internalType: "uint256",
                            },
                            {
                                name: "callData",
                                type: "bytes",
                                internalType: "bytes",
                            },
                            {
                                name: "payload",
                                type: "bytes",
                                internalType: "bytes",
                            },
                        ],
                    },
                    {
                        name: "fee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "forecallEnabled",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaSquid",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_squidData",
                type: "tuple",
                internalType: "struct SquidFacet.SquidData",
                components: [
                    {
                        name: "routeType",
                        type: "uint8",
                        internalType: "enum SquidFacet.RouteType",
                    },
                    {
                        name: "destinationChain",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "bridgedTokenSymbol",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "sourceCalls",
                        type: "tuple[]",
                        internalType: "struct ISquidMulticall.Call[]",
                        components: [
                            {
                                name: "callType",
                                type: "uint8",
                                internalType: "enum ISquidMulticall.CallType",
                            },
                            {
                                name: "target",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "value",
                                type: "uint256",
                                internalType: "uint256",
                            },
                            {
                                name: "callData",
                                type: "bytes",
                                internalType: "bytes",
                            },
                            {
                                name: "payload",
                                type: "bytes",
                                internalType: "bytes",
                            },
                        ],
                    },
                    {
                        name: "destinationCalls",
                        type: "tuple[]",
                        internalType: "struct ISquidMulticall.Call[]",
                        components: [
                            {
                                name: "callType",
                                type: "uint8",
                                internalType: "enum ISquidMulticall.CallType",
                            },
                            {
                                name: "target",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "value",
                                type: "uint256",
                                internalType: "uint256",
                            },
                            {
                                name: "callData",
                                type: "bytes",
                                internalType: "bytes",
                            },
                            {
                                name: "payload",
                                type: "bytes",
                                internalType: "bytes",
                            },
                        ],
                    },
                    {
                        name: "fee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "forecallEnabled",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InsufficientBalance",
        inputs: [
            {
                name: "required",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "balance",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidRouteType",
        inputs: [],
    },
    {
        type: "error",
        name: "NativeAssetTransferFailed",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NoTransferToNullAddress",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAnERC20Token",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
    {
        type: "error",
        name: "SliceOutOfBounds",
        inputs: [],
    },
    {
        type: "error",
        name: "SliceOverflow",
        inputs: [],
    },
];
var _bytecode = "0x60a06040523480156200001157600080fd5b506040516200337c3803806200337c833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b6080516132d3620000a9600039600081816108c60152818161092b01528181610a140152610af301526132d36000f3fe6080604052600436106100295760003560e01c80636a0f3cbd1461002e578063f85856af14610043575b600080fd5b61004161003c3660046128fa565b610056565b005b6100416100513660046129b9565b6103a3565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e23447612a4c565b905086806101000151610121576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101448160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561017b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101b9576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101f6576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608089015173ffffffffffffffffffffffffffffffffffffffff161515801561030f5750886080015173ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610269573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526102af9190810190612a83565b6040516020016102bf9190612afa565b604051602081830303815290604052805190602001208680604001906102e59190612b16565b6040516020016102f6929190612b82565b6040516020818303038152906040528051906020012014155b15610346576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61035089876106e2565b61036589600001518a60c001518a8a33610739565b60c08a01526103748987610881565b5047905081811115610395576103956000846103908585612a4c565b610c1c565b505060009091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161041e576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061042f3447612a4c565b9050848061010001511561046f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856104928160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156104c9576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610507576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610544576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608087015173ffffffffffffffffffffffffffffffffffffffff161515801561065d5750866080015173ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105b7573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526105fd9190810190612a83565b60405160200161060d9190612afa565b604051602081830303815290604052805190602001208680604001906106339190612b16565b604051602001610644929190612b82565b6040516020818303038152906040528051906020012014155b15610694576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61069e87876106e2565b6106b087608001518860c00151610c52565b6106ba8787610881565b50479050818111156106d6576106d66000846103908585612a4c565b50506000909155505050565b610120820151151560006106f96080840184612b92565b905011151514610735576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b600082808203610775576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610784600185612a4c565b81811061079357610793612bfa565b90506020028101906107a59190612c29565b6107b6906080810190606001612c5d565b905060006107c382610dc4565b905073ffffffffffffffffffffffffffffffffffffffff82166107ed576107ea3482612a4c565b90505b60006107f98888610e7d565b90506108058888610f89565b6108128a89898985610ff6565b60008261081e85610dc4565b6108289190612a4c565b905089811015610873576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b608082015160a08201359073ffffffffffffffffffffffffffffffffffffffff166108bc5760c08301516108b59082612c78565b90506108ef565b6108ef83608001517f00000000000000000000000000000000000000000000000000000000000000008560c001516113a8565b60006108fe6020840184612cba565b600281111561090f5761090f612c8b565b036109ed5773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016633c6597418261095e6020860186612b16565b61096b6040880188612b16565b60c08a015161097d60808b018b612b92565b60a08d015161099260e08e0160c08f01612cdb565b6040518b63ffffffff1660e01b81526004016109b699989796959493929190612ea9565b6000604051808303818588803b1580156109cf57600080fd5b505af11580156109e3573d6000803e3d6000fd5b5050505050610be0565b60016109fc6020840184612cba565b6002811115610a0d57610a0d612c8b565b03610acc577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f35af1f88285608001518660c00151868060200190610a699190612b16565b610a8e8a60a0015173ffffffffffffffffffffffffffffffffffffffff1660146114eb565b610a9b60408b018b612b16565b610aa860608d018d612b92565b6040518b63ffffffff1660e01b81526004016109b699989796959493929190612f69565b6002610adb6020840184612cba565b6002811115610aec57610aec612c8b565b03610bae577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638ca3bf688285608001518660c00151868060200190610b489190612b16565b610b5560408a018a612b16565b610b6260608c018c612b92565b610b6f60808e018e612b92565b8f60a001518f60c0016020810190610b879190612cdb565b6040518e63ffffffff1660e01b81526004016109b69c9b9a99989796959493929190612feb565b6040517f9c59c20c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f183604051610c0f9190613083565b60405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff831615610c4857610c43838383611735565b505050565b610c4382826118b7565b80600003610c8c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610ce15780341015610735576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610d4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d729190613196565b905081811015610db8576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161086a565b610c43833330856119e1565b600073ffffffffffffffffffffffffffffffffffffffff821615610e75576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610e4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e709190613196565b610e77565b475b92915050565b60608160008167ffffffffffffffff811115610e9b57610e9b612674565b604051908082528060200260200182016040528015610ec4578160200160208202803683370190505b5090506000805b83811015610f7e57868682818110610ee557610ee5612bfa565b9050602002810190610ef79190612c29565b610f08906080810190606001612c5d565b9150610f1382610dc4565b838281518110610f2557610f25612bfa565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610f765734838281518110610f5e57610f5e612bfa565b60200260200101818151610f729190612a4c565b9052505b600101610ecb565b509095945050505050565b60005b81811015610c435736838383818110610fa757610fa7612bfa565b9050602002810190610fb99190612c29565b9050610fcb60e0820160c08301612cdb565b15610fed57610fed610fe36060830160408401612c5d565b8260800135610c52565b50600101610f8c565b8383838382600181146112c35760008585611012600185612a4c565b81811061102157611021612bfa565b90506020028101906110339190612c29565b611044906080810190606001612c5d565b9050600089815b818110156111ef57368d8d8381811061106657611066612bfa565b90506020028101906110789190612c29565b90506110a761108d6060830160408401612c5d565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061110a575061110a6110c06040830160208401612c5d565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561112157506111216110c06020830183612c5d565b80156111a657506111a661113860a0830183612b16565b611147916004916000916131af565b611150916131d9565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6111dc576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111e68f82611bfb565b5060010161104b565b505060005b6111ff600185612a4c565b8110156112bb57600088888381811061121a5761121a612bfa565b905060200281019061122c9190612c29565b61123d906080810190606001612c5d565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112b25785828151811061128457611284612bfa565b602002602001015161129582610dc4565b61129f9190612a4c565b925082156112b2576112b2818885610c1c565b506001016111f4565b50505061139c565b8760005b8181101561139957368b8b838181106112e2576112e2612bfa565b90506020028101906112f49190612c29565b905061130961108d6060830160408401612c5d565b8061132257506113226110c06040830160208401612c5d565b801561133957506113396110c06020830183612c5d565b8015611350575061135061113860a0830183612b16565b611386576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113908d82611bfb565b506001016112c7565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166113c857505050565b73ffffffffffffffffffffffffffffffffffffffff8216611415576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa15801561148a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ae9190613196565b1015610c43576114c083836000611f11565b610c4383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611f11565b606060006114fa836002613221565b611505906002612c78565b67ffffffffffffffff81111561151d5761151d612674565b6040519080825280601f01601f191660200182016040528015611547576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061157e5761157e612bfa565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106115e1576115e1612bfa565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600061161d846002613221565b611628906001612c78565b90505b60018111156116c5577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061166957611669612bfa565b1a60f81b82828151811061167f5761167f612bfa565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936116be81613238565b905061162b565b50831561172e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161086a565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8316611782576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166117cf576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa15801561183c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118609190613196565b9050808211156118a6576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161086a565b6118b1848484612111565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216611904576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611947576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810182905247602482015260440161086a565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146119a1576040519150601f19603f3d011682016040523d82523d6000602084013e6119a6565b606091505b5050905080610c43576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416611a2e576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611a7b576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015611aec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b109190613196565b9050611b1e82868686612167565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611b8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb29190613196565b611bbc9190612a4c565b14611bf3576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b611c11611c0b6020830183612c5d565b3b151590565b611c47576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611c87576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611c9c61108d6060850160408601612c5d565b611ca7576000611cad565b82608001355b90506000611cc9611cc46060860160408701612c5d565b610dc4565b90506000611ce0611cc46080870160608801612c5d565b905082600003611d1757611d17611cfd6060870160408801612c5d565b611d0d6040880160208901612c5d565b87608001356113a8565b8460800135821015611d62576040517fcf479181000000000000000000000000000000000000000000000000000000008152608086013560048201526024810183905260440161086a565b600080611d726020880188612c5d565b73ffffffffffffffffffffffffffffffffffffffff1685611d9660a08a018a612b16565b604051611da4929190612b82565b60006040518083038185875af1925050503d8060008114611de1576040519150601f19603f3d011682016040523d82523d6000602084013e611de6565b606091505b509150915081611e31576000611dfb826121c5565b9050806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086a919061326d565b6000611e46611cc460808a0160608b01612c5d565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611e7760208b018b612c5d565b611e8760608c0160408d01612c5d565b611e9760808d0160608e01612c5d565b8c60800135898711611ea95786611eb3565b611eb38a88612a4c565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b801580611fb157506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611f8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611faf9190613196565b155b61203d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161086a565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610c439084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261223c565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610c439084907fa9059cbb000000000000000000000000000000000000000000000000000000009060640161208f565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526118b19085907f23b872dd000000000000000000000000000000000000000000000000000000009060840161208f565b606060448251101561220a57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000612226600480855161221e9190612a4c565b85919061234b565b90508080602001905181019061172e9190612a83565b600061229e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166124659092919063ffffffff16565b90508051600014806122bf5750808060200190518101906122bf9190613280565b610c43576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161086a565b60608161235981601f612c78565b1015612391576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61239b8284612c78565b845110156123d5576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060821580156123f4576040519150600082526020820160405261245c565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561242d578051835260209283019201612415565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6060612474848460008561247c565b949350505050565b60608247101561250e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161086a565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516125379190612afa565b60006040518083038185875af1925050503d8060008114612574576040519150601f19603f3d011682016040523d82523d6000602084013e612579565b606091505b509150915061258a87838387612595565b979650505050505050565b6060831561262b5782516000036126245773ffffffffffffffffffffffffffffffffffffffff85163b612624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161086a565b5081612474565b61247483838151156126405781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086a919061326d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156126c7576126c7612674565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561271457612714612674565b604052919050565b600067ffffffffffffffff82111561273657612736612674565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261277357600080fd5b81356127866127818261271c565b6126cd565b81815284602083860101111561279b57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146127dc57600080fd5b919050565b80151581146127ef57600080fd5b50565b80356127dc816127e1565b6000610140828403121561281057600080fd5b6128186126a3565b905081358152602082013567ffffffffffffffff8082111561283957600080fd5b61284585838601612762565b6020840152604084013591508082111561285e57600080fd5b5061286b84828501612762565b60408301525061287d606083016127b8565b606082015261288e608083016127b8565b608082015261289f60a083016127b8565b60a082015260c082013560c082015260e082013560e08201526101006128c68184016127f2565b908201526101206128d88382016127f2565b9082015292915050565b600060e082840312156128f457600080fd5b50919050565b6000806000806060858703121561291057600080fd5b843567ffffffffffffffff8082111561292857600080fd5b612934888389016127fd565b9550602087013591508082111561294a57600080fd5b818701915087601f83011261295e57600080fd5b81358181111561296d57600080fd5b8860208260051b850101111561298257600080fd5b6020830195508094505060408701359150808211156129a057600080fd5b506129ad878288016128e2565b91505092959194509250565b600080604083850312156129cc57600080fd5b823567ffffffffffffffff808211156129e457600080fd5b6129f0868387016127fd565b93506020850135915080821115612a0657600080fd5b50612a13858286016128e2565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610e7757610e77612a1d565b60005b83811015612a7a578181015183820152602001612a62565b50506000910152565b600060208284031215612a9557600080fd5b815167ffffffffffffffff811115612aac57600080fd5b8201601f81018413612abd57600080fd5b8051612acb6127818261271c565b818152856020838501011115612ae057600080fd5b612af1826020830160208601612a5f565b95945050505050565b60008251612b0c818460208701612a5f565b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612b4b57600080fd5b83018035915067ffffffffffffffff821115612b6657600080fd5b602001915036819003821315612b7b57600080fd5b9250929050565b8183823760009101908152919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612bc757600080fd5b83018035915067ffffffffffffffff821115612be257600080fd5b6020019150600581901b3603821315612b7b57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612b0c57600080fd5b600060208284031215612c6f57600080fd5b61172e826127b8565b80820180821115610e7757610e77612a1d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060208284031215612ccc57600080fd5b81356003811061172e57600080fd5b600060208284031215612ced57600080fd5b813561172e816127e1565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612d7657600080fd5b830160208101925035905067ffffffffffffffff811115612d9657600080fd5b803603821315612b7b57600080fd5b818352600060208085019450848460051b86018460005b87811015612e9c57838303895281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61883603018112612dfb57600080fd5b870160a0813560048110612e0e57600080fd5b8552612e1b8288016127b8565b73ffffffffffffffffffffffffffffffffffffffff1687860152604082810135908601526060612e4d81840184612d41565b8383890152612e5f8489018284612cf8565b93505050506080612e7281840184612d41565b935086830382880152612e86838583612cf8565b9c89019c96505050928601925050600101612dbc565b5090979650505050505050565b60c081526000612ebd60c083018b8d612cf8565b8281036020840152612ed0818a8c612cf8565b90508760408401528281036060840152612eeb818789612da5565b73ffffffffffffffffffffffffffffffffffffffff959095166080840152505090151560a090910152979650505050505050565b60008151808452612f37816020860160208601612a5f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff8a16815288602082015260c060408201526000612f9f60c08301898b612cf8565b8281036060840152612fb18189612f1f565b90508281036080840152612fc6818789612cf8565b905082810360a0840152612fdb818587612da5565b9c9b505050505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff808f1683528d6020840152610100604084015261302461010084018d8f612cf8565b8381036060850152613037818c8e612cf8565b9050838103608085015261304c818a8c612da5565b905083810360a085015261306181888a612da5565b9590911660c0840152505090151560e0909101529a9950505050505050505050565b6020815281516020820152600060208301516101408060408501526130ac610160850183612f1f565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526130e78382612f1f565b9250506060850151613111608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206131848187018315159052565b90950151151593019290925250919050565b6000602082840312156131a857600080fd5b5051919050565b600080858511156131bf57600080fd5b838611156131cc57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156132195780818660040360031b1b83161692505b505092915050565b8082028115828204841417610e7757610e77612a1d565b60008161324757613247612a1d565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b60208152600061172e6020830184612f1f565b60006020828403121561329257600080fd5b815161172e816127e156fea26469706673582212205fa47b051799539a5fb0771620877fcdb8eca44ecdf4bc7d398eeab55a25165164736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var SquidFacet__factory = /** @class */ (function (_super) {
    __extends(SquidFacet__factory, _super);
    function SquidFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    SquidFacet__factory.prototype.deploy = function (_squidRouter, overrides) {
        return _super.prototype.deploy.call(this, _squidRouter, overrides || {});
    };
    SquidFacet__factory.prototype.getDeployTransaction = function (_squidRouter, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _squidRouter, overrides || {});
    };
    SquidFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    SquidFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    SquidFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    SquidFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    SquidFacet__factory.bytecode = _bytecode;
    SquidFacet__factory.abi = _abi;
    return SquidFacet__factory;
}(ethers_1.ContractFactory));
exports.SquidFacet__factory = SquidFacet__factory;
