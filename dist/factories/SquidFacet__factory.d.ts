import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { SquidFacet, SquidFacetInterface } from "../SquidFacet";
declare type SquidFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class SquidFacet__factory extends ContractFactory {
    constructor(...args: SquidFacetConstructorParams);
    deploy(_squidRouter: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<SquidFacet>;
    getDeployTransaction(_squidRouter: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): SquidFacet;
    connect(signer: Signer): SquidFacet__factory;
    static readonly bytecode = "0x60a060405234801562000010575f80fd5b506040516200310738038062003107833981016040819052620000339162000045565b6001600160a01b031660805262000074565b5f6020828403121562000056575f80fd5b81516001600160a01b03811681146200006d575f80fd5b9392505050565b608051613065620000a25f395f818161061101528181610cfa01528181610d620152610e5d01526130655ff3fe608060405260043610610028575f3560e01c80633f3138081461002c578063a8f6666614610041575b5f80fd5b61003f61003a3660046125d5565b610054565b005b61003f61004f366004612635565b610245565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100cf576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6100df3447612718565b9050848061010001511561011f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856101428160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610179576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036101b6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101f3576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61021061020660a088016080890161272b565b8860c00151610433565b61021a87876105af565b504790508181111561023a5761023a5f846102358585612718565b610739565b50505f909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102c0576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6102d03447612718565b90508680610100015161030f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876103328160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610369576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036103a6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036103e3576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103fc895f01518a60c001518a8a338b60e0013561076a565b60c08a015261040b89876105af565b5047905081811115610426576104265f846102358585612718565b50505f9091555050505050565b805f0361046c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166104c557803410156104c1576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201525f9073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa15801561052f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610553919061274b565b90508181101561059e576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b6105aa83333085610900565b505050565b5f6040518060600160405280848152602001836105cb906128b2565b81526020016105da8585610b15565b905260208101516080015190915073ffffffffffffffffffffffffffffffffffffffff161561063d5761063d8160200151608001517f0000000000000000000000000000000000000000000000000000000000000000835f015160c00151610b57565b5f61064b60208401846129e9565b600281111561065c5761065c6129bc565b0361066f5761066a81610c8c565b6106fd565b600161067e60208401846129e9565b600281111561068f5761068f6129bc565b0361069d5761066a81610d60565b60026106ac60208401846129e9565b60028111156106bd576106bd6129bc565b036106cb5761066a81610e5b565b6040517f9c59c20c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18360405161072c9190612a6d565b60405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff831615610760576105aa838383610f60565b6105aa82826110df565b5f838082036107a5576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f86866107b3600185612718565b8181106107c2576107c2612b7f565b90506020028101906107d49190612bac565b6107e590608081019060600161272b565b90505f6107f182611205565b905073ffffffffffffffffffffffffffffffffffffffff821661081b576108183482612718565b90505b5f61082689896112ba565b905061083289896113c4565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff8916602082015290810187905261086d818b8b85611430565b5f8361087886611205565b6108829190612718565b905073ffffffffffffffffffffffffffffffffffffffff85166108ac576108a98882612718565b90505b8b8110156108f0576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d905260248101829052604401610595565b9c9b505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff841661094d576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661099a576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285915f918316906370a0823190602401602060405180830381865afa158015610a08573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a2c919061274b565b9050610a3a82868686611817565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610aa8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610acc919061274b565b610ad69190612718565b14610b0d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b60808201515f9060e08301359073ffffffffffffffffffffffffffffffffffffffff16610b4e5760c0840151610b4b9082612be8565b90505b90505b92915050565b73ffffffffffffffffffffffffffffffffffffffff8316610b7757505050565b73ffffffffffffffffffffffffffffffffffffffff8216610bc4576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015610c37573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c5b919061274b565b10156105aa576105aa83837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6118f3565b6040808201516020808401516060810151855160c08082015194840151848801519185015160a0909301516101009095015197517f2147796000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169863214779609897610d3797909593949392909190600401612bfb565b5f604051808303818588803b158015610d4e575f80fd5b505af1158015610b0d573d5f803e3d5ffd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166352c41eb68260400151610dc784602001516080015173ffffffffffffffffffffffffffffffffffffffff161590565b610dd957836020015160800151610def565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee5b845f015160c00151856020015160a00151866020015160600151876020015160200151610e3a895f015160a0015173ffffffffffffffffffffffffffffffffffffffff1660146119e2565b6040518863ffffffff1660e01b8152600401610d3796959493929190612d86565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663846a1bc68260400151610ec284602001516080015173ffffffffffffffffffffffffffffffffffffffff161590565b610ed457836020015160800151610eea565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee5b845160c08082015160208089015160a0808201516060830151938301516040808501519785015193909801516101009094015197517fffffffff0000000000000000000000000000000000000000000000000000000060e08d901b168152610d3799989697929691949293929190600401612e01565b73ffffffffffffffffffffffffffffffffffffffff8316610fad576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610ffa576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201525f9073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611064573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611088919061274b565b9050808211156110ce576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610595565b6110d9848484611c1f565b50505050565b73ffffffffffffffffffffffffffffffffffffffff821661112c576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4781111561116f576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610595565b5f8273ffffffffffffffffffffffffffffffffffffffff16826040515f6040518083038185875af1925050503d805f81146111c5576040519150601f19603f3d011682016040523d82523d5f602084013e6111ca565b606091505b50509050806105aa576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff8216156112b3576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa15801561128a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112ae919061274b565b610b51565b4792915050565b6060815f8167ffffffffffffffff8111156112d7576112d7612323565b604051908082528060200260200182016040528015611300578160200160208202803683370190505b5090505f805b838110156113b95786868281811061132057611320612b7f565b90506020028101906113329190612bac565b61134390608081019060600161272b565b915061134e82611205565b83828151811061136057611360612b7f565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff82166113b1573483828151811061139957611399612b7f565b602002602001018181516113ad9190612718565b9052505b600101611306565b509095945050505050565b5f5b818110156105aa57368383838181106113e1576113e1612b7f565b90506020028101906113f39190612bac565b905061140560e0820160c08301612ea5565b156114275761142761141d606083016040840161272b565b8260800135610433565b506001016113c6565b602084015160408501518491849184908360018114611731575f8686611457600185612718565b81811061146657611466612b7f565b90506020028101906114789190612bac565b61148990608081019060600161272b565b90505f89815b8181101561163257368d8d838181106114aa576114aa612b7f565b90506020028101906114bc9190612bac565b90506114eb6114d1606083016040840161272b565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061154d575061154d611504604083016020840161272b565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156115645750611564611504602083018361272b565b80156115e757506115e761157b60a0830183612ec0565b611589916004915f91612f28565b61159291612f4f565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61161d576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e516116299082611c75565b5060010161148f565b50505f5b611641600185612718565b811015611729575f89898381811061165b5761165b612b7f565b905060200281019061166d9190612bac565b61167e90608081019060600161272b565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611720578682815181106116c5576116c5612b7f565b60200260200101516116d682611205565b6116e09190612718565b92505f73ffffffffffffffffffffffffffffffffffffffff821615611705575f611707565b865b9050831561171e5761171e828a6102358488612718565b505b50600101611636565b50505061180b565b875f5b8181101561180857368b8b8381811061174f5761174f612b7f565b90506020028101906117619190612bac565b90506117766114d1606083016040840161272b565b8061178f575061178f611504604083016020840161272b565b80156117a657506117a6611504602083018361272b565b80156117bd57506117bd61157b60a0830183612ec0565b6117f3576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c516117ff9082611c75565b50600101611734565b50505b50505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526110d99085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611f48565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905261197f8482612055565b6110d95760405173ffffffffffffffffffffffffffffffffffffffff841660248201525f60448201526119d89085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611871565b6110d98482611f48565b60605f6119f0836002612f97565b6119fb906002612be8565b67ffffffffffffffff811115611a1357611a13612323565b6040519080825280601f01601f191660200182016040528015611a3d576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000815f81518110611a7357611a73612b7f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611ad557611ad5612b7f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053505f611b0f846002612f97565b611b1a906001612be8565b90505b6001811115611bb6577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110611b5b57611b5b612b7f565b1a60f81b828281518110611b7157611b71612b7f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a90535060049490941c93611baf81612fae565b9050611b1d565b508315610b4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610595565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526105aa9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611871565b611c8b611c85602083018361272b565b3b151590565b611cc1576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003611d00576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f611d146114d1606085016040860161272b565b611d1e575f611d24565b82608001355b90505f611d3f611d3a606086016040870161272b565b611205565b90505f611d55611d3a608087016060880161272b565b9050825f03611d8b57611d8b611d71606087016040880161272b565b611d81604088016020890161272b565b8760800135610b57565b8460800135821015611dd6576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610595565b5f80611de5602088018861272b565b73ffffffffffffffffffffffffffffffffffffffff1685611e0960a08a018a612ec0565b604051611e17929190612fe2565b5f6040518083038185875af1925050503d805f8114611e51576040519150601f19603f3d011682016040523d82523d5f602084013e611e56565b606091505b509150915081611e6957611e6981612110565b5f611e7d611d3a60808a0160608b0161272b565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611eae60208b018b61272b565b611ebe60608c0160408d0161272b565b611ece60808d0160608e0161272b565b8c60800135898711611ee05786611eea565b611eea8a88612718565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b5f611fa9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661211a9092919063ffffffff16565b905080515f1480611fc9575080806020019051810190611fc99190612ff1565b6105aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610595565b5f805f8473ffffffffffffffffffffffffffffffffffffffff168460405161207d919061300c565b5f604051808303815f865af19150503d805f81146120b6576040519150601f19603f3d011682016040523d82523d5f602084013e6120bb565b606091505b50915091508180156120e55750805115806120e55750808060200190518101906120e59190612ff1565b8015612107575073ffffffffffffffffffffffffffffffffffffffff85163b15155b95945050505050565b8051602082018181fd5b606061212884845f85612130565b949350505050565b6060824710156121c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610595565b5f808673ffffffffffffffffffffffffffffffffffffffff1685876040516121ea919061300c565b5f6040518083038185875af1925050503d805f8114612224576040519150601f19603f3d011682016040523d82523d5f602084013e612229565b606091505b509150915061223a87838387612245565b979650505050505050565b606083156122da5782515f036122d35773ffffffffffffffffffffffffffffffffffffffff85163b6122d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610595565b5081612128565b61212883838151156122ef5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610595919061301d565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff8111828210171561237457612374612323565b60405290565b60405160a0810167ffffffffffffffff8111828210171561237457612374612323565b604051610120810167ffffffffffffffff8111828210171561237457612374612323565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561240857612408612323565b604052919050565b5f82601f83011261241f575f80fd5b813567ffffffffffffffff81111561243957612439612323565b61246a60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016123c1565b81815284602083860101111561247e575f80fd5b816020850160208301375f918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146124bd575f80fd5b919050565b80151581146124cf575f80fd5b50565b80356124bd816124c2565b5f61014082840312156124ee575f80fd5b6124f6612350565b905081358152602082013567ffffffffffffffff80821115612516575f80fd5b61252285838601612410565b6020840152604084013591508082111561253a575f80fd5b5061254784828501612410565b6040830152506125596060830161249a565b606082015261256a6080830161249a565b608082015261257b60a0830161249a565b60a082015260c082013560c082015260e082013560e08201526101006125a28184016124d2565b908201526101206125b48382016124d2565b9082015292915050565b5f61012082840312156125cf575f80fd5b50919050565b5f80604083850312156125e6575f80fd5b823567ffffffffffffffff808211156125fd575f80fd5b612609868387016124dd565b9350602085013591508082111561261e575f80fd5b5061262b858286016125be565b9150509250929050565b5f805f8060608587031215612648575f80fd5b843567ffffffffffffffff8082111561265f575f80fd5b61266b888389016124dd565b95506020870135915080821115612680575f80fd5b818701915087601f830112612693575f80fd5b8135818111156126a1575f80fd5b8860208260051b85010111156126b5575f80fd5b6020830195508094505060408701359150808211156126d2575f80fd5b506126df878288016125be565b91505092959194509250565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b81810381811115610b5157610b516126eb565b5f6020828403121561273b575f80fd5b6127448261249a565b9392505050565b5f6020828403121561275b575f80fd5b5051919050565b8035600381106124bd575f80fd5b5f82601f83011261277f575f80fd5b8135602067ffffffffffffffff8083111561279c5761279c612323565b8260051b6127ab8382016123c1565b93845285810183019383810190888611156127c4575f80fd5b84880192505b858310156128a6578235848111156127e0575f80fd5b880160a0818b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001811315612814575f80fd5b61281c61237a565b878301356004811061282c575f80fd5b8152604061283b84820161249a565b898301526060808501358284015260809150818501358981111561285d575f80fd5b61286b8f8c83890101612410565b82850152505082840135925087831115612883575f80fd5b6128918d8a85870101612410565b908201528452505091840191908401906127ca565b98975050505050505050565b5f61012082360312156128c3575f80fd5b6128cb61239d565b6128d483612762565b8152602083013567ffffffffffffffff808211156128f0575f80fd5b6128fc36838701612410565b60208401526040850135915080821115612914575f80fd5b61292036838701612410565b60408401526060850135915080821115612938575f80fd5b61294436838701612410565b60608401526129556080860161249a565b608084015260a085013591508082111561296d575f80fd5b61297936838701612770565b60a084015260c0850135915080821115612991575f80fd5b5061299e36828601612410565b60c08301525060e083013560e08201526101006125b48185016124d2565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f602082840312156129f9575f80fd5b61274482612762565b5f5b83811015612a1c578181015183820152602001612a04565b50505f910152565b5f8151808452612a3b816020860160208601612a02565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152815160208201525f6020830151610140806040850152612a95610160850183612a24565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152612ad08382612a24565b9250506060850151612afa608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120612b6d8187018315159052565b90950151151593019290925250919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612bde575f80fd5b9190910192915050565b80820180821115610b5157610b516126eb565b60e081525f612c0d60e083018a612a24565b8860208401528281036040840152612c258189612a24565b90508281036060840152612c398188612a24565b90508281036080840152612c4d8187612a24565b73ffffffffffffffffffffffffffffffffffffffff9590951660a0840152505090151560c09091015295945050505050565b5f82825180855260208086019550808260051b8401018186015f5b84811015612d79577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868403018952815160a081516004808210612d04577f4e487b71000000000000000000000000000000000000000000000000000000005f526021815260245ffd5b5085528186015173ffffffffffffffffffffffffffffffffffffffff168686015260408083015190860152606080830151818701839052612d4783880182612a24565b9250505060808083015192508582038187015250612d658183612a24565b9a86019a9450505090830190600101612c9a565b5090979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8716815285602082015260c060408201525f612dba60c0830187612c7f565b8281036060840152612dcc8187612a24565b90508281036080840152612de08186612a24565b905082810360a0840152612df48185612a24565b9998505050505050505050565b5f61012073ffffffffffffffffffffffffffffffffffffffff808d1684528b6020850152816040850152612e378285018c612c7f565b91508382036060850152612e4b828b612a24565b91508382036080850152612e5f828a612a24565b915083820360a0850152612e738289612a24565b915083820360c0850152612e878288612a24565b951660e0840152505090151561010090910152979650505050505050565b5f60208284031215612eb5575f80fd5b8135610b4e816124c2565b5f8083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612ef3575f80fd5b83018035915067ffffffffffffffff821115612f0d575f80fd5b602001915036819003821315612f21575f80fd5b9250929050565b5f8085851115612f36575f80fd5b83861115612f42575f80fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612f8f5780818660040360031b1b83161692505b505092915050565b8082028115828204841417610b5157610b516126eb565b5f81612fbc57612fbc6126eb565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b818382375f9101908152919050565b5f60208284031215613001575f80fd5b8151610b4e816124c2565b5f8251612bde818460208701612a02565b602081525f6127446020830184612a2456fea2646970667358221220cb4224804be0960c8bbdce171015739ab0feeed2ce25c01eeedbdcf6b5532ced64736f6c63430008160033";
    static readonly abi: readonly [{
        readonly type: "constructor";
        readonly inputs: readonly [{
            readonly name: "_squidRouter";
            readonly type: "address";
            readonly internalType: "contract ISquidRouter";
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "startBridgeTokensViaSquid";
        readonly inputs: readonly [{
            readonly name: "_bridgeData";
            readonly type: "tuple";
            readonly internalType: "struct ILiFi.BridgeData";
            readonly components: readonly [{
                readonly name: "transactionId";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "bridge";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "integrator";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "referrer";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receiver";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "minAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "destinationChainId";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
                readonly internalType: "bool";
            }, {
                readonly name: "hasDestinationCall";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }, {
            readonly name: "_squidData";
            readonly type: "tuple";
            readonly internalType: "struct SquidFacet.SquidData";
            readonly components: readonly [{
                readonly name: "routeType";
                readonly type: "uint8";
                readonly internalType: "enum SquidFacet.RouteType";
            }, {
                readonly name: "destinationChain";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "destinationAddress";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "bridgedTokenSymbol";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "depositAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sourceCalls";
                readonly type: "tuple[]";
                readonly internalType: "struct ISquidMulticall.Call[]";
                readonly components: readonly [{
                    readonly name: "callType";
                    readonly type: "uint8";
                    readonly internalType: "enum ISquidMulticall.CallType";
                }, {
                    readonly name: "target";
                    readonly type: "address";
                    readonly internalType: "address";
                }, {
                    readonly name: "value";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "callData";
                    readonly type: "bytes";
                    readonly internalType: "bytes";
                }, {
                    readonly name: "payload";
                    readonly type: "bytes";
                    readonly internalType: "bytes";
                }];
            }, {
                readonly name: "payload";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }, {
                readonly name: "fee";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "enableExpress";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
    }, {
        readonly type: "function";
        readonly name: "swapAndStartBridgeTokensViaSquid";
        readonly inputs: readonly [{
            readonly name: "_bridgeData";
            readonly type: "tuple";
            readonly internalType: "struct ILiFi.BridgeData";
            readonly components: readonly [{
                readonly name: "transactionId";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "bridge";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "integrator";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "referrer";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receiver";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "minAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "destinationChainId";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
                readonly internalType: "bool";
            }, {
                readonly name: "hasDestinationCall";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }, {
            readonly name: "_swapData";
            readonly type: "tuple[]";
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly components: readonly [{
                readonly name: "callTo";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "approveTo";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receivingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "fromAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "callData";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }, {
                readonly name: "requiresDeposit";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }, {
            readonly name: "_squidData";
            readonly type: "tuple";
            readonly internalType: "struct SquidFacet.SquidData";
            readonly components: readonly [{
                readonly name: "routeType";
                readonly type: "uint8";
                readonly internalType: "enum SquidFacet.RouteType";
            }, {
                readonly name: "destinationChain";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "destinationAddress";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "bridgedTokenSymbol";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "depositAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sourceCalls";
                readonly type: "tuple[]";
                readonly internalType: "struct ISquidMulticall.Call[]";
                readonly components: readonly [{
                    readonly name: "callType";
                    readonly type: "uint8";
                    readonly internalType: "enum ISquidMulticall.CallType";
                }, {
                    readonly name: "target";
                    readonly type: "address";
                    readonly internalType: "address";
                }, {
                    readonly name: "value";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "callData";
                    readonly type: "bytes";
                    readonly internalType: "bytes";
                }, {
                    readonly name: "payload";
                    readonly type: "bytes";
                    readonly internalType: "bytes";
                }];
            }, {
                readonly name: "payload";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }, {
                readonly name: "fee";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "enableExpress";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
    }, {
        readonly type: "event";
        readonly name: "AssetSwapped";
        readonly inputs: readonly [{
            readonly name: "transactionId";
            readonly type: "bytes32";
            readonly indexed: false;
            readonly internalType: "bytes32";
        }, {
            readonly name: "dex";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "fromAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "toAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "fromAmount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }, {
            readonly name: "toAmount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }, {
            readonly name: "timestamp";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "LiFiGenericSwapCompleted";
        readonly inputs: readonly [{
            readonly name: "transactionId";
            readonly type: "bytes32";
            readonly indexed: true;
            readonly internalType: "bytes32";
        }, {
            readonly name: "integrator";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "referrer";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "receiver";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "fromAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "toAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "fromAmount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }, {
            readonly name: "toAmount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "LiFiSwappedGeneric";
        readonly inputs: readonly [{
            readonly name: "transactionId";
            readonly type: "bytes32";
            readonly indexed: true;
            readonly internalType: "bytes32";
        }, {
            readonly name: "integrator";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "referrer";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "fromAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "toAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "fromAmount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }, {
            readonly name: "toAmount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "LiFiTransferCompleted";
        readonly inputs: readonly [{
            readonly name: "transactionId";
            readonly type: "bytes32";
            readonly indexed: true;
            readonly internalType: "bytes32";
        }, {
            readonly name: "receivingAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "receiver";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "amount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }, {
            readonly name: "timestamp";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "LiFiTransferRecovered";
        readonly inputs: readonly [{
            readonly name: "transactionId";
            readonly type: "bytes32";
            readonly indexed: true;
            readonly internalType: "bytes32";
        }, {
            readonly name: "receivingAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "receiver";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "amount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }, {
            readonly name: "timestamp";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "LiFiTransferStarted";
        readonly inputs: readonly [{
            readonly name: "bridgeData";
            readonly type: "tuple";
            readonly indexed: false;
            readonly internalType: "struct ILiFi.BridgeData";
            readonly components: readonly [{
                readonly name: "transactionId";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "bridge";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "integrator";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "referrer";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receiver";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "minAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "destinationChainId";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
                readonly internalType: "bool";
            }, {
                readonly name: "hasDestinationCall";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }];
        readonly anonymous: false;
    }, {
        readonly type: "error";
        readonly name: "CannotBridgeToSameNetwork";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "ContractCallNotAllowed";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "CumulativeSlippageTooHigh";
        readonly inputs: readonly [{
            readonly name: "minAmount";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "receivedAmount";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }, {
        readonly type: "error";
        readonly name: "InformationMismatch";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InsufficientBalance";
        readonly inputs: readonly [{
            readonly name: "required";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "balance";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }, {
        readonly type: "error";
        readonly name: "InvalidAmount";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidContract";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidReceiver";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidRouteType";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NativeAssetTransferFailed";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NoSwapDataProvided";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NoSwapFromZeroBalance";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NoTransferToNullAddress";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NullAddrIsNotAValidSpender";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "ReentrancyError";
        readonly inputs: readonly [];
    }];
    static createInterface(): SquidFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): SquidFacet;
}
export {};
