"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.WhitelistManagerFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "addToWhitelist",
        inputs: [
            {
                name: "_contractAddress",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "batchAddToWhitelist",
        inputs: [
            {
                name: "_addresses",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "batchRemoveFromWhitelist",
        inputs: [
            {
                name: "_addresses",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "batchSetFunctionApprovalBySelector",
        inputs: [
            {
                name: "_selectors",
                type: "bytes4[]",
                internalType: "bytes4[]",
            },
            {
                name: "_approval",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "getApprovedFunctionSelectors",
        inputs: [],
        outputs: [
            {
                name: "selectors",
                type: "bytes4[]",
                internalType: "bytes4[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getWhitelistedAddresses",
        inputs: [],
        outputs: [
            {
                name: "addresses",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isAddressWhitelisted",
        inputs: [
            {
                name: "_address",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "approved",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isFunctionApproved",
        inputs: [
            {
                name: "_selector",
                type: "bytes4",
                internalType: "bytes4",
            },
        ],
        outputs: [
            {
                name: "approved",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "removeFromWhitelist",
        inputs: [
            {
                name: "_address",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setFunctionApprovalBySelector",
        inputs: [
            {
                name: "_selector",
                type: "bytes4",
                internalType: "bytes4",
            },
            {
                name: "_approval",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "event",
        name: "AddressRemoved",
        inputs: [
            {
                name: "removedAddress",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "AddressWhitelisted",
        inputs: [
            {
                name: "whitelistedAddress",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "FunctionSelectorApprovalChanged",
        inputs: [
            {
                name: "functionSelector",
                type: "bytes4",
                indexed: true,
                internalType: "bytes4",
            },
            {
                name: "approved",
                type: "bool",
                indexed: true,
                internalType: "bool",
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotAuthoriseSelf",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "UnAuthorized",
        inputs: [],
    },
];
var _bytecode = "0x6080604052348015600e575f5ffd5b506114348061001c5f395ff3fe608060405234801561000f575f5ffd5b50600436106100b9575f3560e01c80636d02802711610072578063bcde4c4511610058578063bcde4c451461015d578063e43252d714610170578063ecd1851714610183575f5ffd5b80636d028027146101355780638ab1d6811461014a575f5ffd5b806314a931f2116100a257806314a931f2146100fa5780632d2506a91461010f5780632db6fa3614610122575f5ffd5b8063045fb888146100bd57806313f44d10146100d2575b5f5ffd5b6100d06100cb366004611165565b610196565b005b6100e56100e03660046111a4565b610224565b60405190151581526020015b60405180910390f35b610102610272565b6040516100f191906111de565b6100e561011d366004611276565b610281565b6100d0610130366004611165565b6102d9565b61013d610361565b6040516100f1919061128f565b6100d06101583660046111a4565b61036b565b6100d061016b3660046112eb565b6103bd565b6100d061017e3660046111a4565b610411565b6100d061019136600461131c565b610460565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff1633146101dc576101dc6104f0565b805f5b8181101561021e576102168484838181106101fc576101fc61136c565b905060200201602081019061021191906111a4565b61058c565b6001016101df565b50505050565b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea68602052604081205460ff165b92915050565b606061027c610626565b905090565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea69602052604081205460ff1661026c565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff16331461031f5761031f6104f0565b805f5b8181101561021e5761035984848381811061033f5761033f61136c565b905060200201602081019061035491906111a4565b6106df565b600101610322565b606061027c6107c9565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff1633146103b1576103b16104f0565b6103ba8161058c565b50565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff163314610403576104036104f0565b61040d8282610857565b5050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff163314610457576104576104f0565b6103ba816106df565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff1633146104a6576104a66104f0565b815f5b818110156104e9576104e18585838181106104c6576104c661136c565b90506020020160208101906104db9190611276565b84610857565b6001016104a9565b5050505050565b5f80357fffffffff000000000000000000000000000000000000000000000000000000001681527fdf05114fe8fad5d7cd2d71c5651effc2a4c21f13ee8b4a462e2a3bd4e140c73e6020818152604080842033855290915290912054600160ff9091161515146103ba576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea68602052604090205460ff166105da5750565b6105e381610928565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f24a12366c02e13fe4a9e03d86a8952e85bb74a456c16e4a18b6d8295700b74bb905f90a250565b60607f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea686005018054806020026020016040519081016040528092919081815260200182805480156106d557602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116106825790505b5050505050905090565b3073ffffffffffffffffffffffffffffffffffffffff82160361072e576040517fa9cefcae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea68602052604090205460ff161561077d5750565b61078681610b55565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f4f783c179409b4127238bc9c990bc99b9a651666a0d20b51d6c42849eb88466d905f90a250565b60607f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea686004018054806020026020016040519081016040528092919081815260200182805480156106d557602002820191905f5260205f20905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610823575050505050905090565b7fffffffff0000000000000000000000000000000000000000000000000000000082165f9081527f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea69602052604090205460ff16811515811515146109235781156108c9576108c483610cd4565b6108d2565b6108d283610e01565b604051821515907fffffffff000000000000000000000000000000000000000000000000000000008516907fcf13ae361f956ffe6b34a2c8e46f4e87d8671c9352d2a8c3474774d61422cab4905f90a35b505050565b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea68602081905260409091205460ff1661097a575050565b73ffffffffffffffffffffffffffffffffffffffff82165f908152600282016020526040812054908190036109ae57505050565b5f6109ba600183611399565b60048401549091505f906109d090600190611399565b9050808214610a8d575f8460040182815481106109ef576109ef61136c565b5f9182526020909120015460048601805473ffffffffffffffffffffffffffffffffffffffff9092169250829185908110610a2c57610a2c61136c565b5f91825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff94851617905592909116815260028601909152604090208390555b83600401805480610aa057610aa06113d1565b5f828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff969096168152600285018652604080822082905594909552505050902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b73ffffffffffffffffffffffffffffffffffffffff8116610ba2576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bab81611089565b610be1576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea68602081905260409091205460ff1615610c34575050565b73ffffffffffffffffffffffffffffffffffffffff9091165f8181526020838152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600486018054918201815580855283852090910180547fffffffffffffffffffffffff0000000000000000000000000000000000000000168617905554938352600290940190529190912055565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea6960205260409020547f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea689060ff1615610d52575050565b7fffffffff0000000000000000000000000000000000000000000000000000000082165f81815260018381016020908152604080842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168417905560058601805493840181558085528285206008850401805463ffffffff60079096166004026101000a958602191660e09990991c949094029790971790925594549282526003909301909352912055565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea6960205260409020547f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea689060ff16610e7e575050565b7fffffffff0000000000000000000000000000000000000000000000000000000082165f90815260038201602052604081205490819003610ebe57505050565b5f610eca600183611399565b60058401549091505f90610ee090600190611399565b9050808214610fbe575f846005018281548110610eff57610eff61136c565b905f5260205f2090600891828204019190066004029054906101000a900460e01b905080856005018481548110610f3857610f3861136c565b905f5260205f2090600891828204019190066004026101000a81548163ffffffff021916908360e01c021790555083856003015f837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f2081905550505b83600501805480610fd157610fd16113d1565b5f828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff0000000000000000000000000000000000000000000000000000000090961681526003850186526040808220829055600195909501909552505050902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6040805160178082528183019092525f9182919060208201818036833701905050905060175f60208301853c60208101517f10ff0000000000000000000000000000000000000000000000000000000000007fffffff000000000000000000000000000000000000000000000000000000000082160161111457506023015160601c3b151592915050565b5050503b151590565b5f5f83601f84011261112d575f5ffd5b50813567ffffffffffffffff811115611144575f5ffd5b6020830191508360208260051b850101111561115e575f5ffd5b9250929050565b5f5f60208385031215611176575f5ffd5b823567ffffffffffffffff81111561118c575f5ffd5b6111988582860161111d565b90969095509350505050565b5f602082840312156111b4575f5ffd5b813573ffffffffffffffffffffffffffffffffffffffff811681146111d7575f5ffd5b9392505050565b602080825282518282018190525f918401906040840190835b818110156112375783517fffffffff00000000000000000000000000000000000000000000000000000000168352602093840193909201916001016111f7565b509095945050505050565b80357fffffffff0000000000000000000000000000000000000000000000000000000081168114611271575f5ffd5b919050565b5f60208284031215611286575f5ffd5b6111d782611242565b602080825282518282018190525f918401906040840190835b8181101561123757835173ffffffffffffffffffffffffffffffffffffffff168352602093840193909201916001016112a8565b80358015158114611271575f5ffd5b5f5f604083850312156112fc575f5ffd5b61130583611242565b9150611313602084016112dc565b90509250929050565b5f5f5f6040848603121561132e575f5ffd5b833567ffffffffffffffff811115611344575f5ffd5b6113508682870161111d565b90945092506113639050602085016112dc565b90509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b8181038181111561026c577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfea264697066735822122027bdc83069cb6324a03013d654c2de7994dbe7ce36596d7800010f9f092fd20b64736f6c634300081d0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var WhitelistManagerFacet__factory = /** @class */ (function (_super) {
    __extends(WhitelistManagerFacet__factory, _super);
    function WhitelistManagerFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    WhitelistManagerFacet__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    WhitelistManagerFacet__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    WhitelistManagerFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    WhitelistManagerFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    WhitelistManagerFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    WhitelistManagerFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    WhitelistManagerFacet__factory.bytecode = _bytecode;
    WhitelistManagerFacet__factory.abi = _abi;
    return WhitelistManagerFacet__factory;
}(ethers_1.ContractFactory));
exports.WhitelistManagerFacet__factory = WhitelistManagerFacet__factory;
