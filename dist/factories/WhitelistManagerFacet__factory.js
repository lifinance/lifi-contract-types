/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        type: "function",
        name: "addToWhitelist",
        inputs: [
            {
                name: "_contractAddress",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "batchAddToWhitelist",
        inputs: [
            {
                name: "_addresses",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "batchRemoveFromWhitelist",
        inputs: [
            {
                name: "_addresses",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "batchSetFunctionWhitelistBySelector",
        inputs: [
            {
                name: "_selectors",
                type: "bytes4[]",
                internalType: "bytes4[]",
            },
            {
                name: "_whitelisted",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "getWhitelistedAddresses",
        inputs: [],
        outputs: [
            {
                name: "addresses",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getWhitelistedFunctionSelectors",
        inputs: [],
        outputs: [
            {
                name: "selectors",
                type: "bytes4[]",
                internalType: "bytes4[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isAddressWhitelisted",
        inputs: [
            {
                name: "_address",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "whitelisted",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isFunctionSelectorWhitelisted",
        inputs: [
            {
                name: "_selector",
                type: "bytes4",
                internalType: "bytes4",
            },
        ],
        outputs: [
            {
                name: "whitelisted",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isMigrated",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "migrate",
        inputs: [
            {
                name: "_selectorsToRemove",
                type: "bytes4[]",
                internalType: "bytes4[]",
            },
            {
                name: "_contractsToAdd",
                type: "address[]",
                internalType: "address[]",
            },
            {
                name: "_selectorsToAdd",
                type: "bytes4[]",
                internalType: "bytes4[]",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "removeFromWhitelist",
        inputs: [
            {
                name: "_address",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setFunctionWhitelistBySelector",
        inputs: [
            {
                name: "_selector",
                type: "bytes4",
                internalType: "bytes4",
            },
            {
                name: "_whitelisted",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "event",
        name: "AddressRemoved",
        inputs: [
            {
                name: "removedAddress",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "AddressWhitelisted",
        inputs: [
            {
                name: "whitelistedAddress",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "FunctionSelectorWhitelistChanged",
        inputs: [
            {
                name: "functionSelector",
                type: "bytes4",
                indexed: true,
                internalType: "bytes4",
            },
            {
                name: "whitelisted",
                type: "bool",
                indexed: true,
                internalType: "bool",
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotAuthoriseSelf",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidConfig",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "UnAuthorized",
        inputs: [],
    },
];
const _bytecode = "0x6080604052348015600e575f5ffd5b506119fd8061001c5f395ff3fe608060405234801561000f575f5ffd5b50600436106100cf575f3560e01c80636d0280271161007d578063b06faf6211610058578063b06faf6214610199578063e43252d7146101c3578063fcb030fc146101d6575f5ffd5b80636d0280271461015c5780638ab1d6811461017157806390f3d77b14610184575f5ffd5b80632db6fa36116100ad5780632db6fa361461012357806356977cc01461013657806359e8497014610149575f5ffd5b8063045fb888146100d357806308ea2b7b146100e857806313f44d10146100fb575b5f5ffd5b6100e66100e136600461168f565b6101e9565b005b6100e66100f6366004611711565b610277565b61010e610109366004611742565b6102cb565b60405190151581526020015b60405180910390f35b6100e661013136600461168f565b610319565b61010e61014436600461177c565b6103a1565b6100e6610157366004611795565b6103f9565b610164610489565b60405161011a91906117e5565b6100e661017f366004611742565b610498565b61018c6104ea565b60405161011a919061183d565b7f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f245460ff1661010e565b6100e66101d1366004611742565b6104f4565b6100e66101e4366004611896565b610543565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff16331461022f5761022f610a9a565b805f5b818110156102715761026984848381811061024f5761024f611935565b90506020020160208101906102649190611742565b610b36565b600101610232565b50505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff1633146102bd576102bd610a9a565b6102c78282610bd0565b5050565b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604081205460ff165b92915050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff16331461035f5761035f610a9a565b805f5b818110156102715761039984848381811061037f5761037f611935565b90506020020160208101906103949190611742565b610ca1565b600101610362565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604081205460ff16610313565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff16331461043f5761043f610a9a565b815f5b818110156104825761047a85858381811061045f5761045f611935565b9050602002016020810190610474919061177c565b84610bd0565b600101610442565b5050505050565b6060610493610d8b565b905090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff1633146104de576104de610a9a565b6104e781610b36565b50565b6060610493610e1a565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff16331461053a5761053a610a9a565b6104e781610ca1565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff16331461058957610589610a9a565b7f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f24547f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e9060ff16156105db5750610a92565b60028101545f905b8082101561066f575f835f015f85600201858154811061060557610605611935565b5f9182526020808320919091015473ffffffffffffffffffffffffffffffffffffffff168352820192909252604001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055600191909101906105e3565b505f9050865b80821015610714575f836001015f8b8b8681811061069557610695611935565b90506020020160208101906106aa919061177c565b7fffffffff0000000000000000000000000000000000000000000000000000000016815260208101919091526040015f2080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905560019190910190610675565b610721600284015f611619565b505f9050845b808210156108f1573087878481811061074257610742611935565b90506020020160208101906107579190611742565b73ffffffffffffffffffffffffffffffffffffffff16036107a4576040517fa9cefcae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108178787848181106107b9576107b9611935565b90506020020160208101906107ce9190611742565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b1561084e576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61087d87878481811061086357610863611935565b90506020020160208101906108789190611742565b610ed2565b86868381811061088f5761088f611935565b90506020020160208101906108a49190611742565b73ffffffffffffffffffffffffffffffffffffffff167f4f783c179409b4127238bc9c990bc99b9a651666a0d20b51d6c42849eb88466d60405160405180910390a2816001019150610727565b505f9050825b80821015610a635761097e85858481811061091457610914611935565b9050602002016020810190610929919061177c565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b156109b5576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109e48585848181106109ca576109ca611935565b90506020020160208101906109df919061177c565b61104d565b60018585848181106109f8576109f8611935565b9050602002016020810190610a0d919061177c565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167fbd62d99efeca73ccd79977dbff005f414e47484abdbe177c8c711283555e85b760405160405180910390a38160010191506108f7565b505060060180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555b505050505050565b5f80357fffffffff000000000000000000000000000000000000000000000000000000001681527fdf05114fe8fad5d7cd2d71c5651effc2a4c21f13ee8b4a462e2a3bd4e140c73e6020818152604080842033855290915290912054600160ff9091161515146104e7576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff16610b845750565b610b8d8161117a565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f24a12366c02e13fe4a9e03d86a8952e85bb74a456c16e4a18b6d8295700b74bb905f90a250565b7fffffffff0000000000000000000000000000000000000000000000000000000082165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1681151581151514610c9c578115610c4257610c3d8361104d565b610c4b565b610c4b836113a7565b604051821515907fffffffff000000000000000000000000000000000000000000000000000000008516907fbd62d99efeca73ccd79977dbff005f414e47484abdbe177c8c711283555e85b7905f90a35b505050565b3073ffffffffffffffffffffffffffffffffffffffff821603610cf0576040517fa9cefcae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1615610d3f5750565b610d4881610ed2565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f4f783c179409b4127238bc9c990bc99b9a651666a0d20b51d6c42849eb88466d905f90a250565b60607f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e600201805480602002602001604051908101604052809291908181526020018280548015610e1057602002820191905f5260205f20905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610de5575b5050505050905090565b60607f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e600501805480602002602001604051908101604052809291908181526020018280548015610e1057602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411610e765790505050505050905090565b73ffffffffffffffffffffffffffffffffffffffff8116610f1f576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6017813b11610f5a576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602081905260409091205460ff1615610fad575050565b73ffffffffffffffffffffffffffffffffffffffff9091165f8181526020838152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600286018054918201815580855283852090910180547fffffffffffffffffffffffff0000000000000000000000000000000000000000168617905554938352600390940190529190912055565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f60205260409020547f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e9060ff16156110cb575050565b7fffffffff0000000000000000000000000000000000000000000000000000000082165f81815260018381016020908152604080842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168417905560058601805493840181558085528285206008850401805460e09990991c6004600790961686026101000a90810263ffffffff90910219909916989098179097559554938352930190925291902055565b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602081905260409091205460ff166111cc575050565b73ffffffffffffffffffffffffffffffffffffffff82165f9081526003820160205260408120549081900361120057505050565b5f61120c600183611962565b60028401549091505f9061122290600190611962565b90508082146112df575f84600201828154811061124157611241611935565b5f9182526020909120015460028601805473ffffffffffffffffffffffffffffffffffffffff909216925082918590811061127e5761127e611935565b5f91825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff94851617905592909116815260038601909152604090208390555b836002018054806112f2576112f261199a565b5f828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff969096168152600385018652604080822082905594909552505050902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f60205260409020547f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e9060ff16611424575050565b7fffffffff0000000000000000000000000000000000000000000000000000000082165f9081526004820160205260408120549081900361146457505050565b5f611470600183611962565b60058401549091505f9061148690600190611962565b905080821461154a575f8460050182815481106114a5576114a5611935565b905f5260205f2090600891828204019190066004029054906101000a900460e01b9050808560050184815481106114de576114de611935565b5f91825260208083206008830401805460e09590951c6004600790941684026101000a90810263ffffffff90910219909516949094179093557fffffffff0000000000000000000000000000000000000000000000000000000090931681529186019052604090208390555b8360050180548061155d5761155d61199a565b5f828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff60046007871681026101000a9190910219909116909155929093557fffffffff0000000000000000000000000000000000000000000000000000000090971687528501815260408087208790556001959095019052505050902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b5080545f8255905f5260205f20908101906104e791905b80821115611643575f8155600101611630565b5090565b5f5f83601f840112611657575f5ffd5b50813567ffffffffffffffff81111561166e575f5ffd5b6020830191508360208260051b8501011115611688575f5ffd5b9250929050565b5f5f602083850312156116a0575f5ffd5b823567ffffffffffffffff8111156116b6575f5ffd5b6116c285828601611647565b90969095509350505050565b80357fffffffff00000000000000000000000000000000000000000000000000000000811681146116fd575f5ffd5b919050565b803580151581146116fd575f5ffd5b5f5f60408385031215611722575f5ffd5b61172b836116ce565b915061173960208401611702565b90509250929050565b5f60208284031215611752575f5ffd5b813573ffffffffffffffffffffffffffffffffffffffff81168114611775575f5ffd5b9392505050565b5f6020828403121561178c575f5ffd5b611775826116ce565b5f5f5f604084860312156117a7575f5ffd5b833567ffffffffffffffff8111156117bd575f5ffd5b6117c986828701611647565b90945092506117dc905060208501611702565b90509250925092565b602080825282518282018190525f918401906040840190835b8181101561183257835173ffffffffffffffffffffffffffffffffffffffff168352602093840193909201916001016117fe565b509095945050505050565b602080825282518282018190525f918401906040840190835b818110156118325783517fffffffff0000000000000000000000000000000000000000000000000000000016835260209384019390920191600101611856565b5f5f5f5f5f5f606087890312156118ab575f5ffd5b863567ffffffffffffffff8111156118c1575f5ffd5b6118cd89828a01611647565b909750955050602087013567ffffffffffffffff8111156118ec575f5ffd5b6118f889828a01611647565b909550935050604087013567ffffffffffffffff811115611917575f5ffd5b61192389828a01611647565b979a9699509497509295939492505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b81810381811115610313577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfea2646970667358221220ac49212228b05aaf6010c8a1dc13ac190fdf21932716ed8c8a4944d088ae399664736f6c634300081d0033";
const isSuperArgs = (xs) => xs.length > 1;
export class WhitelistManagerFacet__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
