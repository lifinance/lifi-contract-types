"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.WhitelistManagerFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "batchSetContractSelectorWhitelist",
        inputs: [
            {
                name: "_contracts",
                type: "address[]",
                internalType: "address[]",
            },
            {
                name: "_selectors",
                type: "bytes4[]",
                internalType: "bytes4[]",
            },
            {
                name: "_whitelisted",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "getWhitelistedAddresses",
        inputs: [],
        outputs: [
            {
                name: "addresses",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getWhitelistedFunctionSelectors",
        inputs: [],
        outputs: [
            {
                name: "selectors",
                type: "bytes4[]",
                internalType: "bytes4[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getWhitelistedSelectorsForContract",
        inputs: [
            {
                name: "_contract",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "selectors",
                type: "bytes4[]",
                internalType: "bytes4[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isAddressWhitelisted",
        inputs: [
            {
                name: "_address",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "whitelisted",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isContractSelectorWhitelisted",
        inputs: [
            {
                name: "_contract",
                type: "address",
                internalType: "address",
            },
            {
                name: "_selector",
                type: "bytes4",
                internalType: "bytes4",
            },
        ],
        outputs: [
            {
                name: "whitelisted",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isFunctionSelectorWhitelisted",
        inputs: [
            {
                name: "_selector",
                type: "bytes4",
                internalType: "bytes4",
            },
        ],
        outputs: [
            {
                name: "whitelisted",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isMigrated",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "migrate",
        inputs: [
            {
                name: "_selectorsToRemove",
                type: "bytes4[]",
                internalType: "bytes4[]",
            },
            {
                name: "_contractsToAdd",
                type: "address[]",
                internalType: "address[]",
            },
            {
                name: "_selectorsToAdd",
                type: "bytes4[]",
                internalType: "bytes4[]",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setContractSelectorWhitelist",
        inputs: [
            {
                name: "_contract",
                type: "address",
                internalType: "address",
            },
            {
                name: "_selector",
                type: "bytes4",
                internalType: "bytes4",
            },
            {
                name: "_whitelisted",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "event",
        name: "AddressWhitelisted",
        inputs: [
            {
                name: "whitelistedAddress",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "ContractSelectorWhitelistChanged",
        inputs: [
            {
                name: "contractAddress",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "selector",
                type: "bytes4",
                indexed: true,
                internalType: "bytes4",
            },
            {
                name: "whitelisted",
                type: "bool",
                indexed: true,
                internalType: "bool",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "FunctionSelectorWhitelistChanged",
        inputs: [
            {
                name: "selector",
                type: "bytes4",
                indexed: true,
                internalType: "bytes4",
            },
            {
                name: "whitelisted",
                type: "bool",
                indexed: true,
                internalType: "bool",
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotAuthoriseSelf",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidCallData",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidConfig",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "UnAuthorized",
        inputs: [],
    },
];
var _bytecode = "0x6080604052348015600e575f5ffd5b50611ab78061001c5f395ff3fe608060405234801561000f575f5ffd5b50600436106100b9575f3560e01c806390f3d77b116100725780639baf00f9116100585780639baf00f91461015d578063b06faf6214610170578063fcb030fc1461019a575f5ffd5b806390f3d77b1461013557806394ddf6631461014a575f5ffd5b806351fed648116100a257806351fed648146100fa57806356977cc01461010d5780636d02802714610120575f5ffd5b80631171c007146100bd57806313f44d10146100d2575b5f5ffd5b6100d06100cb3660046116b7565b6101ad565b005b6100e56100e036600461175a565b61029f565b60405190151581526020015b60405180910390f35b6100d06101083660046117a2565b6102ec565b6100e561011b3660046117e2565b610342565b610128610399565b6040516100f191906117fb565b61013d6103a8565b6040516100f19190611853565b61013d61015836600461175a565b6103b2565b6100e561016b3660046118ac565b6103bd565b7f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f285460ff166100e5565b6100d06101a83660046118dd565b610439565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff1633146101f3576101f3610506565b83821461022c576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b835f5b818110156102965761028e87878381811061024c5761024c61197c565b9050602002016020810190610261919061175a565b8686848181106102735761027361197c565b905060200201602081019061028891906117e2565b856105a5565b60010161022f565b50505050505050565b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f21602052604081205415155b92915050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff16331461033257610332610506565b61033d8383836105a5565b505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f22602052604081205415156102e6565b60606103a3610706565b905090565b60606103a3610795565b60606102e68261084d565b73ffffffffffffffffffffffffffffffffffffffff82165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f24602090815260408083207fffffffff000000000000000000000000000000000000000000000000000000008516845290915281205460ff165b9392505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff16331461047f5761047f610506565b7f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f28547f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e9060ff16156104d157506104fe565b600a0180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555b505050505050565b5f80357fffffffff000000000000000000000000000000000000000000000000000000001681527fdf05114fe8fad5d7cd2d71c5651effc2a4c21f13ee8b4a462e2a3bd4e140c73e6020818152604080842033855290915290912054600160ff9091161515146105a2576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b3073ffffffffffffffffffffffffffffffffffffffff8416036105f4576040517fa9cefcae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff83165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f24602090815260408083207fffffffff000000000000000000000000000000000000000000000000000000008616845290915290205460ff16811515811515036106795750505050565b811561068e576106898484610923565b610698565b6106988484610ba3565b604051821515907fffffffff0000000000000000000000000000000000000000000000000000000085169073ffffffffffffffffffffffffffffffffffffffff8716907f1026451bc49d23b939d8e3c16eb4fc3ea6dd8b0be5549aa0dae6675b0083a840905f90a450505050565b60607f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e60020180548060200260200160405190810160405280929190818152602001828054801561078b57602002820191905f5260205f20905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610760575b5050505050905090565b60607f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e60050180548060200260200160405190810160405280929190818152602001828054801561078b57602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116107f15790505050505050905090565b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f26602090815260409182902080548351818402810184019094528084526060939283018282801561091757602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116108c45790505b50505050509050919050565b73ffffffffffffffffffffffffffffffffffffffff8216610970576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f24602090815260408083207fffffffff00000000000000000000000000000000000000000000000000000000851684529091529020547f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e9060ff1615610a1057505050565b73ffffffffffffffffffffffffffffffffffffffff83165f81815260068301602090815260408083207fffffffff0000000000000000000000000000000000000000000000000000000087168452825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055928252600884019052908120549003610aa857610aa883610d4f565b7fffffffff0000000000000000000000000000000000000000000000000000000082165f90815260078201602052604081208054909190610ae8906119d6565b9182905550600103610afd57610afd82610e67565b73ffffffffffffffffffffffffffffffffffffffff929092165f8181526008808501602090815260408084208054600181018255818652838620948104909401805463ffffffff60079096166004026101000a958602191660e089901c95909502949094179093559383529054600990950181528282207fffffffff00000000000000000000000000000000000000000000000000000000909416825292909252902055565b73ffffffffffffffffffffffffffffffffffffffff82165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f24602090815260408083207fffffffff00000000000000000000000000000000000000000000000000000000851684529091529020547f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e9060ff16610c4257505050565b73ffffffffffffffffffffffffffffffffffffffff83165f90815260068201602090815260408083207fffffffff0000000000000000000000000000000000000000000000000000000086168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055610cc58383610f55565b73ffffffffffffffffffffffffffffffffffffffff83165f9081526008820160205260408120549003610cfb57610cfb836111cd565b7fffffffff0000000000000000000000000000000000000000000000000000000082165f90815260078201602052604081208054909190610d3b90611a0d565b91829055505f0361033d5761033d82611403565b6017813b11610d8a576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f2160205260409020547f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e9015610df9575050565b6002810180546001810182555f8281526020808220909201805473ffffffffffffffffffffffffffffffffffffffff9096167fffffffffffffffffffffffff000000000000000000000000000000000000000090961686179055915493825260039092019091526040902055565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f2260205260409020547f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e9015610ee2575050565b6005810180546001810182555f82815260208082206008840401805460e088901c6004600790961686026101000a90810263ffffffff9091021990911617905592547fffffffff000000000000000000000000000000000000000000000000000000009095168152920190526040902055565b73ffffffffffffffffffffffffffffffffffffffff82165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f27602090815260408083207fffffffff00000000000000000000000000000000000000000000000000000000851684529091528120547f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e91819003610ff55750505050565b5f611001600183611a41565b73ffffffffffffffffffffffffffffffffffffffff86165f908152600885016020526040812080549293509161103990600190611a41565b9050808314611115575f8282815481106110555761105561197c565b905f5260205f2090600891828204019190066004029054906101000a900460e01b90508083858154811061108b5761108b61197c565b5f91825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c9290920293909317905573ffffffffffffffffffffffffffffffffffffffff8a16815260098801825260408082207fffffffff0000000000000000000000000000000000000000000000000000000094909416825292909152208490555b8180548061112557611125611a54565b5f828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a02191690559190925573ffffffffffffffffffffffffffffffffffffffff909816815260099095018752505060408084207fffffffff00000000000000000000000000000000000000000000000000000000909516845293909452509081205550565b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f2160205260408120547f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e91819003611289575073ffffffffffffffffffffffffffffffffffffffff9091165f9081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b5f611295600183611a41565b60028401549091505f906112ab90600190611a41565b9050808214611368575f8460020182815481106112ca576112ca61197c565b5f9182526020909120015460028601805473ffffffffffffffffffffffffffffffffffffffff90921692508291859081106113075761130761197c565b5f91825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff94851617905592909116815260038601909152604090208390555b8360020180548061137b5761137b611a54565b5f828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff96909616815260039094019094525050604081205550565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f2260205260408120547f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e918190036114d957507fffffffff000000000000000000000000000000000000000000000000000000009091165f90815260019091016020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b5f6114e5600183611a41565b60058401549091505f906114fb90600190611a41565b90508082146115bf575f84600501828154811061151a5761151a61197c565b905f5260205f2090600891828204019190066004029054906101000a900460e01b9050808560050184815481106115535761155361197c565b5f91825260208083206008830401805460e09590951c6004600790941684026101000a90810263ffffffff90910219909516949094179093557fffffffff0000000000000000000000000000000000000000000000000000000090931681529186019052604090208390555b836005018054806115d2576115d2611a54565b600190038181905f5260205f2090600891828204019190066004026101000a81549063ffffffff02191690559055836004015f867bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f90555050505050565b5f5f83601f84011261166b575f5ffd5b50813567ffffffffffffffff811115611682575f5ffd5b6020830191508360208260051b850101111561169c575f5ffd5b9250929050565b803580151581146116b2575f5ffd5b919050565b5f5f5f5f5f606086880312156116cb575f5ffd5b853567ffffffffffffffff8111156116e1575f5ffd5b6116ed8882890161165b565b909650945050602086013567ffffffffffffffff81111561170c575f5ffd5b6117188882890161165b565b909450925061172b9050604087016116a3565b90509295509295909350565b803573ffffffffffffffffffffffffffffffffffffffff811681146116b2575f5ffd5b5f6020828403121561176a575f5ffd5b61043282611737565b80357fffffffff00000000000000000000000000000000000000000000000000000000811681146116b2575f5ffd5b5f5f5f606084860312156117b4575f5ffd5b6117bd84611737565b92506117cb60208501611773565b91506117d9604085016116a3565b90509250925092565b5f602082840312156117f2575f5ffd5b61043282611773565b602080825282518282018190525f918401906040840190835b8181101561184857835173ffffffffffffffffffffffffffffffffffffffff16835260209384019390920191600101611814565b509095945050505050565b602080825282518282018190525f918401906040840190835b818110156118485783517fffffffff000000000000000000000000000000000000000000000000000000001683526020938401939092019160010161186c565b5f5f604083850312156118bd575f5ffd5b6118c683611737565b91506118d460208401611773565b90509250929050565b5f5f5f5f5f5f606087890312156118f2575f5ffd5b863567ffffffffffffffff811115611908575f5ffd5b61191489828a0161165b565b909750955050602087013567ffffffffffffffff811115611933575f5ffd5b61193f89828a0161165b565b909550935050604087013567ffffffffffffffff81111561195e575f5ffd5b61196a89828a0161165b565b979a9699509497509295939492505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a0657611a066119a9565b5060010190565b5f81611a1b57611a1b6119a9565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b818103818111156102e6576102e66119a9565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfea264697066735822122017efb57572165b397100bfa4b913fb8b7e64cb21ec7f47812af0aa3c7679992d64736f6c634300081d0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var WhitelistManagerFacet__factory = /** @class */ (function (_super) {
    __extends(WhitelistManagerFacet__factory, _super);
    function WhitelistManagerFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    WhitelistManagerFacet__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    WhitelistManagerFacet__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    WhitelistManagerFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    WhitelistManagerFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    WhitelistManagerFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    WhitelistManagerFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    WhitelistManagerFacet__factory.bytecode = _bytecode;
    WhitelistManagerFacet__factory.abi = _abi;
    return WhitelistManagerFacet__factory;
}(ethers_1.ContractFactory));
exports.WhitelistManagerFacet__factory = WhitelistManagerFacet__factory;
