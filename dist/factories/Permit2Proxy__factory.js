"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Permit2Proxy__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_lifiDiamond",
                type: "address",
                internalType: "address",
            },
            {
                name: "_permit2",
                type: "address",
                internalType: "contract ISignatureTransfer",
            },
            {
                name: "_owner",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "receive",
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "LIFI_DIAMOND",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "PERMIT2",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract ISignatureTransfer",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "PERMIT_WITH_WITNESS_TYPEHASH",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "WITNESS_TYPEHASH",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "WITNESS_TYPE_STRING",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "string",
                internalType: "string",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "callDiamondWithEIP2612Signature",
        inputs: [
            {
                name: "tokenAddress",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "deadline",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "v",
                type: "uint8",
                internalType: "uint8",
            },
            {
                name: "r",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "s",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "diamondCalldata",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "callDiamondWithPermit2",
        inputs: [
            {
                name: "_diamondCalldata",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "_permit",
                type: "tuple",
                internalType: "struct ISignatureTransfer.PermitTransferFrom",
                components: [
                    {
                        name: "permitted",
                        type: "tuple",
                        internalType: "struct ISignatureTransfer.TokenPermissions",
                        components: [
                            {
                                name: "token",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "amount",
                                type: "uint256",
                                internalType: "uint256",
                            },
                        ],
                    },
                    {
                        name: "nonce",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
            {
                name: "_signature",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "callDiamondWithPermit2Witness",
        inputs: [
            {
                name: "_diamondCalldata",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "_signer",
                type: "address",
                internalType: "address",
            },
            {
                name: "_permit",
                type: "tuple",
                internalType: "struct ISignatureTransfer.PermitTransferFrom",
                components: [
                    {
                        name: "permitted",
                        type: "tuple",
                        internalType: "struct ISignatureTransfer.TokenPermissions",
                        components: [
                            {
                                name: "token",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "amount",
                                type: "uint256",
                                internalType: "uint256",
                            },
                        ],
                    },
                    {
                        name: "nonce",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
            {
                name: "_signature",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "cancelOwnershipTransfer",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "confirmOwnershipTransfer",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "getPermit2MsgHash",
        inputs: [
            {
                name: "_diamondCalldata",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "_assetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "_amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "_nonce",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "_deadline",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "msgHash",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "nextNonce",
        inputs: [
            {
                name: "owner",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "nonce",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "nextNonceAfter",
        inputs: [
            {
                name: "owner",
                type: "address",
                internalType: "address",
            },
            {
                name: "start",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "nonce",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "owner",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "pendingOwner",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "transferOwnership",
        inputs: [
            {
                name: "_newOwner",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "withdrawToken",
        inputs: [
            {
                name: "assetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                internalType: "address payable",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "event",
        name: "OwnershipTransferRequested",
        inputs: [
            {
                name: "_from",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "_to",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
            {
                name: "previousOwner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "newOwner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "TokensWithdrawn",
        inputs: [
            {
                name: "assetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address payable",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CallToDiamondFailed",
        inputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes",
            },
        ],
    },
    {
        type: "error",
        name: "ExternalCallFailed",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NewOwnerMustNotBeSelf",
        inputs: [],
    },
    {
        type: "error",
        name: "NoNullOwner",
        inputs: [],
    },
    {
        type: "error",
        name: "NoPendingOwnershipTransfer",
        inputs: [],
    },
    {
        type: "error",
        name: "NotPendingOwner",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAnERC20Token",
        inputs: [],
    },
    {
        type: "error",
        name: "UnAuthorized",
        inputs: [],
    },
];
var _bytecode = "0x60e060405234801561000f575f5ffd5b5060405161220d38038061220d83398101604081905261002e916100d5565b5f80546001600160a01b0319166001600160a01b0383811691909117909155838116608052821660a090815260408051918201905260648082526121a960208301396040518060a00160405280607b815260200161212e607b913960405160200161009a929190610136565b60408051601f19818403018152919052805160209091012060c05250610152915050565b6001600160a01b03811681146100d2575f5ffd5b50565b5f5f5f606084860312156100e7575f5ffd5b83516100f2816100be565b6020850151909350610103816100be565b6040850151909250610114816100be565b809150509250925092565b5f81518060208401855e5f93019283525090919050565b5f61014a610144838661011f565b8461011f565b949350505050565b60805160a05160c051611f656101c95f395f818161031501526107ca01525f81816102a3015281816103ea0152818161073901528181610a3801526112ec01525f818161017201528181610467015281816106d10152818161096701528181610b2401528181610f75015261116b0152611f655ff3fe60806040526004361061010c575f3560e01c80634561136e116100a15780638da5cb5b11610071578063d7a0847311610057578063d7a0847314610337578063e30c39781461034a578063f2fde38b14610376575f5ffd5b80638da5cb5b146102d9578063aeef37de14610304575f5ffd5b80634561136e146102605780635ebf8b7d146102735780636afdd850146102925780637200b829146102c5575f5ffd5b8063156e2152116100dc578063156e2152146101e65780631608b803146101fa57806323452b9c146102195780632c03ae6a1461022d575f5ffd5b80630193b9fc1461011757806301e3366714610140578063020a1f7d146101615780630cd55abf146101b9575f5ffd5b3661011357005b5f5ffd5b61012a6101253660046117f9565b610395565b60405161013791906118c7565b60405180910390f35b34801561014b575f5ffd5b5061015f61015a3660046118fd565b6104d8565b005b34801561016c575f5ffd5b506101947f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610137565b3480156101c4575f5ffd5b506101d86101d336600461193b565b61065d565b604051908152602001610137565b3480156101f1575f5ffd5b5061012a61066f565b348015610205575f5ffd5b506101d8610214366004611956565b61068b565b348015610224575f5ffd5b5061015f61088e565b348015610238575f5ffd5b506101d87f94e6068a5a6dd834ff47c5974947ba1045655c61d1d1ee6dd509d2a6e2bed77081565b61012a61026e3660046119c2565b610957565b34801561027e575f5ffd5b506101d861028d366004611a55565b610b98565b34801561029d575f5ffd5b506101947f000000000000000000000000000000000000000000000000000000000000000081565b3480156102d0575f5ffd5b5061015f610c00565b3480156102e4575f5ffd5b505f546101949073ffffffffffffffffffffffffffffffffffffffff1681565b34801561030f575f5ffd5b506101d87f000000000000000000000000000000000000000000000000000000000000000081565b61012a610345366004611a7f565b610ce4565b348015610355575f5ffd5b506001546101949073ffffffffffffffffffffffffffffffffffffffff1681565b348015610381575f5ffd5b5061015f61039036600461193b565b610fd8565b6040805180820182523081526020808601359082015290517f30f28b7a00000000000000000000000000000000000000000000000000000000815260609173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016916330f28b7a9161042691889190339089908990600401611b96565b5f604051808303815f87803b15801561043d575f5ffd5b505af115801561044f573d5f5f3e3d5ffd5b506104909250610465915050602086018661193b565b7f00000000000000000000000000000000000000000000000000000000000000006020870135611134565b6104ce86868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061116592505050565b9695505050505050565b5f5473ffffffffffffffffffffffffffffffffffffffff163314610528576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff83166105df575f8273ffffffffffffffffffffffffffffffffffffffff16826040515f6040518083038185875af1925050503d805f8114610599576040519150601f19603f3d011682016040523d82523d5f602084013e61059e565b606091505b50509050806105d9576040517f350c20f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610600565b61060073ffffffffffffffffffffffffffffffffffffffff84168383611233565b6040805173ffffffffffffffffffffffffffffffffffffffff8086168252841660208201529081018290527f6337ed398c0e8467698c581374fdce4db14922df487b5a39483079f5f59b60a49060600160405180910390a1505050565b5f610669825f5f61127c565b92915050565b6040518060a00160405280607b8152602001611eb5607b913981565b6040805180820190915273ffffffffffffffffffffffffffffffffffffffff85168152602081018490525f90816106c1826113f6565b90505f60405180604001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020018b8b60405161071b929190611c06565b604051809103902081525090505f61073282611475565b905061087f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633644e5156040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107a0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107c49190611c15565b604080517f0000000000000000000000000000000000000000000000000000000000000000602080830191909152818301889052306060830152608082018c905260a082018b905260c08083018790528351808403909101815260e0830184528051908201207f19010000000000000000000000000000000000000000000000000000000000006101008401526101028301949094526101228083019490945282518083039094018452610142909101909152815191012090565b9b9a5050505050505050505050565b5f5473ffffffffffffffffffffffffffffffffffffffff1633146108de576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015473ffffffffffffffffffffffffffffffffffffffff1661092d576040517f75cdea1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60605f60405180604001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16815260200189896040516109b1929190611c06565b604051809103902081525090505f7f94e6068a5a6dd834ff47c5974947ba1045655c61d1d1ee6dd509d2a6e2bed77082604051602001610a1e929190918252805173ffffffffffffffffffffffffffffffffffffffff166020808401919091520151604082015260600190565b6040516020818303038152906040528051906020012090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663137c29fe8760405180604001604052803073ffffffffffffffffffffffffffffffffffffffff1681526020018a5f01602001358152508a856040518060a00160405280607b8152602001611eb5607b91398b8b6040518863ffffffff1660e01b8152600401610ae39796959493929190611c2c565b5f604051808303815f87803b158015610afa575f5ffd5b505af1158015610b0c573d5f5f3e3d5ffd5b50610b4d9250610b22915050602088018861193b565b7f00000000000000000000000000000000000000000000000000000000000000006020890135611134565b610b8b89898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061116592505050565b9998505050505050505050565b5f600882901c827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0160ff821601610bde5781610bd381611ce6565b9250505f9050610bec565b80610be881611d40565b9150505b610bf785838361127c565b95945050505050565b60015473ffffffffffffffffffffffffffffffffffffffff16338114610c52576040517f1853971c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35f805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b6040517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018890526064810187905260ff8616608482015260a4810185905260c4810184905260609073ffffffffffffffffffffffffffffffffffffffff8a169063d505accf9060e4015f604051808303815f87803b158015610d76575f5ffd5b505af1925050508015610d87575060015b610f6357610d93611d55565b806308c379a003610e8f5750610da7611dde565b80610db25750610e91565b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152336004820152306024820152899073ffffffffffffffffffffffffffffffffffffffff8c169063dd62ed3e90604401602060405180830381865afa158015610e22573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e469190611c15565b1015610e8957806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8091906118c7565b60405180910390fd5b50610f63565b505b3d808015610eba576040519150601f19603f3d011682016040523d82523d5f602084013e610ebf565b606091505b506040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152336004820152306024820152899073ffffffffffffffffffffffffffffffffffffffff8c169063dd62ed3e90604401602060405180830381865afa158015610f30573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f549190611c15565b1015610e8957610e89816114d5565b610f6f8933308b6114df565b610f9a897f00000000000000000000000000000000000000000000000000000000000000008a611134565b610b8b83838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061116592505050565b5f5473ffffffffffffffffffffffffffffffffffffffff163314611028576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116611075576040517f1beca37400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff8216036110c4576040517fbf1ea9fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278905f90a350565b6111608383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6115a1565b505050565b60605f5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1634856040516111af9190611e9e565b5f6040518083038185875af1925050503d805f81146111e9576040519150601f19603f3d011682016040523d82523d5f602084013e6111ee565b606091505b50915091508161122c57806040517f0e971f12000000000000000000000000000000000000000000000000000000008152600401610e8091906118c7565b9392505050565b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716611273576390b8ec185f526004601cfd5b5f603452505050565b5f5b6040517f4fe02b4400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301527effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff851660248301525f917f000000000000000000000000000000000000000000000000000000000000000090911690634fe02b4490604401602060405180830381865afa158015611333573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113579190611c15565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81036113945761138984611ce6565b93505f92505061127e565b60ff8316156113a35760ff83161c5b806001166001036113c15760011c6113ba83611d40565b92506113a3565b600884901b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff84161795945050505050565b80516020808301516040515f93611458937f618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a19391920192835273ffffffffffffffffffffffffffffffffffffffff919091166020830152604082015260600190565b604051602081830303815290604052805190602001209050919050565b5f7f94e6068a5a6dd834ff47c5974947ba1045655c61d1d1ee6dd509d2a6e2bed77082604051602001611458929190918252805173ffffffffffffffffffffffffffffffffffffffff166020808401919091520151604082015260600190565b8051602082018181fd5b73ffffffffffffffffffffffffffffffffffffffff841661152c576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611579576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61159b73ffffffffffffffffffffffffffffffffffffffff85168484846116c8565b50505050565b73ffffffffffffffffffffffffffffffffffffffff84161561159b5773ffffffffffffffffffffffffffffffffffffffff831661160a576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa15801561167d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116a19190611c15565b101561159b5761159b73ffffffffffffffffffffffffffffffffffffffff85168483611720565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f5114171661171357637939f4245f526004601cfd5b5f60605260405250505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716611273575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f5114171661127357633e3f8f735f526004601cfd5b5f5f83601f8401126117ae575f5ffd5b50813567ffffffffffffffff8111156117c5575f5ffd5b6020830191508360208285010111156117dc575f5ffd5b9250929050565b5f608082840312156117f3575f5ffd5b50919050565b5f5f5f5f5f60c0868803121561180d575f5ffd5b853567ffffffffffffffff811115611823575f5ffd5b61182f8882890161179e565b9096509450611843905087602088016117e3565b925060a086013567ffffffffffffffff81111561185e575f5ffd5b61186a8882890161179e565b969995985093965092949392505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081525f61122c602083018461187b565b73ffffffffffffffffffffffffffffffffffffffff811681146118fa575f5ffd5b50565b5f5f5f6060848603121561190f575f5ffd5b833561191a816118d9565b9250602084013561192a816118d9565b929592945050506040919091013590565b5f6020828403121561194b575f5ffd5b813561122c816118d9565b5f5f5f5f5f5f60a0878903121561196b575f5ffd5b863567ffffffffffffffff811115611981575f5ffd5b61198d89828a0161179e565b90975095505060208701356119a1816118d9565b95989497509495604081013595506060810135946080909101359350915050565b5f5f5f5f5f5f60e087890312156119d7575f5ffd5b863567ffffffffffffffff8111156119ed575f5ffd5b6119f989828a0161179e565b9097509550506020870135611a0d816118d9565b9350611a1c88604089016117e3565b925060c087013567ffffffffffffffff811115611a37575f5ffd5b611a4389828a0161179e565b979a9699509497509295939492505050565b5f5f60408385031215611a66575f5ffd5b8235611a71816118d9565b946020939093013593505050565b5f5f5f5f5f5f5f5f60e0898b031215611a96575f5ffd5b8835611aa1816118d9565b97506020890135965060408901359550606089013560ff81168114611ac4575f5ffd5b94506080890135935060a0890135925060c089013567ffffffffffffffff811115611aed575f5ffd5b611af98b828c0161179e565b999c989b5096995094979396929594505050565b8035611b18816118d9565b73ffffffffffffffffffffffffffffffffffffffff1682526020818101359083015260408082013590830152606090810135910152565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b611ba08187611b0d565b845173ffffffffffffffffffffffffffffffffffffffff166080820152602085015160a082015273ffffffffffffffffffffffffffffffffffffffff841660c082015261010060e08201525f611bfb61010083018486611b4f565b979650505050505050565b818382375f9101908152919050565b5f60208284031215611c25575f5ffd5b5051919050565b611c368189611b0d565b865173ffffffffffffffffffffffffffffffffffffffff166080820152602087015160a082015273ffffffffffffffffffffffffffffffffffffffff861660c08201528460e08201526101406101008201525f611c9761014083018661187b565b828103610120840152611cab818587611b4f565b9a9950505050505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8103611d3757611d37611cb9565b60010192915050565b5f60ff821660ff8103611d3757611d37611cb9565b5f60033d1115611d6b5760045f5f3e505f5160e01c5b90565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715611dd7577f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040525050565b5f60443d1015611deb5790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3d016004823e80513d602482011167ffffffffffffffff82111715611e3357505090565b808201805167ffffffffffffffff811115611e4f575050505090565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3d8501016020828401011115611e87575050505090565b611e9660208285010185611d6e565b509392505050565b5f82518060208501845e5f92019182525091905056fe4c69466943616c6c207769746e657373294c69466943616c6c2861646472657373206469616d6f6e64416464726573732c62797465733332206469616d6f6e6443616c6c646174614861736829546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e7429a2646970667358221220d48612da10744782fd719c510c91016eb420ec4c5acdd157b070b8b7b7f7bbee64736f6c634300081d00334c69466943616c6c207769746e657373294c69466943616c6c2861646472657373206469616d6f6e64416464726573732c62797465733332206469616d6f6e6443616c6c646174614861736829546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74295065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5065726d697373696f6e73207065726d69747465642c61646472657373207370656e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e652c";
var isSuperArgs = function (xs) { return xs.length > 1; };
var Permit2Proxy__factory = /** @class */ (function (_super) {
    __extends(Permit2Proxy__factory, _super);
    function Permit2Proxy__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    Permit2Proxy__factory.prototype.deploy = function (_lifiDiamond, _permit2, _owner, overrides) {
        return _super.prototype.deploy.call(this, _lifiDiamond, _permit2, _owner, overrides || {});
    };
    Permit2Proxy__factory.prototype.getDeployTransaction = function (_lifiDiamond, _permit2, _owner, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _lifiDiamond, _permit2, _owner, overrides || {});
    };
    Permit2Proxy__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    Permit2Proxy__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    Permit2Proxy__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    Permit2Proxy__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    Permit2Proxy__factory.bytecode = _bytecode;
    Permit2Proxy__factory.abi = _abi;
    return Permit2Proxy__factory;
}(ethers_1.ContractFactory));
exports.Permit2Proxy__factory = Permit2Proxy__factory;
