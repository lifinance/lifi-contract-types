"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Permit2Proxy__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_permit2",
                type: "address",
                internalType: "contract ISignatureTransfer",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "PERMIT2",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract ISignatureTransfer",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "WITNESS_TYPEHASH",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "WITNESS_TYPE_STRING",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "string",
                internalType: "string",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "diamondCallSingle",
        inputs: [
            {
                name: "_tokenReceiver",
                type: "address",
                internalType: "address",
            },
            {
                name: "_diamondAddress",
                type: "address",
                internalType: "address",
            },
            {
                name: "_diamondCalldata",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "_owner",
                type: "address",
                internalType: "address",
            },
            {
                name: "_permit",
                type: "tuple",
                internalType: "struct ISignatureTransfer.PermitTransferFrom",
                components: [
                    {
                        name: "permitted",
                        type: "tuple",
                        internalType: "struct ISignatureTransfer.TokenPermissions",
                        components: [
                            {
                                name: "token",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "amount",
                                type: "uint256",
                                internalType: "uint256",
                            },
                        ],
                    },
                    {
                        name: "nonce",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
            {
                name: "_signature",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "error",
        name: "CallToDiamondFailed",
        inputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes",
            },
        ],
    },
];
var _bytecode = "0x60a060405234801561001057600080fd5b50604051610e71380380610e7183398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610de06100916000396000818160c301526102290152610de06000f3fe60806040526004361061003f5760003560e01c8063156e2152146100445780632c03ae6a1461006f5780636afdd850146100b1578063e05387bb1461010a575b600080fd5b34801561005057600080fd5b5061005961011f565b60405161006691906109e9565b60405180910390f35b34801561007b57600080fd5b506100a37f02a39cd37978343aced31673756afe3d4c89631c9f974dd8ef54c7065bd8e3cd81565b604051908152602001610066565b3480156100bd57600080fd5b506100e57f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610066565b61011d610118366004610a75565b61013b565b005b6040518060c0016040528060918152602001610d1a6091913981565b600060405180606001604052808a73ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018888604051610190929190610b56565b6040518091039020815250905060007f02a39cd37978343aced31673756afe3d4c89631c9f974dd8ef54c7065bd8e3cd82600001518360200151846040015160405160200161020f949392919093845273ffffffffffffffffffffffffffffffffffffffff928316602085015291166040830152606082015260800190565b6040516020818303038152906040528051906020012090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663137c29fe8660405180604001604052803073ffffffffffffffffffffffffffffffffffffffff168152602001896000016020013581525089856040518060c0016040528060918152602001610d1a609191398a8a6040518863ffffffff1660e01b81526004016102d59796959493929190610baf565b600060405180830381600087803b1580156102ef57600080fd5b505af1158015610303573d6000803e3d6000fd5b5061032492506103199150506020870187610c67565b8a60208801356103e6565b6000808a73ffffffffffffffffffffffffffffffffffffffff16348b8b60405161034f929190610b56565b60006040518083038185875af1925050503d806000811461038c576040519150601f19603f3d011682016040523d82523d6000602084013e610391565b606091505b5091509150816103d857806040517f0e971f120000000000000000000000000000000000000000000000000000000081526004016103cf91906109e9565b60405180910390fd5b505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661040657505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f9190610c82565b10156104dc576104b1838360006104e1565b6104dc83837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6104e1565b505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b9190610c82565b9050610657847f095ea7b300000000000000000000000000000000000000000000000000000000856105ad8686610c9b565b60405173ffffffffffffffffffffffffffffffffffffffff90921660248301526044820152606401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261065d565b50505050565b60006106bf826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661076c9092919063ffffffff16565b90508051600014806106e05750808060200190518101906106e09190610cdb565b6104dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016103cf565b606061077b8484600085610783565b949350505050565b606082471015610815576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016103cf565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161083e9190610cfd565b60006040518083038185875af1925050503d806000811461087b576040519150601f19603f3d011682016040523d82523d6000602084013e610880565b606091505b50915091506108918783838761089c565b979650505050505050565b6060831561093257825160000361092b5773ffffffffffffffffffffffffffffffffffffffff85163b61092b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103cf565b508161077b565b61077b83838151156109475781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cf91906109e9565b60005b8381101561099657818101518382015260200161097e565b50506000910152565b600081518084526109b781602086016020860161097b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006109fc602083018461099f565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610a2757600080fd5b919050565b60008083601f840112610a3e57600080fd5b50813567ffffffffffffffff811115610a5657600080fd5b602083019150836020828501011115610a6e57600080fd5b9250929050565b600080600080600080600080888a03610120811215610a9357600080fd5b610a9c8a610a03565b9850610aaa60208b01610a03565b975060408a013567ffffffffffffffff80821115610ac757600080fd5b610ad38d838e01610a2c565b9099509750879150610ae760608d01610a03565b965060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8084011215610b1957600080fd5b60808c0195506101008c0135925080831115610b3457600080fd5b5050610b428b828c01610a2c565b999c989b5096995094979396929594505050565b8183823760009101908152919050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600061014073ffffffffffffffffffffffffffffffffffffffff80610bd38c610a03565b16845260208b0135602085015260408b0135604085015260608b01356060850152808a5116608085015250602089015160a0840152610c2a60c084018973ffffffffffffffffffffffffffffffffffffffff169052565b8660e084015280610100840152610c438184018761099f565b9050828103610120840152610c59818587610b66565b9a9950505050505050505050565b600060208284031215610c7957600080fd5b6109fc82610a03565b600060208284031215610c9457600080fd5b5051919050565b80820180821115610cd5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b600060208284031215610ced57600080fd5b815180151581146109fc57600080fd5b60008251610d0f81846020870161097b565b919091019291505056fe4c49464943616c6c207769746e657373294c49464943616c6c286164647265737320746f6b656e52656365697665722c61646472657373206469616d6f6e64416464726573732c62797465733332206469616d6f6e6443616c6c646174614861736829546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e7429a2646970667358221220c179a88e931938df02eb1d6c77293c7d1bedb914dee5c62a6e350acae66ee78564736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var Permit2Proxy__factory = /** @class */ (function (_super) {
    __extends(Permit2Proxy__factory, _super);
    function Permit2Proxy__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    Permit2Proxy__factory.prototype.deploy = function (_permit2, overrides) {
        return _super.prototype.deploy.call(this, _permit2, overrides || {});
    };
    Permit2Proxy__factory.prototype.getDeployTransaction = function (_permit2, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _permit2, overrides || {});
    };
    Permit2Proxy__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    Permit2Proxy__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    Permit2Proxy__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    Permit2Proxy__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    Permit2Proxy__factory.bytecode = _bytecode;
    Permit2Proxy__factory.abi = _abi;
    return Permit2Proxy__factory;
}(ethers_1.ContractFactory));
exports.Permit2Proxy__factory = Permit2Proxy__factory;
