"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Permit2Proxy__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_lifiDiamond",
                type: "address",
                internalType: "address",
            },
            {
                name: "_permit2",
                type: "address",
                internalType: "contract ISignatureTransfer",
            },
            {
                name: "_owner",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "receive",
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "LIFI_DIAMOND",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "PERMIT2",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract ISignatureTransfer",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "PERMIT_WITH_WITNESS_TYPEHASH",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "WITNESS_TYPEHASH",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "WITNESS_TYPE_STRING",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "string",
                internalType: "string",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "callDiamondWithEIP2612Signature",
        inputs: [
            {
                name: "tokenAddress",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "deadline",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "signature",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "diamondCalldata",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "callDiamondWithEIP2612Signature",
        inputs: [
            {
                name: "tokenAddress",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "deadline",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "v",
                type: "uint8",
                internalType: "uint8",
            },
            {
                name: "r",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "s",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "diamondCalldata",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "callDiamondWithPermit2",
        inputs: [
            {
                name: "_diamondCalldata",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "_permit",
                type: "tuple",
                internalType: "struct ISignatureTransfer.PermitTransferFrom",
                components: [
                    {
                        name: "permitted",
                        type: "tuple",
                        internalType: "struct ISignatureTransfer.TokenPermissions",
                        components: [
                            {
                                name: "token",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "amount",
                                type: "uint256",
                                internalType: "uint256",
                            },
                        ],
                    },
                    {
                        name: "nonce",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
            {
                name: "_signature",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "callDiamondWithPermit2Witness",
        inputs: [
            {
                name: "_diamondCalldata",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "_signer",
                type: "address",
                internalType: "address",
            },
            {
                name: "_permit",
                type: "tuple",
                internalType: "struct ISignatureTransfer.PermitTransferFrom",
                components: [
                    {
                        name: "permitted",
                        type: "tuple",
                        internalType: "struct ISignatureTransfer.TokenPermissions",
                        components: [
                            {
                                name: "token",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "amount",
                                type: "uint256",
                                internalType: "uint256",
                            },
                        ],
                    },
                    {
                        name: "nonce",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
            {
                name: "_signature",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "cancelOwnershipTransfer",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "confirmOwnershipTransfer",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "getPermit2MsgHash",
        inputs: [
            {
                name: "_diamondCalldata",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "_assetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "_amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "_nonce",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "_deadline",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "msgHash",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "nextNonce",
        inputs: [
            {
                name: "owner",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "nonce",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "nextNonceAfter",
        inputs: [
            {
                name: "owner",
                type: "address",
                internalType: "address",
            },
            {
                name: "start",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "nonce",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "nonces",
        inputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "owner",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "pendingOwner",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "transferOwnership",
        inputs: [
            {
                name: "_newOwner",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "withdrawToken",
        inputs: [
            {
                name: "assetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                internalType: "address payable",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "event",
        name: "OwnershipTransferRequested",
        inputs: [
            {
                name: "_from",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "_to",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
            {
                name: "previousOwner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "newOwner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "TokensWithdrawn",
        inputs: [
            {
                name: "assetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address payable",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CallToDiamondFailed",
        inputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes",
            },
        ],
    },
    {
        type: "error",
        name: "ExternalCallFailed",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidSignature",
        inputs: [],
    },
    {
        type: "error",
        name: "NewOwnerMustNotBeSelf",
        inputs: [],
    },
    {
        type: "error",
        name: "NoNullOwner",
        inputs: [],
    },
    {
        type: "error",
        name: "NoPendingOwnershipTransfer",
        inputs: [],
    },
    {
        type: "error",
        name: "NotPendingOwner",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAnERC20Token",
        inputs: [],
    },
    {
        type: "error",
        name: "UnAuthorized",
        inputs: [],
    },
];
var _bytecode = "0x60e060405234801561000f575f5ffd5b5060405161286738038061286783398101604081905261002e916100d5565b5f80546001600160a01b0319166001600160a01b0383811691909117909155838116608052821660a0908152604080519182019052606480825261280360208301396040518060a00160405280607b8152602001612788607b913960405160200161009a929190610136565b60408051601f19818403018152919052805160209091012060c05250610152915050565b6001600160a01b03811681146100d2575f5ffd5b50565b5f5f5f606084860312156100e7575f5ffd5b83516100f2816100be565b6020850151909350610103816100be565b6040850151909250610114816100be565b809150509250925092565b5f81518060208401855e5f93019283525090919050565b5f61014a610144838661011f565b8461011f565b949350505050565b60805160a05160c0516125b86101d05f395f8181610387015261083c01525f81816102d70152818161045c015281816107ab01528181610aaa015261127c01525f81816101a6015281816104d901528181610743015281816109d901528181610b9601528181610e0201528181610eee01526110f201526125b85ff3fe608060405260043610610140575f3560e01c80635ebf8b7d116100bb5780638da5cb5b11610071578063d7a0847311610057578063d7a08473146103a9578063e30c3978146103bc578063f2fde38b146103e8575f5ffd5b80638da5cb5b1461034b578063aeef37de14610376575f5ffd5b80637200b829116100a15780637200b829146102f95780637ecebe001461030d57806386cabde314610338575f5ffd5b80635ebf8b7d146102a75780636afdd850146102c6575f5ffd5b8063156e21521161011057806323452b9c116100f657806323452b9c1461024d5780632c03ae6a146102615780634561136e14610294575f5ffd5b8063156e21521461021a5780631608b8031461022e575f5ffd5b80630193b9fc1461014b57806301e3366714610174578063020a1f7d146101955780630cd55abf146101ed575f5ffd5b3661014757005b5f5ffd5b61015e610159366004611d17565b610407565b60405161016b9190611de5565b60405180910390f35b34801561017f575f5ffd5b5061019361018e366004611e1b565b61054a565b005b3480156101a0575f5ffd5b506101c87f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161016b565b3480156101f8575f5ffd5b5061020c610207366004611e59565b6106cf565b60405190815260200161016b565b348015610225575f5ffd5b5061015e6106e1565b348015610239575f5ffd5b5061020c610248366004611e74565b6106fd565b348015610258575f5ffd5b50610193610900565b34801561026c575f5ffd5b5061020c7f94e6068a5a6dd834ff47c5974947ba1045655c61d1d1ee6dd509d2a6e2bed77081565b61015e6102a2366004611ee0565b6109c9565b3480156102b2575f5ffd5b5061020c6102c1366004611f73565b610c0a565b3480156102d1575f5ffd5b506101c87f000000000000000000000000000000000000000000000000000000000000000081565b348015610304575f5ffd5b50610193610c72565b348015610318575f5ffd5b5061020c610327366004611e59565b60026020525f908152604090205481565b61015e610346366004611f9d565b610d56565b348015610356575f5ffd5b505f546101c89073ffffffffffffffffffffffffffffffffffffffff1681565b348015610381575f5ffd5b5061020c7f000000000000000000000000000000000000000000000000000000000000000081565b61015e6103b7366004612031565b610e71565b3480156103c7575f5ffd5b506001546101c89073ffffffffffffffffffffffffffffffffffffffff1681565b3480156103f3575f5ffd5b50610193610402366004611e59565b610f5f565b6040805180820182523081526020808601359082015290517f30f28b7a00000000000000000000000000000000000000000000000000000000815260609173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016916330f28b7a9161049891889190339089908990600401612148565b5f604051808303815f87803b1580156104af575f5ffd5b505af11580156104c1573d5f5f3e3d5ffd5b5061050292506104d79150506020860186611e59565b7f000000000000000000000000000000000000000000000000000000000000000060208701356110bb565b61054086868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506110ec92505050565b9695505050505050565b5f5473ffffffffffffffffffffffffffffffffffffffff16331461059a576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316610651575f8273ffffffffffffffffffffffffffffffffffffffff16826040515f6040518083038185875af1925050503d805f811461060b576040519150601f19603f3d011682016040523d82523d5f602084013e610610565b606091505b505090508061064b576040517f350c20f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610672565b61067273ffffffffffffffffffffffffffffffffffffffff841683836111c3565b6040805173ffffffffffffffffffffffffffffffffffffffff8086168252841660208201529081018290527f6337ed398c0e8467698c581374fdce4db14922df487b5a39483079f5f59b60a49060600160405180910390a1505050565b5f6106db825f5f61120c565b92915050565b6040518060a00160405280607b8152602001612508607b913981565b6040805180820190915273ffffffffffffffffffffffffffffffffffffffff85168152602081018490525f908161073382611386565b90505f60405180604001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020018b8b60405161078d9291906121b8565b604051809103902081525090505f6107a482611405565b90506108f17f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633644e5156040518163ffffffff1660e01b8152600401602060405180830381865afa158015610812573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061083691906121c7565b604080517f0000000000000000000000000000000000000000000000000000000000000000602080830191909152818301889052306060830152608082018c905260a082018b905260c08083018790528351808403909101815260e0830184528051908201207f19010000000000000000000000000000000000000000000000000000000000006101008401526101028301949094526101228083019490945282518083039094018452610142909101909152815191012090565b9b9a5050505050505050505050565b5f5473ffffffffffffffffffffffffffffffffffffffff163314610950576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015473ffffffffffffffffffffffffffffffffffffffff1661099f576040517f75cdea1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60605f60405180604001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020018989604051610a239291906121b8565b604051809103902081525090505f7f94e6068a5a6dd834ff47c5974947ba1045655c61d1d1ee6dd509d2a6e2bed77082604051602001610a90929190918252805173ffffffffffffffffffffffffffffffffffffffff166020808401919091520151604082015260600190565b6040516020818303038152906040528051906020012090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663137c29fe8760405180604001604052803073ffffffffffffffffffffffffffffffffffffffff1681526020018a5f01602001358152508a856040518060a00160405280607b8152602001612508607b91398b8b6040518863ffffffff1660e01b8152600401610b5597969594939291906121de565b5f604051808303815f87803b158015610b6c575f5ffd5b505af1158015610b7e573d5f5f3e3d5ffd5b50610bbf9250610b949150506020880188611e59565b7f000000000000000000000000000000000000000000000000000000000000000060208901356110bb565b610bfd89898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506110ec92505050565b9998505050505050505050565b5f600882901c827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0160ff821601610c505781610c458161228a565b9250505f9050610c5e565b80610c5a816122e4565b9150505b610c6985838361120c565b95945050505050565b60015473ffffffffffffffffffffffffffffffffffffffff16338114610cc4576040517f1853971c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35f805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b606085421115610d92576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6017333b11610de157610ddc88888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061146592505050565b610df0565b610df0888888888888886117f1565b610dfc8833308a6119f3565b610e27887f0000000000000000000000000000000000000000000000000000000000000000896110bb565b610e6583838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506110ec92505050565b98975050505050505050565b60605f858588604051602001610ebf93929190928352602083019190915260f81b7fff0000000000000000000000000000000000000000000000000000000000000016604082015260410190565b6040516020818303038152906040529050610edc8a8a8a84611465565b610ee88a33308c6119f3565b610f138a7f00000000000000000000000000000000000000000000000000000000000000008b6110bb565b610f5184848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506110ec92505050565b9a9950505050505050505050565b5f5473ffffffffffffffffffffffffffffffffffffffff163314610faf576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116610ffc576040517f1beca37400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff82160361104b576040517fbf1ea9fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278905f90a350565b6110e78383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611ab5565b505050565b60605f5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16348560405161113691906122f9565b5f6040518083038185875af1925050503d805f8114611170576040519150601f19603f3d011682016040523d82523d5f602084013e611175565b606091505b5091509150816111bc57806040517f0e971f120000000000000000000000000000000000000000000000000000000081526004016111b39190611de5565b60405180910390fd5b9392505050565b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716611203576390b8ec185f526004601cfd5b5f603452505050565b5f5b6040517f4fe02b4400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301527effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff851660248301525f917f000000000000000000000000000000000000000000000000000000000000000090911690634fe02b4490604401602060405180830381865afa1580156112c3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112e791906121c7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8103611324576113198461228a565b93505f92505061120e565b60ff8316156113335760ff83161c5b806001166001036113515760011c61134a836122e4565b9250611333565b600884901b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff84161795945050505050565b80516020808301516040515f936113e8937f618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a19391920192835273ffffffffffffffffffffffffffffffffffffffff919091166020830152604082015260600190565b604051602081830303815290604052805190602001209050919050565b5f7f94e6068a5a6dd834ff47c5974947ba1045655c61d1d1ee6dd509d2a6e2bed770826040516020016113e8929190918252805173ffffffffffffffffffffffffffffffffffffffff166020808401919091520151604082015260600190565b80516041146114a0576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8080805b6020811015611556576114b981600861230f565b8582815181106114cb576114cb612326565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c939093179261150481600861230f565b85611510836020612353565b8151811061152057611520612326565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c92909217916001016114a5565b508360408151811061156a5761156a612326565b01602001516040517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018890526064810187905260f89190911c6084820181905260a4820185905260c48201849052915073ffffffffffffffffffffffffffffffffffffffff88169063d505accf9060e4015f604051808303815f87803b158015611604575f5ffd5b505af1925050508015611615575060015b6117e857611621612366565b806308c379a00361171457506116356123ef565b806116405750611716565b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152336004820152306024820152879073ffffffffffffffffffffffffffffffffffffffff8a169063dd62ed3e90604401602060405180830381865afa1580156116b0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116d491906121c7565b101561170e57806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b39190611de5565b506117e8565b505b3d80801561173f576040519150601f19603f3d011682016040523d82523d5f602084013e611744565b606091505b506040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152336004820152306024820152879073ffffffffffffffffffffffffffffffffffffffff8a169063dd62ed3e90604401602060405180830381865afa1580156117b5573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117d991906121c7565b101561170e5761170e81611bdc565b50505050505050565b335f908152600260205260408082205490519091907fc68257aec134982c10ffd25440fd443a5493626c5edd333a6853645da106b0b5908a908a908a9061183b90899089906121b8565b60408051918290038220602083019690965273ffffffffffffffffffffffffffffffffffffffff909416938101939093526060830191909152608082015260a081019190915260c081018390524660e08201523061010082015261012001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905280516020909101207f1626ba7e00000000000000000000000000000000000000000000000000000000825291505f903390631626ba7e906119119085908b908b906004016124af565b602060405180830381865afa15801561192c573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061195091906124c8565b90507fffffffff0000000000000000000000000000000000000000000000000000000081167f1626ba7e00000000000000000000000000000000000000000000000000000000146119cd576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6119d8836001612353565b335f9081526002602052604090205550505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416611a40576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611a8d576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611aaf73ffffffffffffffffffffffffffffffffffffffff8516848484611be6565b50505050565b73ffffffffffffffffffffffffffffffffffffffff841615611aaf5773ffffffffffffffffffffffffffffffffffffffff8316611b1e576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611b91573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611bb591906121c7565b1015611aaf57611aaf73ffffffffffffffffffffffffffffffffffffffff85168483611c3e565b8051602082018181fd5b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f51141716611c3157637939f4245f526004601cfd5b5f60605260405250505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716611203575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f5114171661120357633e3f8f735f526004601cfd5b5f5f83601f840112611ccc575f5ffd5b50813567ffffffffffffffff811115611ce3575f5ffd5b602083019150836020828501011115611cfa575f5ffd5b9250929050565b5f60808284031215611d11575f5ffd5b50919050565b5f5f5f5f5f60c08688031215611d2b575f5ffd5b853567ffffffffffffffff811115611d41575f5ffd5b611d4d88828901611cbc565b9096509450611d6190508760208801611d01565b925060a086013567ffffffffffffffff811115611d7c575f5ffd5b611d8888828901611cbc565b969995985093965092949392505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081525f6111bc6020830184611d99565b73ffffffffffffffffffffffffffffffffffffffff81168114611e18575f5ffd5b50565b5f5f5f60608486031215611e2d575f5ffd5b8335611e3881611df7565b92506020840135611e4881611df7565b929592945050506040919091013590565b5f60208284031215611e69575f5ffd5b81356111bc81611df7565b5f5f5f5f5f5f60a08789031215611e89575f5ffd5b863567ffffffffffffffff811115611e9f575f5ffd5b611eab89828a01611cbc565b9097509550506020870135611ebf81611df7565b95989497509495604081013595506060810135946080909101359350915050565b5f5f5f5f5f5f60e08789031215611ef5575f5ffd5b863567ffffffffffffffff811115611f0b575f5ffd5b611f1789828a01611cbc565b9097509550506020870135611f2b81611df7565b9350611f3a8860408901611d01565b925060c087013567ffffffffffffffff811115611f55575f5ffd5b611f6189828a01611cbc565b979a9699509497509295939492505050565b5f5f60408385031215611f84575f5ffd5b8235611f8f81611df7565b946020939093013593505050565b5f5f5f5f5f5f5f60a0888a031215611fb3575f5ffd5b8735611fbe81611df7565b96506020880135955060408801359450606088013567ffffffffffffffff811115611fe7575f5ffd5b611ff38a828b01611cbc565b909550935050608088013567ffffffffffffffff811115612012575f5ffd5b61201e8a828b01611cbc565b989b979a50959850939692959293505050565b5f5f5f5f5f5f5f5f60e0898b031215612048575f5ffd5b883561205381611df7565b97506020890135965060408901359550606089013560ff81168114612076575f5ffd5b94506080890135935060a0890135925060c089013567ffffffffffffffff81111561209f575f5ffd5b6120ab8b828c01611cbc565b999c989b5096995094979396929594505050565b80356120ca81611df7565b73ffffffffffffffffffffffffffffffffffffffff1682526020818101359083015260408082013590830152606090810135910152565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b61215281876120bf565b845173ffffffffffffffffffffffffffffffffffffffff166080820152602085015160a082015273ffffffffffffffffffffffffffffffffffffffff841660c082015261010060e08201525f6121ad61010083018486612101565b979650505050505050565b818382375f9101908152919050565b5f602082840312156121d7575f5ffd5b5051919050565b6121e881896120bf565b865173ffffffffffffffffffffffffffffffffffffffff166080820152602087015160a082015273ffffffffffffffffffffffffffffffffffffffff861660c08201528460e08201526101406101008201525f612249610140830186611d99565b828103610120840152610f51818587612101565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81036122db576122db61225d565b60010192915050565b5f60ff821660ff81036122db576122db61225d565b5f82518060208501845e5f920191825250919050565b80820281158282048414176106db576106db61225d565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b808201808211156106db576106db61225d565b5f60033d111561237c5760045f5f3e505f5160e01c5b90565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff821117156123e8577f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040525050565b5f60443d10156123fc5790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3d016004823e80513d602482011167ffffffffffffffff8211171561244457505090565b808201805167ffffffffffffffff811115612460575050505090565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3d8501016020828401011115612498575050505090565b6124a76020828501018561237f565b509392505050565b838152604060208201525f610c69604083018486612101565b5f602082840312156124d8575f5ffd5b81517fffffffff00000000000000000000000000000000000000000000000000000000811681146111bc575f5ffdfe4c69466943616c6c207769746e657373294c69466943616c6c2861646472657373206469616d6f6e64416464726573732c62797465733332206469616d6f6e6443616c6c646174614861736829546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e7429a26469706673582212204cdeeb1fa26721c3931286dfce5f0be4e210e6a460cca6ade6d4e2256d5abf0464736f6c634300081d00334c69466943616c6c207769746e657373294c69466943616c6c2861646472657373206469616d6f6e64416464726573732c62797465733332206469616d6f6e6443616c6c646174614861736829546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74295065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5065726d697373696f6e73207065726d69747465642c61646472657373207370656e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e652c";
var isSuperArgs = function (xs) { return xs.length > 1; };
var Permit2Proxy__factory = /** @class */ (function (_super) {
    __extends(Permit2Proxy__factory, _super);
    function Permit2Proxy__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    Permit2Proxy__factory.prototype.deploy = function (_lifiDiamond, _permit2, _owner, overrides) {
        return _super.prototype.deploy.call(this, _lifiDiamond, _permit2, _owner, overrides || {});
    };
    Permit2Proxy__factory.prototype.getDeployTransaction = function (_lifiDiamond, _permit2, _owner, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _lifiDiamond, _permit2, _owner, overrides || {});
    };
    Permit2Proxy__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    Permit2Proxy__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    Permit2Proxy__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    Permit2Proxy__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    Permit2Proxy__factory.bytecode = _bytecode;
    Permit2Proxy__factory.abi = _abi;
    return Permit2Proxy__factory;
}(ethers_1.ContractFactory));
exports.Permit2Proxy__factory = Permit2Proxy__factory;
