"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Permit2Proxy__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_lifiDiamond",
                type: "address",
                internalType: "address",
            },
            {
                name: "_permit2",
                type: "address",
                internalType: "contract ISignatureTransfer",
            },
            {
                name: "_owner",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "receive",
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "LIFI_DIAMOND",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "PERMIT2",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract ISignatureTransfer",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "PERMIT_WITH_WITNESS_TYPEHASH",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "WITNESS_TYPEHASH",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "WITNESS_TYPE_STRING",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "string",
                internalType: "string",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "callDiamondWithEIP2612Signature",
        inputs: [
            {
                name: "tokenAddress",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "deadline",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "signature",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "diamondCalldata",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "callDiamondWithEIP2612Signature",
        inputs: [
            {
                name: "tokenAddress",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "deadline",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "v",
                type: "uint8",
                internalType: "uint8",
            },
            {
                name: "r",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "s",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "diamondCalldata",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "callDiamondWithEIP3009Signature",
        inputs: [
            {
                name: "tokenAddress",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "validAfter",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "validBefore",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "nonce",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "signature",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "diamondCalldata",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "callDiamondWithEIP3009Signature",
        inputs: [
            {
                name: "tokenAddress",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "validAfter",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "validBefore",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "nonce",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "v",
                type: "uint8",
                internalType: "uint8",
            },
            {
                name: "r",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "s",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "diamondCalldata",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "callDiamondWithPermit2",
        inputs: [
            {
                name: "_diamondCalldata",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "_permit",
                type: "tuple",
                internalType: "struct ISignatureTransfer.PermitTransferFrom",
                components: [
                    {
                        name: "permitted",
                        type: "tuple",
                        internalType: "struct ISignatureTransfer.TokenPermissions",
                        components: [
                            {
                                name: "token",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "amount",
                                type: "uint256",
                                internalType: "uint256",
                            },
                        ],
                    },
                    {
                        name: "nonce",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
            {
                name: "_signature",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "callDiamondWithPermit2Witness",
        inputs: [
            {
                name: "_diamondCalldata",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "_signer",
                type: "address",
                internalType: "address",
            },
            {
                name: "_permit",
                type: "tuple",
                internalType: "struct ISignatureTransfer.PermitTransferFrom",
                components: [
                    {
                        name: "permitted",
                        type: "tuple",
                        internalType: "struct ISignatureTransfer.TokenPermissions",
                        components: [
                            {
                                name: "token",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "amount",
                                type: "uint256",
                                internalType: "uint256",
                            },
                        ],
                    },
                    {
                        name: "nonce",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
            {
                name: "_signature",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "cancelOwnershipTransfer",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "confirmOwnershipTransfer",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "getPermit2MsgHash",
        inputs: [
            {
                name: "_diamondCalldata",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "_assetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "_amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "_nonce",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "_deadline",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "msgHash",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "nextNonce",
        inputs: [
            {
                name: "owner",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "nonce",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "nextNonceAfter",
        inputs: [
            {
                name: "owner",
                type: "address",
                internalType: "address",
            },
            {
                name: "start",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "nonce",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "owner",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "pendingOwner",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "transferOwnership",
        inputs: [
            {
                name: "_newOwner",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "withdrawToken",
        inputs: [
            {
                name: "assetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                internalType: "address payable",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "event",
        name: "OwnershipTransferRequested",
        inputs: [
            {
                name: "_from",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "_to",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
            {
                name: "previousOwner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "newOwner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "TokensWithdrawn",
        inputs: [
            {
                name: "assetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address payable",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CallToDiamondFailed",
        inputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes",
            },
        ],
    },
    {
        type: "error",
        name: "ExternalCallFailed",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NewOwnerMustNotBeSelf",
        inputs: [],
    },
    {
        type: "error",
        name: "NoNullOwner",
        inputs: [],
    },
    {
        type: "error",
        name: "NoPendingOwnershipTransfer",
        inputs: [],
    },
    {
        type: "error",
        name: "NotPendingOwner",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAnERC20Token",
        inputs: [],
    },
    {
        type: "error",
        name: "UnAuthorized",
        inputs: [],
    },
];
var _bytecode = "0x60e060405234801561000f575f5ffd5b50604051612a40380380612a4083398101604081905261002e916100d5565b5f80546001600160a01b0319166001600160a01b0383811691909117909155838116608052821660a090815260408051918201905260648082526129dc60208301396040518060a00160405280607b8152602001612961607b913960405160200161009a929190610136565b60408051601f19818403018152919052805160209091012060c05250610152915050565b6001600160a01b03811681146100d2575f5ffd5b50565b5f5f5f606084860312156100e7575f5ffd5b83516100f2816100be565b6020850151909350610103816100be565b6040850151909250610114816100be565b809150509250925092565b5f81518060208401855e5f93019283525090919050565b5f61014a610144838661011f565b8461011f565b949350505050565b60805160a05160c0516127836101de5f395f818161039c015261085101525f81816102f101528181610471015281816107c001528181610abf015261187601525f81816101c0015281816104ee01528181610758015281816109ee01528181610bab01528181610fe0015281816110e501528181611214015281816114ff01526116f501526127835ff3fe60806040526004361061015a575f3560e01c80636afdd850116100bb5780639de7ec6f11610071578063d7a0847311610057578063d7a08473146103be578063e30c3978146103d1578063f2fde38b146103fd575f5ffd5b80639de7ec6f14610378578063aeef37de1461038b575f5ffd5b806386cabde3116100a157806386cabde3146103275780638da5cb5b1461033a57806392c4feb814610365575f5ffd5b80636afdd850146102e05780637200b82914610313575f5ffd5b80631608b803116101105780632c03ae6a116100f65780632c03ae6a1461027b5780634561136e146102ae5780635ebf8b7d146102c1575f5ffd5b80631608b8031461024857806323452b9c14610267575f5ffd5b8063020a1f7d11610140578063020a1f7d146101af5780630cd55abf14610207578063156e215214610234575f5ffd5b80630193b9fc1461016557806301e336671461018e575f5ffd5b3661016157005b5f5ffd5b610178610173366004611d83565b61041c565b6040516101859190611e51565b60405180910390f35b348015610199575f5ffd5b506101ad6101a8366004611e87565b61055f565b005b3480156101ba575f5ffd5b506101e27f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610185565b348015610212575f5ffd5b50610226610221366004611ec5565b6106e4565b604051908152602001610185565b34801561023f575f5ffd5b506101786106f6565b348015610253575f5ffd5b50610226610262366004611ee0565b610712565b348015610272575f5ffd5b506101ad610915565b348015610286575f5ffd5b506102267f94e6068a5a6dd834ff47c5974947ba1045655c61d1d1ee6dd509d2a6e2bed77081565b6101786102bc366004611f4c565b6109de565b3480156102cc575f5ffd5b506102266102db366004611fdf565b610c1f565b3480156102eb575f5ffd5b506101e27f000000000000000000000000000000000000000000000000000000000000000081565b34801561031e575f5ffd5b506101ad610c87565b610178610335366004612009565b610d6b565b348015610345575f5ffd5b505f546101e29073ffffffffffffffffffffffffffffffffffffffff1681565b61017861037336600461209d565b61104f565b61017861038636600461215a565b611156565b348015610396575f5ffd5b506102267f000000000000000000000000000000000000000000000000000000000000000081565b6101786103cc3660046121f8565b611277565b3480156103dc575f5ffd5b506001546101e29073ffffffffffffffffffffffffffffffffffffffff1681565b348015610408575f5ffd5b506101ad610417366004611ec5565b611562565b6040805180820182523081526020808601359082015290517f30f28b7a00000000000000000000000000000000000000000000000000000000815260609173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016916330f28b7a916104ad91889190339089908990600401612308565b5f604051808303815f87803b1580156104c4575f5ffd5b505af11580156104d6573d5f5f3e3d5ffd5b5061051792506104ec9150506020860186611ec5565b7f000000000000000000000000000000000000000000000000000000000000000060208701356116be565b61055586868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506116ef92505050565b9695505050505050565b5f5473ffffffffffffffffffffffffffffffffffffffff1633146105af576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316610666575f8273ffffffffffffffffffffffffffffffffffffffff16826040515f6040518083038185875af1925050503d805f8114610620576040519150601f19603f3d011682016040523d82523d5f602084013e610625565b606091505b5050905080610660576040517f350c20f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610687565b61068773ffffffffffffffffffffffffffffffffffffffff841683836117bd565b6040805173ffffffffffffffffffffffffffffffffffffffff8086168252841660208201529081018290527f6337ed398c0e8467698c581374fdce4db14922df487b5a39483079f5f59b60a49060600160405180910390a1505050565b5f6106f0825f5f611806565b92915050565b6040518060a00160405280607b81526020016126d3607b913981565b6040805180820190915273ffffffffffffffffffffffffffffffffffffffff85168152602081018490525f908161074882611980565b90505f60405180604001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020018b8b6040516107a2929190612378565b604051809103902081525090505f6107b9826119ff565b90506109067f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633644e5156040518163ffffffff1660e01b8152600401602060405180830381865afa158015610827573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061084b9190612387565b604080517f0000000000000000000000000000000000000000000000000000000000000000602080830191909152818301889052306060830152608082018c905260a082018b905260c08083018790528351808403909101815260e0830184528051908201207f19010000000000000000000000000000000000000000000000000000000000006101008401526101028301949094526101228083019490945282518083039094018452610142909101909152815191012090565b9b9a5050505050505050505050565b5f5473ffffffffffffffffffffffffffffffffffffffff163314610965576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015473ffffffffffffffffffffffffffffffffffffffff166109b4576040517f75cdea1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60605f60405180604001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020018989604051610a38929190612378565b604051809103902081525090505f7f94e6068a5a6dd834ff47c5974947ba1045655c61d1d1ee6dd509d2a6e2bed77082604051602001610aa5929190918252805173ffffffffffffffffffffffffffffffffffffffff166020808401919091520151604082015260600190565b6040516020818303038152906040528051906020012090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663137c29fe8760405180604001604052803073ffffffffffffffffffffffffffffffffffffffff1681526020018a5f01602001358152508a856040518060a00160405280607b81526020016126d3607b91398b8b6040518863ffffffff1660e01b8152600401610b6a979695949392919061239e565b5f604051808303815f87803b158015610b81575f5ffd5b505af1158015610b93573d5f5f3e3d5ffd5b50610bd49250610ba99150506020880188611ec5565b7f000000000000000000000000000000000000000000000000000000000000000060208901356116be565b610c1289898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506116ef92505050565b9998505050505050505050565b5f600882901c827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0160ff821601610c655781610c5a8161244a565b9250505f9050610c73565b80610c6f816124a4565b9150505b610c7e858383611806565b95945050505050565b60015473ffffffffffffffffffffffffffffffffffffffff16338114610cd9576040517f1853971c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35f805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b6040517f9fd5a6cf00000000000000000000000000000000000000000000000000000000815260609073ffffffffffffffffffffffffffffffffffffffff891690639fd5a6cf90610dca90339030908c908c908c908c906004016124b9565b5f604051808303815f87803b158015610de1575f5ffd5b505af1925050508015610df2575060015b610fce57610dfe612510565b806308c379a003610efa5750610e12612599565b80610e1d5750610efc565b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152336004820152306024820152889073ffffffffffffffffffffffffffffffffffffffff8b169063dd62ed3e90604401602060405180830381865afa158015610e8d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610eb19190612387565b1015610ef457806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eeb9190611e51565b60405180910390fd5b50610fce565b505b3d808015610f25576040519150601f19603f3d011682016040523d82523d5f602084013e610f2a565b606091505b506040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152336004820152306024820152889073ffffffffffffffffffffffffffffffffffffffff8b169063dd62ed3e90604401602060405180830381865afa158015610f9b573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fbf9190612387565b1015610ef457610ef481611a5f565b610fda8833308a611a69565b611005887f0000000000000000000000000000000000000000000000000000000000000000896116be565b61104383838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506116ef92505050565b98975050505050505050565b6040517fcf09299500000000000000000000000000000000000000000000000000000000815260609073ffffffffffffffffffffffffffffffffffffffff8b169063cf092995906110b290339030908e908e908e908e908e908e90600401612659565b5f604051808303815f87803b1580156110c9575f5ffd5b505af11580156110db573d5f5f3e3d5ffd5b5050505061110a8a7f00000000000000000000000000000000000000000000000000000000000000008b6116be565b61114883838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506116ef92505050565b9a9950505050505050505050565b6040517fe3ee160e000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018a9052606481018990526084810188905260a4810187905260ff861660c482015260e48101859052610104810184905260609073ffffffffffffffffffffffffffffffffffffffff8c169063e3ee160e90610124015f604051808303815f87803b1580156111f8575f5ffd5b505af115801561120a573d5f5f3e3d5ffd5b505050506112398b7f00000000000000000000000000000000000000000000000000000000000000008c6116be565b61090683838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506116ef92505050565b6040517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018890526064810187905260ff8616608482015260a4810185905260c4810184905260609073ffffffffffffffffffffffffffffffffffffffff8a169063d505accf9060e4015f604051808303815f87803b158015611309575f5ffd5b505af192505050801561131a575060015b6114ed57611326612510565b806308c379a003611419575061133a612599565b80611345575061141b565b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152336004820152306024820152899073ffffffffffffffffffffffffffffffffffffffff8c169063dd62ed3e90604401602060405180830381865afa1580156113b5573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113d99190612387565b101561141357806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eeb9190611e51565b506114ed565b505b3d808015611444576040519150601f19603f3d011682016040523d82523d5f602084013e611449565b606091505b506040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152336004820152306024820152899073ffffffffffffffffffffffffffffffffffffffff8c169063dd62ed3e90604401602060405180830381865afa1580156114ba573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114de9190612387565b10156114135761141381611a5f565b6114f98933308b611a69565b611524897f00000000000000000000000000000000000000000000000000000000000000008a6116be565b610c1283838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506116ef92505050565b5f5473ffffffffffffffffffffffffffffffffffffffff1633146115b2576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81166115ff576040517f1beca37400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff82160361164e576040517fbf1ea9fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278905f90a350565b6116ea8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611b2b565b505050565b60605f5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16348560405161173991906126bc565b5f6040518083038185875af1925050503d805f8114611773576040519150601f19603f3d011682016040523d82523d5f602084013e611778565b606091505b5091509150816117b657806040517f0e971f12000000000000000000000000000000000000000000000000000000008152600401610eeb9190611e51565b9392505050565b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166117fd576390b8ec185f526004601cfd5b5f603452505050565b5f5b6040517f4fe02b4400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301527effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff851660248301525f917f000000000000000000000000000000000000000000000000000000000000000090911690634fe02b4490604401602060405180830381865afa1580156118bd573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118e19190612387565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810361191e576119138461244a565b93505f925050611808565b60ff83161561192d5760ff83161c5b8060011660010361194b5760011c611944836124a4565b925061192d565b600884901b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff84161795945050505050565b80516020808301516040515f936119e2937f618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a19391920192835273ffffffffffffffffffffffffffffffffffffffff919091166020830152604082015260600190565b604051602081830303815290604052805190602001209050919050565b5f7f94e6068a5a6dd834ff47c5974947ba1045655c61d1d1ee6dd509d2a6e2bed770826040516020016119e2929190918252805173ffffffffffffffffffffffffffffffffffffffff166020808401919091520151604082015260600190565b8051602082018181fd5b73ffffffffffffffffffffffffffffffffffffffff8416611ab6576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611b03576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b2573ffffffffffffffffffffffffffffffffffffffff8516848484611c52565b50505050565b73ffffffffffffffffffffffffffffffffffffffff841615611b255773ffffffffffffffffffffffffffffffffffffffff8316611b94576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611c07573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c2b9190612387565b1015611b2557611b2573ffffffffffffffffffffffffffffffffffffffff85168483611caa565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f51141716611c9d57637939f4245f526004601cfd5b5f60605260405250505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f511417166117fd575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f511417166117fd57633e3f8f735f526004601cfd5b5f5f83601f840112611d38575f5ffd5b50813567ffffffffffffffff811115611d4f575f5ffd5b602083019150836020828501011115611d66575f5ffd5b9250929050565b5f60808284031215611d7d575f5ffd5b50919050565b5f5f5f5f5f60c08688031215611d97575f5ffd5b853567ffffffffffffffff811115611dad575f5ffd5b611db988828901611d28565b9096509450611dcd90508760208801611d6d565b925060a086013567ffffffffffffffff811115611de8575f5ffd5b611df488828901611d28565b969995985093965092949392505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081525f6117b66020830184611e05565b73ffffffffffffffffffffffffffffffffffffffff81168114611e84575f5ffd5b50565b5f5f5f60608486031215611e99575f5ffd5b8335611ea481611e63565b92506020840135611eb481611e63565b929592945050506040919091013590565b5f60208284031215611ed5575f5ffd5b81356117b681611e63565b5f5f5f5f5f5f60a08789031215611ef5575f5ffd5b863567ffffffffffffffff811115611f0b575f5ffd5b611f1789828a01611d28565b9097509550506020870135611f2b81611e63565b95989497509495604081013595506060810135946080909101359350915050565b5f5f5f5f5f5f60e08789031215611f61575f5ffd5b863567ffffffffffffffff811115611f77575f5ffd5b611f8389828a01611d28565b9097509550506020870135611f9781611e63565b9350611fa68860408901611d6d565b925060c087013567ffffffffffffffff811115611fc1575f5ffd5b611fcd89828a01611d28565b979a9699509497509295939492505050565b5f5f60408385031215611ff0575f5ffd5b8235611ffb81611e63565b946020939093013593505050565b5f5f5f5f5f5f5f60a0888a03121561201f575f5ffd5b873561202a81611e63565b96506020880135955060408801359450606088013567ffffffffffffffff811115612053575f5ffd5b61205f8a828b01611d28565b909550935050608088013567ffffffffffffffff81111561207e575f5ffd5b61208a8a828b01611d28565b989b979a50959850939692959293505050565b5f5f5f5f5f5f5f5f5f60e08a8c0312156120b5575f5ffd5b89356120c081611e63565b985060208a0135975060408a0135965060608a0135955060808a0135945060a08a013567ffffffffffffffff8111156120f7575f5ffd5b6121038c828d01611d28565b90955093505060c08a013567ffffffffffffffff811115612122575f5ffd5b61212e8c828d01611d28565b915080935050809150509295985092959850929598565b803560ff81168114612155575f5ffd5b919050565b5f5f5f5f5f5f5f5f5f5f6101208b8d031215612174575f5ffd5b8a3561217f81611e63565b995060208b0135985060408b0135975060608b0135965060808b013595506121a960a08c01612145565b945060c08b0135935060e08b013592506101008b013567ffffffffffffffff8111156121d3575f5ffd5b6121df8d828e01611d28565b915080935050809150509295989b9194979a5092959850565b5f5f5f5f5f5f5f5f60e0898b03121561220f575f5ffd5b883561221a81611e63565b9750602089013596506040890135955061223660608a01612145565b94506080890135935060a0890135925060c089013567ffffffffffffffff81111561225f575f5ffd5b61226b8b828c01611d28565b999c989b5096995094979396929594505050565b803561228a81611e63565b73ffffffffffffffffffffffffffffffffffffffff1682526020818101359083015260408082013590830152606090810135910152565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b612312818761227f565b845173ffffffffffffffffffffffffffffffffffffffff166080820152602085015160a082015273ffffffffffffffffffffffffffffffffffffffff841660c082015261010060e08201525f61236d610100830184866122c1565b979650505050505050565b818382375f9101908152919050565b5f60208284031215612397575f5ffd5b5051919050565b6123a8818961227f565b865173ffffffffffffffffffffffffffffffffffffffff166080820152602087015160a082015273ffffffffffffffffffffffffffffffffffffffff861660c08201528460e08201526101406101008201525f612409610140830186611e05565b8281036101208401526111488185876122c1565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810361249b5761249b61241d565b60010192915050565b5f60ff821660ff810361249b5761249b61241d565b73ffffffffffffffffffffffffffffffffffffffff8716815273ffffffffffffffffffffffffffffffffffffffff8616602082015284604082015283606082015260a060808201525f61104360a0830184866122c1565b5f60033d11156125265760045f5f3e505f5160e01c5b90565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715612592577f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040525050565b5f60443d10156125a65790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3d016004823e80513d602482011167ffffffffffffffff821117156125ee57505090565b808201805167ffffffffffffffff81111561260a575050505090565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3d8501016020828401011115612642575050505090565b61265160208285010185612529565b509392505050565b73ffffffffffffffffffffffffffffffffffffffff8916815273ffffffffffffffffffffffffffffffffffffffff881660208201528660408201528560608201528460808201528360a082015260e060c08201525f61114860e0830184866122c1565b5f82518060208501845e5f92019182525091905056fe4c69466943616c6c207769746e657373294c69466943616c6c2861646472657373206469616d6f6e64416464726573732c62797465733332206469616d6f6e6443616c6c646174614861736829546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e7429a26469706673582212205dbd76366b6c0f20b1cc15845887bf5f11b2399adb38346765e1afe25c414ceb64736f6c634300081d00334c69466943616c6c207769746e657373294c69466943616c6c2861646472657373206469616d6f6e64416464726573732c62797465733332206469616d6f6e6443616c6c646174614861736829546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74295065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5065726d697373696f6e73207065726d69747465642c61646472657373207370656e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e652c";
var isSuperArgs = function (xs) { return xs.length > 1; };
var Permit2Proxy__factory = /** @class */ (function (_super) {
    __extends(Permit2Proxy__factory, _super);
    function Permit2Proxy__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    Permit2Proxy__factory.prototype.deploy = function (_lifiDiamond, _permit2, _owner, overrides) {
        return _super.prototype.deploy.call(this, _lifiDiamond, _permit2, _owner, overrides || {});
    };
    Permit2Proxy__factory.prototype.getDeployTransaction = function (_lifiDiamond, _permit2, _owner, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _lifiDiamond, _permit2, _owner, overrides || {});
    };
    Permit2Proxy__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    Permit2Proxy__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    Permit2Proxy__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    Permit2Proxy__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    Permit2Proxy__factory.bytecode = _bytecode;
    Permit2Proxy__factory.abi = _abi;
    return Permit2Proxy__factory;
}(ethers_1.ContractFactory));
exports.Permit2Proxy__factory = Permit2Proxy__factory;
