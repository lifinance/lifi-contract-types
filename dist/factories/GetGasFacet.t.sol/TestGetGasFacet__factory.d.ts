import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { TestGetGasFacet, TestGetGasFacetInterface } from "../../GetGasFacet.t.sol/TestGetGasFacet";
declare type TestGetGasFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TestGetGasFacet__factory extends ContractFactory {
    constructor(...args: TestGetGasFacetConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<TestGetGasFacet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): TestGetGasFacet;
    connect(signer: Signer): TestGetGasFacet__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50612a14806100206000396000f3fe60806040526004361061003f5760003560e01c80633461c14414610044578063536db26614610059578063c561c14814610079578063fd750f8414610099575b600080fd5b61005761005236600461240a565b6100ac565b005b34801561006557600080fd5b506100576100743660046124a4565b6102af565b34801561008557600080fd5b506100576100943660046124bf565b6102bb565b6100576100a7366004612501565b610339565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610127576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006101383447612565565b905085806101000151610177576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8661019a8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101d1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361020f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361024c576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61026188600001518960c00151898933610533565b60c089015261026f8861067b565b50479050600082821161028357600061028d565b61028d8383612565565b905080156102a1576102a1600085836108b6565b505060009092555050505050565b6102b8816108ec565b50565b6102b8817fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f6020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016103b4576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006103c53447612565565b90508380610100015115610405576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846104288160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561045f576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361049d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104da576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104ec86608001518760c001516109d9565b6104f58661067b565b504790506000828211610509576000610513565b6105138383612565565b9050801561052757610527600085836108b6565b50506000909255505050565b60008280820361056f576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000858561057e600185612565565b81811061058d5761058d612578565b905060200281019061059f91906125a7565b6105b09060808101906060016124a4565b905060006105bd82610b4f565b905073ffffffffffffffffffffffffffffffffffffffff82166105e7576105e43482612565565b90505b60006105f38888610c08565b90506105ff8888610d14565b61060c8a89898985610d75565b60008261061885610b4f565b6106229190612565565b90508981101561066d576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b60007fddb1a97e204589b19d70796e7a3363c86670116d11313290b7a7eb064a8f3da1604080518082018252601581527f534552564943455f4645455f434f4c4c4543544f520000000000000000000000602082015290516106dd9190612609565b90815260405190819003602001902054608083015173ffffffffffffffffffffffffffffffffffffffff909116915061072a9073ffffffffffffffffffffffffffffffffffffffff161590565b156107c75760c082015160a08301516040517fdef656690000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff91821660248201529083169163def65669916044016000604051808303818588803b1580156107a957600080fd5b505af11580156107bd573d6000803e3d6000fd5b505050505061087b565b6107da8260800151828460c00151611127565b608082015160c083015160a08401516040517f04204ceb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152602481019290925282166044820152908216906304204ceb90606401600060405180830381600087803b15801561086257600080fd5b505af1158015610876573d6000803e3d6000fd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1826040516108aa9190612665565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff8316156108e2576108dd838383611272565b505050565b6108dd82826113a1565b6108f5816114cb565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602081905260409091205460ff1615610949575050565b73ffffffffffffffffffffffffffffffffffffffff909116600081815260208381526040822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091556002909401805494850181558252902090910180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b73ffffffffffffffffffffffffffffffffffffffff8216610a325780341015610a2e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610a6c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afd9190612778565b905081811015610b43576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610664565b6108dd83333085611569565b600073ffffffffffffffffffffffffffffffffffffffff821615610c00576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610bd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfb9190612778565b610c02565b475b92915050565b60608160008167ffffffffffffffff811115610c2657610c2661217c565b604051908082528060200260200182016040528015610c4f578160200160208202803683370190505b5090506000805b83811015610d0957868682818110610c7057610c70612578565b9050602002810190610c8291906125a7565b610c939060808101906060016124a4565b9150610c9e82610b4f565b838281518110610cb057610cb0612578565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610d015734838281518110610ce957610ce9612578565b60200260200101818151610cfd9190612565565b9052505b600101610c56565b509095945050505050565b60005b818110156108dd576000838383818110610d3357610d33612578565b9050602002810190610d4591906125a7565b610d4e90612791565b90508060c0015115610d6c57610d6c816040015182608001516109d9565b50600101610d17565b8383838382600181146110425760008585610d91600185612565565b818110610da057610da0612578565b9050602002810190610db291906125a7565b610dc39060808101906060016124a4565b9050600089815b81811015610f6e57368d8d83818110610de557610de5612578565b9050602002810190610df791906125a7565b9050610e26610e0c60608301604084016124a4565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610e895750610e89610e3f60408301602084016124a4565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610ea05750610ea0610e3f60208301836124a4565b8015610f255750610f25610eb760a0830183612836565b610ec6916004916000916128a2565b610ecf916128cc565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610f5b576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f658f82611783565b50600101610dca565b505060005b610f7e600185612565565b81101561103a576000888883818110610f9957610f99612578565b9050602002810190610fab91906125a7565b610fbc9060808101906060016124a4565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146110315785828151811061100357611003612578565b602002602001015161101482610b4f565b61101e9190612565565b92508215611031576110318188856108b6565b50600101610f73565b50505061111b565b8760005b8181101561111857368b8b8381811061106157611061612578565b905060200281019061107391906125a7565b9050611088610e0c60608301604084016124a4565b806110a157506110a1610e3f60408301602084016124a4565b80156110b857506110b8610e3f60208301836124a4565b80156110cf57506110cf610eb760a0830183612836565b611105576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61110f8d82611783565b50600101611046565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661114757505050565b73ffffffffffffffffffffffffffffffffffffffff8216611194576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa15801561120a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122e9190612778565b90508181101561126c5761126c8484611267847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612565565b611a99565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166112bf576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa15801561132c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113509190612778565b905080821115611396576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610664565b61126c848484611c15565b73ffffffffffffffffffffffffffffffffffffffff82166113ee576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611431576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610664565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461148b576040519150601f19603f3d011682016040523d82523d6000602084013e611490565b606091505b50509050806108dd576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116611518576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163b6000036102b8576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff84166115b6576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611603576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015611674573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116989190612778565b90506116a682868686611c6b565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173a9190612778565b6117449190612565565b1461177b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b61179961179360208301836124a4565b3b151590565b6117cf576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080810135600081900361180f576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611824610e0c60608501604086016124a4565b61182f576000611835565b82608001355b9050600061185161184c60608601604087016124a4565b610b4f565b9050600061186861184c60808701606088016124a4565b90508260000361189f5761189f61188560608701604088016124a4565b61189560408801602089016124a4565b8760800135611127565b84608001358210156118ea576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610664565b6000806118fa60208801886124a4565b73ffffffffffffffffffffffffffffffffffffffff168561191e60a08a018a612836565b60405161192c929190612914565b60006040518083038185875af1925050503d8060008114611969576040519150601f19603f3d011682016040523d82523d6000602084013e61196e565b606091505b5091509150816119b957600061198382611cc9565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106649190612924565b60006119ce61184c60808a0160608b016124a4565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896119ff60208b018b6124a4565b611a0f60608c0160408d016124a4565b611a1f60808d0160608e016124a4565b8c60800135898711611a315786611a3b565b611a3b8a88612565565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611b10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b349190612778565b611b3e9190612937565b60405173ffffffffffffffffffffffffffffffffffffffff851660248201526044810182905290915061126c9085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611d47565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526108dd9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611b93565b60405173ffffffffffffffffffffffffffffffffffffffff8085166024830152831660448201526064810182905261126c9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611b93565b6060604482511015611d0e57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611d2a6004808551611d229190612565565b859190611e53565b905080806020019051810190611d40919061294a565b9392505050565b6000611da9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611f6d9092919063ffffffff16565b8051909150156108dd5780806020019051810190611dc791906129c1565b6108dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610664565b606081611e6181601f612937565b1015611e99576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611ea38284612937565b84511015611edd576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611efc5760405191506000825260208201604052611f64565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611f35578051835260209283019201611f1d565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6060611f7c8484600085611f84565b949350505050565b606082471015612016576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610664565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161203f9190612609565b60006040518083038185875af1925050503d806000811461207c576040519150601f19603f3d011682016040523d82523d6000602084013e612081565b606091505b50915091506120928783838761209d565b979650505050505050565b6060831561213357825160000361212c5773ffffffffffffffffffffffffffffffffffffffff85163b61212c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610664565b5081611f7c565b611f7c83838151156121485781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106649190612924565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156121cf576121cf61217c565b60405290565b60405160e0810167ffffffffffffffff811182821017156121cf576121cf61217c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561223f5761223f61217c565b604052919050565b600067ffffffffffffffff8211156122615761226161217c565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261229e57600080fd5b81356122b16122ac82612247565b6121f8565b8181528460208386010111156122c657600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461230757600080fd5b919050565b80151581146102b857600080fd5b80356123078161230c565b6000610140828403121561233857600080fd5b6123406121ab565b905081358152602082013567ffffffffffffffff8082111561236157600080fd5b61236d8583860161228d565b6020840152604084013591508082111561238657600080fd5b506123938482850161228d565b6040830152506123a5606083016122e3565b60608201526123b6608083016122e3565b60808201526123c760a083016122e3565b60a082015260c082013560c082015260e082013560e08201526101006123ee81840161231a565b9082015261012061240083820161231a565b9082015292915050565b60008060006040848603121561241f57600080fd5b833567ffffffffffffffff8082111561243757600080fd5b61244387838801612325565b9450602086013591508082111561245957600080fd5b818601915086601f83011261246d57600080fd5b81358181111561247c57600080fd5b8760208260051b850101111561249157600080fd5b6020830194508093505050509250925092565b6000602082840312156124b657600080fd5b611d40826122e3565b6000602082840312156124d157600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611d4057600080fd5b60006020828403121561251357600080fd5b813567ffffffffffffffff81111561252a57600080fd5b611f7c84828501612325565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610c0257610c02612536565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126125db57600080fd5b9190910192915050565b60005b838110156126005781810151838201526020016125e8565b50506000910152565b600082516125db8184602087016125e5565b600081518084526126338160208601602086016125e5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152815160208201526000602083015161014080604085015261268e61016085018361261b565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526126c9838261261b565b92505060608501516126f3608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206127668187018315159052565b90950151151593019290925250919050565b60006020828403121561278a57600080fd5b5051919050565b600060e082360312156127a357600080fd5b6127ab6121d5565b6127b4836122e3565b81526127c2602084016122e3565b60208201526127d3604084016122e3565b60408201526127e4606084016122e3565b60608201526080830135608082015260a083013567ffffffffffffffff81111561280d57600080fd5b6128193682860161228d565b60a08301525061282b60c0840161231a565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261286b57600080fd5b83018035915067ffffffffffffffff82111561288657600080fd5b60200191503681900382131561289b57600080fd5b9250929050565b600080858511156128b257600080fd5b838611156128bf57600080fd5b5050820193919092039150565b7fffffffff00000000000000000000000000000000000000000000000000000000813581811691600485101561290c5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b602081526000611d40602083018461261b565b80820180821115610c0257610c02612536565b60006020828403121561295c57600080fd5b815167ffffffffffffffff81111561297357600080fd5b8201601f8101841361298457600080fd5b80516129926122ac82612247565b8181528560208385010111156129a757600080fd5b6129b88260208301602086016125e5565b95945050505050565b6000602082840312156129d357600080fd5b8151611d408161230c56fea2646970667358221220beb9ab85ca751dd060cac70b79dd627648eef6c647a3a4b163f8bb6796230e0c64736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "CannotBridgeToSameNetwork";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ContractCallNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "minAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "receivedAmount";
            readonly type: "uint256";
        }];
        readonly name: "CumulativeSlippageTooHigh";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InformationMismatch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "required";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidContract";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidReceiver";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeAssetTransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapDataProvided";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapFromZeroBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoTransferToNullAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAValidSpender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ReentrancyError";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOutOfBounds";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOverflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferRecovered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly indexed: false;
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "bridgeData";
            readonly type: "tuple";
        }];
        readonly name: "LiFiTransferStarted";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_dex";
            readonly type: "address";
        }];
        readonly name: "addDex";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "_signature";
            readonly type: "bytes4";
        }];
        readonly name: "setFunctionApprovalBySignature";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaGetGas";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }];
        readonly name: "swapAndStartBridgeTokensViaGetGas";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): TestGetGasFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): TestGetGasFacet;
}
export {};
