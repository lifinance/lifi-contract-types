import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { HopFacetOptimized, HopFacetOptimizedInterface } from "../HopFacetOptimized";
declare type HopFacetOptimizedConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class HopFacetOptimized__factory extends ContractFactory {
    constructor(...args: HopFacetOptimizedConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<HopFacetOptimized>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): HopFacetOptimized;
    connect(signer: Signer): HopFacetOptimized__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b506132f3806100206000396000f3fe6080604052600436106100965760003560e01c806342afe79a116100695780638d03f4561161004e5780638d03f45614610129578063ca360ae01461013c578063d40e64cc1461014f57600080fd5b806342afe79a1461010357806355c99cd81461011657600080fd5b806303add8c31461009b5780630680ded4146100b0578063082bc047146100d05780630b4cb5d8146100e3575b600080fd5b6100ae6100a936600461286a565b610162565b005b3480156100bc57600080fd5b506100ae6100cb36600461290d565b6102bf565b6100ae6100de36600461286a565b610362565b3480156100ef57600080fd5b506100ae6100fe36600461286a565b6103c7565b6100ae610111366004612b0b565b610508565b6100ae61012436600461286a565b610672565b6100ae610137366004612b0b565b610749565b6100ae61014a366004612b0b565b6107d8565b6100ae61015d366004612b0b565b6108a9565b61017260c0820160a08301612c50565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f56101a061010084013560c0860135612c9c565b60e08501356101b560c0870160a08801612c50565b8660c00135866060013587608001358860c00160208101906101d79190612c50565b60405160e089811b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482019790975273ffffffffffffffffffffffffffffffffffffffff958616602482015260448101949094526064840192909252608483015290911660a48201529085013560c482015260e4015b6000604051808303818588803b15801561026b57600080fd5b505af115801561027f573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1826040516102b39190612d5c565b60405180910390a15050565b6102c76109d6565b60005b8381101561035b576103498383838181106102e7576102e7612eaf565b90506020020160208101906102fc9190612c50565b86868481811061030e5761030e612eaf565b90506020020160208101906103239190612c50565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610a4b565b8061035381612ede565b9150506102ca565b5050505050565b61038161037560a0840160808501612c50565b33308560c00135610b93565b61039160c0820160a08301612c50565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f561010083013560e08501356101b560c0870160a08801612c50565b6103da61037560a0840160808501612c50565b6103ea60c0820160a08301612c50565b73ffffffffffffffffffffffffffffffffffffffff1663eea0d7b260e084013561041a60c0860160a08701612c50565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff909116602483015260c08601356044830152843560648301526020850135608483015284013560a4820152606084013560c4820152608084013560e482015261010401600060405180830381600087803b1580156104c157600080fd5b505af11580156104d5573d6000803e3d6000fd5b505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1826040516102b39190612d5c565b61052384600001518560c00151858533866101000135610dad565b60c08086019190915261053b90820160a08301612c50565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f58261010001358660e001518760a001518860c00151866060013587608001358860c00160208101906105889190612c50565b60405160e089811b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482019790975273ffffffffffffffffffffffffffffffffffffffff958616602482015260448101949094526064840192909252608483015290911660a48201529085013560c482015260e4015b6000604051808303818588803b15801561061c57600080fd5b505af1158015610630573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1846040516106649190612f84565b60405180910390a150505050565b61068260c0820160a08301612c50565b73ffffffffffffffffffffffffffffffffffffffff1663eea0d7b260c0840180359060e0860135906106b79060a08801612c50565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff909116602483015260c08701356044830152853560648301526020860135608483015285013560a4820152606085013560c4820152608085013560e482015261010401610252565b61076484600001518560c00151858533866101000135610dad565b60c08086019190915261077c90820160a08301612c50565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f58261010001358660c001516107ac9190612c9c565b8660e001518760a001518860c00151866060013587608001358860c00160208101906105889190612c50565b6107ed84600001518560c00151858533610f4d565b60c08086019190915261080590820160a08301612c50565b60c085015160e086015160a0870151604080517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019390935273ffffffffffffffffffffffffffffffffffffffff918216602484015260448301849052853560648401526020860135608484015285013560a4830152606085013560c4830152608085013560e4830152929092169163eea0d7b2919061010401610603565b6108be84600001518560c00151858533610f4d565b60c0808601919091526108d690820160a08301612c50565b60e085015160a086015160c0870151604080517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019490945273ffffffffffffffffffffffffffffffffffffffff92831660248501526044840191909152843560648401526020850135608484015284013560a4830152606084013560c4830152608084013560e4830152919091169063eea0d7b29061010401600060405180830381600087803b15801561098f57600080fd5b505af11580156109a3573d6000803e3d6000fd5b505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1846040516106649190612f84565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314610a49576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b73ffffffffffffffffffffffffffffffffffffffff8316610a6b57505050565b73ffffffffffffffffffffffffffffffffffffffff8216610ab8576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015610b2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b519190613096565b1015610b8e57610b6383836000611090565b610b8e83837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611090565b505050565b73ffffffffffffffffffffffffffffffffffffffff8416610be0576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610c2d576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610c9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc29190613096565b9050610cd082868686611290565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610d40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d649190613096565b610d6e91906130af565b14610da5576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b600083808203610de9576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008686610df86001856130af565b818110610e0757610e07612eaf565b9050602002810190610e1991906130c2565b610e2a906080810190606001612c50565b90506000610e37826112f4565b905073ffffffffffffffffffffffffffffffffffffffff8216610e6157610e5e34826130af565b90505b6000610e6d89896113ad565b9050610e7989896114b9565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff89166020820152908101879052610eb4818b8b85611526565b600083610ec0866112f4565b610eca91906130af565b905073ffffffffffffffffffffffffffffffffffffffff8516610ef457610ef188826130af565b90505b8b811015610f3d576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d9052602481018290526044015b60405180910390fd5b9c9b505050505050505050505050565b600082808203610f89576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610f986001856130af565b818110610fa757610fa7612eaf565b9050602002810190610fb991906130c2565b610fca906080810190606001612c50565b90506000610fd7826112f4565b905073ffffffffffffffffffffffffffffffffffffffff821661100157610ffe34826130af565b90505b600061100d88886113ad565b905061101988886114b9565b6110268a8989898561191c565b600082611032856112f4565b61103c91906130af565b905089811015611082576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b905260248101829052604401610f34565b9a9950505050505050505050565b80158061113057506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa15801561110a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112e9190613096565b155b6111bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610f34565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610b8e9084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611be5565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526112ee9085907f23b872dd000000000000000000000000000000000000000000000000000000009060840161120e565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff8216156113a5576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa15801561137c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a09190613096565b6113a7565b475b92915050565b60608160008167ffffffffffffffff8111156113cb576113cb612979565b6040519080825280602002602001820160405280156113f4578160200160208202803683370190505b5090506000805b838110156114ae5786868281811061141557611415612eaf565b905060200281019061142791906130c2565b611438906080810190606001612c50565b9150611443826112f4565b83828151811061145557611455612eaf565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff82166114a6573483828151811061148e5761148e612eaf565b602002602001018181516114a291906130af565b9052505b6001016113fb565b509095945050505050565b60005b81811015610b8e57368383838181106114d7576114d7612eaf565b90506020028101906114e991906130c2565b90506114fb60e0820160c08301613100565b1561151d5761151d6115136060830160408401612c50565b8260800135611cf1565b506001016114bc565b602084015160408501518491849184908360018114611835576000868661154e6001856130af565b81811061155d5761155d612eaf565b905060200281019061156f91906130c2565b611580906080810190606001612c50565b9050600089815b8181101561172d57368d8d838181106115a2576115a2612eaf565b90506020028101906115b491906130c2565b90506115e36115c96060830160408401612c50565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061164657506116466115fc6040830160208401612c50565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561165d575061165d6115fc6020830183612c50565b80156116e257506116e261167460a083018361311d565b61168391600491600091613182565b61168c916131ac565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611718576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e516117249082611e67565b50600101611587565b505060005b61173d6001856130af565b81101561182d57600089898381811061175857611758612eaf565b905060200281019061176a91906130c2565b61177b906080810190606001612c50565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611824578682815181106117c2576117c2612eaf565b60200260200101516117d3826112f4565b6117dd91906130af565b9250600073ffffffffffffffffffffffffffffffffffffffff821615611804576000611806565b865b9050831561182257611822828a61181d84886130af565b61217d565b505b50600101611732565b505050611910565b8760005b8181101561190d57368b8b8381811061185457611854612eaf565b905060200281019061186691906130c2565b905061187b6115c96060830160408401612c50565b8061189457506118946115fc6040830160208401612c50565b80156118ab57506118ab6115fc6020830183612c50565b80156118c257506118c261167460a083018361311d565b6118f8576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c516119049082611e67565b50600101611839565b50505b50505050505050505050565b838383838260018114611b0f57600085856119386001856130af565b81811061194757611947612eaf565b905060200281019061195991906130c2565b61196a906080810190606001612c50565b9050600089815b81811015611a4357368d8d8381811061198c5761198c612eaf565b905060200281019061199e91906130c2565b90506119b36115c96060830160408401612c50565b806119cc57506119cc6115fc6040830160208401612c50565b80156119e357506119e36115fc6020830183612c50565b80156119fa57506119fa61167460a083018361311d565b611a30576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611a3a8f82611e67565b50600101611971565b505060005b611a536001856130af565b81101561182d576000888883818110611a6e57611a6e612eaf565b9050602002810190611a8091906130c2565b611a91906080810190606001612c50565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b0657858281518110611ad857611ad8612eaf565b6020026020010151611ae9826112f4565b611af391906130af565b92508215611b0657611b0681888561217d565b50600101611a48565b8760005b8181101561190d57368b8b83818110611b2e57611b2e612eaf565b9050602002810190611b4091906130c2565b9050611b556115c96060830160408401612c50565b80611b6e5750611b6e6115fc6040830160208401612c50565b8015611b855750611b856115fc6020830183612c50565b8015611b9c5750611b9c61167460a083018361311d565b611bd2576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611bdc8d82611e67565b50600101611b13565b6000611c47826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166121ae9092919063ffffffff16565b805190915015610b8e5780806020019051810190611c6591906131f4565b610b8e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610f34565b80600003611d2b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611d845780341015611d80576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015611df1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e159190613096565b905081811015611e5b576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610f34565b610b8e83333085610b93565b611e7d611e776020830183612c50565b3b151590565b611eb3576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611ef3576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611f086115c96060850160408601612c50565b611f13576000611f19565b82608001355b90506000611f35611f306060860160408701612c50565b6112f4565b90506000611f4c611f306080870160608801612c50565b905082600003611f8357611f83611f696060870160408801612c50565b611f796040880160208901612c50565b8760800135610a4b565b8460800135821015611fce576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610f34565b600080611fde6020880188612c50565b73ffffffffffffffffffffffffffffffffffffffff168561200260a08a018a61311d565b604051612010929190613211565b60006040518083038185875af1925050503d806000811461204d576040519150601f19603f3d011682016040523d82523d6000602084013e612052565b606091505b50915091508161209d576000612067826121c5565b9050806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f349190613221565b60006120b2611f3060808a0160608b01612c50565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896120e360208b018b612c50565b6120f360608c0160408d01612c50565b61210360808d0160608e01612c50565b8c60800135898711612115578661211f565b61211f8a886130af565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316156121a457610b8e838383612243565b610b8e82826123bf565b60606121bd84846000856124e9565b949350505050565b606060448251101561220a57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000612226600480855161221e91906130af565b859190612602565b90508080602001905181019061223c9190613234565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8316612290576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166122dd576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa15801561234a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236e9190613096565b9050808211156123b4576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610f34565b6112ee84848461271c565b73ffffffffffffffffffffffffffffffffffffffff821661240c576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4781111561244f576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610f34565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146124a9576040519150601f19603f3d011682016040523d82523d6000602084013e6124ae565b606091505b5050905080610b8e576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608247101561257b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610f34565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516125a491906132ab565b60006040518083038185875af1925050503d80600081146125e1576040519150601f19603f3d011682016040523d82523d6000602084013e6125e6565b606091505b50915091506125f787838387612772565b979650505050505050565b60608161261081601f612c9c565b1015612648576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6126528284612c9c565b8451101561268c576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060821580156126ab5760405191506000825260208201604052612713565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156126e45780518352602092830192016126cc565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610b8e9084907fa9059cbb000000000000000000000000000000000000000000000000000000009060640161120e565b606083156128085782516000036128015773ffffffffffffffffffffffffffffffffffffffff85163b612801576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610f34565b50816121bd565b6121bd838381511561281d5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f349190613221565b6000610120828403121561286457600080fd5b50919050565b60008061014080848603121561287f57600080fd5b833567ffffffffffffffff81111561289657600080fd5b84018086038213156128a757600080fd5b92506128b890508460208501612851565b90509250929050565b60008083601f8401126128d357600080fd5b50813567ffffffffffffffff8111156128eb57600080fd5b6020830191508360208260051b850101111561290657600080fd5b9250929050565b6000806000806040858703121561292357600080fd5b843567ffffffffffffffff8082111561293b57600080fd5b612947888389016128c1565b9096509450602087013591508082111561296057600080fd5b5061296d878288016128c1565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156129cc576129cc612979565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612a1957612a19612979565b604052919050565b600067ffffffffffffffff821115612a3b57612a3b612979565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112612a7857600080fd5b8135612a8b612a8682612a21565b6129d2565b818152846020838601011115612aa057600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114612adf57600080fd5b50565b8035612aed81612abd565b919050565b8015158114612adf57600080fd5b8035612aed81612af2565b6000806000806101608587031215612b2257600080fd5b843567ffffffffffffffff80821115612b3a57600080fd5b908601906101408289031215612b4f57600080fd5b612b576129a8565b82358152602083013582811115612b6d57600080fd5b612b798a828601612a67565b602083015250604083013582811115612b9157600080fd5b612b9d8a828601612a67565b604083015250612baf60608401612ae2565b6060820152612bc060808401612ae2565b6080820152612bd160a08401612ae2565b60a082015260c083013560c082015260e083013560e0820152610100612bf8818501612b00565b90820152610120612c0a848201612b00565b9082015295506020870135915080821115612c2457600080fd5b50612c31878288016128c1565b9094509250612c4590508660408701612851565b905092959194509250565b600060208284031215612c6257600080fd5b813561223c81612abd565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156113a7576113a7612c6d565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612ce457600080fd5b830160208101925035905067ffffffffffffffff811115612d0457600080fd5b80360382131561290657600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60208152813560208201526000612d766020840184612caf565b610140806040860152612d8e61016086018385612d13565b9250612d9d6040870187612caf565b92507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868503016060870152612dd4848483612d13565b935050612de360608701612ae2565b73ffffffffffffffffffffffffffffffffffffffff811660808701529150612e0d60808701612ae2565b73ffffffffffffffffffffffffffffffffffffffff811660a08701529150612e3760a08701612ae2565b73ffffffffffffffffffffffffffffffffffffffff811660c0870152915060c086013560e0860152610100915060e086013582860152612e78828701612b00565b9150610120612e8a8187018415159052565b612e95818801612b00565b925050612ea58186018315159052565b5090949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612f0f57612f0f612c6d565b5060010190565b60005b83811015612f31578181015183820152602001612f19565b50506000910152565b60008151808452612f52816020860160208601612f16565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081528151602082015260006020830151610140806040850152612fad610160850183612f3a565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152612fe88382612f3a565b9250506060850151613012608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206130858187018315159052565b860151801515838701529050612ea5565b6000602082840312156130a857600080fd5b5051919050565b818103818111156113a7576113a7612c6d565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126130f657600080fd5b9190910192915050565b60006020828403121561311257600080fd5b813561223c81612af2565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261315257600080fd5b83018035915067ffffffffffffffff82111561316d57600080fd5b60200191503681900382131561290657600080fd5b6000808585111561319257600080fd5b8386111561319f57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156131ec5780818660040360031b1b83161692505b505092915050565b60006020828403121561320657600080fd5b815161223c81612af2565b8183823760009101908152919050565b60208152600061223c6020830184612f3a565b60006020828403121561324657600080fd5b815167ffffffffffffffff81111561325d57600080fd5b8201601f8101841361326e57600080fd5b805161327c612a8682612a21565b81815285602083850101111561329157600080fd5b6132a2826020830160208601612f16565b95945050505050565b600082516130f6818460208701612f1656fea26469706673582212200ff17c8d71150ad2abbe3bc087fc2e71861af28705a1f95909c106d612c585ff64736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "ContractCallNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "minAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "receivedAmount";
            readonly type: "uint256";
        }];
        readonly name: "CumulativeSlippageTooHigh";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "required";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidContract";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeAssetTransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapDataProvided";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapFromZeroBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoTransferToNullAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAValidSpender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OnlyContractOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOutOfBounds";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOverflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "integrator";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "referrer";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "fromAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "toAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "fromAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "toAmount";
            readonly type: "uint256";
        }];
        readonly name: "LiFiGenericSwapCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "integrator";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "referrer";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "fromAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "toAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "fromAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "toAmount";
            readonly type: "uint256";
        }];
        readonly name: "LiFiSwappedGeneric";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferRecovered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly indexed: false;
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "bridgeData";
            readonly type: "tuple";
        }];
        readonly name: "LiFiTransferStarted";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "bridges";
            readonly type: "address[]";
        }, {
            readonly internalType: "address[]";
            readonly name: "tokensToApprove";
            readonly type: "address[]";
        }];
        readonly name: "setApprovalForBridges";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "contract IHopBridge";
                readonly name: "hopBridge";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "relayer";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "relayerFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "nativeFee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct HopFacetOptimized.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaHopL1ERC20";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "contract IHopBridge";
                readonly name: "hopBridge";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "relayer";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "relayerFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "nativeFee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct HopFacetOptimized.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaHopL1Native";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "contract IHopBridge";
                readonly name: "hopBridge";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "relayer";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "relayerFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "nativeFee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct HopFacetOptimized.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaHopL2ERC20";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "contract IHopBridge";
                readonly name: "hopBridge";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "relayer";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "relayerFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "nativeFee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct HopFacetOptimized.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaHopL2Native";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "contract IHopBridge";
                readonly name: "hopBridge";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "relayer";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "relayerFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "nativeFee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct HopFacetOptimized.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaHopL1ERC20";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "contract IHopBridge";
                readonly name: "hopBridge";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "relayer";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "relayerFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "nativeFee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct HopFacetOptimized.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaHopL1Native";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "contract IHopBridge";
                readonly name: "hopBridge";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "relayer";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "relayerFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "nativeFee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct HopFacetOptimized.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaHopL2ERC20";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "contract IHopBridge";
                readonly name: "hopBridge";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "relayer";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "relayerFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "nativeFee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct HopFacetOptimized.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaHopL2Native";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): HopFacetOptimizedInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): HopFacetOptimized;
}
export {};
