import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { HopFacetOptimized, HopFacetOptimizedInterface } from "../HopFacetOptimized";
declare type HopFacetOptimizedConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class HopFacetOptimized__factory extends ContractFactory {
    constructor(...args: HopFacetOptimizedConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<HopFacetOptimized>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): HopFacetOptimized;
    connect(signer: Signer): HopFacetOptimized__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50612df0806100206000396000f3fe6080604052600436106100955760003560e01c80636721556d11610069578063826149971161004e5780638261499714610128578063df55e1261461013b578063e62534161461014e57600080fd5b80636721556d14610102578063787f2d0e1461011557600080fd5b8062d2aed61461009a5780630680ded4146100af5780632b53e8f3146100cf5780634db91a00146100ef575b600080fd5b6100ad6100a83660046124c0565b61016e565b005b3480156100bb57600080fd5b506100ad6100ca366004612608565b6102aa565b3480156100db57600080fd5b506100ad6100ea366004612674565b610345565b6100ad6100fd366004612674565b610490565b6100ad6101103660046124c0565b6105b5565b6100ad610123366004612674565b610676565b6100ad6101363660046124c0565b61074d565b6100ad6101493660046124c0565b61086e565b34801561015a57600080fd5b506100ad610169366004612674565b61093f565b61018384600001518560c00151858533610a24565b60c08086019190915261019b90820160a083016126c9565b60e085015160a086015160c0870151604080517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019490945273ffffffffffffffffffffffffffffffffffffffff92831660248501526044840191909152843560648401526020850135608484015284013560a4830152606084013560c4830152608084013560e4830152919091169063eea0d7b290610104015b600060405180830381600087803b15801561025557600080fd5b505af1158015610269573d6000803e3d6000fd5b505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18460405161029c9190612754565b60405180910390a150505050565b60005b8381101561033e5761032c8383838181106102ca576102ca61286c565b90506020020160208101906102df91906126c9565b8686848181106102f1576102f161286c565b905060200201602081019061030691906126c9565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610b6c565b80610336816128ca565b9150506102ad565b5050505050565b61036461035860a08401608085016126c9565b33308560c00135610cb7565b61037460c0820160a083016126c9565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f560e08401356103a460c0860160a087016126c9565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925273ffffffffffffffffffffffffffffffffffffffff16602482015260c085013560448201526060840135606482015260808401356084820152600060a4820181905260c482015260e4015b600060405180830381600087803b15801561043d57600080fd5b505af1158015610451573d6000803e3d6000fd5b505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161048491906129af565b60405180910390a15050565b6104a060c0820160a083016126c9565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f560c0840180359060e0860135906104d59060a088016126c9565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600481019290925273ffffffffffffffffffffffffffffffffffffffff16602482015260c086013560448201526060850135606482015260808501356084820152600060a4820181905260c482015260e4015b6000604051808303818588803b15801561056d57600080fd5b505af1158015610581573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161048491906129af565b6105ca84600001518560c00151858533610a24565b60c0808601919091526105e290820160a083016126c9565b60e085015160a086015160c08701516040517fdeace8f5000000000000000000000000000000000000000000000000000000008152600481019390935273ffffffffffffffffffffffffffffffffffffffff918216602484015260448301526060840135606483015260808401356084830152600060a4830181905260c4830152919091169063deace8f59060e40161023b565b61068660c0820160a083016126c9565b73ffffffffffffffffffffffffffffffffffffffff1663eea0d7b260c0840180359060e0860135906106bb9060a088016126c9565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff909116602483015260c08701356044830152853560648301526020860135608483015285013560a4820152606085013560c4820152608085013560e482015261010401610554565b61076284600001518560c00151858533610a24565b60c08086019190915261077a90820160a083016126c9565b60c085015160e086015160a08701516040517fdeace8f5000000000000000000000000000000000000000000000000000000008152600481019290925273ffffffffffffffffffffffffffffffffffffffff9081166024830152604482018390526060850135606483015260808501356084830152600060a4830181905260c4830152929092169163deace8f5919060e4015b6000604051808303818588803b15801561082657600080fd5b505af115801561083a573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18460405161029c9190612754565b61088384600001518560c00151858533610a24565b60c08086019190915261089b90820160a083016126c9565b60c085015160e086015160a0870151604080517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019390935273ffffffffffffffffffffffffffffffffffffffff918216602484015260448301849052853560648401526020860135608484015285013560a4830152606085013560c4830152608085013560e4830152929092169163eea0d7b291906101040161080d565b61095261035860a08401608085016126c9565b61096260c0820160a083016126c9565b73ffffffffffffffffffffffffffffffffffffffff1663eea0d7b260e084013561099260c0860160a087016126c9565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff909116602483015260c08601356044830152843560648301526020850135608483015284013560a4820152606084013560c4820152608084013560e482015261010401610423565b600082808203610a60576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610a6f600185612af8565b818110610a7e57610a7e61286c565b9050602002810190610a909190612b0b565b610aa19060808101906060016126c9565b90506000610aae82610ed1565b905073ffffffffffffffffffffffffffffffffffffffff8216610ad857610ad53482612af8565b90505b6000610ae48888610f8a565b9050610af08888611096565b610afd8a898989856110fc565b600082610b0985610ed1565b610b139190612af8565b905089811015610b5e576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610b8c57505050565b73ffffffffffffffffffffffffffffffffffffffff8216610bd9576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610c4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c739190612b49565b905081811015610cb157610cb18484610cac847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612af8565b6114ae565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8416610d04576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610d51576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610dc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de69190612b49565b9050610df48286868661162a565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610e64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e889190612b49565b610e929190612af8565b14610ec9576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff821615610f82576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610f59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7d9190612b49565b610f84565b475b92915050565b60608160008167ffffffffffffffff811115610fa857610fa86122a7565b604051908082528060200260200182016040528015610fd1578160200160208202803683370190505b5090506000805b8381101561108b57868682818110610ff257610ff261286c565b90506020028101906110049190612b0b565b6110159060808101906060016126c9565b915061102082610ed1565b8382815181106110325761103261286c565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216611083573483828151811061106b5761106b61286c565b6020026020010181815161107f9190612af8565b9052505b600101610fd8565b509095945050505050565b60005b818110156110f75760008383838181106110b5576110b561286c565b90506020028101906110c79190612b0b565b6110d090612b62565b90508060c00151156110ee576110ee81604001518260800151611688565b50600101611099565b505050565b8383838382600181146113c95760008585611118600185612af8565b8181106111275761112761286c565b90506020028101906111399190612b0b565b61114a9060808101906060016126c9565b9050600089815b818110156112f557368d8d8381811061116c5761116c61286c565b905060200281019061117e9190612b0b565b90506111ad61119360608301604084016126c9565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061121057506112106111c660408301602084016126c9565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561122757506112276111c660208301836126c9565b80156112ac57506112ac61123e60a0830183612c07565b61124d91600491600091612c6c565b61125691612c96565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6112e2576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112ec8f826117fe565b50600101611151565b505060005b611305600185612af8565b8110156113c15760008888838181106113205761132061286c565b90506020028101906113329190612b0b565b6113439060808101906060016126c9565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113b85785828151811061138a5761138a61286c565b602002602001015161139b82610ed1565b6113a59190612af8565b925082156113b8576113b8818885611b14565b506001016112fa565b5050506114a2565b8760005b8181101561149f57368b8b838181106113e8576113e861286c565b90506020028101906113fa9190612b0b565b905061140f61119360608301604084016126c9565b8061142857506114286111c660408301602084016126c9565b801561143f575061143f6111c660208301836126c9565b8015611456575061145661123e60a0830183612c07565b61148c576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114968d826117fe565b506001016113cd565b50505b50505050505050505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611525573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115499190612b49565b6115539190612cde565b60405173ffffffffffffffffffffffffffffffffffffffff8516602482015260448101829052909150610cb19085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611b45565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610cb19085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016115a8565b73ffffffffffffffffffffffffffffffffffffffff82166116e157803410156116dd576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b8060000361171b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015611788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ac9190612b49565b9050818110156117f2576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610b55565b6110f783333085610cb7565b61181461180e60208301836126c9565b3b151590565b61184a576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080810135600081900361188a576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061189f61119360608501604086016126c9565b6118aa5760006118b0565b82608001355b905060006118cc6118c760608601604087016126c9565b610ed1565b905060006118e36118c760808701606088016126c9565b90508260000361191a5761191a61190060608701604088016126c9565b61191060408801602089016126c9565b8760800135610b6c565b8460800135821015611965576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610b55565b60008061197560208801886126c9565b73ffffffffffffffffffffffffffffffffffffffff168561199960a08a018a612c07565b6040516119a7929190612cf1565b60006040518083038185875af1925050503d80600081146119e4576040519150601f19603f3d011682016040523d82523d6000602084013e6119e9565b606091505b509150915081611a345760006119fe82611c51565b9050806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b559190612d01565b6000611a496118c760808a0160608b016126c9565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611a7a60208b018b6126c9565b611a8a60608c0160408d016126c9565b611a9a60808d0160608e016126c9565b8c60800135898711611aac5786611ab6565b611ab68a88612af8565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831615611b3b576110f7838383611ccf565b6110f78282611dfe565b6000611ba7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611f289092919063ffffffff16565b8051909150156110f75780806020019051810190611bc59190612d14565b6110f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610b55565b6060604482511015611c9657505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611cb26004808551611caa9190612af8565b859190611f3f565b905080806020019051810190611cc89190612d31565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8316611d1c576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611d89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dad9190612b49565b905080821115611df3576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610b55565b610cb1848484612059565b73ffffffffffffffffffffffffffffffffffffffff8216611e4b576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611e8e576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610b55565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611ee8576040519150601f19603f3d011682016040523d82523d6000602084013e611eed565b606091505b50509050806110f7576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060611f3784846000856120af565b949350505050565b606081611f4d81601f612cde565b1015611f85576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611f8f8284612cde565b84511015611fc9576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611fe85760405191506000825260208201604052612050565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015612021578051835260209283019201612009565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526110f79084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016115a8565b606082471015612141576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610b55565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161216a9190612da8565b60006040518083038185875af1925050503d80600081146121a7576040519150601f19603f3d011682016040523d82523d6000602084013e6121ac565b606091505b50915091506121bd878383876121c8565b979650505050505050565b6060831561225e5782516000036122575773ffffffffffffffffffffffffffffffffffffffff85163b612257576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b55565b5081611f37565b611f3783838151156122735781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b559190612d01565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156122fa576122fa6122a7565b60405290565b60405160e0810167ffffffffffffffff811182821017156122fa576122fa6122a7565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561236a5761236a6122a7565b604052919050565b600067ffffffffffffffff82111561238c5761238c6122a7565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126123c957600080fd5b81356123dc6123d782612372565b612323565b8181528460208386010111156123f157600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461243057600080fd5b50565b803561243e8161240e565b919050565b801515811461243057600080fd5b803561243e81612443565b60008083601f84011261246e57600080fd5b50813567ffffffffffffffff81111561248657600080fd5b6020830191508360208260051b85010111156124a157600080fd5b9250929050565b600060c082840312156124ba57600080fd5b50919050565b6000806000806101008086880312156124d857600080fd5b853567ffffffffffffffff808211156124f057600080fd5b90870190610140828a03121561250557600080fd5b61250d6122d6565b8235815260208301358281111561252357600080fd5b61252f8b8286016123b8565b60208301525060408301358281111561254757600080fd5b6125538b8286016123b8565b60408301525061256560608401612433565b606082015261257660808401612433565b608082015261258760a08401612433565b60a082015260c083013560c082015260e083013560e08201526125ab848401612451565b8482015261012093506125bf848401612451565b848201528097505060208801359250808311156125db57600080fd5b50506125e98782880161245c565b90945092506125fd905086604087016124a8565b905092959194509250565b6000806000806040858703121561261e57600080fd5b843567ffffffffffffffff8082111561263657600080fd5b6126428883890161245c565b9096509450602087013591508082111561265b57600080fd5b506126688782880161245c565b95989497509550505050565b60008060e0838503121561268757600080fd5b823567ffffffffffffffff81111561269e57600080fd5b830161014081860312156126b157600080fd5b91506126c084602085016124a8565b90509250929050565b6000602082840312156126db57600080fd5b8135611cc88161240e565b60005b838110156127015781810151838201526020016126e9565b50506000910152565b600081518084526127228160208601602086016126e6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152815160208201526000602083015161014080604085015261277d61016085018361270a565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526127b8838261270a565b92505060608501516127e2608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206128558187018315159052565b8601518015158387015290505b5090949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036128fb576128fb61289b565b5060010190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261293757600080fd5b830160208101925035905067ffffffffffffffff81111561295757600080fd5b8036038213156124a157600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b602081528135602082015260006129c96020840184612902565b6101408060408601526129e161016086018385612966565b92506129f06040870187612902565b92507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868503016060870152612a27848483612966565b935050612a3660608701612433565b73ffffffffffffffffffffffffffffffffffffffff811660808701529150612a6060808701612433565b73ffffffffffffffffffffffffffffffffffffffff811660a08701529150612a8a60a08701612433565b73ffffffffffffffffffffffffffffffffffffffff811660c0870152915060c086013560e0860152610100915060e086013582860152612acb828701612451565b9150610120612add8187018415159052565b612ae8818801612451565b9250506128628186018315159052565b81810381811115610f8457610f8461289b565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612b3f57600080fd5b9190910192915050565b600060208284031215612b5b57600080fd5b5051919050565b600060e08236031215612b7457600080fd5b612b7c612300565b612b8583612433565b8152612b9360208401612433565b6020820152612ba460408401612433565b6040820152612bb560608401612433565b60608201526080830135608082015260a083013567ffffffffffffffff811115612bde57600080fd5b612bea368286016123b8565b60a083015250612bfc60c08401612451565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612c3c57600080fd5b83018035915067ffffffffffffffff821115612c5757600080fd5b6020019150368190038213156124a157600080fd5b60008085851115612c7c57600080fd5b83861115612c8957600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612cd65780818660040360031b1b83161692505b505092915050565b80820180821115610f8457610f8461289b565b8183823760009101908152919050565b602081526000611cc8602083018461270a565b600060208284031215612d2657600080fd5b8151611cc881612443565b600060208284031215612d4357600080fd5b815167ffffffffffffffff811115612d5a57600080fd5b8201601f81018413612d6b57600080fd5b8051612d796123d782612372565b818152856020838501011115612d8e57600080fd5b612d9f8260208301602086016126e6565b95945050505050565b60008251612b3f8184602087016126e656fea2646970667358221220853fe94874584cc0ae31b87888ced44fd5d1f74a76e945efee7b9feba62e1af564736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "ContractCallNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "minAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "receivedAmount";
            readonly type: "uint256";
        }];
        readonly name: "CumulativeSlippageTooHigh";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "required";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidContract";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeAssetTransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapDataProvided";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapFromZeroBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoTransferToNullAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAValidSpender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOutOfBounds";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOverflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "assetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "bridge";
            readonly type: "address";
        }];
        readonly name: "HopBridgeRegistered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferRecovered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly indexed: false;
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "bridgeData";
            readonly type: "tuple";
        }];
        readonly name: "LiFiTransferStarted";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "bridges";
            readonly type: "address[]";
        }, {
            readonly internalType: "address[]";
            readonly name: "tokensToApprove";
            readonly type: "address[]";
        }];
        readonly name: "setApprovalForBridges";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "contract IHopBridge";
                readonly name: "hopBridge";
                readonly type: "address";
            }];
            readonly internalType: "struct HopFacetOptimized.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaHopL1ERC20";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "contract IHopBridge";
                readonly name: "hopBridge";
                readonly type: "address";
            }];
            readonly internalType: "struct HopFacetOptimized.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaHopL1Native";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "contract IHopBridge";
                readonly name: "hopBridge";
                readonly type: "address";
            }];
            readonly internalType: "struct HopFacetOptimized.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaHopL2ERC20";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "contract IHopBridge";
                readonly name: "hopBridge";
                readonly type: "address";
            }];
            readonly internalType: "struct HopFacetOptimized.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaHopL2Native";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "contract IHopBridge";
                readonly name: "hopBridge";
                readonly type: "address";
            }];
            readonly internalType: "struct HopFacetOptimized.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaHopL1ERC20";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "contract IHopBridge";
                readonly name: "hopBridge";
                readonly type: "address";
            }];
            readonly internalType: "struct HopFacetOptimized.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaHopL1Native";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "contract IHopBridge";
                readonly name: "hopBridge";
                readonly type: "address";
            }];
            readonly internalType: "struct HopFacetOptimized.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaHopL2ERC20";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "contract IHopBridge";
                readonly name: "hopBridge";
                readonly type: "address";
            }];
            readonly internalType: "struct HopFacetOptimized.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaHopL2Native";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): HopFacetOptimizedInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): HopFacetOptimized;
}
export {};
