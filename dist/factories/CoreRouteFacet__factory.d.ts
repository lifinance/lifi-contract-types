import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { CoreRouteFacet, CoreRouteFacetInterface } from "../CoreRouteFacet";
type CoreRouteFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class CoreRouteFacet__factory extends ContractFactory {
    constructor(...args: CoreRouteFacetConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<CoreRouteFacet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): CoreRouteFacet;
    connect(signer: Signer): CoreRouteFacet__factory;
    static readonly bytecode = "0x6080604052348015600e575f5ffd5b506112768061001c5f395ff3fe60806040526004361061001d575f3560e01c80632646478b14610021575b5f5ffd5b61003461002f36600461102a565b610046565b60405190815260200160405180910390f35b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80545f91907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100c4576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181556100d7898989898989896100e7565b91505f9055979650505050505050565b5f8073ffffffffffffffffffffffffffffffffffffffff891673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146101ab576040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8a16906370a0823190602401602060405180830381865afa158015610182573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101a691906110dc565b6101ad565b5f5b90505f73ffffffffffffffffffffffffffffffffffffffff881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610274576040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301528916906370a0823190602401602060405180830381865afa15801561024b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061026f91906110dc565b61028d565b8573ffffffffffffffffffffffffffffffffffffffff16315b604080516020601f88018190048102820181019092528681529192508a915f9182916102d2918a908a90819084018382808284375f9201919091525061068c92505050565b90505b8051602082015111156103af5780518051600191820183525f1a90819003610314575f610301836106ae565b9050835f0361030e578094505b5061039e565b8060ff1660020361032e57610329828e610770565b61039e565b8060ff16600303610343575f6103018361078f565b8060ff1660040361035757610329826107b5565b8060ff1660060361036c576103298e836107d3565b6040517fb926a1f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103a783611120565b9250506102d5565b505f905073ffffffffffffffffffffffffffffffffffffffff8c1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610475576040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8d16906370a0823190602401602060405180830381865afa15801561044c573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061047091906110dc565b610477565b5f5b9050836104848c83611157565b10156104d6576104948b82611157565b6040517f583af5860000000000000000000000000000000000000000000000000000000081526004810191909152602481018590526044015b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff8b1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461059b576040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a811660048301528c16906370a0823190602401602060405180830381865afa158015610572573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061059691906110dc565b6105b4565b8873ffffffffffffffffffffffffffffffffffffffff16315b90506105c08a85611157565b811015610606576105d18482611170565b6040517f963b34a50000000000000000000000000000000000000000000000000000000081526004016104cd91815260200190565b6106108482611170565b6040805173ffffffffffffffffffffffffffffffffffffffff8c81168252602082018790529181018d905260608101839052919750808d1691908f169033907f2db5ddd0b42bdbca0d69ea16f234a870a485854ae0d91f16643d6f317d8b89949060800160405180910390a45050505050979650505050505050565b6040805180820190915260208281018252825190920182019181019190915290565b80518051601490910182525f90819060601c6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915073ffffffffffffffffffffffffffffffffffffffff8216906370a0823190602401602060405180830381865afa15801561072b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061074f91906110dc565b9150811561075e576001820391505b61076a83308385610837565b50919050565b815180516014909101835260601c61078a83338385610837565b505050565b476107b0823073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee84610837565b919050565b805180516014909101825260601c6107cf825f8381610891565b5050565b80518051602082018084525160408301808552516041840180865251606185018087525160819095018652929391925f9190911a9161082e73ffffffffffffffffffffffffffffffffffffffff881633308888888888610b68565b50505050505050565b83518051600190910185525f90811a905b8160ff1681101561088957855180516002909101875261ffff60f09190911c84810291909104938490039361087f88888884610891565b5050600101610848565b505050505050565b5f61089b85610dd1565b60208101519091505f610910827fffffffff00000000000000000000000000000000000000000000000000000000165f9081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b905073ffffffffffffffffffffffffffffffffffffffff811661095f576040517fdc66f67300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61099d6040518060400160405280600481526020017f66726f6d00000000000000000000000000000000000000000000000000000000815250610e15565b6109a686610ea7565b6109e46040518060400160405280600781526020017f746f6b656e496e00000000000000000000000000000000000000000000000000815250610e15565b6109ed85610ea7565b610a2b6040518060400160405280600881526020017f616d6f756e74496e000000000000000000000000000000000000000000000000815250610e15565b610a3484610f48565b5f5f8273ffffffffffffffffffffffffffffffffffffffff1684868a8a8a604051602401610a6594939291906111cf565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051610aee9190611211565b5f60405180830381855af49150503d805f8114610b26576040519150601f19603f3d011682016040523d82523d5f602084013e610b2b565b606091505b509150915081610b3e57610b3e81610fd9565b5f81806020019051810190610b5391906110dc565b8a5181018b5290505b50505050505050505050565b6040517f7ecebe0000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301525f91908a1690637ecebe0090602401602060405180830381865afa158015610bd5573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bf991906110dc565b6040517fd505accf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a811660048301528981166024830152604482018990526064820188905260ff8716608483015260a4820186905260c48201859052919250908a169063d505accf9060e4015f604051808303815f87803b158015610c90575f5ffd5b505af1158015610ca2573d5f5f3e3d5ffd5b50506040517f7ecebe0000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b811660048301525f93508c169150637ecebe0090602401602060405180830381865afa158015610d12573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d3691906110dc565b9050610d43826001611157565b8114610b5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5361666545524332303a207065726d697420646964206e6f742073756363656560448201527f640000000000000000000000000000000000000000000000000000000000000060648201526084016104cd565b80516020820151606091905f610de78383611170565b90508015610e0d5760405193506020810184016040528084528060208501828560045afa505b505050919050565b610ea481604051602401610e299190611227565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac00000000000000000000000000000000000000000000000000000000179052610fe3565b50565b60405173ffffffffffffffffffffffffffffffffffffffff82166024820152610ea490604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f2c2ecbc200000000000000000000000000000000000000000000000000000000179052610fe3565b610ea481604051602401610f5e91815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ff82c50f100000000000000000000000000000000000000000000000000000000179052610fe3565b8051602082018181fd5b610ea48180516a636f6e736f6c652e6c6f67602083015f808483855afa5050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146107b0575f5ffd5b5f5f5f5f5f5f5f60c0888a031215611040575f5ffd5b61104988611007565b96506020880135955061105e60408901611007565b94506060880135935061107360808901611007565b925060a088013567ffffffffffffffff81111561108e575f5ffd5b8801601f81018a1361109e575f5ffd5b803567ffffffffffffffff8111156110b4575f5ffd5b8a60208284010111156110c5575f5ffd5b602082019350809250505092959891949750929550565b5f602082840312156110ec575f5ffd5b5051919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611150576111506110f3565b5060010190565b8082018082111561116a5761116a6110f3565b92915050565b8181038181111561116a5761116a6110f3565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b608081525f6111e16080830187611183565b73ffffffffffffffffffffffffffffffffffffffff95861660208401529390941660408201526060015292915050565b5f82518060208501845e5f920191825250919050565b602081525f6112396020830184611183565b939250505056fea2646970667358221220a4dd8884d28b4ddf78cf09a2341785b76c6eb4e5d4fc293ac0d451dc8b1433b364736f6c634300081d0033";
    static readonly abi: readonly [{
        readonly type: "function";
        readonly name: "processRoute";
        readonly inputs: readonly [{
            readonly name: "tokenIn";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "amountIn";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "tokenOut";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "amountOutMin";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "to";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "route";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [{
            readonly name: "amountOut";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "payable";
    }, {
        readonly type: "event";
        readonly name: "Route";
        readonly inputs: readonly [{
            readonly name: "from";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }, {
            readonly name: "to";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "tokenIn";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }, {
            readonly name: "tokenOut";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }, {
            readonly name: "amountIn";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }, {
            readonly name: "amountOutMin";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }, {
            readonly name: "amountOut";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "error";
        readonly name: "MinimalInputBalanceViolation";
        readonly inputs: readonly [{
            readonly name: "available";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "required";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }, {
        readonly type: "error";
        readonly name: "MinimalOutputBalanceViolation";
        readonly inputs: readonly [{
            readonly name: "amountOut";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }, {
        readonly type: "error";
        readonly name: "ReentrancyError";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "SwapFailed";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "UnknownCommandCode";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "UnknownSelector";
        readonly inputs: readonly [];
    }];
    static createInterface(): CoreRouteFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): CoreRouteFacet;
}
export {};
