import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { CoreRouteFacet, CoreRouteFacetInterface } from "../CoreRouteFacet";
type CoreRouteFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class CoreRouteFacet__factory extends ContractFactory {
    constructor(...args: CoreRouteFacetConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<CoreRouteFacet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): CoreRouteFacet;
    connect(signer: Signer): CoreRouteFacet__factory;
    static readonly bytecode = "0x6080604052348015600e575f5ffd5b50610f058061001c5f395ff3fe60806040526004361061001d575f3560e01c80632646478b14610021575b5f5ffd5b61003461002f366004610d60565b610046565b60405190815260200160405180910390f35b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80545f91907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100c4576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181556100d7898989898989896100e7565b91505f9055979650505050505050565b5f8073ffffffffffffffffffffffffffffffffffffffff891673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146101ab576040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8a16906370a0823190602401602060405180830381865afa158015610182573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101a69190610e12565b6101ad565b5f5b90505f73ffffffffffffffffffffffffffffffffffffffff881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610274576040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301528916906370a0823190602401602060405180830381865afa15801561024b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061026f9190610e12565b61028d565b8573ffffffffffffffffffffffffffffffffffffffff16315b604080516020601f88018190048102820181019092528681529192508a915f9182916102d2918a908a90819084018382808284375f9201919091525061069592505050565b90505b8051602082015111156103b8575f6102f38280516001018051915290565b90508060ff1660010361031d575f61030a836106af565b9050835f03610317578094505b506103a7565b8060ff1660020361033757610332828e610771565b6103a7565b8060ff1660030361034c575f61030a83610795565b8060ff1660040361036057610332826107bb565b8060ff16600603610375576103328e836107de565b6040517fb926a1f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103b083610e56565b9250506102d5565b505f905073ffffffffffffffffffffffffffffffffffffffff8c1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461047e576040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8d16906370a0823190602401602060405180830381865afa158015610455573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104799190610e12565b610480565b5f5b90508361048d8c83610e8d565b10156104df5761049d8b82610e8d565b6040517f583af5860000000000000000000000000000000000000000000000000000000081526004810191909152602481018590526044015b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff8b1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146105a4576040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a811660048301528c16906370a0823190602401602060405180830381865afa15801561057b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061059f9190610e12565b6105bd565b8873ffffffffffffffffffffffffffffffffffffffff16315b90506105c98a85610e8d565b81101561060f576105da8482610ea6565b6040517f963b34a50000000000000000000000000000000000000000000000000000000081526004016104d691815260200190565b6106198482610ea6565b6040805173ffffffffffffffffffffffffffffffffffffffff8c81168252602082018790529181018d905260608101839052919750808d1691908f169033907f2db5ddd0b42bdbca0d69ea16f234a870a485854ae0d91f16643d6f317d8b89949060800160405180910390a45050505050979650505050505050565b604080518082019091528181528151909101602082015290565b5f5f6106c18380516014018051915290565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915073ffffffffffffffffffffffffffffffffffffffff8216906370a0823190602401602060405180830381865afa15801561072c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107509190610e12565b9150811561075f576001820391505b61076b8330838561086c565b50919050565b5f6107828380516014018051915290565b90506107908333838561086c565b505050565b476107b6823073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8461086c565b919050565b5f6107cc8280516014018051915290565b90506107da825f835f6108cc565b5050565b5f6107ef8280516020018051915290565b90505f6108028380516020018051915290565b90505f6108158480516001018051915290565b90505f6108288580516020018051915290565b90505f61083b8680516020018051915290565b905061086373ffffffffffffffffffffffffffffffffffffffff881633308888888888610ac8565b50505050505050565b5f61087d8580516001018051915290565b90505f5b8160ff168110156108c4575f61089d8780516002018051915290565b61ffff80821686020494859003949091506108ba888888846108cc565b5050600101610881565b505050505050565b5f6108dd8580516004018051915290565b90505f61094c827fffffffff00000000000000000000000000000000000000000000000000000000165f9081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b905073ffffffffffffffffffffffffffffffffffffffff811661099b576040517fdc66f67300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fffffffff0000000000000000000000000000000000000000000000000000000083166020820152602481018790527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606087811b8216604484015286901b166058820152606c81018490525f90608c0160405160208183030381529060405290505f8273ffffffffffffffffffffffffffffffffffffffff1682604051610a469190610eb9565b5f60405180830381855af49150503d805f8114610a7e576040519150601f19603f3d011682016040523d82523d5f602084013e610a83565b606091505b5050905080610abe576040517f81ceff3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050505050565b6040517f7ecebe0000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301525f91908a1690637ecebe0090602401602060405180830381865afa158015610b35573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b599190610e12565b6040517fd505accf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a811660048301528981166024830152604482018990526064820188905260ff8716608483015260a4820186905260c48201859052919250908a169063d505accf9060e4015f604051808303815f87803b158015610bf0575f5ffd5b505af1158015610c02573d5f5f3e3d5ffd5b50506040517f7ecebe0000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b811660048301525f93508c169150637ecebe0090602401602060405180830381865afa158015610c72573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c969190610e12565b9050610ca3826001610e8d565b8114610d31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5361666545524332303a207065726d697420646964206e6f742073756363656560448201527f640000000000000000000000000000000000000000000000000000000000000060648201526084016104d6565b50505050505050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146107b6575f5ffd5b5f5f5f5f5f5f5f60c0888a031215610d76575f5ffd5b610d7f88610d3d565b965060208801359550610d9460408901610d3d565b945060608801359350610da960808901610d3d565b925060a088013567ffffffffffffffff811115610dc4575f5ffd5b8801601f81018a13610dd4575f5ffd5b803567ffffffffffffffff811115610dea575f5ffd5b8a6020828401011115610dfb575f5ffd5b602082019350809250505092959891949750929550565b5f60208284031215610e22575f5ffd5b5051919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e8657610e86610e29565b5060010190565b80820180821115610ea057610ea0610e29565b92915050565b81810381811115610ea057610ea0610e29565b5f82518060208501845e5f92019182525091905056fea2646970667358221220d6d635f5f93bcc5bd4e67da488d7ded5beb38df05ed60c12a2d5b04308ebd9f464736f6c634300081d0033";
    static readonly abi: readonly [{
        readonly type: "function";
        readonly name: "processRoute";
        readonly inputs: readonly [{
            readonly name: "tokenIn";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "amountIn";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "tokenOut";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "amountOutMin";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "to";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "route";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [{
            readonly name: "amountOut";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "payable";
    }, {
        readonly type: "event";
        readonly name: "Route";
        readonly inputs: readonly [{
            readonly name: "from";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }, {
            readonly name: "to";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "tokenIn";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }, {
            readonly name: "tokenOut";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }, {
            readonly name: "amountIn";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }, {
            readonly name: "amountOutMin";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }, {
            readonly name: "amountOut";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "error";
        readonly name: "MinimalInputBalanceViolation";
        readonly inputs: readonly [{
            readonly name: "available";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "required";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }, {
        readonly type: "error";
        readonly name: "MinimalOutputBalanceViolation";
        readonly inputs: readonly [{
            readonly name: "amountOut";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }, {
        readonly type: "error";
        readonly name: "ReentrancyError";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "SwapFailed";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "UnknownCommandCode";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "UnknownSelector";
        readonly inputs: readonly [];
    }];
    static createInterface(): CoreRouteFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): CoreRouteFacet;
}
export {};
