"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SymbiosisFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_symbiosisMetaRouter",
                type: "address",
                internalType: "contract ISymbiosisMetaRouter",
            },
            {
                name: "_symbiosisGateway",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaSymbiosis",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_symbiosisData",
                type: "tuple",
                internalType: "struct SymbiosisFacet.SymbiosisData",
                components: [
                    {
                        name: "firstSwapCalldata",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "secondSwapCalldata",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "intermediateToken",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "firstDexRouter",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "secondDexRouter",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approvedTokens",
                        type: "address[]",
                        internalType: "address[]",
                    },
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaSymbiosis",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_symbiosisData",
                type: "tuple",
                internalType: "struct SymbiosisFacet.SymbiosisData",
                components: [
                    {
                        name: "firstSwapCalldata",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "secondSwapCalldata",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "intermediateToken",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "firstDexRouter",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "secondDexRouter",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approvedTokens",
                        type: "address[]",
                        internalType: "address[]",
                    },
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "AssetSwapped",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
            {
                name: "dex",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
];
var _bytecode = "0x60c0604052348015600e575f5ffd5b50604051611f24380380611f24833981016040819052602b916057565b6001600160a01b039182166080521660a052608a565b6001600160a01b03811681146054575f5ffd5b50565b5f5f604083850312156067575f5ffd5b82516070816041565b6020840151909250607f816041565b809150509250929050565b60805160a051611e796100ab5f395f6105ef01525f61061a0152611e795ff3fe608060405260043610610028575f3560e01c80636e0671611461002c578063b70fb9a514610041575b5f5ffd5b61003f61003a3660046117aa565b610054565b005b61003f61004f366004611870565b610242565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100cf576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6100df34476118d5565b90508680610100015161011e576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101418160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610178576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036101b5576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101f2576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610206895f01518a60c001518a8a33610462565b60c08a015261021589876105ae565b5047905081811115610235576102355f8461023085856118d5565b6108b0565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102bd576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6102cd34476118d5565b9050846102f28160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610329576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610366576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036103a3576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156103e1576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868061012001511561041f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043188608001518960c001516108e5565b61043b88886105ae565b504791505081811115610457576104575f8461023085856118d5565b50505f909155505050565b5f8280820361049d576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f85856104ab6001856118d5565b8181106104ba576104ba61190d565b90506020028101906104cc919061193a565b6104dd906080810190606001611976565b90505f6104e982610999565b905073ffffffffffffffffffffffffffffffffffffffff82166105135761051034826118d5565b90505b5f61051e88886109e3565b905061052a8888610aed565b6105358a8989610b59565b5f8261054085610999565b61054a91906118d5565b905089811015610594576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b6105a089898985610d04565b9a9950505050505050505050565b5f6105d1836080015173ffffffffffffffffffffffffffffffffffffffff161590565b90505f81156105e5575060c0830151610618565b61061884608001517f00000000000000000000000000000000000000000000000000000000000000008660c00151610ec7565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a11b11988260405180610120016040528087805f01906106709190611996565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505050908252506020908101906106b890890189611996565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505050908252506020016106fe60a08901896119fe565b808060200260200160405190810160405280939291908181526020018383602002808284375f920191909152505050908252506020016107446080890160608a01611976565b73ffffffffffffffffffffffffffffffffffffffff16815260200161076f60a0890160808a01611976565b73ffffffffffffffffffffffffffffffffffffffff1681526020018860c00151815260200186151581526020018760c00160208101906107af9190611976565b73ffffffffffffffffffffffffffffffffffffffff1681526020016107d760e0890189611996565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050509152506040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526108459190600401611afe565b5f604051808303818588803b15801561085c575f5ffd5b505af115801561086e573d5f5f3e3d5ffd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1846040516108a29190611c64565b60405180910390a150505050565b73ffffffffffffffffffffffffffffffffffffffff83166108da576108d58282610ef3565b505050565b6108d5838383610f60565b805f0361091e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166109775780341015610973576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61097373ffffffffffffffffffffffffffffffffffffffff8316333084610fce565b5f73ffffffffffffffffffffffffffffffffffffffff8216156109db576109d673ffffffffffffffffffffffffffffffffffffffff831630611026565b6109dd565b475b92915050565b6060815f8167ffffffffffffffff811115610a0057610a00611574565b604051908082528060200260200182016040528015610a29578160200160208202803683370190505b5090505f805b83811015610ae257868682818110610a4957610a4961190d565b9050602002810190610a5b919061193a565b610a6c906080810190606001611976565b9150610a7782610999565b838281518110610a8957610a8961190d565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610ada5734838281518110610ac257610ac261190d565b60200260200101818151610ad691906118d5565b9052505b600101610a2f565b509095945050505050565b5f5b818110156108d55736838383818110610b0a57610b0a61190d565b9050602002810190610b1c919061193a565b9050610b2e60e0820160c08301611d77565b15610b5057610b50610b466060830160408401611976565b82608001356108e5565b50600101610aef565b805f5b81811015610cfd5736848483818110610b7757610b7761190d565b9050602002810190610b89919061193a565b9050610bb8610b9e6060830160408401611976565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610c1a5750610c1a610bd16040830160208401611976565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610c315750610c31610bd16020830183611976565b8015610cb45750610cb4610c4860a0830183611996565b610c56916004915f91611d90565b610c5f91611db7565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610cea576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cf48682611059565b50600101610b5c565b5050505050565b825f8582610d136001826118d5565b818110610d2257610d2261190d565b9050602002810190610d34919061193a565b610d45906080810190606001611976565b905081600114610e1b575f805b610d5d6001856118d5565b811015610e18575f888883818110610d7757610d7761190d565b9050602002810190610d89919061193a565b610d9a906080810190606001611976565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e0f57858281518110610de157610de161190d565b6020026020010151610df282610999565b610dfc91906118d5565b92508215610e0f57610e0f8188856108b0565b50600101610d52565b50505b5f5b82811015610ebe575f878783818110610e3857610e3861190d565b9050602002810190610e4a919061193a565b610e5b906060810190604001611976565b90505f610e6782610999565b90505f81118015610ea457508373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15610eb457610eb48288836108b0565b5050600101610e1d565b50505050505050565b6108d58383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6112c9565b73ffffffffffffffffffffffffffffffffffffffff8216610f40576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61097373ffffffffffffffffffffffffffffffffffffffff8316826113f6565b73ffffffffffffffffffffffffffffffffffffffff8216610fad576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108d573ffffffffffffffffffffffffffffffffffffffff8416838361140f565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f5114171661101957637939f4245f526004601cfd5b5f60605260405250505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b61106e6110696020830183611976565b611458565b6110a4576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f8190036110e3576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6110f7610b9e6060850160408601611976565b611101575f611107565b82608001355b90505f61112261111d6080860160608701611976565b610999565b9050815f036111585761115861113e6060860160408701611976565b61114e6040870160208801611976565b8660800135610ec7565b5f806111676020870187611976565b73ffffffffffffffffffffffffffffffffffffffff168461118b60a0890189611996565b604051611199929190611e1d565b5f6040518083038185875af1925050503d805f81146111d3576040519150601f19603f3d011682016040523d82523d5f602084013e6111d8565b606091505b5091509150816111eb576111eb816114ec565b5f6111ff61111d6080890160608a01611976565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861123060208a018a611976565b61124060608b0160408c01611976565b61125060808c0160608d01611976565b8b60800135898711611262578661126c565b61126c8a886118d5565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156113f05773ffffffffffffffffffffffffffffffffffffffff8316611332576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa1580156113a5573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113c99190611e2c565b10156113f0576113f073ffffffffffffffffffffffffffffffffffffffff851684836114f6565b50505050565b5f385f3884865af16109735763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f5114171661144f576390b8ec185f526004601cfd5b5f603452505050565b6040805160178082528183019092525f9182919060208201818036833701905050905060175f60208301853c60208101517f10ff0000000000000000000000000000000000000000000000000000000000007fffffff00000000000000000000000000000000000000000000000000000000008216016114e357506023015160601c3b151592915050565b5050503b151590565b8051602082018181fd5b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f5114171661144f575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f5114171661144f57633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff811182821017156115c5576115c5611574565b60405290565b5f82601f8301126115da575f5ffd5b813567ffffffffffffffff8111156115f4576115f4611574565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff8111828210171561164157611641611574565b604052818152838201602001851015611658575f5ffd5b816020850160208301375f918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611697575f5ffd5b919050565b80358015158114611697575f5ffd5b5f61014082840312156116bc575f5ffd5b6116c46115a1565b823581529050602082013567ffffffffffffffff8111156116e3575f5ffd5b6116ef848285016115cb565b602083015250604082013567ffffffffffffffff81111561170e575f5ffd5b61171a848285016115cb565b60408301525061172c60608301611674565b606082015261173d60808301611674565b608082015261174e60a08301611674565b60a082015260c0828101359082015260e08083013590820152611774610100830161169c565b610100820152611787610120830161169c565b61012082015292915050565b5f61010082840312156117a4575f5ffd5b50919050565b5f5f5f5f606085870312156117bd575f5ffd5b843567ffffffffffffffff8111156117d3575f5ffd5b6117df878288016116ab565b945050602085013567ffffffffffffffff8111156117fb575f5ffd5b8501601f8101871361180b575f5ffd5b803567ffffffffffffffff811115611821575f5ffd5b8760208260051b8401011115611835575f5ffd5b60209190910193509150604085013567ffffffffffffffff811115611858575f5ffd5b61186487828801611793565b91505092959194509250565b5f5f60408385031215611881575f5ffd5b823567ffffffffffffffff811115611897575f5ffd5b6118a3858286016116ab565b925050602083013567ffffffffffffffff8111156118bf575f5ffd5b6118cb85828601611793565b9150509250929050565b818103818111156109dd577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261196c575f5ffd5b9190910192915050565b5f60208284031215611986575f5ffd5b61198f82611674565b9392505050565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126119c9575f5ffd5b83018035915067ffffffffffffffff8211156119e3575f5ffd5b6020019150368190038213156119f7575f5ffd5b9250929050565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611a31575f5ffd5b83018035915067ffffffffffffffff821115611a4b575f5ffd5b6020019150600581901b36038213156119f7575f5ffd5b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b5f8151808452602084019350602083015f5b82811015611af457815173ffffffffffffffffffffffffffffffffffffffff16865260209586019590910190600101611ac0565b5093949350505050565b602081525f82516101206020840152611b1b610140840182611a62565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016040850152611b568282611a62565b91505060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611b928282611aae565b9150506060840151611bbc608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015160c084015260c0840151611bfc60e085018215159052565b5060e084015173ffffffffffffffffffffffffffffffffffffffff8116610100850152506101008401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084830301610120850152611c5b8282611a62565b95945050505050565b60208152815160208201525f60208301516101406040840152611c8b610160840182611a62565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611cc68282611a62565b9150506060840151611cf0608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e0840151610100840152610100840151611d5f61012085018215159052565b50610120840151801515610140850152509392505050565b5f60208284031215611d87575f5ffd5b61198f8261169c565b5f5f85851115611d9e575f5ffd5b83861115611daa575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015611e16577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b5f60208284031215611e3c575f5ffd5b505191905056fea26469706673582212204af6d3cfe077be2294466dde04e63b00c8c7ed716bd305c64c673fb55bdd52f564736f6c634300081d0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var SymbiosisFacet__factory = /** @class */ (function (_super) {
    __extends(SymbiosisFacet__factory, _super);
    function SymbiosisFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    SymbiosisFacet__factory.prototype.deploy = function (_symbiosisMetaRouter, _symbiosisGateway, overrides) {
        return _super.prototype.deploy.call(this, _symbiosisMetaRouter, _symbiosisGateway, overrides || {});
    };
    SymbiosisFacet__factory.prototype.getDeployTransaction = function (_symbiosisMetaRouter, _symbiosisGateway, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _symbiosisMetaRouter, _symbiosisGateway, overrides || {});
    };
    SymbiosisFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    SymbiosisFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    SymbiosisFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    SymbiosisFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    SymbiosisFacet__factory.bytecode = _bytecode;
    SymbiosisFacet__factory.abi = _abi;
    return SymbiosisFacet__factory;
}(ethers_1.ContractFactory));
exports.SymbiosisFacet__factory = SymbiosisFacet__factory;
