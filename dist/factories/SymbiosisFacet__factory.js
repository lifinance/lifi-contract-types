"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SymbiosisFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_symbiosisMetaRouter",
                type: "address",
                internalType: "contract ISymbiosisMetaRouter",
            },
            {
                name: "_symbiosisGateway",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaSymbiosis",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_symbiosisData",
                type: "tuple",
                internalType: "struct SymbiosisFacet.SymbiosisData",
                components: [
                    {
                        name: "firstSwapCalldata",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "secondSwapCalldata",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "intermediateToken",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "firstDexRouter",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "secondDexRouter",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approvedTokens",
                        type: "address[]",
                        internalType: "address[]",
                    },
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaSymbiosis",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_symbiosisData",
                type: "tuple",
                internalType: "struct SymbiosisFacet.SymbiosisData",
                components: [
                    {
                        name: "firstSwapCalldata",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "secondSwapCalldata",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "intermediateToken",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "firstDexRouter",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "secondDexRouter",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approvedTokens",
                        type: "address[]",
                        internalType: "address[]",
                    },
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "AssetSwapped",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
            {
                name: "dex",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InsufficientBalance",
        inputs: [
            {
                name: "required",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "balance",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
];
var _bytecode = "0x60c0604052348015600e575f5ffd5b5060405161212f38038061212f833981016040819052602b916057565b6001600160a01b039182166080521660a052608a565b6001600160a01b03811681146054575f5ffd5b50565b5f5f604083850312156067575f5ffd5b82516070816041565b6020840151909250607f816041565b809150509250929050565b60805160a0516120846100ab5f395f6105e601525f61061101526120845ff3fe608060405260043610610028575f3560e01c80636e0671611461002c578063b70fb9a514610041575b5f5ffd5b61003f61003a366004611941565b610054565b005b61003f61004f366004611a07565b610242565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100cf576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6100df3447611a6c565b90508680610100015161011e576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101418160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610178576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036101b5576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101f2576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610206895f01518a60c001518a8a33610462565b60c08a015261021589876105a5565b5047905081811115610235576102355f846102308585611a6c565b6108a7565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102bd576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6102cd3447611a6c565b9050846102f28160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610329576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610366576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036103a3576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156103e1576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868061012001511561041f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043188608001518960c001516108dc565b61043b88886105a5565b504791505081811115610457576104575f846102308585611a6c565b50505f909155505050565b5f8280820361049d576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f85856104ab600185611a6c565b8181106104ba576104ba611aa4565b90506020028101906104cc9190611ad1565b6104dd906080810190606001611b0d565b90505f6104e982610990565b905073ffffffffffffffffffffffffffffffffffffffff8216610513576105103482611a6c565b90505b5f61051e88886109da565b905061052a8888610ae4565b6105378a89898985610b50565b5f8261054285610990565b61054c9190611a6c565b905089811015610597576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b5f6105c8836080015173ffffffffffffffffffffffffffffffffffffffff161590565b90505f81156105dc575060c083015161060f565b61060f84608001517f00000000000000000000000000000000000000000000000000000000000000008660c00151610efb565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a11b11988260405180610120016040528087805f01906106679190611b2f565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505050908252506020908101906106af90890189611b2f565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505050908252506020016106f560a0890189611b97565b808060200260200160405190810160405280939291908181526020018383602002808284375f9201919091525050509082525060200161073b6080890160608a01611b0d565b73ffffffffffffffffffffffffffffffffffffffff16815260200161076660a0890160808a01611b0d565b73ffffffffffffffffffffffffffffffffffffffff1681526020018860c00151815260200186151581526020018760c00160208101906107a69190611b0d565b73ffffffffffffffffffffffffffffffffffffffff1681526020016107ce60e0890189611b2f565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050509152506040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815261083c9190600401611c97565b5f604051808303818588803b158015610853575f5ffd5b505af1158015610865573d5f5f3e3d5ffd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1846040516108999190611dfd565b60405180910390a150505050565b73ffffffffffffffffffffffffffffffffffffffff83166108d1576108cc8282610f27565b505050565b6108cc838383610f94565b805f03610915576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661096e578034101561096a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61096a73ffffffffffffffffffffffffffffffffffffffff8316333084611002565b5f73ffffffffffffffffffffffffffffffffffffffff8216156109d2576109cd73ffffffffffffffffffffffffffffffffffffffff83163061105a565b6109d4565b475b92915050565b6060815f8167ffffffffffffffff8111156109f7576109f76116ff565b604051908082528060200260200182016040528015610a20578160200160208202803683370190505b5090505f805b83811015610ad957868682818110610a4057610a40611aa4565b9050602002810190610a529190611ad1565b610a63906080810190606001611b0d565b9150610a6e82610990565b838281518110610a8057610a80611aa4565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610ad15734838281518110610ab957610ab9611aa4565b60200260200101818151610acd9190611a6c565b9052505b600101610a26565b509095945050505050565b5f5b818110156108cc5736838383818110610b0157610b01611aa4565b9050602002810190610b139190611ad1565b9050610b2560e0820160c08301611f10565b15610b4757610b47610b3d6060830160408401611b0d565b82608001356108dc565b50600101610ae6565b838383838260018114610e17575f8585610b6b600185611a6c565b818110610b7a57610b7a611aa4565b9050602002810190610b8c9190611ad1565b610b9d906080810190606001611b0d565b90505f89815b81811015610d4457368d8d83818110610bbe57610bbe611aa4565b9050602002810190610bd09190611ad1565b9050610bff610be56060830160408401611b0d565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610c615750610c61610c186040830160208401611b0d565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610c785750610c78610c186020830183611b0d565b8015610cfb5750610cfb610c8f60a0830183611b2f565b610c9d916004915f91611f29565b610ca691611f50565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610d31576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d3b8f8261108d565b50600101610ba3565b505f90505b610d54600185611a6c565b811015610e0f575f888883818110610d6e57610d6e611aa4565b9050602002810190610d809190611ad1565b610d91906080810190606001611b0d565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e0657858281518110610dd857610dd8611aa4565b6020026020010151610de982610990565b610df39190611a6c565b92508215610e0657610e068188856108a7565b50600101610d49565b505050610eef565b875f5b81811015610eec57368b8b83818110610e3557610e35611aa4565b9050602002810190610e479190611ad1565b9050610e5c610be56060830160408401611b0d565b80610e755750610e75610c186040830160208401611b0d565b8015610e8c5750610e8c610c186020830183611b0d565b8015610ea35750610ea3610c8f60a0830183611b2f565b610ed9576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ee38d8261108d565b50600101610e1a565b50505b50505050505050505050565b6108cc8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611380565b73ffffffffffffffffffffffffffffffffffffffff8216610f74576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61096a73ffffffffffffffffffffffffffffffffffffffff8316826114ad565b73ffffffffffffffffffffffffffffffffffffffff8216610fe1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108cc73ffffffffffffffffffffffffffffffffffffffff841683836114c6565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f5114171661104d57637939f4245f526004601cfd5b5f60605260405250505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b6110c361109d6020830183611b0d565b7f91765d13665119d9c89a9e8beb9cfeb4a5a44ca96d7513e297e1357af2479ef061150f565b6110f9576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003611138576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61114c610be56060850160408601611b0d565b611156575f61115c565b82608001355b90505f6111776111726060860160408701611b0d565b610990565b90505f61118d6111726080870160608801611b0d565b9050825f036111c3576111c36111a96060870160408801611b0d565b6111b96040880160208901611b0d565b8760800135610efb565b846080013582101561120e576040517fcf479181000000000000000000000000000000000000000000000000000000008152608086013560048201526024810183905260440161058e565b5f8061121d6020880188611b0d565b73ffffffffffffffffffffffffffffffffffffffff168561124160a08a018a611b2f565b60405161124f929190611fb6565b5f6040518083038185875af1925050503d805f8114611289576040519150601f19603f3d011682016040523d82523d5f602084013e61128e565b606091505b5091509150816112a1576112a181611677565b5f6112b561117260808a0160608b01611b0d565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896112e660208b018b611b0d565b6112f660608c0160408d01611b0d565b61130660808d0160608e01611b0d565b8c608001358987116113185786611322565b6113228a88611a6c565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156114a75773ffffffffffffffffffffffffffffffffffffffff83166113e9576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa15801561145c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114809190611fc5565b10156114a7576114a773ffffffffffffffffffffffffffffffffffffffff85168483611681565b50505050565b5f385f3884865af161096a5763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716611506576390b8ec185f526004601cfd5b5f603452505050565b6040805173ffffffffffffffffffffffffffffffffffffffff84811660248084019190915283518084039091018152604490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ffab46d660000000000000000000000000000000000000000000000000000000017905291515f9283928392918616916115a39190611fdc565b5f60405180830381855afa9150503d805f81146115db576040519150601f19603f3d011682016040523d82523d5f602084013e6115e0565b606091505b50915091508180156115f3575080516040145b1561166d575f5f8280602001905181019061160e9190611ff2565b90925090507f10ff0000000000000000000000000000000000000000000000000000000000007fffffff000000000000000000000000000000000000000000000000000000000083160161166a573b151593506109d492505050565b50505b505050503b151590565b8051602082018181fd5b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716611506575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f5114171661150657633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff81118282101715611750576117506116ff565b60405290565b5f82601f830112611765575f5ffd5b813567ffffffffffffffff81111561177f5761177f6116ff565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff811182821017156117cc576117cc6116ff565b6040528181528382016020018510156117e3575f5ffd5b816020850160208301375f918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611820575f5ffd5b50565b803561182e816117ff565b919050565b8035801515811461182e575f5ffd5b5f6101408284031215611853575f5ffd5b61185b61172c565b823581529050602082013567ffffffffffffffff81111561187a575f5ffd5b61188684828501611756565b602083015250604082013567ffffffffffffffff8111156118a5575f5ffd5b6118b184828501611756565b6040830152506118c360608301611823565b60608201526118d460808301611823565b60808201526118e560a08301611823565b60a082015260c0828101359082015260e0808301359082015261190b6101008301611833565b61010082015261191e6101208301611833565b61012082015292915050565b5f610100828403121561193b575f5ffd5b50919050565b5f5f5f5f60608587031215611954575f5ffd5b843567ffffffffffffffff81111561196a575f5ffd5b61197687828801611842565b945050602085013567ffffffffffffffff811115611992575f5ffd5b8501601f810187136119a2575f5ffd5b803567ffffffffffffffff8111156119b8575f5ffd5b8760208260051b84010111156119cc575f5ffd5b60209190910193509150604085013567ffffffffffffffff8111156119ef575f5ffd5b6119fb8782880161192a565b91505092959194509250565b5f5f60408385031215611a18575f5ffd5b823567ffffffffffffffff811115611a2e575f5ffd5b611a3a85828601611842565b925050602083013567ffffffffffffffff811115611a56575f5ffd5b611a628582860161192a565b9150509250929050565b818103818111156109d4577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611b03575f5ffd5b9190910192915050565b5f60208284031215611b1d575f5ffd5b8135611b28816117ff565b9392505050565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611b62575f5ffd5b83018035915067ffffffffffffffff821115611b7c575f5ffd5b602001915036819003821315611b90575f5ffd5b9250929050565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611bca575f5ffd5b83018035915067ffffffffffffffff821115611be4575f5ffd5b6020019150600581901b3603821315611b90575f5ffd5b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b5f8151808452602084019350602083015f5b82811015611c8d57815173ffffffffffffffffffffffffffffffffffffffff16865260209586019590910190600101611c59565b5093949350505050565b602081525f82516101206020840152611cb4610140840182611bfb565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016040850152611cef8282611bfb565b91505060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611d2b8282611c47565b9150506060840151611d55608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015160c084015260c0840151611d9560e085018215159052565b5060e084015173ffffffffffffffffffffffffffffffffffffffff8116610100850152506101008401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084830301610120850152611df48282611bfb565b95945050505050565b60208152815160208201525f60208301516101406040840152611e24610160840182611bfb565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611e5f8282611bfb565b9150506060840151611e89608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e0840151610100840152610100840151611ef861012085018215159052565b50610120840151801515610140850152509392505050565b5f60208284031215611f20575f5ffd5b611b2882611833565b5f5f85851115611f37575f5ffd5b83861115611f43575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015611faf577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b5f60208284031215611fd5575f5ffd5b5051919050565b5f82518060208501845e5f920191825250919050565b5f5f60408385031215612003575f5ffd5b82517fffffff000000000000000000000000000000000000000000000000000000000081168114612032575f5ffd5b6020840151909250612043816117ff565b80915050925092905056fea2646970667358221220c5d5c760a2d786b2006be8c50cdadf1a1a60adaabaffa05bedc54e7d80f6989464736f6c634300081d0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var SymbiosisFacet__factory = /** @class */ (function (_super) {
    __extends(SymbiosisFacet__factory, _super);
    function SymbiosisFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    SymbiosisFacet__factory.prototype.deploy = function (_symbiosisMetaRouter, _symbiosisGateway, overrides) {
        return _super.prototype.deploy.call(this, _symbiosisMetaRouter, _symbiosisGateway, overrides || {});
    };
    SymbiosisFacet__factory.prototype.getDeployTransaction = function (_symbiosisMetaRouter, _symbiosisGateway, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _symbiosisMetaRouter, _symbiosisGateway, overrides || {});
    };
    SymbiosisFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    SymbiosisFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    SymbiosisFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    SymbiosisFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    SymbiosisFacet__factory.bytecode = _bytecode;
    SymbiosisFacet__factory.abi = _abi;
    return SymbiosisFacet__factory;
}(ethers_1.ContractFactory));
exports.SymbiosisFacet__factory = SymbiosisFacet__factory;
