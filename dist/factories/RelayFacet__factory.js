"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.RelayFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_relayReceiver",
                type: "address",
                internalType: "address",
            },
            {
                name: "_relaySolver",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "relayReceiver",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "relaySolver",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "startBridgeTokensViaRelay",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_relayData",
                type: "tuple",
                internalType: "struct RelayFacet.RelayData",
                components: [
                    {
                        name: "requestId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "nonEVMReceiver",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "receivingAssetId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "signature",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaRelay",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_relayData",
                type: "tuple",
                internalType: "struct RelayFacet.RelayData",
                components: [
                    {
                        name: "requestId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "nonEVMReceiver",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "receivingAssetId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "signature",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "BridgeToNonEVMChain",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InsufficientBalance",
        inputs: [
            {
                name: "required",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "balance",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidQuote",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NativeAssetTransferFailed",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NoTransferToNullAddress",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAnERC20Token",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
    {
        type: "error",
        name: "SliceOutOfBounds",
        inputs: [],
    },
    {
        type: "error",
        name: "SliceOverflow",
        inputs: [],
    },
];
var _bytecode = "0x60c06040523480156200001157600080fd5b5060405162002f5338038062002f53833981016040819052620000349162000069565b6001600160a01b039182166080521660a052620000a1565b80516001600160a01b03811681146200006457600080fd5b919050565b600080604083850312156200007d57600080fd5b62000088836200004c565b915062000098602084016200004c565b90509250929050565b60805160a051612e72620000e160003960008181606b015281816102e00152818161060c0152610bd601526000818160c80152610ace0152612e726000f3fe60806040526004361061003f5760003560e01c806325d374e81461004457806381d82dd814610059578063981886a7146100b6578063ae328590146100ea575b600080fd5b61005761005236600461289a565b6100fd565b005b34801561006557600080fd5b5061008d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100c257600080fd5b5061008d7f000000000000000000000000000000000000000000000000000000000000000081565b6100576100f8366004612959565b61051a565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610178576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155608085015160e08601518691849160009161028d918435914691309173ffffffffffffffffffffffffffffffffffffffff16906101b89061085b565b60a089015173ffffffffffffffffffffffffffffffffffffffff167311f111f111f111f111f111f111f111f111f111f11461020d5760a089015173ffffffffffffffffffffffffffffffffffffffff16610213565b87602001355b604080516020810197909752868101959095526060860193909352608085019190915260a084015260c083015284013560e082015261010001604051602081830303815290604052805190602001206020527b19457468657265756d205369676e6564204d6573736167653a0a3332600052603c60042090565b905060006102dc826102a260608601866129c6565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061089192505050565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610363576040517ff861803000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360006103703447612a61565b90508a8061010001516103af576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b806101200151156103ed576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c6104108160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610447576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610485576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104c2576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104d78e600001518f60c001518f8f3361093b565b60c08f01526104e68e8c610a83565b504791505081811115610508576105086000846105038585612a61565b610e29565b50506000909555505050505050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610595576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181556105a283612a74565b8260006105f38260000135463073ffffffffffffffffffffffffffffffffffffffff1660001b866080015173ffffffffffffffffffffffffffffffffffffffff1660001b6101b88860e0015161085b565b90506000610608826102a260608601866129c6565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461068f576040517ff861803000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600061069c3447612a61565b90506106a789612a74565b60a081015173ffffffffffffffffffffffffffffffffffffffff166106f8576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610736576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610773576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61077c8a612a74565b806101000151156107b9576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107c28b612a74565b806101200151156107ff576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61081c61081260a08e0160808f01612a80565b8d60c00135610e5f565b61082e6108288d612a74565b8c610a83565b50479150508181111561084b5761084b6000846105038585612a61565b5050600090955550505050505050565b6000816512309ce54001036108745750627dee6e919050565b81660416edef1601be0361088d5750632f3fb341919050565b5090565b60405160019083600052602083015160405260408351036108e657604083015160ff81901c601b016020527f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660605261090c565b604183510361090757606083015160001a602052604083015160605261090c565b600091505b6020600160806000855afa5191503d61092d57638baa579f6000526004601cfd5b600060605260405292915050565b600082808203610977576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610986600185612a61565b81811061099557610995612a9b565b90506020028101906109a79190612aca565b6109b8906080810190606001612a80565b905060006109c582610fd5565b905073ffffffffffffffffffffffffffffffffffffffff82166109ef576109ec3482612a61565b90505b60006109fb888861108e565b9050610a07888861119a565b610a148a89898985611207565b600082610a2085610fd5565b610a2a9190612a61565b905089811015610a75576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b608082015173ffffffffffffffffffffffffffffffffffffffff16610bb75760c08201516040805183356020820152600092839273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610b2891612b2c565b60006040518083038185875af1925050503d8060008114610b65576040519150601f19603f3d011682016040523d82523d6000602084013e610b6a565b606091505b509150915081610bb057610b7d816115b9565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6c9190612b88565b5050610d65565b60c082015160405173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001660248201526044810191909152600090606401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529051610c93918535910190815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610ccf9291602001612b9b565b6040516020818303038152906040529050600080846080015173ffffffffffffffffffffffffffffffffffffffff1683604051610d0c9190612b2c565b6000604051808303816000865af19150503d8060008114610d49576040519150601f19603f3d011682016040523d82523d6000602084013e610d4e565b606091505b509150915081610d6157610b7d816115b9565b5050505b7311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff1603610dee5760e0820151825160405160208481013582527f7be3e48a8a8b4d32138937e1809ac83481fffe48e49bb60e43ed1d3d50349e4c910160405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f182604051610e1d9190612bca565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff831615610e5557610e50838383611637565b505050565b610e5082826117b9565b80600003610e99576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610ef25780341015610eee576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610f5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f839190612cdd565b905081811015610fc9576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610a6c565b610e50833330856118e3565b600073ffffffffffffffffffffffffffffffffffffffff821615611086576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa15801561105d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110819190612cdd565b611088565b475b92915050565b60608160008167ffffffffffffffff8111156110ac576110ac612614565b6040519080825280602002602001820160405280156110d5578160200160208202803683370190505b5090506000805b8381101561118f578686828181106110f6576110f6612a9b565b90506020028101906111089190612aca565b611119906080810190606001612a80565b915061112482610fd5565b83828151811061113657611136612a9b565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216611187573483828151811061116f5761116f612a9b565b602002602001018181516111839190612a61565b9052505b6001016110dc565b509095945050505050565b60005b81811015610e5057368383838181106111b8576111b8612a9b565b90506020028101906111ca9190612aca565b90506111dc60e0820160c08301612cf6565b156111fe576111fe6111f46060830160408401612a80565b8260800135610e5f565b5060010161119d565b8383838382600181146114d45760008585611223600185612a61565b81811061123257611232612a9b565b90506020028101906112449190612aca565b611255906080810190606001612a80565b9050600089815b8181101561140057368d8d8381811061127757611277612a9b565b90506020028101906112899190612aca565b90506112b861129e6060830160408401612a80565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061131b575061131b6112d16040830160208401612a80565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561133257506113326112d16020830183612a80565b80156113b757506113b761134960a08301836129c6565b61135891600491600091612d13565b61136191612d3d565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6113ed576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113f78f82611afd565b5060010161125c565b505060005b611410600185612a61565b8110156114cc57600088888381811061142b5761142b612a9b565b905060200281019061143d9190612aca565b61144e906080810190606001612a80565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114c35785828151811061149557611495612a9b565b60200260200101516114a682610fd5565b6114b09190612a61565b925082156114c3576114c3818885610e29565b50600101611405565b5050506115ad565b8760005b818110156115aa57368b8b838181106114f3576114f3612a9b565b90506020028101906115059190612aca565b905061151a61129e6060830160408401612a80565b8061153357506115336112d16040830160208401612a80565b801561154a575061154a6112d16020830183612a80565b8015611561575061156161134960a08301836129c6565b611597576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115a18d82611afd565b506001016114d8565b50505b50505050505050505050565b60606044825110156115fe57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b600061161a60048085516116129190612a61565b859190611ddb565b9050808060200190518101906116309190612d85565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8316611684576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166116d1576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa15801561173e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117629190612cdd565b9050808211156117a8576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610a6c565b6117b3848484611ef5565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216611806576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611849576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610a6c565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146118a3576040519150601f19603f3d011682016040523d82523d6000602084013e6118a8565b606091505b5050905080610e50576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416611930576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661197d576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa1580156119ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a129190612cdd565b9050611a2082868686611fc9565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611a90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ab49190612cdd565b611abe9190612a61565b14611af5576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b611b13611b0d6020830183612a80565b3b151590565b611b49576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611b89576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b9e61129e6060850160408601612a80565b611ba9576000611baf565b82608001355b90506000611bcb611bc66060860160408701612a80565b610fd5565b90506000611be2611bc66080870160608801612a80565b905082600003611c1957611c19611bff6060870160408801612a80565b611c0f6040880160208901612a80565b8760800135612027565b8460800135821015611c64576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610a6c565b600080611c746020880188612a80565b73ffffffffffffffffffffffffffffffffffffffff1685611c9860a08a018a6129c6565b604051611ca6929190612dfc565b60006040518083038185875af1925050503d8060008114611ce3576040519150601f19603f3d011682016040523d82523d6000602084013e611ce8565b606091505b509150915081611cfb57611cfb8161216a565b6000611d10611bc660808a0160608b01612a80565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611d4160208b018b612a80565b611d5160608c0160408d01612a80565b611d6160808d0160608e01612a80565b8c60800135898711611d735786611d7d565b611d7d8a88612a61565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b606081611de981601f612e0c565b1015611e21576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611e2b8284612e0c565b84511015611e65576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611e845760405191506000825260208201604052611eec565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611ebd578051835260209283019201611ea5565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610e509084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612174565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526117b39085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611f47565b73ffffffffffffffffffffffffffffffffffffffff831661204757505050565b73ffffffffffffffffffffffffffffffffffffffff8216612094576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015612109573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061212d9190612cdd565b1015610e505761213f83836000612283565b610e5083837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612283565b8051602082018181fd5b60006121d6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166124059092919063ffffffff16565b90508051600014806121f75750808060200190518101906121f79190612e1f565b610e50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610a6c565b80158061232357506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156122fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123219190612cdd565b155b6123af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610a6c565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610e509084907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611f47565b6060612414848460008561241c565b949350505050565b6060824710156124ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610a6c565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516124d79190612b2c565b60006040518083038185875af1925050503d8060008114612514576040519150601f19603f3d011682016040523d82523d6000602084013e612519565b606091505b509150915061252a87838387612535565b979650505050505050565b606083156125cb5782516000036125c45773ffffffffffffffffffffffffffffffffffffffff85163b6125c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a6c565b5081612414565b61241483838151156125e05781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6c9190612b88565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561266757612667612614565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156126b4576126b4612614565b604052919050565b600067ffffffffffffffff8211156126d6576126d6612614565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261271357600080fd5b8135612726612721826126bc565b61266d565b81815284602083860101111561273b57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461277c57600080fd5b919050565b801515811461278f57600080fd5b50565b803561277c81612781565b600061014082840312156127b057600080fd5b6127b8612643565b905081358152602082013567ffffffffffffffff808211156127d957600080fd5b6127e585838601612702565b602084015260408401359150808211156127fe57600080fd5b5061280b84828501612702565b60408301525061281d60608301612758565b606082015261282e60808301612758565b608082015261283f60a08301612758565b60a082015260c082013560c082015260e082013560e0820152610100612866818401612792565b90820152610120612878838201612792565b9082015292915050565b60006080828403121561289457600080fd5b50919050565b600080600080606085870312156128b057600080fd5b843567ffffffffffffffff808211156128c857600080fd5b6128d48883890161279d565b955060208701359150808211156128ea57600080fd5b818701915087601f8301126128fe57600080fd5b81358181111561290d57600080fd5b8860208260051b850101111561292257600080fd5b60208301955080945050604087013591508082111561294057600080fd5b5061294d87828801612882565b91505092959194509250565b6000806040838503121561296c57600080fd5b823567ffffffffffffffff8082111561298457600080fd5b90840190610140828703121561299957600080fd5b909250602084013590808211156129af57600080fd5b506129bc85828601612882565b9150509250929050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126129fb57600080fd5b83018035915067ffffffffffffffff821115612a1657600080fd5b602001915036819003821315612a2b57600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561108857611088612a32565b6000611088368361279d565b600060208284031215612a9257600080fd5b61163082612758565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612afe57600080fd5b9190910192915050565b60005b83811015612b23578181015183820152602001612b0b565b50506000910152565b60008251612afe818460208701612b08565b60008151808452612b56816020860160208601612b08565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006116306020830184612b3e565b60008351612bad818460208801612b08565b835190830190612bc1818360208801612b08565b01949350505050565b602081528151602082015260006020830151610140806040850152612bf3610160850183612b3e565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152612c2e8382612b3e565b9250506060850151612c58608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120612ccb8187018315159052565b90950151151593019290925250919050565b600060208284031215612cef57600080fd5b5051919050565b600060208284031215612d0857600080fd5b813561163081612781565b60008085851115612d2357600080fd5b83861115612d3057600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612d7d5780818660040360031b1b83161692505b505092915050565b600060208284031215612d9757600080fd5b815167ffffffffffffffff811115612dae57600080fd5b8201601f81018413612dbf57600080fd5b8051612dcd612721826126bc565b818152856020838501011115612de257600080fd5b612df3826020830160208601612b08565b95945050505050565b8183823760009101908152919050565b8082018082111561108857611088612a32565b600060208284031215612e3157600080fd5b81516116308161278156fea2646970667358221220ee14ee36a7e8bb1e4d87715b710efaa5a6d31bd457bf36742dba4682f83cc4c964736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var RelayFacet__factory = /** @class */ (function (_super) {
    __extends(RelayFacet__factory, _super);
    function RelayFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    RelayFacet__factory.prototype.deploy = function (_relayReceiver, _relaySolver, overrides) {
        return _super.prototype.deploy.call(this, _relayReceiver, _relaySolver, overrides || {});
    };
    RelayFacet__factory.prototype.getDeployTransaction = function (_relayReceiver, _relaySolver, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _relayReceiver, _relaySolver, overrides || {});
    };
    RelayFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    RelayFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    RelayFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    RelayFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    RelayFacet__factory.bytecode = _bytecode;
    RelayFacet__factory.abi = _abi;
    return RelayFacet__factory;
}(ethers_1.ContractFactory));
exports.RelayFacet__factory = RelayFacet__factory;
