import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DiamondCutFacet, DiamondCutFacetInterface } from "../DiamondCutFacet";
declare type DiamondCutFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class DiamondCutFacet__factory extends ContractFactory {
    constructor(...args: DiamondCutFacetConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<DiamondCutFacet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): DiamondCutFacet;
    connect(signer: Signer): DiamondCutFacet__factory;
    static readonly bytecode = "0x608060405234801561000f575f80fd5b5061168a8061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c80631f931c1c1461002d575b5f80fd5b61004061003b3660046110cf565b610042565b005b61004a61009a565b6100936100578587611240565b8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061010f92505050565b5050505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff16331461010d576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f5b835181101561029f575f84828151811061012d5761012d61138a565b60200260200101516020015190505f600281111561014d5761014d6113b7565b81600281111561015f5761015f6113b7565b036101ac576101a78583815181106101795761017961138a565b60200260200101515f01518684815181106101965761019661138a565b6020026020010151604001516102ea565b610296565b60018160028111156101c0576101c06113b7565b03610208576101a78583815181106101da576101da61138a565b60200260200101515f01518684815181106101f7576101f761138a565b60200260200101516040015161057d565b600281600281111561021c5761021c6113b7565b03610264576101a78583815181106102365761023661138a565b60200260200101515f01518684815181106102535761025361138a565b602002602001015160400151610820565b6040517fe548e6b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50600101610111565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516102d39392919061144f565b60405180910390a16102e58282610958565b505050565b80515f03610324576040517f7bc5595000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c73ffffffffffffffffffffffffffffffffffffffff8316610392576040517fc68ec83a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff83165f908152600182016020526040812054906bffffffffffffffffffffffff821690036103d9576103d98285610af4565b5f5b8351811015610093575f8482815181106103f7576103f761138a565b6020908102919091018101517fffffffff0000000000000000000000000000000000000000000000000000000081165f9081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff168015610485576040517fa023275d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffff0000000000000000000000000000000000000000000000000000000082165f81815260208781526040808320805473ffffffffffffffffffffffffffffffffffffffff908116740100000000000000000000000000000000000000006bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281547fffffffffffffffffffffffff0000000000000000000000000000000000000000161790555050600191820191016103db565b80515f036105b7576040517f7bc5595000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c73ffffffffffffffffffffffffffffffffffffffff8316610625576040517fc68ec83a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff83165f908152600182016020526040812054906bffffffffffffffffffffffff8216900361066c5761066c8285610af4565b5f5b8351811015610093575f84828151811061068a5761068a61138a565b6020908102919091018101517fffffffff0000000000000000000000000000000000000000000000000000000081165f9081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716810361071d576040517fa023275d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610728858284610b69565b7fffffffff0000000000000000000000000000000000000000000000000000000082165f81815260208781526040808320805473ffffffffffffffffffffffffffffffffffffffff908116740100000000000000000000000000000000000000006bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281547fffffffffffffffffffffffff00000000000000000000000000000000000000001617905550506001918201910161066e565b80515f0361085a576040517f7bc5595000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c73ffffffffffffffffffffffffffffffffffffffff8316156108c9576040517f79c9df2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b8251811015610952575f8382815181106108e7576108e761138a565b6020908102919091018101517fffffffff0000000000000000000000000000000000000000000000000000000081165f9081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16610948848284610b69565b50506001016108cb565b50505050565b73ffffffffffffffffffffffffffffffffffffffff82166109b0578051156109ac576040517f9811686000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80515f036109ea576040517f4220056600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82163014610a1057610a1082611026565b5f808373ffffffffffffffffffffffffffffffffffffffff1683604051610a3791906115b5565b5f60405180830381855af49150503d805f8114610a6f576040519150601f19603f3d011682016040523d82523d5f602084013e610a74565b606091505b50915091508161095257805115610ac257806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab991906115d0565b60405180910390fd5b6040517fc53ebed500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610afd81611026565b60028201805473ffffffffffffffffffffffffffffffffffffffff9092165f8181526001948501602090815260408220860185905594840183559182529290200180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b73ffffffffffffffffffffffffffffffffffffffff8216610bb6576040517fa9ad62f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff831603610c05576040517fc3c5ec3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081165f908152602084815260408083205473ffffffffffffffffffffffffffffffffffffffff86168452600180880190935290832054740100000000000000000000000000000000000000009091046bffffffffffffffffffffffff169291610c8e916115e9565b9050808214610dd25773ffffffffffffffffffffffffffffffffffffffff84165f9081526001860160205260408120805483908110610ccf57610ccf61138a565b5f918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610d2c57610d2c61138a565b5f91825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff0000000000000000000000000000000000000000000000000000000092909216825286905260409020805473ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000006bffffffffffffffffffffffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff84165f9081526001860160205260409020805480610e0757610e07611627565b5f828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff0000000000000000000000000000000000000000000000000000000085168252869052604081208190558190036100935760028501545f90610e9e906001906115e9565b73ffffffffffffffffffffffffffffffffffffffff86165f908152600180890160205260409091200154909150808214610f88575f876002018381548110610ee857610ee861138a565b5f9182526020909120015460028901805473ffffffffffffffffffffffffffffffffffffffff9092169250829184908110610f2557610f2561138a565b5f91825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff948516179055929091168152600189810190925260409020018190555b86600201805480610f9b57610f9b611627565b5f828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff88168252600189810190915260408220015550505050505050565b803b5f8190036109ac576040517fe350060000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b803573ffffffffffffffffffffffffffffffffffffffff81168114611085575f80fd5b919050565b5f8083601f84011261109a575f80fd5b50813567ffffffffffffffff8111156110b1575f80fd5b6020830191508360208285010111156110c8575f80fd5b9250929050565b5f805f805f606086880312156110e3575f80fd5b853567ffffffffffffffff808211156110fa575f80fd5b818801915088601f83011261110d575f80fd5b81358181111561111b575f80fd5b8960208260051b850101111561112f575f80fd5b6020830197508096505061114560208901611062565b9450604088013591508082111561115a575f80fd5b506111678882890161108a565b969995985093965092949392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040516060810167ffffffffffffffff811182821017156111c8576111c8611178565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561121557611215611178565b604052919050565b5f67ffffffffffffffff82111561123657611236611178565b5060051b60200190565b5f61125261124d8461121d565b6111ce565b83815260208082019190600586811b86013681111561126f575f80fd5b865b8181101561137d57803567ffffffffffffffff80821115611290575f80fd5b818a019150606082360312156112a4575f80fd5b6112ac6111a5565b6112b583611062565b815286830135600381106112c7575f80fd5b81880152604083810135838111156112dd575f80fd5b939093019236601f8501126112f0575f80fd5b8335925061130061124d8461121d565b83815292871b8401880192888101903685111561131b575f80fd5b948901945b848610156113665785357fffffffff0000000000000000000000000000000000000000000000000000000081168114611357575f80fd5b82529489019490890190611320565b918301919091525088525050948301948301611271565b5092979650505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f5b838110156113fe5781810151838201526020016113e6565b50505f910152565b5f815180845261141d8160208601602086016113e4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b5f6060808301606084528087518083526080925060808601915060808160051b8701016020808b015f5b84811015611578577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8503018652815188850173ffffffffffffffffffffffffffffffffffffffff82511686528482015160038110611500577f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b868601526040918201519186018a9052815190819052908401905f90898701905b808310156115635783517fffffffff00000000000000000000000000000000000000000000000000000000168252928601926001929092019190860190611521565b50978501979550505090820190600101611479565b505073ffffffffffffffffffffffffffffffffffffffff8a169088015286810360408801526115a78189611406565b9a9950505050505050505050565b5f82516115c68184602087016113e4565b9190910192915050565b602081525f6115e26020830184611406565b9392505050565b81810381811115611621577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfea2646970667358221220b717a7b6a9746602e372ed9e8945d8f4228535f52674919b0a002f92fff2ed1364736f6c63430008160033";
    static readonly abi: readonly [{
        readonly type: "function";
        readonly name: "diamondCut";
        readonly inputs: readonly [{
            readonly name: "_diamondCut";
            readonly type: "tuple[]";
            readonly internalType: "struct LibDiamond.FacetCut[]";
            readonly components: readonly [{
                readonly name: "facetAddress";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "action";
                readonly type: "uint8";
                readonly internalType: "enum LibDiamond.FacetCutAction";
            }, {
                readonly name: "functionSelectors";
                readonly type: "bytes4[]";
                readonly internalType: "bytes4[]";
            }];
        }, {
            readonly name: "_init";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "_calldata";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "event";
        readonly name: "DiamondCut";
        readonly inputs: readonly [{
            readonly name: "_diamondCut";
            readonly type: "tuple[]";
            readonly indexed: false;
            readonly internalType: "struct LibDiamond.FacetCut[]";
            readonly components: readonly [{
                readonly name: "facetAddress";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "action";
                readonly type: "uint8";
                readonly internalType: "enum LibDiamond.FacetCutAction";
            }, {
                readonly name: "functionSelectors";
                readonly type: "bytes4[]";
                readonly internalType: "bytes4[]";
            }];
        }, {
            readonly name: "_init";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "_calldata";
            readonly type: "bytes";
            readonly indexed: false;
            readonly internalType: "bytes";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "error";
        readonly name: "CalldataEmptyButInitNotZero";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "FacetAddressIsNotZero";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "FacetAddressIsZero";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "FacetContainsNoCode";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "FunctionAlreadyExists";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "FunctionDoesNotExist";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "FunctionIsImmutable";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "IncorrectFacetCutAction";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InitReverted";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InitZeroButCalldataNotEmpty";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NoSelectorsInFace";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "OnlyContractOwner";
        readonly inputs: readonly [];
    }];
    static createInterface(): DiamondCutFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): DiamondCutFacet;
}
export {};
