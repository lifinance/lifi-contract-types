import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DiamondCutFacet, DiamondCutFacetInterface } from "../DiamondCutFacet";
declare type DiamondCutFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class DiamondCutFacet__factory extends ContractFactory {
    constructor(...args: DiamondCutFacetConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<DiamondCutFacet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): DiamondCutFacet;
    connect(signer: Signer): DiamondCutFacet__factory;
    static readonly bytecode = "";
    static readonly abi: readonly [{
        readonly type: "function";
        readonly name: "bla";
        readonly inputs: readonly [];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "diamondCut";
        readonly inputs: readonly [{
            readonly name: "_diamondCut";
            readonly type: "tuple[]";
            readonly internalType: "struct LibDiamond.FacetCut[]";
            readonly components: readonly [{
                readonly name: "facetAddress";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "action";
                readonly type: "uint8";
                readonly internalType: "enum LibDiamond.FacetCutAction";
            }, {
                readonly name: "functionSelectors";
                readonly type: "bytes4[]";
                readonly internalType: "bytes4[]";
            }];
        }, {
            readonly name: "_init";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "_calldata";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "event";
        readonly name: "DiamondCut";
        readonly inputs: readonly [{
            readonly name: "_diamondCut";
            readonly type: "tuple[]";
            readonly indexed: false;
            readonly internalType: "struct LibDiamond.FacetCut[]";
            readonly components: readonly [{
                readonly name: "facetAddress";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "action";
                readonly type: "uint8";
                readonly internalType: "enum LibDiamond.FacetCutAction";
            }, {
                readonly name: "functionSelectors";
                readonly type: "bytes4[]";
                readonly internalType: "bytes4[]";
            }];
        }, {
            readonly name: "_init";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "_calldata";
            readonly type: "bytes";
            readonly indexed: false;
            readonly internalType: "bytes";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "error";
        readonly name: "CalldataEmptyButInitNotZero";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "FacetAddressIsNotZero";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "FacetAddressIsZero";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "FacetContainsNoCode";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "FunctionAlreadyExists";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "FunctionDoesNotExist";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "FunctionIsImmutable";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "IncorrectFacetCutAction";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InitReverted";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InitZeroButCalldataNotEmpty";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NoSelectorsInFace";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "OnlyContractOwner";
        readonly inputs: readonly [];
    }];
    static createInterface(): DiamondCutFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): DiamondCutFacet;
}
export {};
