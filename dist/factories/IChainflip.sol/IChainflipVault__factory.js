"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IChainflipVault__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "xSwapNative",
        inputs: [
            {
                name: "dstChain",
                type: "uint32",
                internalType: "uint32",
            },
            {
                name: "dstAddress",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "dstToken",
                type: "uint32",
                internalType: "uint32",
            },
            {
                name: "cfParameters",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "xSwapToken",
        inputs: [
            {
                name: "dstChain",
                type: "uint32",
                internalType: "uint32",
            },
            {
                name: "dstAddress",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "dstToken",
                type: "uint32",
                internalType: "uint32",
            },
            {
                name: "srcToken",
                type: "address",
                internalType: "contract IERC20",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "cfParameters",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
];
var IChainflipVault__factory = /** @class */ (function () {
    function IChainflipVault__factory() {
    }
    IChainflipVault__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    IChainflipVault__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    IChainflipVault__factory.abi = _abi;
    return IChainflipVault__factory;
}());
exports.IChainflipVault__factory = IChainflipVault__factory;
