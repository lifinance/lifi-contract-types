"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.EcoFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_portal",
                type: "address",
                internalType: "contract IEcoPortal",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "portal",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract IEcoPortal",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "startBridgeTokensViaEco",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_ecoData",
                type: "tuple",
                internalType: "struct EcoFacet.EcoData",
                components: [
                    {
                        name: "receiverAddress",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "nonEVMReceiver",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "prover",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "rewardDeadline",
                        type: "uint64",
                        internalType: "uint64",
                    },
                    {
                        name: "solverReward",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "encodedRoute",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaEco",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_ecoData",
                type: "tuple",
                internalType: "struct EcoFacet.EcoData",
                components: [
                    {
                        name: "receiverAddress",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "nonEVMReceiver",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "prover",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "rewardDeadline",
                        type: "uint64",
                        internalType: "uint64",
                    },
                    {
                        name: "solverReward",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "encodedRoute",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "AssetSwapped",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
            {
                name: "dex",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "BridgeToNonEVMChain",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes",
                indexed: false,
                internalType: "bytes",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "BridgeToNonEVMChainBytes32",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidConfig",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
];
var _bytecode = "0x60a060405234801561000f575f5ffd5b5060405161231038038061231083398101604081905261002e91610066565b6001600160a01b038116610055576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b0316608052610093565b5f60208284031215610076575f5ffd5b81516001600160a01b038116811461008c575f5ffd5b9392505050565b6080516122586100b85f395f8181605d015281816108f3015261093101526122585ff3fe608060405260043610610033575f3560e01c80632c6c215e146100375780636425666b1461004c578063b8b161bc146100a8575b5f5ffd5b61004a610045366004611bcb565b6100bb565b005b348015610057575f5ffd5b5061007f7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61004a6100b6366004611c91565b610324565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610136576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6101463447611d23565b905086806101000151610185576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101a88160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101df576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f0361021c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610259576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102638987610542565b5f6102868a6080015173ffffffffffffffffffffffffffffffffffffffff161590565b610290575f610296565b86608001355b90506102ad8a5f01518b60c001518b8b33866106cd565b60c08b015260808a015173ffffffffffffffffffffffffffffffffffffffff16156102ec5786608001358a60c001516102e69190611d23565b60c08b01525b6102f68a88610869565b504791505081811115610317576103175f846103128585611d23565b6109db565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161039f576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6103af3447611d23565b9050846103d48160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561040b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610448576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610485576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156104c3576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104cd8787610542565b60c0870151608088015173ffffffffffffffffffffffffffffffffffffffff161561050357610500608088013582611d36565b90505b610511886080015182610a10565b61051b8888610869565b504791505081811115610537576105375f846103128585611d23565b50505f909155505050565b61054f60a0820182611d49565b90505f03610589576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a082015173ffffffffffffffffffffffffffffffffffffffff167311f111f111f111f111f111f111f111f111f111f11480156105d257506105ce6020820182611d49565b1590505b15610609576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81610120015115801561064a575060a082015173ffffffffffffffffffffffffffffffffffffffff167311f111f111f111f111f111f111f111f111f111f114155b8015610692575061065e6020820182611db1565b73ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff1614155b156106c9576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b5f83808203610708576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8686610716600185611d23565b81811061072557610725611dd3565b90506020028101906107379190611e00565b610748906080810190606001611db1565b90505f61075482610ac0565b905073ffffffffffffffffffffffffffffffffffffffff821661077e5761077b3482611d23565b90505b5f6107898989610b0a565b90506107958989610c14565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff891660208201529081018790526107d0818b8b85610c80565b5f836107db86610ac0565b6107e59190611d23565b905073ffffffffffffffffffffffffffffffffffffffff851661080f5761080c8882611d23565b90505b8b811015610857576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d90526024810182905260440160405180910390fd5b955050505050505b9695505050505050565b5f6108748383610e50565b90505f6108848460e0015161104e565b90505f6108a9856080015173ffffffffffffffffffffffffffffffffffffffff161590565b90505f816108b7575f6108cb565b84608001358660c001516108cb9190611d36565b90508161091a575f85608001358760c001516108e79190611d36565b905061091887608001517f000000000000000000000000000000000000000000000000000000000000000083611085565b505b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663df00f8fa828561096560a08a018a611d49565b895f6040518763ffffffff1660e01b8152600401610987959493929190611e83565b604080518083038185885af11580156109a2573d5f5f3e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906109c79190611f87565b50506109d386866110b1565b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610a0557610a008282611183565b505050565b610a008383836111f0565b805f03610a49576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610a9e57803410156106c9576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106c973ffffffffffffffffffffffffffffffffffffffff831633308461125e565b5f73ffffffffffffffffffffffffffffffffffffffff821615610b0257610afd73ffffffffffffffffffffffffffffffffffffffff8316306112b6565b610b04565b475b92915050565b6060815f8167ffffffffffffffff811115610b2757610b2761198a565b604051908082528060200260200182016040528015610b50578160200160208202803683370190505b5090505f5f5b83811015610c0957868682818110610b7057610b70611dd3565b9050602002810190610b829190611e00565b610b93906080810190606001611db1565b9150610b9e82610ac0565b838281518110610bb057610bb0611dd3565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610c015734838281518110610be957610be9611dd3565b60200260200101818151610bfd9190611d23565b9052505b600101610b56565b509095945050505050565b5f5b81811015610a005736838383818110610c3157610c31611dd3565b9050602002810190610c439190611e00565b9050610c5560e0820160c08301611fb5565b15610c7757610c77610c6d6060830160408401611db1565b8260800135610a10565b50600101610c16565b60208401516040850151849184918490835f5b81811015610e3657368a8a83818110610cae57610cae611dd3565b9050602002810190610cc09190611e00565b9050610cef610cd56060830160408401611db1565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610d515750610d51610d086040830160208401611db1565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610d685750610d68610d086020830183611db1565b8015610deb5750610deb610d7f60a0830183611d49565b610d8d916004915f91611fce565b610d9691611ff5565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610e21576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b51610e2d90826112e9565b50600101610c93565b5050610e45858585858561155c565b505050505050505050565b610eb46040518060a001604052805f67ffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f8152602001606081525090565b5f610ed7846080015173ffffffffffffffffffffffffffffffffffffffff161590565b9050606081610f815760408051600180825281830190925290816020015b604080518082019091525f8082526020820152815260200190600190039081610ef55790505090506040518060400160405280866080015173ffffffffffffffffffffffffffffffffffffffff16815260200185608001358760c00151610f5c9190611d36565b815250815f81518110610f7157610f71611dd3565b6020026020010181905250610fc0565b604080515f8082526020820190925290610fbc565b604080518082019091525f8082526020820152815260200190600190039081610f965790505b5090505b6040805160a0810190915280610fdc608087016060880161205b565b67ffffffffffffffff1681523360208201526040908101906110049060608801908801611db1565b73ffffffffffffffffffffffffffffffffffffffff1681526020018361102a575f61103d565b60c087015161103d906080880135611d36565b815260200191909152949350505050565b5f6606b2787ad08cbc82036110685750632b6653dc919050565b660416edef1601be8203611081575063536f6c4d919050565b5090565b610a008383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611773565b7311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff16036111485760e082015182517ff9b69f466270c99522169d563c0a430e88c52865ec33b1cc36ee2a4a6ea5170b6111316020850185611d49565b60405161113f929190612082565b60405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161117791906120e9565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff82166111d0576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106c973ffffffffffffffffffffffffffffffffffffffff8316826118a0565b73ffffffffffffffffffffffffffffffffffffffff821661123d576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a0073ffffffffffffffffffffffffffffffffffffffff841683836118b9565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f511417166112a957637939f4245f526004601cfd5b5f60605260405250505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b6113016112f96020830183611db1565b6017903b1190565b611337576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003611376576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61138a610cd56060850160408601611db1565b611394575f61139a565b82608001355b90505f6113b56113b06080860160608701611db1565b610ac0565b9050815f036113eb576113eb6113d16060860160408701611db1565b6113e16040870160208801611db1565b8660800135611085565b5f806113fa6020870187611db1565b73ffffffffffffffffffffffffffffffffffffffff168461141e60a0890189611d49565b60405161142c9291906121fc565b5f6040518083038185875af1925050503d805f8114611466576040519150601f19603f3d011682016040523d82523d5f602084013e61146b565b606091505b50915091508161147e5761147e81611902565b5f6114926113b06080890160608a01611db1565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38886114c360208a018a611db1565b6114d360608b0160408c01611db1565b6114e360808c0160608d01611db1565b8b608001358987116114f557866114ff565b6114ff8a88611d23565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f868261156b600182611d23565b81811061157a5761157a611dd3565b905060200281019061158c9190611e00565b61159d906080810190606001611db1565b90505f5f5f5f5f5f5f5b88811015611763576115ba60018a611d23565b811080156115c9575088600114155b156116a4578d8d828181106115e0576115e0611dd3565b90506020028101906115f29190611e00565b611603906080810190606001611db1565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146116a4578a818151811061164a5761164a611dd3565b602002602001015161165b87610ac0565b6116659190611d23565b965073ffffffffffffffffffffffffffffffffffffffff861615611689575f61168b565b895b9350838711156116a4576116a4868d610312878b611d23565b8d8d828181106116b6576116b6611dd3565b90506020028101906116c89190611e00565b6116d9906060810190604001611db1565b94506116e485610ac0565b925073ffffffffffffffffffffffffffffffffffffffff851615611708575f61170a565b895b9150818311801561174757508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b1561175b5761175b858d6103128587611d23565b6001016115a7565b5050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff84161561189a5773ffffffffffffffffffffffffffffffffffffffff83166117dc576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa15801561184f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611873919061220b565b101561189a5761189a73ffffffffffffffffffffffffffffffffffffffff8516848361190c565b50505050565b5f385f3884865af16106c95763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166118f9576390b8ec185f526004601cfd5b5f603452505050565b8051602082018181fd5b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f511417166118f9575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f511417166118f957633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff811182821017156119db576119db61198a565b60405290565b5f82601f8301126119f0575f5ffd5b813567ffffffffffffffff811115611a0a57611a0a61198a565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff81118282101715611a5757611a5761198a565b604052818152838201602001851015611a6e575f5ffd5b816020850160208301375f918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611aab575f5ffd5b50565b8035611ab981611a8a565b919050565b80358015158114611ab9575f5ffd5b5f6101408284031215611ade575f5ffd5b611ae66119b7565b823581529050602082013567ffffffffffffffff811115611b05575f5ffd5b611b11848285016119e1565b602083015250604082013567ffffffffffffffff811115611b30575f5ffd5b611b3c848285016119e1565b604083015250611b4e60608301611aae565b6060820152611b5f60808301611aae565b6080820152611b7060a08301611aae565b60a082015260c0828101359082015260e08083013590820152611b966101008301611abe565b610100820152611ba96101208301611abe565b61012082015292915050565b5f60c08284031215611bc5575f5ffd5b50919050565b5f5f5f5f60608587031215611bde575f5ffd5b843567ffffffffffffffff811115611bf4575f5ffd5b611c0087828801611acd565b945050602085013567ffffffffffffffff811115611c1c575f5ffd5b8501601f81018713611c2c575f5ffd5b803567ffffffffffffffff811115611c42575f5ffd5b8760208260051b8401011115611c56575f5ffd5b60209190910193509150604085013567ffffffffffffffff811115611c79575f5ffd5b611c8587828801611bb5565b91505092959194509250565b5f5f60408385031215611ca2575f5ffd5b823567ffffffffffffffff811115611cb8575f5ffd5b611cc485828601611acd565b925050602083013567ffffffffffffffff811115611ce0575f5ffd5b611cec85828601611bb5565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b81810381811115610b0457610b04611cf6565b80820180821115610b0457610b04611cf6565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611d7c575f5ffd5b83018035915067ffffffffffffffff821115611d96575f5ffd5b602001915036819003821315611daa575f5ffd5b9250929050565b5f60208284031215611dc1575f5ffd5b8135611dcc81611a8a565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611e32575f5ffd5b9190910192915050565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b67ffffffffffffffff86168152608060208201525f611ea6608083018688611e3c565b828103604084015260a0810167ffffffffffffffff865116825273ffffffffffffffffffffffffffffffffffffffff602087015116602083015273ffffffffffffffffffffffffffffffffffffffff604087015116604083015260608601516060830152608086015160a0608084015281815180845260c0850191506020830194505f93505b80841015611f73578451925073ffffffffffffffffffffffffffffffffffffffff835116825260208301516020830152604082019150602085019450600184019350611f2c565b508615156060870152935061085f92505050565b5f5f60408385031215611f98575f5ffd5b825191506020830151611faa81611a8a565b809150509250929050565b5f60208284031215611fc5575f5ffd5b611dcc82611abe565b5f5f85851115611fdc575f5ffd5b83861115611fe8575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015612054577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b5f6020828403121561206b575f5ffd5b813567ffffffffffffffff81168114611dcc575f5ffd5b602081525f612095602083018486611e3c565b949350505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f6020830151610140604084015261211061016084018261209d565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084830301606085015261214b828261209d565b9150506060840151612175608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e08401516101008401526101008401516121e461012085018215159052565b50610120840151801515610140850152509392505050565b818382375f9101908152919050565b5f6020828403121561221b575f5ffd5b505191905056fea26469706673582212204ddee135e5b17ac3fe3798f37ccde03cdda35dfd1915e3e14c8e1614637b5fde64736f6c634300081d0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var EcoFacet__factory = /** @class */ (function (_super) {
    __extends(EcoFacet__factory, _super);
    function EcoFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    EcoFacet__factory.prototype.deploy = function (_portal, overrides) {
        return _super.prototype.deploy.call(this, _portal, overrides || {});
    };
    EcoFacet__factory.prototype.getDeployTransaction = function (_portal, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _portal, overrides || {});
    };
    EcoFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    EcoFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    EcoFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    EcoFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    EcoFacet__factory.bytecode = _bytecode;
    EcoFacet__factory.abi = _abi;
    return EcoFacet__factory;
}(ethers_1.ContractFactory));
exports.EcoFacet__factory = EcoFacet__factory;
