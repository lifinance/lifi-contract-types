"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.EcoFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_intentSource",
                type: "address",
                internalType: "contract IEcoPortal",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "intentSource",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract IEcoPortal",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "startBridgeTokensViaEco",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_ecoData",
                type: "tuple",
                internalType: "struct EcoFacet.EcoData",
                components: [
                    {
                        name: "receiverAddress",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "nonEVMReceiver",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "salt",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "routeDeadline",
                        type: "uint64",
                        internalType: "uint64",
                    },
                    {
                        name: "destinationPortal",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "prover",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "rewardDeadline",
                        type: "uint64",
                        internalType: "uint64",
                    },
                    {
                        name: "solverReward",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationCalls",
                        type: "tuple[]",
                        internalType: "struct IEcoPortal.Call[]",
                        components: [
                            {
                                name: "target",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "data",
                                type: "bytes",
                                internalType: "bytes",
                            },
                            {
                                name: "value",
                                type: "uint256",
                                internalType: "uint256",
                            },
                        ],
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaEco",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_ecoData",
                type: "tuple",
                internalType: "struct EcoFacet.EcoData",
                components: [
                    {
                        name: "receiverAddress",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "nonEVMReceiver",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "salt",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "routeDeadline",
                        type: "uint64",
                        internalType: "uint64",
                    },
                    {
                        name: "destinationPortal",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "prover",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "rewardDeadline",
                        type: "uint64",
                        internalType: "uint64",
                    },
                    {
                        name: "solverReward",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationCalls",
                        type: "tuple[]",
                        internalType: "struct IEcoPortal.Call[]",
                        components: [
                            {
                                name: "target",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "data",
                                type: "bytes",
                                internalType: "bytes",
                            },
                            {
                                name: "value",
                                type: "uint256",
                                internalType: "uint256",
                            },
                        ],
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "AssetSwapped",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
            {
                name: "dex",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "BridgeToNonEVMChain",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes",
                indexed: false,
                internalType: "bytes",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "BridgeToNonEVMChainBytes32",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidConfig",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
];
var _bytecode = "0x60a060405234801561000f575f5ffd5b50604051612a3c380380612a3c83398101604081905261002e91610066565b6001600160a01b038116610055576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b0316608052610093565b5f60208284031215610076575f5ffd5b81516001600160a01b038116811461008c575f5ffd5b9392505050565b60805161297d6100bf5f395f8181605d01528181610f3201528181610ff10152611057015261297d5ff3fe608060405260043610610033575f3560e01c806358c72aef14610037578063db1e44071461004c578063ea275c5f146100a8575b5f5ffd5b61004a610045366004612043565b6100bb565b005b348015610057575f5ffd5b5061007f7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61004a6100b63660046120a8565b6102a1565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610136576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f610146344761219b565b90508461016b8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101a2576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036101df576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361021c576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b858061010001511561025a576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61026c87608001518860c00151610490565b6102768787610544565b5047905081811115610296576102965f84610291858561219b565b610593565b50505f909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161031c576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f61032c344761219b565b90508680610100015161036b576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8761038e8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103c5576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610402576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361043f576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610459895f01518a60c001518a8a338b61010001356105c8565b60c08a01526104688987610544565b5047905081811115610483576104835f84610291858561219b565b50505f9091555050505050565b805f036104c9576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610522578034101561051e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61051e73ffffffffffffffffffffffffffffffffffffffff8316333084610762565b61054e82826107ba565b5f6105598383610950565b90505f6105668484610c5b565b90505f61057585858585610d57565b9050610582858583610f05565b61058c85856110de565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff83166105bd576105b882826111b0565b505050565b6105b883838361121d565b5f83808203610603576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f868661061160018561219b565b818110610620576106206121ae565b905060200281019061063291906121db565b610643906080810190606001612217565b90505f61064f8261128b565b905073ffffffffffffffffffffffffffffffffffffffff821661067957610676348261219b565b90505b5f61068489896112d4565b905061069089896113de565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff891660208201529081018790526106cb818b8b8561144a565b5f836106d68661128b565b6106e0919061219b565b905073ffffffffffffffffffffffffffffffffffffffff851661070a57610707888261219b565b90505b8b811015610752576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d90526024810182905260440160405180910390fd5b9c9b505050505050505050505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f511417166107ad57637939f4245f526004601cfd5b5f60605260405250505050565b81610120015115155f828061012001906107d49190612232565b905011151514610810576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816101200151158015610851575060a082015173ffffffffffffffffffffffffffffffffffffffff167311f111f111f111f111f111f111f111f111f111f114155b801561089957506108656020820182612217565b73ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff1614155b156108d0576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a082015173ffffffffffffffffffffffffffffffffffffffff167311f111f111f111f111f111f111f111f111f111f11480156109195750610915602082018261229d565b1590505b1561051e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60605f610961610120840184612232565b9050111561098757610977610120830183612232565b610980916122fe565b9050610c55565b7311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168360a0015173ffffffffffffffffffffffffffffffffffffffff1603610a3a57604080515f8082526020820190925290610a32565b610a1f60405180606001604052805f73ffffffffffffffffffffffffffffffffffffffff168152602001606081526020015f81525090565b8152602001906001900390816109e75790505b509050610c55565b6040805160018082528183019092525f91816020015b610a8860405180606001604052805f73ffffffffffffffffffffffffffffffffffffffff168152602001606081526020015f81525090565b815260200190600190039081610a50579050509050610aca610ab06060850160408601612217565b73ffffffffffffffffffffffffffffffffffffffff161590565b610be4576040518060600160405280846040016020810190610aec9190612217565b73ffffffffffffffffffffffffffffffffffffffff168152602090810190610b1690860186612217565b60c087015160405173ffffffffffffffffffffffffffffffffffffffff90921660248301526044820152606401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529082525f91018190528251839190610bd457610bd46121ae565b6020026020010181905250610c52565b604080516060810190915280610bfd6020860186612217565b73ffffffffffffffffffffffffffffffffffffffff16815260200160405180602001604052805f81525081526020018560c00151815250815f81518110610c4657610c466121ae565b60200260200101819052505b90505b92915050565b6060610c7f836080015173ffffffffffffffffffffffffffffffffffffffff161590565b15610cc657604080515f8082526020820190925290610a32565b604080518082019091525f8082526020820152815260200190600190039081610c99579050509050610c55565b6040805160018082528183019092525f91816020015b604080518082019091525f8082526020820152815260200190600190039081610cdc5790505090506040518060400160405280846040016020810190610d229190612217565b73ffffffffffffffffffffffffffffffffffffffff1681526020018560c00151815250815f81518110610c4657610c466121ae565b610d5f611cfa565b5f610d82866080015173ffffffffffffffffffffffffffffffffffffffff161590565b905060405180606001604052808760e0015167ffffffffffffffff1681526020016040518060c0016040528088606001358152602001886080016020810190610dcb91906123eb565b67ffffffffffffffff168152602001610dea60c08a0160a08b01612217565b73ffffffffffffffffffffffffffffffffffffffff16815260200184610e10575f610e16565b8960c001515b81526020018681526020018781525081526020016040518060a001604052808860e0016020810190610e4891906123eb565b67ffffffffffffffff168152336020820152604001610e6d60e08a0160c08b01612217565b73ffffffffffffffffffffffffffffffffffffffff16815260200184610e9857886101000135610eac565b60c08a0151610eac906101008b0135612412565b81526020015f604051908082528060200260200182016040528015610ef657816020015b604080518082019091525f8082526020820152815260200190600190039081610ed05790505b50905290529695505050505050565b5f610f28846080015173ffffffffffffffffffffffffffffffffffffffff161590565b90508015610fe7577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e353b5e68461010001358660c00151610f819190612412565b845f6040518463ffffffff1660e01b8152600401610fa0929190612547565b604080518083038185885af1158015610fbb573d5f5f3e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190610fe091906126ee565b50506110d8565b61101a84608001517f00000000000000000000000000000000000000000000000000000000000000008660c00151611600565b6040517fe353b5e600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063e353b5e690610100860135906110959086905f90600401612547565b604080518083038185885af11580156110b0573d5f5f3e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906110d591906126ee565b50505b50505050565b7311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff16036111755760e082015182517ff9b69f466270c99522169d563c0a430e88c52865ec33b1cc36ee2a4a6ea5170b61115e602085018561229d565b60405161116c92919061271c565b60405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1826040516111a49190612768565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff82166111fd576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61051e73ffffffffffffffffffffffffffffffffffffffff83168261162c565b73ffffffffffffffffffffffffffffffffffffffff821661126a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105b873ffffffffffffffffffffffffffffffffffffffff84168383611645565b5f73ffffffffffffffffffffffffffffffffffffffff8216156112cd576112c873ffffffffffffffffffffffffffffffffffffffff83163061168e565b610c55565b4792915050565b6060815f8167ffffffffffffffff8111156112f1576112f1611d9c565b60405190808252806020026020018201604052801561131a578160200160208202803683370190505b5090505f5f5b838110156113d35786868281811061133a5761133a6121ae565b905060200281019061134c91906121db565b61135d906080810190606001612217565b91506113688261128b565b83828151811061137a5761137a6121ae565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff82166113cb57348382815181106113b3576113b36121ae565b602002602001018181516113c7919061219b565b9052505b600101611320565b509095945050505050565b5f5b818110156105b857368383838181106113fb576113fb6121ae565b905060200281019061140d91906121db565b905061141f60e0820160c0830161287b565b15611441576114416114376060830160408401612217565b8260800135610490565b506001016113e0565b60208401516040850151849184918490835f5b818110156115e657368a8a83818110611478576114786121ae565b905060200281019061148a91906121db565b905061149f610ab06060830160408401612217565b8061150157506115016114b86040830160208401612217565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561151857506115186114b86020830183612217565b801561159b575061159b61152f60a083018361229d565b61153d916004915f91612894565b611546916128bb565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6115d1576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b516115dd90826116c1565b5060010161145d565b50506115f58585858585611934565b505050505050505050565b6105b88383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611b4b565b5f385f3884865af161051e5763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716611685576390b8ec185f526004601cfd5b5f603452505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b6116d96116d16020830183612217565b6017903b1190565b61170f576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f81900361174e576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f611762610ab06060850160408601612217565b61176c575f611772565b82608001355b90505f61178d6117886080860160608701612217565b61128b565b9050815f036117c3576117c36117a96060860160408701612217565b6117b96040870160208801612217565b8660800135611600565b5f806117d26020870187612217565b73ffffffffffffffffffffffffffffffffffffffff16846117f660a089018961229d565b604051611804929190612921565b5f6040518083038185875af1925050503d805f811461183e576040519150601f19603f3d011682016040523d82523d5f602084013e611843565b606091505b5091509150816118565761185681611c72565b5f61186a6117886080890160608a01612217565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861189b60208a018a612217565b6118ab60608b0160408c01612217565b6118bb60808c0160608d01612217565b8b608001358987116118cd57866118d7565b6118d78a8861219b565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f868261194360018261219b565b818110611952576119526121ae565b905060200281019061196491906121db565b611975906080810190606001612217565b90505f5f5f5f5f5f5f5b88811015611b3b5761199260018a61219b565b811080156119a1575088600114155b15611a7c578d8d828181106119b8576119b86121ae565b90506020028101906119ca91906121db565b6119db906080810190606001612217565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611a7c578a8181518110611a2257611a226121ae565b6020026020010151611a338761128b565b611a3d919061219b565b965073ffffffffffffffffffffffffffffffffffffffff861615611a61575f611a63565b895b935083871115611a7c57611a7c868d610291878b61219b565b8d8d82818110611a8e57611a8e6121ae565b9050602002810190611aa091906121db565b611ab1906060810190604001612217565b9450611abc8561128b565b925073ffffffffffffffffffffffffffffffffffffffff851615611ae0575f611ae2565b895b91508183118015611b1f57508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b15611b3357611b33858d610291858761219b565b60010161197f565b5050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156110d85773ffffffffffffffffffffffffffffffffffffffff8316611bb4576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611c27573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c4b9190612930565b10156110d8576110d873ffffffffffffffffffffffffffffffffffffffff85168483611c7c565b8051602082018181fd5b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716611685575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f5114171661168557633e3f8f735f526004601cfd5b60405180606001604052805f67ffffffffffffffff168152602001611d6a6040518060c001604052805f81526020015f67ffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f815260200160608152602001606081525090565b81526040805160a0810182525f8082526020828101829052928201819052606080830191909152608082015291015290565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff81118282101715611ded57611ded611d9c565b60405290565b6040516060810167ffffffffffffffff81118282101715611ded57611ded611d9c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611e5d57611e5d611d9c565b604052919050565b5f5f67ffffffffffffffff841115611e7f57611e7f611d9c565b50601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016602001611eb281611e16565b915050828152838383011115611ec6575f5ffd5b828260208301375f602084830101529392505050565b5f82601f830112611eeb575f5ffd5b611efa83833560208501611e65565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611f22575f5ffd5b50565b8035611f3081611f01565b919050565b80358015158114611f30575f5ffd5b5f6101408284031215611f55575f5ffd5b611f5d611dc9565b823581529050602082013567ffffffffffffffff811115611f7c575f5ffd5b611f8884828501611edc565b602083015250604082013567ffffffffffffffff811115611fa7575f5ffd5b611fb384828501611edc565b604083015250611fc560608301611f25565b6060820152611fd660808301611f25565b6080820152611fe760a08301611f25565b60a082015260c0828101359082015260e0808301359082015261200d6101008301611f35565b6101008201526120206101208301611f35565b61012082015292915050565b5f610140828403121561203d575f5ffd5b50919050565b5f5f60408385031215612054575f5ffd5b823567ffffffffffffffff81111561206a575f5ffd5b61207685828601611f44565b925050602083013567ffffffffffffffff811115612092575f5ffd5b61209e8582860161202c565b9150509250929050565b5f5f5f5f606085870312156120bb575f5ffd5b843567ffffffffffffffff8111156120d1575f5ffd5b6120dd87828801611f44565b945050602085013567ffffffffffffffff8111156120f9575f5ffd5b8501601f81018713612109575f5ffd5b803567ffffffffffffffff81111561211f575f5ffd5b8760208260051b8401011115612133575f5ffd5b60209190910193509150604085013567ffffffffffffffff811115612156575f5ffd5b6121628782880161202c565b91505092959194509250565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b81810381811115610c5557610c5561216e565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261220d575f5ffd5b9190910192915050565b5f60208284031215612227575f5ffd5b8135610c5281611f01565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612265575f5ffd5b83018035915067ffffffffffffffff82111561227f575f5ffd5b6020019150600581901b3603821315612296575f5ffd5b9250929050565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126122d0575f5ffd5b83018035915067ffffffffffffffff8211156122ea575f5ffd5b602001915036819003821315612296575f5ffd5b5f67ffffffffffffffff83111561231757612317611d9c565b8260051b61232760208201611e16565b8481529083019060208101903683111561233f575f5ffd5b845b838110156123e157803567ffffffffffffffff81111561235f575f5ffd5b86016060368290031215612371575f5ffd5b612379611df3565b813561238481611f01565b8152602082013567ffffffffffffffff81111561239f575f5ffd5b820136601f8201126123af575f5ffd5b6123be36823560208401611e65565b602083810191909152604093840135938301939093525084529283019201612341565b5095945050505050565b5f602082840312156123fb575f5ffd5b813567ffffffffffffffff81168114610c52575f5ffd5b80820180821115610c5557610c5561216e565b5f8151808452602084019350602083015f5b82811015612477578151805173ffffffffffffffffffffffffffffffffffffffff1687526020908101518188015260409096019590910190600101612437565b5093949350505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b67ffffffffffffffff815116825273ffffffffffffffffffffffffffffffffffffffff602082015116602083015273ffffffffffffffffffffffffffffffffffffffff6040820151166040830152606081015160608301525f608082015160a0608085015261253f60a0850182612425565b949350505050565b6040815267ffffffffffffffff83511660408201525f6020840151606080840152805160a084015267ffffffffffffffff60208201511660c084015273ffffffffffffffffffffffffffffffffffffffff60408201511660e08401526060810151610100840152608081015160c06101208501526125c9610160850182612425565b60a092909201518483037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60016101408601528051808452602091820193925081830191600582901b8401015f5b8281101561269d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858303018452855173ffffffffffffffffffffffffffffffffffffffff815116835260208101516060602085015261267a6060850182612481565b604092830151949092019390935260209687019694909401939150600101612616565b50604089015194507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08782030160808801526126d981866124cd565b95505050505050611efa602083018415159052565b5f5f604083850312156126ff575f5ffd5b82519150602083015161271181611f01565b809150509250929050565b60208152816020820152818360408301375f818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b60208152815160208201525f6020830151610140604084015261278f610160840182612481565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160608501526127ca8282612481565b91505060608401516127f4608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e084015161010084015261010084015161286361012085018215159052565b50610120840151801515610140850152509392505050565b5f6020828403121561288b575f5ffd5b611efa82611f35565b5f5f858511156128a2575f5ffd5b838611156128ae575f5ffd5b5050820193919092039150565b80357fffffffff00000000000000000000000000000000000000000000000000000000811690600484101561291a577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b5f60208284031215612940575f5ffd5b505191905056fea2646970667358221220b3b5b63bcbaf846c84c5279acfa5b9778806bc21fd011ea52591837a55ee0d8064736f6c634300081d0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var EcoFacet__factory = /** @class */ (function (_super) {
    __extends(EcoFacet__factory, _super);
    function EcoFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    EcoFacet__factory.prototype.deploy = function (_intentSource, overrides) {
        return _super.prototype.deploy.call(this, _intentSource, overrides || {});
    };
    EcoFacet__factory.prototype.getDeployTransaction = function (_intentSource, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _intentSource, overrides || {});
    };
    EcoFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    EcoFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    EcoFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    EcoFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    EcoFacet__factory.bytecode = _bytecode;
    EcoFacet__factory.abi = _abi;
    return EcoFacet__factory;
}(ethers_1.ContractFactory));
exports.EcoFacet__factory = EcoFacet__factory;
