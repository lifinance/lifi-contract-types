"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.EcoFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_defaultProver",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "DEFAULT_PROVER",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "startBridgeTokensViaEco",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_ecoData",
                type: "tuple",
                internalType: "struct EcoFacet.EcoData",
                components: [
                    {
                        name: "intentSource",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "prover",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "nonce",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "routeData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "allowPartial",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaEco",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_ecoData",
                type: "tuple",
                internalType: "struct EcoFacet.EcoData",
                components: [
                    {
                        name: "intentSource",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "prover",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "nonce",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "routeData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "allowPartial",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "AssetSwapped",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
            {
                name: "dex",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "BridgeToNonEVMChain",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes",
                indexed: false,
                internalType: "bytes",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "BridgeToNonEVMChainBytes32",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidDeadline",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidProver",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
];
var _bytecode = "0x60a0604052348015600e575f5ffd5b50604051611f9a380380611f9a833981016040819052602b916061565b6001600160a01b038116605157604051635945f53b60e01b815260040160405180910390fd5b6001600160a01b0316608052608c565b5f602082840312156070575f5ffd5b81516001600160a01b03811681146085575f5ffd5b9392505050565b608051611ef06100aa5f395f81816048015261079b0152611ef05ff3fe608060405260043610610033575f3560e01c8063498307bf146100375780636bc7ad90146100935780639da72393146100a8575b5f5ffd5b348015610042575f5ffd5b5061006a7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100a66100a13660046118c5565b6100bb565b005b6100a66100b636600461192a565b6102e0565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610136576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f61014634476119f0565b90508461016b8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101a2576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036101df576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361021c576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b858061010001511561025a576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610298576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102aa88608001518960c00151610508565b6102b488886105bc565b5047915050818111156102d5576102d55f846102d085856119f0565b610964565b50505f909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161035b576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f61036b34476119f0565b9050868061010001516103aa576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101200151156103e8576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8861040b8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610442576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f0361047f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104bc576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104d08a5f01518b60c001518b8b33610999565b60c08b01526104df8a886105bc565b5047915050818111156104fb576104fb5f846102d085856119f0565b50505f9091555050505050565b805f03610541576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661059a5780341015610596576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61059673ffffffffffffffffffffffffffffffffffffffff8316333084610adb565b5f6105ca6020830183611a28565b73ffffffffffffffffffffffffffffffffffffffff1603610617576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b42816060013511610654576040517f769d11e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805160608101825230815260e084015160208201525f91810161067c60a0850185611a48565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920182905250939094525050604080516001808252818301909252939450909291506020808301908036833750506040805160018082528183019092529293505f929150602080830190803683370190505090508460800151825f8151811061071057610710611ab0565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508460c00151815f8151811061076157610761611ab0565b60209081029190910101525f8061077e6060870160408801611a28565b73ffffffffffffffffffffffffffffffffffffffff16036107bf577f00000000000000000000000000000000000000000000000000000000000000006107cf565b6107cf6060860160408701611a28565b6040805160a08101825273ffffffffffffffffffffffffffffffffffffffff8084168252602080830188905282840187905260608a810135908401526080808b01358185015284518086019095528985529084018390528a0151939450909216156108545760808801516108549061084a60208a018a611a28565b8a60c00151610b33565b5f610877896080015173ffffffffffffffffffffffffffffffffffffffff161590565b610881575f610887565b8860c001515b90507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1896040516108b89190611b29565b60405180910390a16108cd6020890189611a28565b73ffffffffffffffffffffffffffffffffffffffff16637396c6bf82846108fa60e08d0160c08e01611c3c565b6040518463ffffffff1660e01b8152600401610917929190611c8f565b60206040518083038185885af1158015610933573d5f5f3e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906109589190611dcb565b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661098e576109898282610b5f565b505050565b610989838383610bcc565b5f828082036109d4576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f85856109e26001856119f0565b8181106109f1576109f1611ab0565b9050602002810190610a039190611de2565b610a14906080810190606001611a28565b90505f610a2082610c3a565b905073ffffffffffffffffffffffffffffffffffffffff8216610a4a57610a4734826119f0565b90505b5f610a558888610c84565b9050610a618888610d8e565b610a6e8a89898985610dfa565b5f82610a7985610c3a565b610a8391906119f0565b905089811015610acd576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f51141716610b2657637939f4245f526004601cfd5b5f60605260405250505050565b6109898383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610fbc565b73ffffffffffffffffffffffffffffffffffffffff8216610bac576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61059673ffffffffffffffffffffffffffffffffffffffff8316826110e9565b73ffffffffffffffffffffffffffffffffffffffff8216610c19576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61098973ffffffffffffffffffffffffffffffffffffffff84168383611102565b5f73ffffffffffffffffffffffffffffffffffffffff821615610c7c57610c7773ffffffffffffffffffffffffffffffffffffffff83163061114b565b610c7e565b475b92915050565b6060815f8167ffffffffffffffff811115610ca157610ca1611690565b604051908082528060200260200182016040528015610cca578160200160208202803683370190505b5090505f5f5b83811015610d8357868682818110610cea57610cea611ab0565b9050602002810190610cfc9190611de2565b610d0d906080810190606001611a28565b9150610d1882610c3a565b838281518110610d2a57610d2a611ab0565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610d7b5734838281518110610d6357610d63611ab0565b60200260200101818151610d7791906119f0565b9052505b600101610cd0565b509095945050505050565b5f5b818110156109895736838383818110610dab57610dab611ab0565b9050602002810190610dbd9190611de2565b9050610dcf60e0820160c08301611c3c565b15610df157610df1610de76060830160408401611a28565b8260800135610508565b50600101610d90565b83838383825f5b81811015610fa257368a8a83818110610e1c57610e1c611ab0565b9050602002810190610e2e9190611de2565b9050610e5d610e436060830160408401611a28565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610ebf5750610ebf610e766040830160208401611a28565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610ed65750610ed6610e766020830183611a28565b8015610f595750610f59610eed60a0830183611a48565b610efb916004915f91611e1e565b610f0491611e45565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610f8f576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f998c8261117e565b50600101610e01565b5050610fb1848484845f6113f1565b505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156110e35773ffffffffffffffffffffffffffffffffffffffff8316611025576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611098573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110bc9190611dcb565b10156110e3576110e373ffffffffffffffffffffffffffffffffffffffff85168483611608565b50505050565b5f385f3884865af16105965763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716611142576390b8ec185f526004601cfd5b5f603452505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b61119661118e6020830183611a28565b6017903b1190565b6111cc576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f81900361120b576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61121f610e436060850160408601611a28565b611229575f61122f565b82608001355b90505f61124a6112456080860160608701611a28565b610c3a565b9050815f03611280576112806112666060860160408701611a28565b6112766040870160208801611a28565b8660800135610b33565b5f8061128f6020870187611a28565b73ffffffffffffffffffffffffffffffffffffffff16846112b360a0890189611a48565b6040516112c1929190611eab565b5f6040518083038185875af1925050503d805f81146112fb576040519150601f19603f3d011682016040523d82523d5f602084013e611300565b606091505b5091509150816113135761131381611686565b5f6113276112456080890160608a01611a28565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861135860208a018a611a28565b61136860608b0160408c01611a28565b61137860808c0160608d01611a28565b8b6080013589871161138a5786611394565b6113948a886119f0565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f86826114006001826119f0565b81811061140f5761140f611ab0565b90506020028101906114219190611de2565b611432906080810190606001611a28565b90505f5f5f5f5f5f5f5b888110156115f85761144f60018a6119f0565b8110801561145e575088600114155b15611539578d8d8281811061147557611475611ab0565b90506020028101906114879190611de2565b611498906080810190606001611a28565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611539578a81815181106114df576114df611ab0565b60200260200101516114f087610c3a565b6114fa91906119f0565b965073ffffffffffffffffffffffffffffffffffffffff86161561151e575f611520565b895b93508387111561153957611539868d6102d0878b6119f0565b8d8d8281811061154b5761154b611ab0565b905060200281019061155d9190611de2565b61156e906060810190604001611a28565b945061157985610c3a565b925073ffffffffffffffffffffffffffffffffffffffff85161561159d575f61159f565b895b915081831180156115dc57508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b156115f0576115f0858d6102d085876119f0565b60010161143c565b5050505050505050505050505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716611142575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f5114171661114257633e3f8f735f526004601cfd5b8051602082018181fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff811182821017156116e1576116e1611690565b60405290565b5f82601f8301126116f6575f5ffd5b813567ffffffffffffffff81111561171057611710611690565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff8111828210171561175d5761175d611690565b604052818152838201602001851015611774575f5ffd5b816020850160208301375f918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146117b3575f5ffd5b919050565b803580151581146117b3575f5ffd5b5f61014082840312156117d8575f5ffd5b6117e06116bd565b823581529050602082013567ffffffffffffffff8111156117ff575f5ffd5b61180b848285016116e7565b602083015250604082013567ffffffffffffffff81111561182a575f5ffd5b611836848285016116e7565b60408301525061184860608301611790565b606082015261185960808301611790565b608082015261186a60a08301611790565b60a082015260c0828101359082015260e0808301359082015261189061010083016117b8565b6101008201526118a361012083016117b8565b61012082015292915050565b5f60e082840312156118bf575f5ffd5b50919050565b5f5f604083850312156118d6575f5ffd5b823567ffffffffffffffff8111156118ec575f5ffd5b6118f8858286016117c7565b925050602083013567ffffffffffffffff811115611914575f5ffd5b611920858286016118af565b9150509250929050565b5f5f5f5f6060858703121561193d575f5ffd5b843567ffffffffffffffff811115611953575f5ffd5b61195f878288016117c7565b945050602085013567ffffffffffffffff81111561197b575f5ffd5b8501601f8101871361198b575f5ffd5b803567ffffffffffffffff8111156119a1575f5ffd5b8760208260051b84010111156119b5575f5ffd5b60209190910193509150604085013567ffffffffffffffff8111156119d8575f5ffd5b6119e4878288016118af565b91505092959194509250565b81810381811115610c7e577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f60208284031215611a38575f5ffd5b611a4182611790565b9392505050565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611a7b575f5ffd5b83018035915067ffffffffffffffff821115611a95575f5ffd5b602001915036819003821315611aa9575f5ffd5b9250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f60208301516101406040840152611b50610160840182611add565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611b8b8282611add565b9150506060840151611bb5608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e0840151610100840152610100840151611c2461012085018215159052565b50610120840151801515610140850152509392505050565b5f60208284031215611c4c575f5ffd5b611a41826117b8565b5f8151808452602084019350602083015f5b82811015611c85578151865260209586019590910190600101611c67565b5093949350505050565b60408082528351828201829052805173ffffffffffffffffffffffffffffffffffffffff166080840152602081015160a08401520151606060c08301525f90611cdb60e0840182611add565b905060208501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc084830301606085015260a0820173ffffffffffffffffffffffffffffffffffffffff8251168352602082015160a0602085015281815180845260c0860191506020830193505f92505b80831015611d855773ffffffffffffffffffffffffffffffffffffffff8451168252602082019150602084019350600183019250611d4c565b50604084015192508481036040860152611d9f8184611c55565b925050506060820151606084015260808201516080840152809350505050611a41602083018415159052565b5f60208284031215611ddb575f5ffd5b5051919050565b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611e14575f5ffd5b9190910192915050565b5f5f85851115611e2c575f5ffd5b83861115611e38575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015611ea4577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f910190815291905056fea26469706673582212209e1d8fea98925ee6b70dd03cd5c4375a9c653cfb04a1d00fd6c540881c2626c364736f6c634300081d0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var EcoFacet__factory = /** @class */ (function (_super) {
    __extends(EcoFacet__factory, _super);
    function EcoFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    EcoFacet__factory.prototype.deploy = function (_defaultProver, overrides) {
        return _super.prototype.deploy.call(this, _defaultProver, overrides || {});
    };
    EcoFacet__factory.prototype.getDeployTransaction = function (_defaultProver, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _defaultProver, overrides || {});
    };
    EcoFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    EcoFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    EcoFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    EcoFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    EcoFacet__factory.bytecode = _bytecode;
    EcoFacet__factory.abi = _abi;
    return EcoFacet__factory;
}(ethers_1.ContractFactory));
exports.EcoFacet__factory = EcoFacet__factory;
