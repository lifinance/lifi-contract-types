"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.EcoFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_defaultProver",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "DEFAULT_PROVER",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "startBridgeTokensViaEco",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_ecoData",
                type: "tuple",
                internalType: "struct EcoFacet.EcoData",
                components: [
                    {
                        name: "portal",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "destinationPortal",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "prover",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "routeDeadline",
                        type: "uint64",
                        internalType: "uint64",
                    },
                    {
                        name: "rewardDeadline",
                        type: "uint64",
                        internalType: "uint64",
                    },
                    {
                        name: "salt",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "calls",
                        type: "tuple[]",
                        internalType: "struct IEco.Call[]",
                        components: [
                            {
                                name: "target",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "data",
                                type: "bytes",
                                internalType: "bytes",
                            },
                            {
                                name: "value",
                                type: "uint256",
                                internalType: "uint256",
                            },
                        ],
                    },
                    {
                        name: "allowPartial",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaEco",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_ecoData",
                type: "tuple",
                internalType: "struct EcoFacet.EcoData",
                components: [
                    {
                        name: "portal",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "destinationPortal",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "prover",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "routeDeadline",
                        type: "uint64",
                        internalType: "uint64",
                    },
                    {
                        name: "rewardDeadline",
                        type: "uint64",
                        internalType: "uint64",
                    },
                    {
                        name: "salt",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "calls",
                        type: "tuple[]",
                        internalType: "struct IEco.Call[]",
                        components: [
                            {
                                name: "target",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "data",
                                type: "bytes",
                                internalType: "bytes",
                            },
                            {
                                name: "value",
                                type: "uint256",
                                internalType: "uint256",
                            },
                        ],
                    },
                    {
                        name: "allowPartial",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "AssetSwapped",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
            {
                name: "dex",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "BridgeToNonEVMChain",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes",
                indexed: false,
                internalType: "bytes",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "BridgeToNonEVMChainBytes32",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidDeadline",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidProver",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
];
var _bytecode = "0x60a0604052348015600e575f5ffd5b506040516123d43803806123d4833981016040819052602b916061565b6001600160a01b038116605157604051635945f53b60e01b815260040160405180910390fd5b6001600160a01b0316608052608c565b5f602082840312156070575f5ffd5b81516001600160a01b03811681146085575f5ffd5b9392505050565b60805161232a6100aa5f395f8181605d01526108ee015261232a5ff3fe608060405260043610610033575f3560e01c8063318e491e14610037578063498307bf1461004c578063f6ea0573146100a8575b5f5ffd5b61004a610045366004611ad1565b6100bb565b005b348015610057575f5ffd5b5061007f7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61004a6100b6366004611b36565b6103b5565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610136576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6101463447611bfc565b90508461016b8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101a2576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036101df576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361021c576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b845f61022b6020830183611c34565b73ffffffffffffffffffffffffffffffffffffffff1603610278576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b426102896080830160608401611c4d565b67ffffffffffffffff161115806102b95750426102ac60a0830160808401611c4d565b67ffffffffffffffff1611155b156102f0576040517f769d11e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868061010001511561032e576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561036c576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61037e89608001518a60c001516106b2565b6103888989610766565b504792505050818111156103aa576103aa5f846103a58585611bfc565b610b08565b50505f909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610430576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6104403447611bfc565b90508680610100015161047f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101200151156104bd576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886104e08160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610517576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610554576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610591576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b865f6105a06020830183611c34565b73ffffffffffffffffffffffffffffffffffffffff16036105ed576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b426105fe6080830160608401611c4d565b67ffffffffffffffff1611158061062e57504261062160a0830160808401611c4d565b67ffffffffffffffff1611155b15610665576040517f769d11e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106798b5f01518c60c001518c8c33610b3d565b60c08c01526106888b89610766565b504792505050818111156106a5576106a55f846103a58585611bfc565b50505f9091555050505050565b805f036106eb576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166107445780341015610740576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61074073ffffffffffffffffffffffffffffffffffffffff8316333084610c81565b6040805160018082528183019092525f91816020015b604080518082019091525f808252602082015281526020019060019003908161077c5790505090506040518060400160405280846080015173ffffffffffffffffffffffffffffffffffffffff1681526020018460c00151815250815f815181106107e9576107e9611c74565b60200260200101819052505f6040518060a001604052808460a00135815260200184606001602081019061081d9190611c4d565b67ffffffffffffffff16815260200184602001602081019061083f9190611c34565b73ffffffffffffffffffffffffffffffffffffffff1681526020810184905260400161086e60c0860186611ca1565b61087791611d0c565b81525090505f8160405160200161088e9190611e9f565b6040516020818303038152906040528051906020012090505f5f73ffffffffffffffffffffffffffffffffffffffff168560400160208101906108d19190611c34565b73ffffffffffffffffffffffffffffffffffffffff1603610912577f0000000000000000000000000000000000000000000000000000000000000000610922565b6109226060860160408701611c34565b604080515f808252602082019092529192509081610961565b604080518082019091525f808252602082015281526020019060019003908161093b5790505b5090505f6040518060a001604052808860800160208101906109839190611c4d565b67ffffffffffffffff16815233602082015273ffffffffffffffffffffffffffffffffffffffff85811660408301525f60608301526080918201859052908a015191925016156109ed5760808801516109ed906109e360208a018a611c34565b8a60c00151610cd9565b5f610a10896080015173ffffffffffffffffffffffffffffffffffffffff161590565b610a1a575f610a20565b8860c001515b90507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f189604051610a519190611fd6565b60405180910390a1610a666020890189611c34565b73ffffffffffffffffffffffffffffffffffffffff16639f24b4dd828b60e0015188868d60e0016020810190610a9c91906120e9565b6040518663ffffffff1660e01b8152600401610abb9493929190612102565b60206040518083038185885af1158015610ad7573d5f5f3e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190610afc91906121a4565b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610b3257610b2d8282610d05565b505050565b610b2d838383610d72565b5f82808203610b78576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8585610b86600185611bfc565b818110610b9557610b95611c74565b9050602002810190610ba791906121bb565b610bb8906080810190606001611c34565b90505f610bc482610de0565b905073ffffffffffffffffffffffffffffffffffffffff8216610bee57610beb3482611bfc565b90505b5f610bf98888610e2a565b9050610c058888610f34565b610c128a89898985610fa0565b5f82610c1d85610de0565b610c279190611bfc565b905089811015610c71576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9450505050505b95945050505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f51141716610ccc57637939f4245f526004601cfd5b5f60605260405250505050565b610b2d8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611162565b73ffffffffffffffffffffffffffffffffffffffff8216610d52576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61074073ffffffffffffffffffffffffffffffffffffffff83168261128f565b73ffffffffffffffffffffffffffffffffffffffff8216610dbf576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b2d73ffffffffffffffffffffffffffffffffffffffff841683836112a8565b5f73ffffffffffffffffffffffffffffffffffffffff821615610e2257610e1d73ffffffffffffffffffffffffffffffffffffffff8316306112f1565b610e24565b475b92915050565b6060815f8167ffffffffffffffff811115610e4757610e47611836565b604051908082528060200260200182016040528015610e70578160200160208202803683370190505b5090505f5f5b83811015610f2957868682818110610e9057610e90611c74565b9050602002810190610ea291906121bb565b610eb3906080810190606001611c34565b9150610ebe82610de0565b838281518110610ed057610ed0611c74565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610f215734838281518110610f0957610f09611c74565b60200260200101818151610f1d9190611bfc565b9052505b600101610e76565b509095945050505050565b5f5b81811015610b2d5736838383818110610f5157610f51611c74565b9050602002810190610f6391906121bb565b9050610f7560e0820160c083016120e9565b15610f9757610f97610f8d6060830160408401611c34565b82608001356106b2565b50600101610f36565b83838383825f5b8181101561114857368a8a83818110610fc257610fc2611c74565b9050602002810190610fd491906121bb565b9050611003610fe96060830160408401611c34565b73ffffffffffffffffffffffffffffffffffffffff161590565b80611065575061106561101c6040830160208401611c34565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561107c575061107c61101c6020830183611c34565b80156110ff57506110ff61109360a08301836121f7565b6110a1916004915f91612258565b6110aa9161227f565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611135576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61113f8c82611324565b50600101610fa7565b5050611157848484845f611597565b505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156112895773ffffffffffffffffffffffffffffffffffffffff83166111cb576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa15801561123e573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061126291906121a4565b10156112895761128973ffffffffffffffffffffffffffffffffffffffff851684836117ae565b50505050565b5f385f3884865af16107405763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166112e8576390b8ec185f526004601cfd5b5f603452505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b61133c6113346020830183611c34565b6017903b1190565b611372576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f8190036113b1576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6113c5610fe96060850160408601611c34565b6113cf575f6113d5565b82608001355b90505f6113f06113eb6080860160608701611c34565b610de0565b9050815f036114265761142661140c6060860160408701611c34565b61141c6040870160208801611c34565b8660800135610cd9565b5f806114356020870187611c34565b73ffffffffffffffffffffffffffffffffffffffff168461145960a08901896121f7565b6040516114679291906122e5565b5f6040518083038185875af1925050503d805f81146114a1576040519150601f19603f3d011682016040523d82523d5f602084013e6114a6565b606091505b5091509150816114b9576114b98161182c565b5f6114cd6113eb6080890160608a01611c34565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38886114fe60208a018a611c34565b61150e60608b0160408c01611c34565b61151e60808c0160608d01611c34565b8b60800135898711611530578661153a565b61153a8a88611bfc565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f86826115a6600182611bfc565b8181106115b5576115b5611c74565b90506020028101906115c791906121bb565b6115d8906080810190606001611c34565b90505f5f5f5f5f5f5f5b8881101561179e576115f560018a611bfc565b81108015611604575088600114155b156116df578d8d8281811061161b5761161b611c74565b905060200281019061162d91906121bb565b61163e906080810190606001611c34565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146116df578a818151811061168557611685611c74565b602002602001015161169687610de0565b6116a09190611bfc565b965073ffffffffffffffffffffffffffffffffffffffff8616156116c4575f6116c6565b895b9350838711156116df576116df868d6103a5878b611bfc565b8d8d828181106116f1576116f1611c74565b905060200281019061170391906121bb565b611714906060810190604001611c34565b945061171f85610de0565b925073ffffffffffffffffffffffffffffffffffffffff851615611743575f611745565b895b9150818311801561178257508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b1561179657611796858d6103a58587611bfc565b6001016115e2565b5050505050505050505050505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f511417166112e8575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f511417166112e857633e3f8f735f526004601cfd5b8051602082018181fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff8111828210171561188757611887611836565b60405290565b6040516060810167ffffffffffffffff8111828210171561188757611887611836565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156118f7576118f7611836565b604052919050565b5f5f67ffffffffffffffff84111561191957611919611836565b50601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200161194c816118b0565b915050828152838383011115611960575f5ffd5b828260208301375f602084830101529392505050565b5f82601f830112611985575f5ffd5b611994838335602085016118ff565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146119be575f5ffd5b919050565b803580151581146119be575f5ffd5b5f61014082840312156119e3575f5ffd5b6119eb611863565b823581529050602082013567ffffffffffffffff811115611a0a575f5ffd5b611a1684828501611976565b602083015250604082013567ffffffffffffffff811115611a35575f5ffd5b611a4184828501611976565b604083015250611a536060830161199b565b6060820152611a646080830161199b565b6080820152611a7560a0830161199b565b60a082015260c0828101359082015260e08083013590820152611a9b61010083016119c3565b610100820152611aae61012083016119c3565b61012082015292915050565b5f6101008284031215611acb575f5ffd5b50919050565b5f5f60408385031215611ae2575f5ffd5b823567ffffffffffffffff811115611af8575f5ffd5b611b04858286016119d2565b925050602083013567ffffffffffffffff811115611b20575f5ffd5b611b2c85828601611aba565b9150509250929050565b5f5f5f5f60608587031215611b49575f5ffd5b843567ffffffffffffffff811115611b5f575f5ffd5b611b6b878288016119d2565b945050602085013567ffffffffffffffff811115611b87575f5ffd5b8501601f81018713611b97575f5ffd5b803567ffffffffffffffff811115611bad575f5ffd5b8760208260051b8401011115611bc1575f5ffd5b60209190910193509150604085013567ffffffffffffffff811115611be4575f5ffd5b611bf087828801611aba565b91505092959194509250565b81810381811115610e24577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f60208284031215611c44575f5ffd5b6119948261199b565b5f60208284031215611c5d575f5ffd5b813567ffffffffffffffff81168114611994575f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611cd4575f5ffd5b83018035915067ffffffffffffffff821115611cee575f5ffd5b6020019150600581901b3603821315611d05575f5ffd5b9250929050565b5f67ffffffffffffffff831115611d2557611d25611836565b8260051b611d35602082016118b0565b84815290830190602081019036831115611d4d575f5ffd5b845b83811015611ded57803567ffffffffffffffff811115611d6d575f5ffd5b86016060368290031215611d7f575f5ffd5b611d8761188d565b611d908261199b565b8152602082013567ffffffffffffffff811115611dab575f5ffd5b820136601f820112611dbb575f5ffd5b611dca368235602084016118ff565b602083810191909152604093840135938301939093525084529283019201611d4f565b5095945050505050565b5f8151808452602084019350602083015f5b82811015611e49578151805173ffffffffffffffffffffffffffffffffffffffff1687526020908101518188015260409096019590910190600101611e09565b5093949350505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081528151602082015267ffffffffffffffff602083015116604082015273ffffffffffffffffffffffffffffffffffffffff60408301511660608201525f606083015160a06080840152611ef860c0840182611df7565b60808501518482037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00160a0860152805180835291925060209081019181840191600582901b8501015f5b82811015611fca577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868303018452845173ffffffffffffffffffffffffffffffffffffffff8151168352602081015160606020850152611fa76060850182611e53565b604092830151949092019390935260209586019594909401939150600101611f43565b50979650505050505050565b60208152815160208201525f60208301516101406040840152611ffd610160840182611e53565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160608501526120388282611e53565b9150506060840151612062608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e08401516101008401526101008401516120d161012085018215159052565b50610120840151801515610140850152509392505050565b5f602082840312156120f9575f5ffd5b611994826119c3565b67ffffffffffffffff851681528360208201526080604082015267ffffffffffffffff835116608082015273ffffffffffffffffffffffffffffffffffffffff60208401511660a082015273ffffffffffffffffffffffffffffffffffffffff60408401511660c0820152606083015160e08201525f608084015160a0610100840152612193610120840182611df7565b915050610c78606083018415159052565b5f602082840312156121b4575f5ffd5b5051919050565b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126121ed575f5ffd5b9190910192915050565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261222a575f5ffd5b83018035915067ffffffffffffffff821115612244575f5ffd5b602001915036819003821315611d05575f5ffd5b5f5f85851115612266575f5ffd5b83861115612272575f5ffd5b5050820193919092039150565b80357fffffffff0000000000000000000000000000000000000000000000000000000081169060048410156122de577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f910190815291905056fea2646970667358221220f41348af0230ded5b47e11a9624f8c1e7f9f72ac272cf7a7317243ce58e462df64736f6c634300081d0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var EcoFacet__factory = /** @class */ (function (_super) {
    __extends(EcoFacet__factory, _super);
    function EcoFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    EcoFacet__factory.prototype.deploy = function (_defaultProver, overrides) {
        return _super.prototype.deploy.call(this, _defaultProver, overrides || {});
    };
    EcoFacet__factory.prototype.getDeployTransaction = function (_defaultProver, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _defaultProver, overrides || {});
    };
    EcoFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    EcoFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    EcoFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    EcoFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    EcoFacet__factory.bytecode = _bytecode;
    EcoFacet__factory.abi = _abi;
    return EcoFacet__factory;
}(ethers_1.ContractFactory));
exports.EcoFacet__factory = EcoFacet__factory;
