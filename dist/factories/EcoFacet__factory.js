"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.EcoFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_portal",
                type: "address",
                internalType: "contract IEcoPortal",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "PORTAL",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract IEcoPortal",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "startBridgeTokensViaEco",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_ecoData",
                type: "tuple",
                internalType: "struct EcoFacet.EcoData",
                components: [
                    {
                        name: "receiverAddress",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "nonEVMReceiver",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "prover",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "rewardDeadline",
                        type: "uint64",
                        internalType: "uint64",
                    },
                    {
                        name: "solverReward",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "encodedRoute",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "solanaATA",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaEco",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_ecoData",
                type: "tuple",
                internalType: "struct EcoFacet.EcoData",
                components: [
                    {
                        name: "receiverAddress",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "nonEVMReceiver",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "prover",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "rewardDeadline",
                        type: "uint64",
                        internalType: "uint64",
                    },
                    {
                        name: "solverReward",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "encodedRoute",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "solanaATA",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "AssetSwapped",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
            {
                name: "dex",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "BridgeToNonEVMChain",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes",
                indexed: false,
                internalType: "bytes",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "BridgeToNonEVMChainBytes32",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidConfig",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NativeAssetNotSupported",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
];
var _bytecode = "0x60e0604052632b6653dc60a05263536f6c4d60c05234801561001f575f5ffd5b5060405161289e38038061289e83398101604081905261003e91610076565b6001600160a01b038116610065576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b03166080526100a3565b5f60208284031215610086575f5ffd5b81516001600160a01b038116811461009c575f5ffd5b9392505050565b60805160a05160c0516127c46100da5f395f610ae001525f610aa701525f8181604801528181610b5b0152610b9701526127c45ff3fe608060405260043610610033575f3560e01c80630ff754ea1461003757806320560477146100935780639ab12459146100a8575b5f5ffd5b348015610042575f5ffd5b5061006a7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100a66100a1366004611e6b565b6100bb565b005b6100a66100b6366004611f31565b610336565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610136576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181556101008501518590610178576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8561019b8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101d2576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f0361020f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361024c576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868061012001511561028a576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876102ad816080015173ffffffffffffffffffffffffffffffffffffffff161590565b156102e4576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102ee898761059e565b610303895f01518a60c001518a8a335f6108d0565b60c08a0181905261031990608088013590611fc3565b60c08a01526103288987610a6c565b50505f909255505050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016103b1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815560a0830151839073ffffffffffffffffffffffffffffffffffffffff16610408576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610445576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610482576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83806101000151156104c0576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84806101200151156104fe576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85610521816080015173ffffffffffffffffffffffffffffffffffffffff161590565b15610558576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610562878761059e565b5f86608001358860c001516105779190611fd6565b9050610587886080015182610cd0565b6105918888610a6c565b50505f9093555050505050565b60a082015160e0830151660416edef1601be147fffffffffffffffffffffffffee0eee0eee0eee0eee0eee0eee0eee0eee0eee0f73ffffffffffffffffffffffffffffffffffffffff831601610714576105fb6020840184611fe9565b90505f03610635576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80156106cd5760c0830135610676576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61068360a0840184611fe9565b905061013f146106bf576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106c883610d84565b6108ca565b6106da60a0840184611fe9565b90505f036106c8576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107216020840184612051565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610785576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61079260a0840184611fe9565b90505f036107cc576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015610804576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61081260a0850185611fe9565b81019061081f9190612244565b60a081015180519192505f9161083790600190611fc3565b8151811061084757610847612311565b60200260200101516020015190505f602482015190508660a0015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108c6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505b50505050565b5f8380820361090b576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8686610919600185611fc3565b81811061092857610928612311565b905060200281019061093a919061233e565b61094b906080810190606001612051565b90505f61095782610e4a565b905073ffffffffffffffffffffffffffffffffffffffff82166109815761097e3482611fc3565b90505b5f61098c8989610e94565b90506109988989610f9e565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff891660208201529081018790526109d3818b8b8561100f565b5f836109de86610e4a565b6109e89190611fc3565b905073ffffffffffffffffffffffffffffffffffffffff8516610a1257610a0f8882611fc3565b90505b8b811015610a5a576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d90526024810182905260440160405180910390fd5b955050505050505b9695505050505050565b5f81608001358360c00151610a819190611fd6565b90505f610a8f8484846111df565b90505f6606b2787ad08cbc8560e0015103610acb57507f0000000000000000000000000000000000000000000000000000000000000000610b51565b660416edef1601be8560e0015103610b0457507f0000000000000000000000000000000000000000000000000000000000000000610b51565b60e085015167ffffffffffffffff1015610b4a576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060e08401515b610b8085608001517f000000000000000000000000000000000000000000000000000000000000000085611340565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663df00f8fa5f83610bcb60a0890189611fe9565b875f6040518763ffffffff1660e01b8152600401610bed9594939291906123c1565b604080518083038185885af1158015610c08573d5f5f3e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190610c2d91906124c5565b505f9050610c3e6020860186611fe9565b90501115610c925760e085015185517ff9b69f466270c99522169d563c0a430e88c52865ec33b1cc36ee2a4a6ea5170b610c7b6020880188611fe9565b604051610c899291906124f3565b60405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f185604051610cc1919061255a565b60405180910390a15050505050565b805f03610d09576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610d625780341015610d5e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610d5e73ffffffffffffffffffffffffffffffffffffffff831633308461136c565b610d916020820182611fe9565b15905080610dad5750602c610da96020830183611fe9565b9050115b15610de4576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610df260a0830183611fe9565b610e029161011b9160fb9161266d565b610e0b91612694565b9050808260c0013514610d5e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff821615610e8c57610e8773ffffffffffffffffffffffffffffffffffffffff8316306113c4565b610e8e565b475b92915050565b6060815f8167ffffffffffffffff811115610eb157610eb1611ba2565b604051908082528060200260200182016040528015610eda578160200160208202803683370190505b5090505f5f5b83811015610f9357868682818110610efa57610efa612311565b9050602002810190610f0c919061233e565b610f1d906080810190606001612051565b9150610f2882610e4a565b838281518110610f3a57610f3a612311565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610f8b5734838281518110610f7357610f73612311565b60200260200101818151610f879190611fc3565b9052505b600101610ee0565b509095945050505050565b5f5b8181101561100a5736838383818110610fbb57610fbb612311565b9050602002810190610fcd919061233e565b9050610fdf60e0820160c083016126d0565b1561100157611001610ff76060830160408401612051565b8260800135610cd0565b50600101610fa0565b505050565b60208401516040850151849184918490835f5b818110156111c557368a8a8381811061103d5761103d612311565b905060200281019061104f919061233e565b905061107e6110646060830160408401612051565b73ffffffffffffffffffffffffffffffffffffffff161590565b806110e057506110e06110976040830160208401612051565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156110f757506110f76110976020830183612051565b801561117a575061117a61110e60a0830183611fe9565b61111c916004915f9161266d565b611125916126e9565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6111b0576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b516111bc90826113f7565b50600101611022565b50506111d4858585858561166a565b505050505050505050565b6112436040518060a001604052805f67ffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f8152602001606081525090565b6040805160018082528183019092525f91816020015b604080518082019091525f80825260208201528152602001906001900390816112595790505090506040518060400160405280866080015173ffffffffffffffffffffffffffffffffffffffff16815260200184815250815f815181106112c2576112c2612311565b60200260200101819052506040518060a001604052808560600160208101906112eb919061274f565b67ffffffffffffffff1681523360208201526040908101906113139060608801908801612051565b73ffffffffffffffffffffffffffffffffffffffff1681525f602082015260400191909152949350505050565b61100a8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611886565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f511417166113b757637939f4245f526004601cfd5b5f60605260405250505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b61140f6114076020830183612051565b6017903b1190565b611445576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003611484576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6114986110646060850160408601612051565b6114a2575f6114a8565b82608001355b90505f6114c36114be6080860160608701612051565b610e4a565b9050815f036114f9576114f96114df6060860160408701612051565b6114ef6040870160208801612051565b8660800135611340565b5f806115086020870187612051565b73ffffffffffffffffffffffffffffffffffffffff168461152c60a0890189611fe9565b60405161153a929190612768565b5f6040518083038185875af1925050503d805f8114611574576040519150601f19603f3d011682016040523d82523d5f602084013e611579565b606091505b50915091508161158c5761158c816119ad565b5f6115a06114be6080890160608a01612051565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38886115d160208a018a612051565b6115e160608b0160408c01612051565b6115f160808c0160608d01612051565b8b60800135898711611603578661160d565b61160d8a88611fc3565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f8682611679600182611fc3565b81811061168857611688612311565b905060200281019061169a919061233e565b6116ab906080810190606001612051565b90505f5f5f5f5f5f5f5b88811015611876576116c860018a611fc3565b811080156116d7575088600114155b156117b7578d8d828181106116ee576116ee612311565b9050602002810190611700919061233e565b611711906080810190606001612051565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146117b7578a818151811061175857611758612311565b602002602001015161176987610e4a565b6117739190611fc3565b965073ffffffffffffffffffffffffffffffffffffffff861615611797575f611799565b895b9350838711156117b7576117b7868d6117b2878b611fc3565b6119b7565b8d8d828181106117c9576117c9612311565b90506020028101906117db919061233e565b6117ec906060810190604001612051565b94506117f785610e4a565b925073ffffffffffffffffffffffffffffffffffffffff85161561181b575f61181d565b895b9150818311801561185a57508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b1561186e5761186e858d6117b28587611fc3565b6001016116b5565b5050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156108ca5773ffffffffffffffffffffffffffffffffffffffff83166118ef576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611962573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119869190612777565b10156108ca576108ca73ffffffffffffffffffffffffffffffffffffffff851684836119e7565b8051602082018181fd5b73ffffffffffffffffffffffffffffffffffffffff83166119dc5761100a8282611a6e565b61100a838383611adb565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716611a65575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f51141716611a6557633e3f8f735f526004601cfd5b5f603452505050565b73ffffffffffffffffffffffffffffffffffffffff8216611abb576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d5e73ffffffffffffffffffffffffffffffffffffffff831682611b49565b73ffffffffffffffffffffffffffffffffffffffff8216611b28576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61100a73ffffffffffffffffffffffffffffffffffffffff84168383611b62565b5f385f3884865af1610d5e5763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716611a65576390b8ec185f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff81118282101715611bf357611bf3611ba2565b60405290565b6040805190810167ffffffffffffffff81118282101715611bf357611bf3611ba2565b60405160c0810167ffffffffffffffff81118282101715611bf357611bf3611ba2565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611c8657611c86611ba2565b604052919050565b5f5f67ffffffffffffffff841115611ca857611ca8611ba2565b50601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016602001611cdb81611c3f565b915050828152838383011115611cef575f5ffd5b828260208301375f602084830101529392505050565b5f82601f830112611d14575f5ffd5b611d2383833560208501611c8e565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611d4b575f5ffd5b50565b8035611d5981611d2a565b919050565b80358015158114611d59575f5ffd5b5f6101408284031215611d7e575f5ffd5b611d86611bcf565b823581529050602082013567ffffffffffffffff811115611da5575f5ffd5b611db184828501611d05565b602083015250604082013567ffffffffffffffff811115611dd0575f5ffd5b611ddc84828501611d05565b604083015250611dee60608301611d4e565b6060820152611dff60808301611d4e565b6080820152611e1060a08301611d4e565b60a082015260c0828101359082015260e08083013590820152611e366101008301611d5e565b610100820152611e496101208301611d5e565b61012082015292915050565b5f60e08284031215611e65575f5ffd5b50919050565b5f5f5f5f60608587031215611e7e575f5ffd5b843567ffffffffffffffff811115611e94575f5ffd5b611ea087828801611d6d565b945050602085013567ffffffffffffffff811115611ebc575f5ffd5b8501601f81018713611ecc575f5ffd5b803567ffffffffffffffff811115611ee2575f5ffd5b8760208260051b8401011115611ef6575f5ffd5b60209190910193509150604085013567ffffffffffffffff811115611f19575f5ffd5b611f2587828801611e55565b91505092959194509250565b5f5f60408385031215611f42575f5ffd5b823567ffffffffffffffff811115611f58575f5ffd5b611f6485828601611d6d565b925050602083013567ffffffffffffffff811115611f80575f5ffd5b611f8c85828601611e55565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b81810381811115610e8e57610e8e611f96565b80820180821115610e8e57610e8e611f96565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261201c575f5ffd5b83018035915067ffffffffffffffff821115612036575f5ffd5b60200191503681900382131561204a575f5ffd5b9250929050565b5f60208284031215612061575f5ffd5b8135611d2381611d2a565b803567ffffffffffffffff81168114611d59575f5ffd5b5f67ffffffffffffffff82111561209c5761209c611ba2565b5060051b60200190565b5f82601f8301126120b5575f5ffd5b81356120c86120c382612083565b611c3f565b8082825260208201915060208360061b8601019250858311156120e9575f5ffd5b602085015b838110156121345760408188031215612105575f5ffd5b61210d611bf9565b813561211881611d2a565b81526020828101358183015290845292909201916040016120ee565b5095945050505050565b5f82601f83011261214d575f5ffd5b813561215b6120c382612083565b8082825260208201915060208360051b86010192508583111561217c575f5ffd5b602085015b8381101561213457803567ffffffffffffffff81111561219f575f5ffd5b860160408189037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00112156121d2575f5ffd5b6121da611bf9565b60208201356121e881611d2a565b8152604082013567ffffffffffffffff811115612203575f5ffd5b60208184010192505088601f83011261221a575f5ffd5b61222989833560208501611c8e565b60208201528085525050602083019250602081019050612181565b5f60208284031215612254575f5ffd5b813567ffffffffffffffff81111561226a575f5ffd5b820160c0818503121561227b575f5ffd5b612283611c1c565b813581526122936020830161206c565b60208201526122a460408301611d4e565b604082015260608281013590820152608082013567ffffffffffffffff8111156122cc575f5ffd5b6122d8868285016120a6565b60808301525060a082013567ffffffffffffffff8111156122f7575f5ffd5b6123038682850161213e565b60a083015250949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612370575f5ffd5b9190910192915050565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b67ffffffffffffffff86168152608060208201525f6123e460808301868861237a565b828103604084015260a0810167ffffffffffffffff865116825273ffffffffffffffffffffffffffffffffffffffff602087015116602083015273ffffffffffffffffffffffffffffffffffffffff604087015116604083015260608601516060830152608086015160a0608084015281815180845260c0850191506020830194505f93505b808410156124b1578451925073ffffffffffffffffffffffffffffffffffffffff83511682526020830151602083015260408201915060208501945060018401935061246a565b5086151560608701529350610a6292505050565b5f5f604083850312156124d6575f5ffd5b8251915060208301516124e881611d2a565b809150509250929050565b602081525f61250660208301848661237a565b949350505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f6020830151610140604084015261258161016084018261250e565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160608501526125bc828261250e565b91505060608401516125e6608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e084015161010084015261010084015161265561012085018215159052565b50610120840151801515610140850152509392505050565b5f5f8585111561267b575f5ffd5b83861115612687575f5ffd5b5050820193919092039150565b80356020831015610e8e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b5f602082840312156126e0575f5ffd5b611d2382611d5e565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015612748577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b5f6020828403121561275f575f5ffd5b611d238261206c565b818382375f9101908152919050565b5f60208284031215612787575f5ffd5b505191905056fea264697066735822122028691d95e1dbb0ea457afadbfdc635ed61201c2d15f6206b6a77d577c1a31cdb64736f6c634300081d0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var EcoFacet__factory = /** @class */ (function (_super) {
    __extends(EcoFacet__factory, _super);
    function EcoFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    EcoFacet__factory.prototype.deploy = function (_portal, overrides) {
        return _super.prototype.deploy.call(this, _portal, overrides || {});
    };
    EcoFacet__factory.prototype.getDeployTransaction = function (_portal, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _portal, overrides || {});
    };
    EcoFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    EcoFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    EcoFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    EcoFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    EcoFacet__factory.bytecode = _bytecode;
    EcoFacet__factory.abi = _abi;
    return EcoFacet__factory;
}(ethers_1.ContractFactory));
exports.EcoFacet__factory = EcoFacet__factory;
