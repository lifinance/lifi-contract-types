"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.GardenFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_htlcRegistry",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaGarden",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_gardenData",
                type: "tuple",
                internalType: "struct GardenFacet.GardenData",
                components: [
                    {
                        name: "redeemer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "refundAddress",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "timelock",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "secretHash",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "nonEvmReceiver",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaGarden",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_gardenData",
                type: "tuple",
                internalType: "struct GardenFacet.GardenData",
                components: [
                    {
                        name: "redeemer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "refundAddress",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "timelock",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "secretHash",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "nonEvmReceiver",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "BridgeToNonEVMChain",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes",
                indexed: false,
                internalType: "bytes",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "BridgeToNonEVMChainBytes32",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "AssetNotSupported",
        inputs: [],
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidConfig",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidGardenData",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
];
var _bytecode = "0x60a060405234801561001057600080fd5b5060405162001fa338038062001fa383398101604081905261003191610069565b6001600160a01b038116610058576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b0316608052610099565b60006020828403121561007b57600080fd5b81516001600160a01b038116811461009257600080fd5b9392505050565b608051611eee620000b560003960006106cf0152611eee6000f3fe6080604052600436106100295760003560e01c80635f9af35d1461002e57806376ad76fe14610043575b600080fd5b61004161003c3660046119fc565b610056565b005b610041610051366004611a4b565b61027f565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e23447611b26565b9050846101078160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561013e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361017c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101b9576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156101f7576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610235576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61024788608001518960c001516104ac565b6102518888610561565b5047915050818111156102735761027360008461026e8585611b26565b610a35565b50506000909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102fa576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061030b3447611b26565b90508680610100015161034a576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8780610120015115610388576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886103ab8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103e2576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610420576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361045d576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104728a600001518b60c001518b8b33610a6a565b60c08b01526104818a88610561565b50479150508181111561049e5761049e60008461026e8585611b26565b505060009091555050505050565b806000036104e6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661053f578034101561053b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61053b73ffffffffffffffffffffffffffffffffffffffff8316333084610bb1565b6000610585836080015173ffffffffffffffffffffffffffffffffffffffff161590565b905060006105966020840184611b39565b73ffffffffffffffffffffffffffffffffffffffff1614806105ba57506040820135155b806105c757506060820135155b156105fe576040517f639a6b5600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006106106040840160208501611b39565b73ffffffffffffffffffffffffffffffffffffffff160361065d576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008161066e578360800151610684565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee5b6040517f6ff78d6900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192506000917f00000000000000000000000000000000000000000000000000000000000000001690636ff78d6990602401602060405180830381865afa158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190611b5d565b905073ffffffffffffffffffffffffffffffffffffffff8116610789576040517f981a2a2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80831561087a5760c086015173ffffffffffffffffffffffffffffffffffffffff8216906313d4a787906107c36040890160208a01611b39565b6107d060208a018a611b39565b60c08b0151604080517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff9485166004820152939092166024840152908a0135604483015260648201526060890135608482015260a4016000604051808303818588803b15801561085c57600080fd5b505af1158015610870573d6000803e3d6000fd5b505050505061096c565b61088d8660800151838860c00151610c0e565b73ffffffffffffffffffffffffffffffffffffffff81166313d4a7876108b96040880160208901611b39565b6108c66020890189611b39565b60c08a0151604080517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815273ffffffffffffffffffffffffffffffffffffffff948516600482015293909216602484015290890135604483015260648201526060880135608482015260a401600060405180830381600087803b15801561095357600080fd5b505af1158015610967573d6000803e3d6000fd5b505050505b7311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168660a0015173ffffffffffffffffffffffffffffffffffffffff16036109f65760e08601518651604051608088013581527f815cd8dc72093a13fe3577112c391b6279303956526382ab98772d0239dbf78c9060200160405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f186604051610a259190611bde565b60405180910390a1505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610a5f57610a5a8282610c3a565b505050565b610a5a838383610ca7565b600082808203610aa6576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610ab5600185611b26565b818110610ac457610ac4611cf1565b9050602002810190610ad69190611d20565b610ae7906080810190606001611b39565b90506000610af482610d15565b905073ffffffffffffffffffffffffffffffffffffffff8216610b1e57610b1b3482611b26565b90505b6000610b2a8888610d60565b9050610b368888610e74565b610b438a89898985610ee1565b600082610b4f85610d15565b610b599190611b26565b905089811015610ba3576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d156001600051141716610c0057637939f4246000526004601cfd5b600060605260405250505050565b610a5a8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6110b0565b73ffffffffffffffffffffffffffffffffffffffff8216610c87576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61053b73ffffffffffffffffffffffffffffffffffffffff8316826111df565b73ffffffffffffffffffffffffffffffffffffffff8216610cf4576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a5a73ffffffffffffffffffffffffffffffffffffffff841683836111fb565b600073ffffffffffffffffffffffffffffffffffffffff821615610d5857610d5373ffffffffffffffffffffffffffffffffffffffff83163061124a565b610d5a565b475b92915050565b60608160008167ffffffffffffffff811115610d7e57610d7e6117b6565b604051908082528060200260200182016040528015610da7578160200160208202803683370190505b5090506000805b83811015610e6957868682818110610dc857610dc8611cf1565b9050602002810190610dda9190611d20565b610deb906080810190606001611b39565b9150610df682610d15565b838281518110610e0857610e08611cf1565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610e595734838281518110610e4157610e41611cf1565b60200260200101818151610e559190611b26565b9052505b610e6281611d5e565b9050610dae565b509095945050505050565b60005b81811015610a5a5736838383818110610e9257610e92611cf1565b9050602002810190610ea49190611d20565b9050610eb660e0820160c08301611d96565b15610ed857610ed8610ece6060830160408401611b39565b82608001356104ac565b50600101610e77565b838383838260005b8181101561109557368a8a83818110610f0457610f04611cf1565b9050602002810190610f169190611d20565b9050610f45610f2b6060830160408401611b39565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610fa85750610fa8610f5e6040830160208401611b39565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610fbf5750610fbf610f5e6020830183611b39565b80156110445750611044610fd660a0830183611db1565b610fe591600491600091611e1d565b610fee91611e47565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61107a576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110848c8261127f565b5061108e81611d5e565b9050610ee9565b50506110a58484848460006114fc565b505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156111d95773ffffffffffffffffffffffffffffffffffffffff8316611119576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa15801561118e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b29190611e8f565b10156111d9576111d973ffffffffffffffffffffffffffffffffffffffff85168483611722565b50505050565b60003860003884865af161053b5763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d156001600051141716611240576390b8ec186000526004601cfd5b6000603452505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b61129761128f6020830183611b39565b6017903b1190565b6112cd576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080810135600081900361130d576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611322610f2b6060850160408601611b39565b61132d576000611333565b82608001355b9050600061134f61134a6080860160608701611b39565b610d15565b9050816000036113865761138661136c6060860160408701611b39565b61137c6040870160208801611b39565b8660800135610c0e565b6000806113966020870187611b39565b73ffffffffffffffffffffffffffffffffffffffff16846113ba60a0890189611db1565b6040516113c8929190611ea8565b60006040518083038185875af1925050503d8060008114611405576040519150601f19603f3d011682016040523d82523d6000602084013e61140a565b606091505b50915091508161141d5761141d816117ac565b600061143261134a6080890160608a01611b39565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861146360208a018a611b39565b61147360608b0160408c01611b39565b61148360808c0160608d01611b39565b8b60800135898711611495578661149f565b61149f8a88611b26565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b836000868261150c600182611b26565b81811061151b5761151b611cf1565b905060200281019061152d9190611d20565b61153e906080810190606001611b39565b905060008060008060008060005b888110156117125761155f60018a611b26565b8110801561156e575088600114155b1561164a578d8d8281811061158557611585611cf1565b90506020028101906115979190611d20565b6115a8906080810190606001611b39565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161461164a578a81815181106115ef576115ef611cf1565b602002602001015161160087610d15565b61160a9190611b26565b965073ffffffffffffffffffffffffffffffffffffffff86161561162f576000611631565b895b93508387111561164a5761164a868d61026e878b611b26565b8d8d8281811061165c5761165c611cf1565b905060200281019061166e9190611d20565b61167f906060810190604001611b39565b945061168a85610d15565b925073ffffffffffffffffffffffffffffffffffffffff8516156116af5760006116b1565b895b915081831180156116ee57508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b1561170257611702858d61026e8587611b26565b61170b81611d5e565b905061154c565b5050505050505050505050505050565b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d1560016000511417166112405760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d15600160005114171661124057633e3f8f736000526004601cfd5b8051602082018181fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611809576118096117b6565b60405290565b600082601f83011261182057600080fd5b813567ffffffffffffffff8082111561183b5761183b6117b6565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611881576118816117b6565b8160405283815286602085880101111561189a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b73ffffffffffffffffffffffffffffffffffffffff811681146118dc57600080fd5b50565b80356118ea816118ba565b919050565b803580151581146118ea57600080fd5b6000610140828403121561191257600080fd5b61191a6117e5565b905081358152602082013567ffffffffffffffff8082111561193b57600080fd5b6119478583860161180f565b6020840152604084013591508082111561196057600080fd5b5061196d8482850161180f565b60408301525061197f606083016118df565b6060820152611990608083016118df565b60808201526119a160a083016118df565b60a082015260c082013560c082015260e082013560e08201526101006119c88184016118ef565b908201526101206119da8382016118ef565b9082015292915050565b600060a082840312156119f657600080fd5b50919050565b60008060c08385031215611a0f57600080fd5b823567ffffffffffffffff811115611a2657600080fd5b611a32858286016118ff565b925050611a4284602085016119e4565b90509250929050565b60008060008060e08587031215611a6157600080fd5b843567ffffffffffffffff80821115611a7957600080fd5b611a85888389016118ff565b95506020870135915080821115611a9b57600080fd5b818701915087601f830112611aaf57600080fd5b813581811115611abe57600080fd5b8860208260051b8501011115611ad357600080fd5b602083019550809450505050611aec86604087016119e4565b905092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610d5a57610d5a611af7565b600060208284031215611b4b57600080fd5b8135611b56816118ba565b9392505050565b600060208284031215611b6f57600080fd5b8151611b56816118ba565b6000815180845260005b81811015611ba057602081850181015186830182015201611b84565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081528151602082015260006020830151610140806040850152611c07610160850183611b7a565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152611c428382611b7a565b9250506060850151611c6c608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120611cdf8187018315159052565b90950151151593019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611d5457600080fd5b9190910192915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d8f57611d8f611af7565b5060010190565b600060208284031215611da857600080fd5b611b56826118ef565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611de657600080fd5b83018035915067ffffffffffffffff821115611e0157600080fd5b602001915036819003821315611e1657600080fd5b9250929050565b60008085851115611e2d57600080fd5b83861115611e3a57600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015611e875780818660040360031b1b83161692505b505092915050565b600060208284031215611ea157600080fd5b5051919050565b818382376000910190815291905056fea26469706673582212205456b75f1d1aedebeaa9acb421e70e753c9f0dd759e37c76d59010c147f97f8864736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var GardenFacet__factory = /** @class */ (function (_super) {
    __extends(GardenFacet__factory, _super);
    function GardenFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    GardenFacet__factory.prototype.deploy = function (_htlcRegistry, overrides) {
        return _super.prototype.deploy.call(this, _htlcRegistry, overrides || {});
    };
    GardenFacet__factory.prototype.getDeployTransaction = function (_htlcRegistry, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _htlcRegistry, overrides || {});
    };
    GardenFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    GardenFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    GardenFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    GardenFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    GardenFacet__factory.bytecode = _bytecode;
    GardenFacet__factory.abi = _abi;
    return GardenFacet__factory;
}(ethers_1.ContractFactory));
exports.GardenFacet__factory = GardenFacet__factory;
