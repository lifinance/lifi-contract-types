"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestAmarokFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "contract IConnextHandler",
                name: "_connextHandler",
                type: "address",
            },
            {
                internalType: "uint32",
                name: "_srcChainDomain",
                type: "uint32",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "CannotBridgeToSameNetwork",
        type: "error",
    },
    {
        inputs: [],
        name: "ContractCallNotAllowed",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "receivedAmount",
                type: "uint256",
            },
        ],
        name: "CumulativeSlippageTooHigh",
        type: "error",
    },
    {
        inputs: [],
        name: "InformationMismatch",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "required",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
        ],
        name: "InsufficientBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidAmount",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidContract",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidReceiver",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeAssetNotSupported",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeAssetTransferFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapDataProvided",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapFromZeroBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "NoTransferToNullAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAValidSpender",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAnERC20Token",
        type: "error",
    },
    {
        inputs: [],
        name: "OnlyContractOwner",
        type: "error",
    },
    {
        inputs: [],
        name: "ReentrancyError",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOverflow",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "domain",
                type: "uint32",
            },
        ],
        name: "UnknownAmarokDomain",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint32",
                name: "domain",
                type: "uint32",
            },
        ],
        name: "AmarokDomainSet",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferCompleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferRecovered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                name: "bridgeData",
                type: "tuple",
            },
        ],
        name: "LiFiTransferStarted",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_dex",
                type: "address",
            },
        ],
        name: "addDex",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_chainId",
                type: "uint256",
            },
            {
                internalType: "uint32",
                name: "_domain",
                type: "uint32",
            },
        ],
        name: "setAmarokDomain",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "_signature",
                type: "bytes4",
            },
        ],
        name: "setFunctionApprovalBySignature",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "relayerFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "slippageTol",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "delegate",
                        type: "address",
                    },
                ],
                internalType: "struct AmarokFacet.AmarokData",
                name: "_amarokData",
                type: "tuple",
            },
        ],
        name: "startBridgeTokensViaAmarok",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "_swapData",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "relayerFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "slippageTol",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "delegate",
                        type: "address",
                    },
                ],
                internalType: "struct AmarokFacet.AmarokData",
                name: "_amarokData",
                type: "tuple",
            },
        ],
        name: "swapAndStartBridgeTokensViaAmarok",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
var _bytecode = "0x60c06040523480156200001157600080fd5b5060405162002ea938038062002ea9833981016040819052620000349162000051565b6001600160a01b0390911660805263ffffffff1660a052620000a3565b600080604083850312156200006557600080fd5b82516001600160a01b03811681146200007d57600080fd5b602084015190925063ffffffff811681146200009857600080fd5b809150509250929050565b60805160a051612ddc620000cd6000396000505060008181610a5c0152610aab0152612ddc6000f3fe60806040526004361061005a5760003560e01c806364a74ee21161004357806364a74ee2146100a1578063c561c148146100b4578063ef27dc6f146100d457600080fd5b8063280c6deb1461005f578063536db26614610081575b600080fd5b34801561006b57600080fd5b5061007f61007a3660046123d1565b6100e7565b005b34801561008d57600080fd5b5061007f61009c366004612433565b610182565b61007f6100af3660046126cb565b61018e565b3480156100c057600080fd5b5061007f6100cf36600461278a565b610439565b61007f6100e23660046127cc565b6104b7565b6100ef610780565b60007feb4198458a814793befc1a2917bf545aff2a1c03cd5d74bd029e61245d484aaf60008481526020829052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff871690811790915590519293509185917ff7d9e84ed3fcc363e379b957a2727eab9d6cb676f99533cbe3b68dadc0153dd991a3505050565b61018b816107f5565b50565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610209576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061021a3447612868565b905086806101000151610259576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8761027c8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156102b3576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036102f1576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361032e576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b88610351816080015173ffffffffffffffffffffffffffffffffffffffff161590565b15610388576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8961012001511515610399886108e2565b1515146103d2576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103e78a600001518b60c001518b8b336108f9565b60c08b01526103f68a88610a41565b504791506000905082821161040c576000610416565b6104168383612868565b9050801561042a5761042a60008583610b90565b50506000909255505050505050565b61018b817fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f6020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610532576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006105433447612868565b905061054e8561287b565b8061010001511561058b576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105948661287b565b60a081015173ffffffffffffffffffffffffffffffffffffffff166105e5576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610623576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610660576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106698761287b565b608081015173ffffffffffffffffffffffffffffffffffffffff166106ba576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106cc61014089016101208a01612887565b15156106d7886108e2565b151514610710576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61072d61072360a08a0160808b01612433565b8960c00135610bc6565b61073f6107398961287b565b88610a41565b504791506000905082821161075557600061075f565b61075f8383612868565b905080156107735761077360008583610b90565b5050600090925550505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff1633146107f3576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6107fe81610d3c565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602081905260409091205460ff1615610852575050565b73ffffffffffffffffffffffffffffffffffffffff909116600081815260208381526040822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091556002909401805494850181558252902090910180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b6000806108ef83806128a4565b9050119050919050565b600082808203610935576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610944600185612868565b81811061095357610953612910565b9050602002810190610965919061293f565b610976906080810190606001612433565b9050600061098382610dda565b905073ffffffffffffffffffffffffffffffffffffffff82166109ad576109aa3482612868565b90505b60006109b98888610e93565b90506109c58888610f9f565b6109d28a89898985611000565b6000826109de85610dda565b6109e89190612868565b905089811015610a33576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b6000610a508360e001516113b2565b9050610a8583608001517f00000000000000000000000000000000000000000000000000000000000000008560c00151611430565b60a0830151608084015160c085015173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001692638aac16ba9260408701359286929190829060608a0135610aed8b806128a4565b6040518a63ffffffff1660e01b8152600401610b1098979695949392919061297d565b60206040518083038185885af1158015610b2e573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b539190612a19565b507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f183604051610b839190612aa0565b60405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff831615610bbc57610bb783838361157b565b505050565b610bb782826116aa565b73ffffffffffffffffffffffffffffffffffffffff8216610c1f5780341015610c1b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610c59576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610cc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cea9190612a19565b905081811015610d30576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610a2a565b610bb7833330856117d4565b73ffffffffffffffffffffffffffffffffffffffff8116610d89576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163b60000361018b576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff821615610e8b576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610e62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e869190612a19565b610e8d565b475b92915050565b60608160008167ffffffffffffffff811115610eb157610eb161244e565b604051908082528060200260200182016040528015610eda578160200160208202803683370190505b5090506000805b83811015610f9457868682818110610efb57610efb612910565b9050602002810190610f0d919061293f565b610f1e906080810190606001612433565b9150610f2982610dda565b838281518110610f3b57610f3b612910565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610f8c5734838281518110610f7457610f74612910565b60200260200101818151610f889190612868565b9052505b600101610ee1565b509095945050505050565b60005b81811015610bb7576000838383818110610fbe57610fbe612910565b9050602002810190610fd0919061293f565b610fd990612bb3565b90508060c0015115610ff757610ff781604001518260800151610bc6565b50600101610fa2565b8383838382600181146112cd576000858561101c600185612868565b81811061102b5761102b612910565b905060200281019061103d919061293f565b61104e906080810190606001612433565b9050600089815b818110156111f957368d8d8381811061107057611070612910565b9050602002810190611082919061293f565b90506110b16110976060830160408401612433565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061111457506111146110ca6040830160208401612433565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561112b575061112b6110ca6020830183612433565b80156111b057506111b061114260a08301836128a4565b61115191600491600091612c58565b61115a91612c82565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6111e6576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111f08f826119ee565b50600101611055565b505060005b611209600185612868565b8110156112c557600088888381811061122457611224612910565b9050602002810190611236919061293f565b611247906080810190606001612433565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112bc5785828151811061128e5761128e612910565b602002602001015161129f82610dda565b6112a99190612868565b925082156112bc576112bc818885610b90565b506001016111fe565b5050506113a6565b8760005b818110156113a357368b8b838181106112ec576112ec612910565b90506020028101906112fe919061293f565b90506113136110976060830160408401612433565b8061132c575061132c6110ca6040830160208401612433565b801561134357506113436110ca6020830183612433565b801561135a575061135a61114260a08301836128a4565b611390576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61139a8d826119ee565b506001016112d1565b50505b50505050505050505050565b60008181527feb4198458a814793befc1a2917bf545aff2a1c03cd5d74bd029e61245d484aaf6020819052604082205463ffffffff16808303611429576040517f34d1a6a800000000000000000000000000000000000000000000000000000000815263ffffffff82166004820152602401610a2a565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff831661145057505050565b73ffffffffffffffffffffffffffffffffffffffff821661149d576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015611513573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115379190612a19565b905081811015611575576115758484611570847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612868565b611d04565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166115c8576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611635573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116599190612a19565b90508082111561169f576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610a2a565b611575848484611e80565b73ffffffffffffffffffffffffffffffffffffffff82166116f7576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4781111561173a576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610a2a565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611794576040519150601f19603f3d011682016040523d82523d6000602084013e611799565b606091505b5050905080610bb7576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416611821576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661186e576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa1580156118df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119039190612a19565b905061191182868686611ed6565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a59190612a19565b6119af9190612868565b146119e6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b611a046119fe6020830183612433565b3b151590565b611a3a576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611a7a576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611a8f6110976060850160408601612433565b611a9a576000611aa0565b82608001355b90506000611abc611ab76060860160408701612433565b610dda565b90506000611ad3611ab76080870160608801612433565b905082600003611b0a57611b0a611af06060870160408801612433565b611b006040880160208901612433565b8760800135611430565b8460800135821015611b55576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610a2a565b600080611b656020880188612433565b73ffffffffffffffffffffffffffffffffffffffff1685611b8960a08a018a6128a4565b604051611b97929190612cca565b60006040518083038185875af1925050503d8060008114611bd4576040519150601f19603f3d011682016040523d82523d6000602084013e611bd9565b606091505b509150915081611c24576000611bee82611f34565b9050806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2a9190612cda565b6000611c39611ab760808a0160608b01612433565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611c6a60208b018b612433565b611c7a60608c0160408d01612433565b611c8a60808d0160608e01612433565b8c60800135898711611c9c5786611ca6565b611ca68a88612868565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611d7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9f9190612a19565b611da99190612ced565b60405173ffffffffffffffffffffffffffffffffffffffff85166024820152604481018290529091506115759085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611fab565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610bb79084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611dfe565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526115759085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611dfe565b6060604482511015611f7957505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611f956004808551611f8d9190612868565b8591906120b7565b9050808060200190518101906114299190612d00565b600061200d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166121d19092919063ffffffff16565b805190915015610bb7578080602001905181019061202b9190612d77565b610bb7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610a2a565b6060816120c581601f612ced565b10156120fd576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6121078284612ced565b84511015612141576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608215801561216057604051915060008252602082016040526121c8565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015612199578051835260209283019201612181565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60606121e084846000856121e8565b949350505050565b60608247101561227a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610a2a565b73ffffffffffffffffffffffffffffffffffffffff85163b6122f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a2a565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516123219190612d94565b60006040518083038185875af1925050503d806000811461235e576040519150601f19603f3d011682016040523d82523d6000602084013e612363565b606091505b509150915061237382828661237e565b979650505050505050565b6060831561238d575081611429565b82511561239d5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2a9190612cda565b600080604083850312156123e457600080fd5b82359150602083013563ffffffff811681146123ff57600080fd5b809150509250929050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461242e57600080fd5b919050565b60006020828403121561244557600080fd5b6114298261240a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156124a1576124a161244e565b60405290565b60405160e0810167ffffffffffffffff811182821017156124a1576124a161244e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156125115761251161244e565b604052919050565b600067ffffffffffffffff8211156125335761253361244e565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261257057600080fd5b813561258361257e82612519565b6124ca565b81815284602083860101111561259857600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461018b57600080fd5b803561242e816125b5565b600061014082840312156125e157600080fd5b6125e961247d565b905081358152602082013567ffffffffffffffff8082111561260a57600080fd5b6126168583860161255f565b6020840152604084013591508082111561262f57600080fd5b5061263c8482850161255f565b60408301525061264e6060830161240a565b606082015261265f6080830161240a565b608082015261267060a0830161240a565b60a082015260c082013560c082015260e082013560e08201526101006126978184016125c3565b908201526101206126a98382016125c3565b9082015292915050565b600060a082840312156126c557600080fd5b50919050565b600080600080606085870312156126e157600080fd5b843567ffffffffffffffff808211156126f957600080fd5b612705888389016125ce565b9550602087013591508082111561271b57600080fd5b818701915087601f83011261272f57600080fd5b81358181111561273e57600080fd5b8860208260051b850101111561275357600080fd5b60208301955080945050604087013591508082111561277157600080fd5b5061277e878288016126b3565b91505092959194509250565b60006020828403121561279c57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461142957600080fd5b600080604083850312156127df57600080fd5b823567ffffffffffffffff808211156127f757600080fd5b90840190610140828703121561280c57600080fd5b9092506020840135908082111561282257600080fd5b5061282f858286016126b3565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610e8d57610e8d612839565b6000610e8d36836125ce565b60006020828403121561289957600080fd5b8135611429816125b5565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126128d957600080fd5b83018035915067ffffffffffffffff8211156128f457600080fd5b60200191503681900382131561290957600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261297357600080fd5b9190910192915050565b63ffffffff89168152600073ffffffffffffffffffffffffffffffffffffffff808a16602084015280891660408401528088166060840152508560808301528460a083015260e060c08301528260e08301526101008385828501376000838501820152601f9093017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690910190910198975050505050505050565b600060208284031215612a2b57600080fd5b5051919050565b60005b83811015612a4d578181015183820152602001612a35565b50506000910152565b60008151808452612a6e816020860160208601612a32565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081528151602082015260006020830151610140806040850152612ac9610160850183612a56565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152612b048382612a56565b9250506060850151612b2e608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120612ba18187018315159052565b90950151151593019290925250919050565b600060e08236031215612bc557600080fd5b612bcd6124a7565b612bd68361240a565b8152612be46020840161240a565b6020820152612bf56040840161240a565b6040820152612c066060840161240a565b60608201526080830135608082015260a083013567ffffffffffffffff811115612c2f57600080fd5b612c3b3682860161255f565b60a083015250612c4d60c084016125c3565b60c082015292915050565b60008085851115612c6857600080fd5b83861115612c7557600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612cc25780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b6020815260006114296020830184612a56565b80820180821115610e8d57610e8d612839565b600060208284031215612d1257600080fd5b815167ffffffffffffffff811115612d2957600080fd5b8201601f81018413612d3a57600080fd5b8051612d4861257e82612519565b818152856020838501011115612d5d57600080fd5b612d6e826020830160208601612a32565b95945050505050565b600060208284031215612d8957600080fd5b8151611429816125b5565b60008251612973818460208701612a3256fea2646970667358221220ff215452c88db5ae8c93d3973dd8c9470d9f4cde872f8f9d8ceb84b5569b9eec64736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var TestAmarokFacet__factory = /** @class */ (function (_super) {
    __extends(TestAmarokFacet__factory, _super);
    function TestAmarokFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    TestAmarokFacet__factory.prototype.deploy = function (_connextHandler, _srcChainDomain, overrides) {
        return _super.prototype.deploy.call(this, _connextHandler, _srcChainDomain, overrides || {});
    };
    TestAmarokFacet__factory.prototype.getDeployTransaction = function (_connextHandler, _srcChainDomain, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _connextHandler, _srcChainDomain, overrides || {});
    };
    TestAmarokFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    TestAmarokFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    TestAmarokFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    TestAmarokFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    TestAmarokFacet__factory.bytecode = _bytecode;
    TestAmarokFacet__factory.abi = _abi;
    return TestAmarokFacet__factory;
}(ethers_1.ContractFactory));
exports.TestAmarokFacet__factory = TestAmarokFacet__factory;
