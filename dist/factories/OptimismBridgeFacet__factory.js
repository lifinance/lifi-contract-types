"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.OptimismBridgeFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "initOptimism",
        inputs: [
            {
                name: "configs",
                type: "tuple[]",
                internalType: "struct OptimismBridgeFacet.Config[]",
                components: [
                    {
                        name: "assetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "bridge",
                        type: "address",
                        internalType: "address",
                    },
                ],
            },
            {
                name: "standardBridge",
                type: "address",
                internalType: "contract IL1StandardBridge",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "registerOptimismBridge",
        inputs: [
            {
                name: "assetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "bridge",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaOptimismBridge",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_optimismData",
                type: "tuple",
                internalType: "struct OptimismBridgeFacet.OptimismData",
                components: [
                    {
                        name: "assetIdOnL2",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "l2Gas",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "isSynthetix",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaOptimismBridge",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_optimismData",
                type: "tuple",
                internalType: "struct OptimismBridgeFacet.OptimismData",
                components: [
                    {
                        name: "assetIdOnL2",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "l2Gas",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "isSynthetix",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "BridgeToNonEVMChain",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes",
                indexed: false,
                internalType: "bytes",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "BridgeToNonEVMChainBytes32",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "OptimismBridgeRegistered",
        inputs: [
            {
                name: "assetId",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "bridge",
                type: "address",
                indexed: false,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "OptimismInitialized",
        inputs: [
            {
                name: "configs",
                type: "tuple[]",
                indexed: false,
                internalType: "struct OptimismBridgeFacet.Config[]",
                components: [
                    {
                        name: "assetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "bridge",
                        type: "address",
                        internalType: "address",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "AlreadyInitialized",
        inputs: [],
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidConfig",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NotInitialized",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "OnlyContractOwner",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b50612397806100206000396000f3fe60806040526004361061003f5760003560e01c80635bb5d44814610044578063899cc31714610059578063ce8a97a514610079578063decb09d71461008c575b600080fd5b610057610052366004611d6a565b6100ac565b005b34801561006557600080fd5b50610057610074366004611e16565b6102de565b610057610087366004611e9c565b610557565b34801561009857600080fd5b506100576100a7366004611eeb565b61077b565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610127576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006101383447611f53565b905086806101000151610177576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101200151156101b5576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886101d88160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561020f576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361024d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361028a576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61029f8a600001518b60c001518b8b336108f0565b60c08b01526102ae8a88610a37565b5047915050818111156102d0576102d06000846102cb8585611f53565b610dc0565b505060009091555050505050565b6102e6610df5565b7f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca4547f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca39074010000000000000000000000000000000000000000900460ff161561037c576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b838110156104bd57600085858381811061039b5761039b611f66565b90506040020160200160208101906103b39190611f95565b73ffffffffffffffffffffffffffffffffffffffff1603610400576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84848281811061041257610412611f66565b905060400201602001602081019061042a9190611f95565b82600087878581811061043f5761043f611f66565b6104559260206040909202019081019150611f95565b73ffffffffffffffffffffffffffffffffffffffff9081168252602082019290925260400160002080547fffffffffffffffffffffffff00000000000000000000000000000000000000001692909116919091179055806104b581611fb9565b91505061037f565b506001810180547fffffffffffffffffffffff0000000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617740100000000000000000000000000000000000000001790556040517fd192688003c02a257d1ee3ef083c31f3ba31e400ad8655bf4257081255c91568906105499086908690611ff1565b60405180910390a150505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016105d2576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006105e33447611f53565b90508480610100015115610623576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8580610120015115610661576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866106848160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156106bb576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036106f9576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610736576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61074888608001518960c00151610e6a565b6107528888610a37565b50479150508181111561076f5761076f6000846102cb8585611f53565b50506000909155505050565b610783610df5565b7f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca4547f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca39074010000000000000000000000000000000000000000900460ff16610818576040517f87138d5c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610865576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8381166000818152602084815260409182902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169487169485179055905192835290917f8ba151f3405c32cff2d4c159409e00b97b0b46fbcbe59438e7f62c1283f80638910160405180910390a2505050565b60008280820361092c576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000858561093b600185611f53565b81811061094a5761094a611f66565b905060200281019061095c9190612064565b61096d906080810190606001611f95565b9050600061097a82610f1f565b905073ffffffffffffffffffffffffffffffffffffffff82166109a4576109a13482611f53565b90505b60006109b08888610f6a565b90506109bc888861107e565b6109c98a898989856110eb565b6000826109d585610f1f565b6109df9190611f53565b905089811015610a29576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b608082015173ffffffffffffffffffffffffffffffffffffffff90811660009081527f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca360208190526040822054909216908115610a945781610ab0565b600183015473ffffffffffffffffffffffffffffffffffffffff165b9050610ad4856080015173ffffffffffffffffffffffffffffffffffffffff161590565b15610bad5760c085015160a086015173ffffffffffffffffffffffffffffffffffffffff831691639a2ac6d591610b116040890160208a016120a2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015263ffffffff16602482015260606044820152600060648201526084016000604051808303818588803b158015610b8f57600080fd5b505af1158015610ba3573d6000803e3d6000fd5b5050505050610d82565b610bc08560800151828760c001516112ba565b610bd060608501604086016120c8565b15610c875760a085015160c08601516040517fffaad6a500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169263ffaad6a592610c509260040173ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b600060405180830381600087803b158015610c6a57600080fd5b505af1158015610c7e573d6000803e3d6000fd5b50505050610d82565b608085015173ffffffffffffffffffffffffffffffffffffffff82169063838b252090610cb76020880188611f95565b60a089015160c08a0151610cd160408b0160208c016120a2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff95861660048201529385166024850152939091166044830152606482015263ffffffff91909116608482015260c060a4820152600060c482015260e401600060405180830381600087803b158015610d6957600080fd5b505af1158015610d7d573d6000803e3d6000fd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f185604051610db19190612147565b60405180910390a15050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610dea57610de582826112e6565b505050565b610de5838383611353565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314610e68576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b80600003610ea4576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610efd5780341015610ef9576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610ef973ffffffffffffffffffffffffffffffffffffffff83163330846113c1565b600073ffffffffffffffffffffffffffffffffffffffff821615610f6257610f5d73ffffffffffffffffffffffffffffffffffffffff83163061141e565b610f64565b475b92915050565b60608160008167ffffffffffffffff811115610f8857610f88611b24565b604051908082528060200260200182016040528015610fb1578160200160208202803683370190505b5090506000805b8381101561107357868682818110610fd257610fd2611f66565b9050602002810190610fe49190612064565b610ff5906080810190606001611f95565b915061100082610f1f565b83828151811061101257611012611f66565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216611063573483828151811061104b5761104b611f66565b6020026020010181815161105f9190611f53565b9052505b61106c81611fb9565b9050610fb8565b509095945050505050565b60005b81811015610de5573683838381811061109c5761109c611f66565b90506020028101906110ae9190612064565b90506110c060e0820160c083016120c8565b156110e2576110e26110d86060830160408401611f95565b8260800135610e6a565b50600101611081565b838383838260005b8181101561129f57368a8a8381811061110e5761110e611f66565b90506020028101906111209190612064565b905061114f6111356060830160408401611f95565b73ffffffffffffffffffffffffffffffffffffffff161590565b806111b257506111b26111686040830160208401611f95565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156111c957506111c96111686020830183611f95565b801561124e575061124e6111e060a083018361225a565b6111ef916004916000916122c6565b6111f8916122f0565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611284576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61128e8c82611453565b5061129881611fb9565b90506110f3565b50506112af8484848460006116d0565b505050505050505050565b610de58383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6118f6565b73ffffffffffffffffffffffffffffffffffffffff8216611333576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ef973ffffffffffffffffffffffffffffffffffffffff831682611a25565b73ffffffffffffffffffffffffffffffffffffffff82166113a0576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610de573ffffffffffffffffffffffffffffffffffffffff84168383611a41565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d15600160005114171661141057637939f4246000526004601cfd5b600060605260405250505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b61146b6114636020830183611f95565b6017903b1190565b6114a1576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036114e1576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006114f66111356060850160408601611f95565b611501576000611507565b82608001355b9050600061152361151e6080860160608701611f95565b610f1f565b90508160000361155a5761155a6115406060860160408701611f95565b6115506040870160208801611f95565b86608001356112ba565b60008061156a6020870187611f95565b73ffffffffffffffffffffffffffffffffffffffff168461158e60a089018961225a565b60405161159c929190612338565b60006040518083038185875af1925050503d80600081146115d9576040519150601f19603f3d011682016040523d82523d6000602084013e6115de565b606091505b5091509150816115f1576115f181611a90565b600061160661151e6080890160608a01611f95565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861163760208a018a611f95565b61164760608b0160408c01611f95565b61165760808c0160608d01611f95565b8b608001358987116116695786611673565b6116738a88611f53565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b83600086826116e0600182611f53565b8181106116ef576116ef611f66565b90506020028101906117019190612064565b611712906080810190606001611f95565b905060008060008060008060005b888110156118e65761173360018a611f53565b81108015611742575088600114155b1561181e578d8d8281811061175957611759611f66565b905060200281019061176b9190612064565b61177c906080810190606001611f95565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161461181e578a81815181106117c3576117c3611f66565b60200260200101516117d487610f1f565b6117de9190611f53565b965073ffffffffffffffffffffffffffffffffffffffff861615611803576000611805565b895b93508387111561181e5761181e868d6102cb878b611f53565b8d8d8281811061183057611830611f66565b90506020028101906118429190612064565b611853906060810190604001611f95565b945061185e85610f1f565b925073ffffffffffffffffffffffffffffffffffffffff851615611883576000611885565b895b915081831180156118c257508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b156118d6576118d6858d6102cb8587611f53565b6118df81611fb9565b9050611720565b5050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff841615611a1f5773ffffffffffffffffffffffffffffffffffffffff831661195f576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa1580156119d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f89190612348565b1015611a1f57611a1f73ffffffffffffffffffffffffffffffffffffffff85168483611a9a565b50505050565b60003860003884865af1610ef95763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d156001600051141716611a86576390b8ec186000526004601cfd5b6000603452505050565b8051602082018181fd5b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d156001600051141716611a865760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d156001600051141716611a8657633e3f8f736000526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611b7757611b77611b24565b60405290565b600082601f830112611b8e57600080fd5b813567ffffffffffffffff80821115611ba957611ba9611b24565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611bef57611bef611b24565b81604052838152866020858801011115611c0857600080fd5b836020870160208301376000602085830101528094505050505092915050565b73ffffffffffffffffffffffffffffffffffffffff81168114611c4a57600080fd5b50565b8035611c5881611c28565b919050565b80358015158114611c5857600080fd5b60006101408284031215611c8057600080fd5b611c88611b53565b905081358152602082013567ffffffffffffffff80821115611ca957600080fd5b611cb585838601611b7d565b60208401526040840135915080821115611cce57600080fd5b50611cdb84828501611b7d565b604083015250611ced60608301611c4d565b6060820152611cfe60808301611c4d565b6080820152611d0f60a08301611c4d565b60a082015260c082013560c082015260e082013560e0820152610100611d36818401611c5d565b90820152610120611d48838201611c5d565b9082015292915050565b600060608284031215611d6457600080fd5b50919050565b60008060008060a08587031215611d8057600080fd5b843567ffffffffffffffff80821115611d9857600080fd5b611da488838901611c6d565b95506020870135915080821115611dba57600080fd5b818701915087601f830112611dce57600080fd5b813581811115611ddd57600080fd5b8860208260051b8501011115611df257600080fd5b602083019550809450505050611e0b8660408701611d52565b905092959194509250565b600080600060408486031215611e2b57600080fd5b833567ffffffffffffffff80821115611e4357600080fd5b818601915086601f830112611e5757600080fd5b813581811115611e6657600080fd5b8760208260061b8501011115611e7b57600080fd5b60209283019550935050840135611e9181611c28565b809150509250925092565b60008060808385031215611eaf57600080fd5b823567ffffffffffffffff811115611ec657600080fd5b611ed285828601611c6d565b925050611ee28460208501611d52565b90509250929050565b60008060408385031215611efe57600080fd5b8235611f0981611c28565b91506020830135611f1981611c28565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610f6457610f64611f24565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215611fa757600080fd5b8135611fb281611c28565b9392505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611fea57611fea611f24565b5060010190565b6020808252818101839052600090604080840186845b8781101561205757813561201a81611c28565b73ffffffffffffffffffffffffffffffffffffffff9081168452828601359061204282611c28565b16838601529183019190830190600101612007565b5090979650505050505050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261209857600080fd5b9190910192915050565b6000602082840312156120b457600080fd5b813563ffffffff81168114611fb257600080fd5b6000602082840312156120da57600080fd5b611fb282611c5d565b6000815180845260005b81811015612109576020818501810151868301820152016120ed565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815281516020820152600060208301516101408060408501526121706101608501836120e3565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526121ab83826120e3565b92505060608501516121d5608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206122488187018315159052565b90950151151593019290925250919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261228f57600080fd5b83018035915067ffffffffffffffff8211156122aa57600080fd5b6020019150368190038213156122bf57600080fd5b9250929050565b600080858511156122d657600080fd5b838611156122e357600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156123305780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b60006020828403121561235a57600080fd5b505191905056fea2646970667358221220c3e6a7ae9f8e8f91fd062f5b74535d83e1a6fd811c3bd55fe23e927fea3ef02964736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var OptimismBridgeFacet__factory = /** @class */ (function (_super) {
    __extends(OptimismBridgeFacet__factory, _super);
    function OptimismBridgeFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    OptimismBridgeFacet__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    OptimismBridgeFacet__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    OptimismBridgeFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    OptimismBridgeFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    OptimismBridgeFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    OptimismBridgeFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    OptimismBridgeFacet__factory.bytecode = _bytecode;
    OptimismBridgeFacet__factory.abi = _abi;
    return OptimismBridgeFacet__factory;
}(ethers_1.ContractFactory));
exports.OptimismBridgeFacet__factory = OptimismBridgeFacet__factory;
