import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { AllBridgeFacet, AllBridgeFacetInterface } from "../AllBridgeFacet";
declare type AllBridgeFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class AllBridgeFacet__factory extends ContractFactory {
    constructor(...args: AllBridgeFacetConstructorParams);
    deploy(_allBridge: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<AllBridgeFacet>;
    getDeployTransaction(_allBridge: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): AllBridgeFacet;
    connect(signer: Signer): AllBridgeFacet__factory;
    static readonly bytecode = "0x60a06040523480156200001157600080fd5b50604051620029c3380380620029c3833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b608051612921620000a26000396000818161062901528181610669015261076801526129216000f3fe6080604052600436106100295760003560e01c8063a74ccb351461002e578063e40f246014610043575b600080fd5b61004161003c366004612268565b610056565b005b610041610051366004612315565b61029b565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e23447612394565b905086806101000151610121576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561015f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886101828160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101b9576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101f7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610234576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102498a600001518b60c001518b8b336104d7565b60c08b01526102588a8861061f565b504791506000905082821161026e576000610278565b6102788383612394565b9050801561028c5761028c60008583610884565b50506000909255505050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610316576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006103273447612394565b90508461034c8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610383576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036103c1576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036103fe576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b858061010001511561043c576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868061012001511561047a576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61048c88608001518960c001516108ba565b610496888861061f565b50479150600090508282116104ac5760006104b6565b6104b68383612394565b905080156104ca576104ca60008583610884565b5050600090925550505050565b600082808203610513576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610522600185612394565b818110610531576105316123a7565b905060200281019061054391906123d6565b610554906080810190606001612414565b9050600061056182610a30565b905073ffffffffffffffffffffffffffffffffffffffff821661058b576105883482612394565b90505b60006105978888610ae9565b90506105a38888610bf5565b6105b08a89898985610c56565b6000826105bc85610a30565b6105c69190612394565b905089811015610611576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b61065282608001517f00000000000000000000000000000000000000000000000000000000000000008460c00151611008565b61066260e0820160c0830161242f565b15610766577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634cd480bd836080015173ffffffffffffffffffffffffffffffffffffffff1660001b8460c0015184602001358560400135866060013587608001358860a00160208101906106ed919061244c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e08a901b16815261072f97969594939291908b35906004016124a8565b600060405180830381600087803b15801561074957600080fd5b505af115801561075d573d6000803e3d6000fd5b50505050610849565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634cd480bd8260000135846080015173ffffffffffffffffffffffffffffffffffffffff1660001b8560c0015185602001358660400135876060013588608001358960a00160208101906107f1919061244c565b60006040518a63ffffffff1660e01b81526004016108169897969594939291906124a8565b6000604051808303818588803b15801561082f57600080fd5b505af1158015610843573d6000803e3d6000fd5b50505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1826040516108789190612560565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff8316156108b0576108ab838383611153565b505050565b6108ab8282611282565b73ffffffffffffffffffffffffffffffffffffffff8216610913578034101561090f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b8060000361094d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156109ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109de9190612673565b905081811015610a24576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610608565b6108ab833330856113ac565b600073ffffffffffffffffffffffffffffffffffffffff821615610ae1576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adc9190612673565b610ae3565b475b92915050565b60608160008167ffffffffffffffff811115610b0757610b07611fbf565b604051908082528060200260200182016040528015610b30578160200160208202803683370190505b5090506000805b83811015610bea57868682818110610b5157610b516123a7565b9050602002810190610b6391906123d6565b610b74906080810190606001612414565b9150610b7f82610a30565b838281518110610b9157610b916123a7565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610be25734838281518110610bca57610bca6123a7565b60200260200101818151610bde9190612394565b9052505b600101610b37565b509095945050505050565b60005b818110156108ab576000838383818110610c1457610c146123a7565b9050602002810190610c2691906123d6565b610c2f9061268c565b90508060c0015115610c4d57610c4d816040015182608001516108ba565b50600101610bf8565b838383838260018114610f235760008585610c72600185612394565b818110610c8157610c816123a7565b9050602002810190610c9391906123d6565b610ca4906080810190606001612414565b9050600089815b81811015610e4f57368d8d83818110610cc657610cc66123a7565b9050602002810190610cd891906123d6565b9050610d07610ced6060830160408401612414565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610d6a5750610d6a610d206040830160208401612414565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610d815750610d81610d206020830183612414565b8015610e065750610e06610d9860a0830183612731565b610da79160049160009161279d565b610db0916127c7565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610e3c576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e468f826115c6565b50600101610cab565b505060005b610e5f600185612394565b811015610f1b576000888883818110610e7a57610e7a6123a7565b9050602002810190610e8c91906123d6565b610e9d906080810190606001612414565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f1257858281518110610ee457610ee46123a7565b6020026020010151610ef582610a30565b610eff9190612394565b92508215610f1257610f12818885610884565b50600101610e54565b505050610ffc565b8760005b81811015610ff957368b8b83818110610f4257610f426123a7565b9050602002810190610f5491906123d6565b9050610f69610ced6060830160408401612414565b80610f825750610f82610d206040830160208401612414565b8015610f995750610f99610d206020830183612414565b8015610fb05750610fb0610d9860a0830183612731565b610fe6576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ff08d826115c6565b50600101610f27565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661102857505050565b73ffffffffffffffffffffffffffffffffffffffff8216611075576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa1580156110eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110f9190612673565b90508181101561114d5761114d8484611148847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612394565b6118dc565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166111a0576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa15801561120d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112319190612673565b905080821115611277576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610608565b61114d848484611a58565b73ffffffffffffffffffffffffffffffffffffffff82166112cf576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611312576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610608565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461136c576040519150601f19603f3d011682016040523d82523d6000602084013e611371565b606091505b50509050806108ab576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff84166113f9576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611446576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa1580156114b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114db9190612673565b90506114e982868686611aae565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157d9190612673565b6115879190612394565b146115be576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b6115dc6115d66020830183612414565b3b151590565b611612576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611652576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611667610ced6060850160408601612414565b611672576000611678565b82608001355b9050600061169461168f6060860160408701612414565b610a30565b905060006116ab61168f6080870160608801612414565b9050826000036116e2576116e26116c86060870160408801612414565b6116d86040880160208901612414565b8760800135611008565b846080013582101561172d576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610608565b60008061173d6020880188612414565b73ffffffffffffffffffffffffffffffffffffffff168561176160a08a018a612731565b60405161176f92919061280f565b60006040518083038185875af1925050503d80600081146117ac576040519150601f19603f3d011682016040523d82523d6000602084013e6117b1565b606091505b5091509150816117fc5760006117c682611b0c565b9050806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610608919061281f565b600061181161168f60808a0160608b01612414565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961184260208b018b612414565b61185260608c0160408d01612414565b61186260808d0160608e01612414565b8c60800135898711611874578661187e565b61187e8a88612394565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119779190612673565b6119819190612832565b60405173ffffffffffffffffffffffffffffffffffffffff851660248201526044810182905290915061114d9085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611b8a565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526108ab9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016119d6565b60405173ffffffffffffffffffffffffffffffffffffffff8085166024830152831660448201526064810182905261114d9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016119d6565b6060604482511015611b5157505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611b6d6004808551611b659190612394565b859190611c96565b905080806020019051810190611b839190612845565b9392505050565b6000611bec826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611db09092919063ffffffff16565b8051909150156108ab5780806020019051810190611c0a91906128bc565b6108ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610608565b606081611ca481601f612832565b1015611cdc576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611ce68284612832565b84511015611d20576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611d3f5760405191506000825260208201604052611da7565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611d78578051835260209283019201611d60565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6060611dbf8484600085611dc7565b949350505050565b606082471015611e59576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610608565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611e8291906128d9565b60006040518083038185875af1925050503d8060008114611ebf576040519150601f19603f3d011682016040523d82523d6000602084013e611ec4565b606091505b5091509150611ed587838387611ee0565b979650505050505050565b60608315611f76578251600003611f6f5773ffffffffffffffffffffffffffffffffffffffff85163b611f6f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610608565b5081611dbf565b611dbf8383815115611f8b5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610608919061281f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561201257612012611fbf565b60405290565b60405160e0810167ffffffffffffffff8111828210171561201257612012611fbf565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561208257612082611fbf565b604052919050565b600067ffffffffffffffff8211156120a4576120a4611fbf565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126120e157600080fd5b81356120f46120ef8261208a565b61203b565b81815284602083860101111561210957600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461214a57600080fd5b919050565b801515811461215d57600080fd5b50565b803561214a8161214f565b6000610140828403121561217e57600080fd5b612186611fee565b905081358152602082013567ffffffffffffffff808211156121a757600080fd5b6121b3858386016120d0565b602084015260408401359150808211156121cc57600080fd5b506121d9848285016120d0565b6040830152506121eb60608301612126565b60608201526121fc60808301612126565b608082015261220d60a08301612126565b60a082015260c082013560c082015260e082013560e0820152610100612234818401612160565b90820152610120612246838201612160565b9082015292915050565b600060e0828403121561226257600080fd5b50919050565b600080600080610120858703121561227f57600080fd5b843567ffffffffffffffff8082111561229757600080fd5b6122a38883890161216b565b955060208701359150808211156122b957600080fd5b818701915087601f8301126122cd57600080fd5b8135818111156122dc57600080fd5b8860208260051b85010111156122f157600080fd5b60208301955080945050505061230a8660408701612250565b905092959194509250565b600080610100838503121561232957600080fd5b823567ffffffffffffffff81111561234057600080fd5b61234c8582860161216b565b92505061235c8460208501612250565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610ae357610ae3612365565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261240a57600080fd5b9190910192915050565b60006020828403121561242657600080fd5b611b8382612126565b60006020828403121561244157600080fd5b8135611b838161214f565b60006020828403121561245e57600080fd5b813560048110611b8357600080fd5b600481106124a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000610100820190508982528860208301528760408301528660608301528560808301528460a08301526124df60c083018561246d565b8260e08301529998505050505050505050565b60005b8381101561250d5781810151838201526020016124f5565b50506000910152565b6000815180845261252e8160208601602086016124f2565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081528151602082015260006020830151610140806040850152612589610160850183612516565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526125c48382612516565b92505060608501516125ee608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206126618187018315159052565b90950151151593019290925250919050565b60006020828403121561268557600080fd5b5051919050565b600060e0823603121561269e57600080fd5b6126a6612018565b6126af83612126565b81526126bd60208401612126565b60208201526126ce60408401612126565b60408201526126df60608401612126565b60608201526080830135608082015260a083013567ffffffffffffffff81111561270857600080fd5b612714368286016120d0565b60a08301525061272660c08401612160565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261276657600080fd5b83018035915067ffffffffffffffff82111561278157600080fd5b60200191503681900382131561279657600080fd5b9250929050565b600080858511156127ad57600080fd5b838611156127ba57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156128075780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b602081526000611b836020830184612516565b80820180821115610ae357610ae3612365565b60006020828403121561285757600080fd5b815167ffffffffffffffff81111561286e57600080fd5b8201601f8101841361287f57600080fd5b805161288d6120ef8261208a565b8181528560208385010111156128a257600080fd5b6128b38260208301602086016124f2565b95945050505050565b6000602082840312156128ce57600080fd5b8151611b838161214f565b6000825161240a8184602087016124f256fea2646970667358221220ab7af289bc6fd02c9589dfd8ef0469315eadb59956459f0a3da9d689b975454264736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IAllBridge";
            readonly name: "_allBridge";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "CannotBridgeToSameNetwork";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ContractCallNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "minAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "receivedAmount";
            readonly type: "uint256";
        }];
        readonly name: "CumulativeSlippageTooHigh";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InformationMismatch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "required";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidContract";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidReceiver";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeAssetTransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapDataProvided";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapFromZeroBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoTransferToNullAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAValidSpender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ReentrancyError";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOutOfBounds";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOverflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferRecovered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly indexed: false;
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "bridgeData";
            readonly type: "tuple";
        }];
        readonly name: "LiFiTransferStarted";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "fees";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "recipient";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "receiveToken";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "enum IAllBridge.MessengerProtocol";
                readonly name: "messenger";
                readonly type: "uint8";
            }, {
                readonly internalType: "bool";
                readonly name: "payFeeWithSendingAsset";
                readonly type: "bool";
            }];
            readonly internalType: "struct AllBridgeFacet.AllBridgeData";
            readonly name: "_allBridgeData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaAllBridge";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "fees";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "recipient";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "receiveToken";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "enum IAllBridge.MessengerProtocol";
                readonly name: "messenger";
                readonly type: "uint8";
            }, {
                readonly internalType: "bool";
                readonly name: "payFeeWithSendingAsset";
                readonly type: "bool";
            }];
            readonly internalType: "struct AllBridgeFacet.AllBridgeData";
            readonly name: "_allBridgeData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaAllBridge";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): AllBridgeFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): AllBridgeFacet;
}
export {};
