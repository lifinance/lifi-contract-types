"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoreRouteFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "processRoute",
        inputs: [
            {
                name: "tokenIn",
                type: "address",
                internalType: "address",
            },
            {
                name: "amountIn",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "tokenOut",
                type: "address",
                internalType: "address",
            },
            {
                name: "amountOutMin",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "to",
                type: "address",
                internalType: "address",
            },
            {
                name: "route",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "amountOut",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "Route",
        inputs: [
            {
                name: "from",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "to",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "tokenIn",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "tokenOut",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "amountIn",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "amountOutMin",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "amountOut",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "MinimalInputBalanceViolation",
        inputs: [
            {
                name: "available",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "required",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "MinimalOutputBalanceViolation",
        inputs: [
            {
                name: "amountOut",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
    {
        type: "error",
        name: "SwapFailed",
        inputs: [],
    },
    {
        type: "error",
        name: "UnknownCommandCode",
        inputs: [],
    },
    {
        type: "error",
        name: "UnknownSelector",
        inputs: [],
    },
];
var _bytecode = "0x6080604052348015600e575f5ffd5b50610fa68061001c5f395ff3fe60806040526004361061001d575f3560e01c80632646478b14610021575b5f5ffd5b61003461002f366004610d6d565b610046565b60405190815260200160405180910390f35b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80545f91907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100c4576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181556100d7898989898989896100e7565b91505f9055979650505050505050565b5f8073ffffffffffffffffffffffffffffffffffffffff891673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146101ab576040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8a16906370a0823190602401602060405180830381865afa158015610182573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101a69190610e1f565b6101ad565b5f5b90505f73ffffffffffffffffffffffffffffffffffffffff881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610274576040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301528916906370a0823190602401602060405180830381865afa15801561024b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061026f9190610e1f565b61028d565b8573ffffffffffffffffffffffffffffffffffffffff16315b604080516020601f88018190048102820181019092528681529192508a915f9182916102d2918a908a90819084018382808284375f9201919091525061068c92505050565b90505b8051602082015111156103af5780518051600191820183525f1a90819003610314575f610301836106ae565b9050835f0361030e578094505b5061039e565b8060ff1660020361032e57610329828e610770565b61039e565b8060ff16600303610343575f6103018361078f565b8060ff1660040361035757610329826107b5565b8060ff1660060361036c576103298e836107d3565b6040517fb926a1f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103a783610e63565b9250506102d5565b505f905073ffffffffffffffffffffffffffffffffffffffff8c1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610475576040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8d16906370a0823190602401602060405180830381865afa15801561044c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104709190610e1f565b610477565b5f5b9050836104848c83610e9a565b10156104d6576104948b82610e9a565b6040517f583af5860000000000000000000000000000000000000000000000000000000081526004810191909152602481018590526044015b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff8b1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461059b576040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a811660048301528c16906370a0823190602401602060405180830381865afa158015610572573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105969190610e1f565b6105b4565b8873ffffffffffffffffffffffffffffffffffffffff16315b90506105c08a85610e9a565b811015610606576105d18482610eb3565b6040517f963b34a50000000000000000000000000000000000000000000000000000000081526004016104cd91815260200190565b6106108482610eb3565b6040805173ffffffffffffffffffffffffffffffffffffffff8c81168252602082018790529181018d905260608101839052919750808d1691908f169033907f2db5ddd0b42bdbca0d69ea16f234a870a485854ae0d91f16643d6f317d8b89949060800160405180910390a45050505050979650505050505050565b6040805180820190915260208281018252825190920182019181019190915290565b80518051601490910182525f90819060601c6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915073ffffffffffffffffffffffffffffffffffffffff8216906370a0823190602401602060405180830381865afa15801561072b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061074f9190610e1f565b9150811561075e576001820391505b61076a83308385610837565b50919050565b815180516014909101835260601c61078a83338385610837565b505050565b476107b0823073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee84610837565b919050565b805180516014909101825260601c6107cf825f8381610891565b5050565b80518051602082018084525160408301808552516041840180865251606185018087525160819095018652929391925f9190911a9161082e73ffffffffffffffffffffffffffffffffffffffff881633308888888888610a93565b50505050505050565b83518051600190910185525f90811a905b8160ff1681101561088957855180516002909101875261ffff60f09190911c84810291909104938490039361087f88888884610891565b5050600101610848565b505050505050565b5f61089b85610cfc565b60208101519091505f610910827fffffffff00000000000000000000000000000000000000000000000000000000165f9081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b905073ffffffffffffffffffffffffffffffffffffffff811661095f576040517fdc66f67300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5f8273ffffffffffffffffffffffffffffffffffffffff1684868a8a8a6040516024016109909493929190610ec6565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051610a199190610f5a565b5f60405180830381855af49150503d805f8114610a51576040519150601f19603f3d011682016040523d82523d5f602084013e610a56565b606091505b509150915081610a6957610a6981610d40565b5f81806020019051810190610a7e9190610e1f565b8a5181018b5290505b50505050505050505050565b6040517f7ecebe0000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301525f91908a1690637ecebe0090602401602060405180830381865afa158015610b00573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b249190610e1f565b6040517fd505accf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a811660048301528981166024830152604482018990526064820188905260ff8716608483015260a4820186905260c48201859052919250908a169063d505accf9060e4015f604051808303815f87803b158015610bbb575f5ffd5b505af1158015610bcd573d5f5f3e3d5ffd5b50506040517f7ecebe0000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b811660048301525f93508c169150637ecebe0090602401602060405180830381865afa158015610c3d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c619190610e1f565b9050610c6e826001610e9a565b8114610a87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5361666545524332303a207065726d697420646964206e6f742073756363656560448201527f640000000000000000000000000000000000000000000000000000000000000060648201526084016104cd565b80516020820151606091905f610d128383610eb3565b90508015610d385760405193506020810184016040528084528060208501828560045afa505b505050919050565b8051602082018181fd5b803573ffffffffffffffffffffffffffffffffffffffff811681146107b0575f5ffd5b5f5f5f5f5f5f5f60c0888a031215610d83575f5ffd5b610d8c88610d4a565b965060208801359550610da160408901610d4a565b945060608801359350610db660808901610d4a565b925060a088013567ffffffffffffffff811115610dd1575f5ffd5b8801601f81018a13610de1575f5ffd5b803567ffffffffffffffff811115610df7575f5ffd5b8a6020828401011115610e08575f5ffd5b602082019350809250505092959891949750929550565b5f60208284031215610e2f575f5ffd5b5051919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e9357610e93610e36565b5060010190565b80820180821115610ead57610ead610e36565b92915050565b81810381811115610ead57610ead610e36565b608081525f8551806080840152806020880160a085015e5f60a0828501015260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505073ffffffffffffffffffffffffffffffffffffffff8516602083015273ffffffffffffffffffffffffffffffffffffffff8416604083015282606083015295945050505050565b5f82518060208501845e5f92019182525091905056fea2646970667358221220c00c515cc5680ccd7e8101131cdddafb70ea4264ba65231f6cc49e8299c07d6264736f6c634300081d0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var CoreRouteFacet__factory = /** @class */ (function (_super) {
    __extends(CoreRouteFacet__factory, _super);
    function CoreRouteFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    CoreRouteFacet__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    CoreRouteFacet__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    CoreRouteFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    CoreRouteFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    CoreRouteFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    CoreRouteFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    CoreRouteFacet__factory.bytecode = _bytecode;
    CoreRouteFacet__factory.abi = _abi;
    return CoreRouteFacet__factory;
}(ethers_1.ContractFactory));
exports.CoreRouteFacet__factory = CoreRouteFacet__factory;
