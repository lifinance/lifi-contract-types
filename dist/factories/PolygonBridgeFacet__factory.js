"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolygonBridgeFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_rootChainManager",
                type: "address",
                internalType: "contract IRootChainManager",
            },
            {
                name: "_erc20Predicate",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaPolygonBridge",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaPolygonBridge",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "BridgeToNonEVMChain",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes",
                indexed: false,
                internalType: "bytes",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "BridgeToNonEVMChainBytes32",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
];
var _bytecode = "0x60c06040523480156200001157600080fd5b5060405162001def38038062001def833981016040819052620000349162000065565b6001600160a01b039182166080521660a052620000a4565b6001600160a01b03811681146200006257600080fd5b50565b600080604083850312156200007957600080fd5b825162000086816200004c565b602084015190925062000099816200004c565b809150509250929050565b60805160a051611d17620000d860003960006106fb0152600081816105d50152818161068201526107b30152611d176000f3fe6080604052600436106100295760003560e01c8063af62c7d61461002e578063b4f3758114610043575b600080fd5b61004161003c366004611807565b610056565b005b610041610051366004611844565b61027d565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e2344761190d565b90508380610100015115610122576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8480610120015115610160576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856101838160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101ba576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101f8576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610235576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61024787608001518860c001516104a8565b6102508761055d565b5047915050818111156102725761027260008461026d858561190d565b610858565b505060009091555050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102f8576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155336000610309344761190d565b905085806101000151610348576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610386576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876103a98160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103e0576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361041e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361045b576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61047089600001518a60c001518a8a3361088d565b60c08a015261047e8961055d565b50479150508181111561049b5761049b60008461026d858561190d565b5050600090915550505050565b806000036104e2576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661053b5780341015610537576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61053773ffffffffffffffffffffffffffffffffffffffff83163330846109d4565b6000610581826080015173ffffffffffffffffffffffffffffffffffffffff161590565b156106385760c082015160a08301516040517f4faa8a2600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201527f000000000000000000000000000000000000000000000000000000000000000090911691634faa8a26916024016000604051808303818588803b15801561061a57600080fd5b505af115801561062e573d6000803e3d6000fd5b505050505061081d565b60808201516040517fea60c7c400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201527f00000000000000000000000000000000000000000000000000000000000000009091169063ea60c7c490602401602060405180830381865afa1580156106cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ef9190611920565b905061072482608001517f00000000000000000000000000000000000000000000000000000000000000008460c00151610a31565b60008260c0015160405160200161073d91815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260a085015160808601517fe3dec8fb00000000000000000000000000000000000000000000000000000000845291935073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169263e3dec8fb926107e9929186906004016119a8565b600060405180830381600087803b15801561080357600080fd5b505af1158015610817573d6000803e3d6000fd5b50505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161084c91906119ea565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff83166108825761087d8282610a5d565b505050565b61087d838383610aca565b6000828082036108c9576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856108d860018561190d565b8181106108e7576108e7611afd565b90506020028101906108f99190611b2c565b61090a906080810190606001611b6a565b9050600061091782610b38565b905073ffffffffffffffffffffffffffffffffffffffff82166109415761093e348261190d565b90505b600061094d8888610b83565b90506109598888610c97565b6109668a89898985610d04565b60008261097285610b38565b61097c919061190d565b9050898110156109c6576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d156001600051141716610a2357637939f4246000526004601cfd5b600060605260405250505050565b61087d8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610ed3565b73ffffffffffffffffffffffffffffffffffffffff8216610aaa576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61053773ffffffffffffffffffffffffffffffffffffffff831682611002565b73ffffffffffffffffffffffffffffffffffffffff8216610b17576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61087d73ffffffffffffffffffffffffffffffffffffffff8416838361101e565b600073ffffffffffffffffffffffffffffffffffffffff821615610b7b57610b7673ffffffffffffffffffffffffffffffffffffffff83163061106d565b610b7d565b475b92915050565b60608160008167ffffffffffffffff811115610ba157610ba16115d9565b604051908082528060200260200182016040528015610bca578160200160208202803683370190505b5090506000805b83811015610c8c57868682818110610beb57610beb611afd565b9050602002810190610bfd9190611b2c565b610c0e906080810190606001611b6a565b9150610c1982610b38565b838281518110610c2b57610c2b611afd565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610c7c5734838281518110610c6457610c64611afd565b60200260200101818151610c78919061190d565b9052505b610c8581611b87565b9050610bd1565b509095945050505050565b60005b8181101561087d5736838383818110610cb557610cb5611afd565b9050602002810190610cc79190611b2c565b9050610cd960e0820160c08301611bbf565b15610cfb57610cfb610cf16060830160408401611b6a565b82608001356104a8565b50600101610c9a565b838383838260005b81811015610eb857368a8a83818110610d2757610d27611afd565b9050602002810190610d399190611b2c565b9050610d68610d4e6060830160408401611b6a565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610dcb5750610dcb610d816040830160208401611b6a565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610de25750610de2610d816020830183611b6a565b8015610e675750610e67610df960a0830183611bda565b610e0891600491600091611c46565b610e1191611c70565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610e9d576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ea78c826110a2565b50610eb181611b87565b9050610d0c565b5050610ec884848484600061131f565b505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff841615610ffc5773ffffffffffffffffffffffffffffffffffffffff8316610f3c576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015610fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd59190611cb8565b1015610ffc57610ffc73ffffffffffffffffffffffffffffffffffffffff85168483611545565b50505050565b60003860003884865af16105375763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d156001600051141716611063576390b8ec186000526004601cfd5b6000603452505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b6110ba6110b26020830183611b6a565b6017903b1190565b6110f0576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611130576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611145610d4e6060850160408601611b6a565b611150576000611156565b82608001355b9050600061117261116d6080860160608701611b6a565b610b38565b9050816000036111a9576111a961118f6060860160408701611b6a565b61119f6040870160208801611b6a565b8660800135610a31565b6000806111b96020870187611b6a565b73ffffffffffffffffffffffffffffffffffffffff16846111dd60a0890189611bda565b6040516111eb929190611cd1565b60006040518083038185875af1925050503d8060008114611228576040519150601f19603f3d011682016040523d82523d6000602084013e61122d565b606091505b50915091508161124057611240816115cf565b600061125561116d6080890160608a01611b6a565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861128660208a018a611b6a565b61129660608b0160408c01611b6a565b6112a660808c0160608d01611b6a565b8b608001358987116112b857866112c2565b6112c28a8861190d565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b836000868261132f60018261190d565b81811061133e5761133e611afd565b90506020028101906113509190611b2c565b611361906080810190606001611b6a565b905060008060008060008060005b888110156115355761138260018a61190d565b81108015611391575088600114155b1561146d578d8d828181106113a8576113a8611afd565b90506020028101906113ba9190611b2c565b6113cb906080810190606001611b6a565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161461146d578a818151811061141257611412611afd565b602002602001015161142387610b38565b61142d919061190d565b965073ffffffffffffffffffffffffffffffffffffffff861615611452576000611454565b895b93508387111561146d5761146d868d61026d878b61190d565b8d8d8281811061147f5761147f611afd565b90506020028101906114919190611b2c565b6114a2906060810190604001611b6a565b94506114ad85610b38565b925073ffffffffffffffffffffffffffffffffffffffff8516156114d25760006114d4565b895b9150818311801561151157508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b1561152557611525858d61026d858761190d565b61152e81611b87565b905061136f565b5050505050505050505050505050565b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d1560016000511417166110635760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d15600160005114171661106357633e3f8f736000526004601cfd5b8051602082018181fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561162c5761162c6115d9565b60405290565b600082601f83011261164357600080fd5b813567ffffffffffffffff8082111561165e5761165e6115d9565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156116a4576116a46115d9565b816040528381528660208588010111156116bd57600080fd5b836020870160208301376000602085830101528094505050505092915050565b73ffffffffffffffffffffffffffffffffffffffff811681146116ff57600080fd5b50565b803561170d816116dd565b919050565b8035801515811461170d57600080fd5b6000610140828403121561173557600080fd5b61173d611608565b905081358152602082013567ffffffffffffffff8082111561175e57600080fd5b61176a85838601611632565b6020840152604084013591508082111561178357600080fd5b5061179084828501611632565b6040830152506117a260608301611702565b60608201526117b360808301611702565b60808201526117c460a08301611702565b60a082015260c082013560c082015260e082013560e08201526101006117eb818401611712565b908201526101206117fd838201611712565b9082015292915050565b60006020828403121561181957600080fd5b813567ffffffffffffffff81111561183057600080fd5b61183c84828501611722565b949350505050565b60008060006040848603121561185957600080fd5b833567ffffffffffffffff8082111561187157600080fd5b61187d87838801611722565b9450602086013591508082111561189357600080fd5b818601915086601f8301126118a757600080fd5b8135818111156118b657600080fd5b8760208260051b85010111156118cb57600080fd5b6020830194508093505050509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610b7d57610b7d6118de565b60006020828403121561193257600080fd5b815161193d816116dd565b9392505050565b6000815180845260005b8181101561196a5760208185018101518683018201520161194e565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff8086168352808516602084015250606060408301526119e16060830184611944565b95945050505050565b602081528151602082015260006020830151610140806040850152611a13610160850183611944565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152611a4e8382611944565b9250506060850151611a78608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120611aeb8187018315159052565b90950151151593019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611b6057600080fd5b9190910192915050565b600060208284031215611b7c57600080fd5b813561193d816116dd565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611bb857611bb86118de565b5060010190565b600060208284031215611bd157600080fd5b61193d82611712565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611c0f57600080fd5b83018035915067ffffffffffffffff821115611c2a57600080fd5b602001915036819003821315611c3f57600080fd5b9250929050565b60008085851115611c5657600080fd5b83861115611c6357600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015611cb05780818660040360031b1b83161692505b505092915050565b600060208284031215611cca57600080fd5b5051919050565b818382376000910190815291905056fea2646970667358221220215c1ff17b469230c54a66ddbf2d066e35a98e8c9c1a660e59aefbc89ac6d08e64736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var PolygonBridgeFacet__factory = /** @class */ (function (_super) {
    __extends(PolygonBridgeFacet__factory, _super);
    function PolygonBridgeFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    PolygonBridgeFacet__factory.prototype.deploy = function (_rootChainManager, _erc20Predicate, overrides) {
        return _super.prototype.deploy.call(this, _rootChainManager, _erc20Predicate, overrides || {});
    };
    PolygonBridgeFacet__factory.prototype.getDeployTransaction = function (_rootChainManager, _erc20Predicate, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _rootChainManager, _erc20Predicate, overrides || {});
    };
    PolygonBridgeFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    PolygonBridgeFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    PolygonBridgeFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    PolygonBridgeFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    PolygonBridgeFacet__factory.bytecode = _bytecode;
    PolygonBridgeFacet__factory.abi = _abi;
    return PolygonBridgeFacet__factory;
}(ethers_1.ContractFactory));
exports.PolygonBridgeFacet__factory = PolygonBridgeFacet__factory;
