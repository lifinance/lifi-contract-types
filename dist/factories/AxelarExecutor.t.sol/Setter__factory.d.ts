import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Setter, SetterInterface } from "../../AxelarExecutor.t.sol/Setter";
declare type SetterConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class Setter__factory extends ContractFactory {
    constructor(...args: SetterConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<Setter>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): Setter;
    connect(signer: Signer): Setter__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5061040d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063368b87721461003b578063e21f37ce14610050575b600080fd5b61004e61004936600461010e565b61006e565b005b610058610080565b6040516100659190610180565b60405180910390f35b600061007b8284836102bc565b505050565b6000805461008d9061021b565b80601f01602080910402602001604051908101604052809291908181526020018280546100b99061021b565b80156101065780601f106100db57610100808354040283529160200191610106565b820191906000526020600020905b8154815290600101906020018083116100e957829003601f168201915b505050505081565b6000806020838503121561012157600080fd5b823567ffffffffffffffff8082111561013957600080fd5b818501915085601f83011261014d57600080fd5b81358181111561015c57600080fd5b86602082850101111561016e57600080fd5b60209290920196919550909350505050565b600060208083528351808285015260005b818110156101ad57858101830151858201604001528201610191565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600181811c9082168061022f57607f821691505b602082108103610268577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561007b57600081815260208120601f850160051c810160208610156102955750805b601f850160051c820191505b818110156102b4578281556001016102a1565b505050505050565b67ffffffffffffffff8311156102d4576102d46101ec565b6102e8836102e2835461021b565b8361026e565b6000601f84116001811461033a57600085156103045750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b1783556103d0565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b828110156103895786850135825560209485019460019092019101610369565b50868210156103c4577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea26469706673582212202d45a17fa85cdf9c2b49682a3c42a6ff74436d65cfe9b217fd88209c7e87689e64736f6c63430008110033";
    static readonly abi: ({
        inputs: never[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: never[];
        stateMutability: string;
        type: string;
    })[];
    static createInterface(): SetterInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): Setter;
}
export {};
