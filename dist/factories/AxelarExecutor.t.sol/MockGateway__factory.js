"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockGateway__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "string",
                name: "_symbol",
                type: "string",
            },
            {
                internalType: "address",
                name: "_tokenAddress",
                type: "address",
            },
        ],
        name: "setTokenAddress",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        name: "tokenAddresses",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
            {
                internalType: "string",
                name: "",
                type: "string",
            },
            {
                internalType: "string",
                name: "",
                type: "string",
            },
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "validateContractCall",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
            {
                internalType: "string",
                name: "",
                type: "string",
            },
            {
                internalType: "string",
                name: "",
                type: "string",
            },
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
            {
                internalType: "string",
                name: "",
                type: "string",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "validateContractCallAndMint",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b506104e2806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806317456e56146100515780631876eed9146100665780635f6970c314610097578063935b13f6146100b1575b600080fd5b61006461005f36600461025a565b610117565b005b61008261007436600461030e565b600198975050505050505050565b60405190151581526020015b60405180910390f35b6100826100a53660046103be565b60019695505050505050565b6100f26100bf366004610440565b805160208183018101805160008252928201919093012091525473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161008e565b80600083604051610128919061047d565b908152604051908190036020019020805473ffffffffffffffffffffffffffffffffffffffff929092167fffffffffffffffffffffffff00000000000000000000000000000000000000009092169190911790555050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126101c057600080fd5b813567ffffffffffffffff808211156101db576101db610180565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561022157610221610180565b8160405283815286602085880101111561023a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561026d57600080fd5b823567ffffffffffffffff81111561028457600080fd5b610290858286016101af565b925050602083013573ffffffffffffffffffffffffffffffffffffffff811681146102ba57600080fd5b809150509250929050565b60008083601f8401126102d757600080fd5b50813567ffffffffffffffff8111156102ef57600080fd5b60208301915083602082850101111561030757600080fd5b9250929050565b60008060008060008060008060c0898b03121561032a57600080fd5b88359750602089013567ffffffffffffffff8082111561034957600080fd5b6103558c838d016102c5565b909950975060408b013591508082111561036e57600080fd5b61037a8c838d016102c5565b909750955060608b0135945060808b013591508082111561039a57600080fd5b506103a78b828c016101af565b92505060a089013590509295985092959890939650565b600080600080600080608087890312156103d757600080fd5b86359550602087013567ffffffffffffffff808211156103f657600080fd5b6104028a838b016102c5565b9097509550604089013591508082111561041b57600080fd5b5061042889828a016102c5565b979a9699509497949695606090950135949350505050565b60006020828403121561045257600080fd5b813567ffffffffffffffff81111561046957600080fd5b610475848285016101af565b949350505050565b6000825160005b8181101561049e5760208186018101518583015201610484565b50600092019182525091905056fea26469706673582212208b516981b0785dda02fa671ee4fc7c1b86c88a0319aea76582a50251cd01d0f864736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var MockGateway__factory = /** @class */ (function (_super) {
    __extends(MockGateway__factory, _super);
    function MockGateway__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    MockGateway__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    MockGateway__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    MockGateway__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    MockGateway__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    MockGateway__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    MockGateway__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    MockGateway__factory.bytecode = _bytecode;
    MockGateway__factory.abi = _abi;
    return MockGateway__factory;
}(ethers_1.ContractFactory));
exports.MockGateway__factory = MockGateway__factory;
