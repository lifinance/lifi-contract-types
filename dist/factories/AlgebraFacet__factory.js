"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.AlgebraFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "algebraSwapCallback",
        inputs: [
            {
                name: "amount0Delta",
                type: "int256",
                internalType: "int256",
            },
            {
                name: "amount1Delta",
                type: "int256",
                internalType: "int256",
            },
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "swapAlgebra",
        inputs: [
            {
                name: "swapData",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "from",
                type: "address",
                internalType: "address",
            },
            {
                name: "tokenIn",
                type: "address",
                internalType: "address",
            },
            {
                name: "amountIn",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "error",
        name: "InvalidCallData",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "SwapCallbackNotExecuted",
        inputs: [],
    },
    {
        type: "error",
        name: "UnexpectedCallbackSender",
        inputs: [
            {
                name: "actual",
                type: "address",
                internalType: "address",
            },
            {
                name: "expected",
                type: "address",
                internalType: "address",
            },
        ],
    },
];
var _bytecode = "0x6080604052348015600e575f5ffd5b50610e448061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c80632c8958f614610038578063ff5943bf1461004d575b5f5ffd5b61004b6100463660046109e2565b610060565b005b61004b61005b366004610abc565b6100c6565b6100686104a3565b6100748484848461053a565b6100c07ffdcc6c44da30e7c49fd2b43345be3db7f90d50c636b93a701c14974ea66ea61280547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b50505050565b83516040805160208088018252928701830192810192909252818101905280518051601482018084525160158301808552516029840180865251602a9094018552606092831c9360015f93841a14939190911c911a151583158061013e575073ffffffffffffffffffffffffffffffffffffffff8216155b8061016857507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff86115b1561019f576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff8916036101de576101de73ffffffffffffffffffffffffffffffffffffffff881633308961057b565b7ffdcc6c44da30e7c49fd2b43345be3db7f90d50c636b93a701c14974ea66ea61280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8616179055801561033f578373ffffffffffffffffffffffffffffffffffffffff1663713346943084868a8861028c57610287600173fffd8963efd1fc6a506488495d951d5263988d26610c01565b61029c565b61029c6401000276a36001610c33565b8d6040516020016102c9919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b6040516020818303038152906040526040518763ffffffff1660e01b81526004016102f996959493929190610cab565b60408051808303815f875af1158015610314573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103389190610d2b565b5050610429565b8373ffffffffffffffffffffffffffffffffffffffff1663128acb088385898761038757610382600173fffd8963efd1fc6a506488495d951d5263988d26610c01565b610397565b6103976401000276a36001610c33565b6040805173ffffffffffffffffffffffffffffffffffffffff8f166020820152016040516020818303038152906040526040518663ffffffff1660e01b81526004016103e7959493929190610d4d565b60408051808303815f875af1158015610402573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104269190610d2b565b50505b7ffdcc6c44da30e7c49fd2b43345be3db7f90d50c636b93a701c14974ea66ea6125473ffffffffffffffffffffffffffffffffffffffff1615610498576040517f8184471100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050505050565b7ffdcc6c44da30e7c49fd2b43345be3db7f90d50c636b93a701c14974ea66ea6125473ffffffffffffffffffffffffffffffffffffffff16338114610537576040517f48f89ac500000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff821660248201526044015b60405180910390fd5b50565b5f5f8513610548578361054a565b845b90505f811361055957506100c0565b5f61056683850185610da5565b9050610573813384610610565b505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526100c0908590610683565b73ffffffffffffffffffffffffffffffffffffffff821661065d576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61067e73ffffffffffffffffffffffffffffffffffffffff84168383610790565b505050565b5f6106e4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166107d99092919063ffffffff16565b905080515f14806107045750808060200190518101906107049190610dc7565b61067e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161052e565b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166107d0576390b8ec185f526004601cfd5b5f603452505050565b60606107e784845f856107ef565b949350505050565b606082471015610881576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161052e565b5f5f8673ffffffffffffffffffffffffffffffffffffffff1685876040516108a99190610de6565b5f6040518083038185875af1925050503d805f81146108e3576040519150601f19603f3d011682016040523d82523d5f602084013e6108e8565b606091505b50915091506108f987838387610904565b979650505050505050565b606083156109995782515f036109925773ffffffffffffffffffffffffffffffffffffffff85163b610992576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161052e565b50816107e7565b6107e783838151156109ae5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052e9190610dfc565b5f5f5f5f606085870312156109f5575f5ffd5b8435935060208501359250604085013567ffffffffffffffff811115610a19575f5ffd5b8501601f81018713610a29575f5ffd5b803567ffffffffffffffff811115610a3f575f5ffd5b876020828401011115610a50575f5ffd5b949793965060200194505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b73ffffffffffffffffffffffffffffffffffffffff81168114610537575f5ffd5b8035610ab781610a8b565b919050565b5f5f5f5f60808587031215610acf575f5ffd5b843567ffffffffffffffff811115610ae5575f5ffd5b8501601f81018713610af5575f5ffd5b803567ffffffffffffffff811115610b0f57610b0f610a5e565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160116810181811067ffffffffffffffff82111715610b7b57610b7b610a5e565b604052818152828201602001891015610b92575f5ffd5b816020840160208301375f60208383010152809650505050610bb660208601610aac565b9250610bc460408601610aac565b9396929550929360600135925050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b73ffffffffffffffffffffffffffffffffffffffff8281168282160390811115610c2d57610c2d610bd4565b92915050565b73ffffffffffffffffffffffffffffffffffffffff8181168382160190811115610c2d57610c2d610bd4565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b73ffffffffffffffffffffffffffffffffffffffff8716815273ffffffffffffffffffffffffffffffffffffffff86166020820152841515604082015283606082015273ffffffffffffffffffffffffffffffffffffffff8316608082015260c060a08201525f610d1f60c0830184610c5f565b98975050505050505050565b5f5f60408385031215610d3c575f5ffd5b505080516020909101519092909150565b73ffffffffffffffffffffffffffffffffffffffff86168152841515602082015283604082015273ffffffffffffffffffffffffffffffffffffffff8316606082015260a060808201525f6108f960a0830184610c5f565b5f60208284031215610db5575f5ffd5b8135610dc081610a8b565b9392505050565b5f60208284031215610dd7575f5ffd5b81518015158114610dc0575f5ffd5b5f82518060208501845e5f920191825250919050565b602081525f610dc06020830184610c5f56fea26469706673582212208a8a4580b69e6688cfd7a16a459bce278b53a46d68f2d743dccc8623aad192d664736f6c634300081d0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var AlgebraFacet__factory = /** @class */ (function (_super) {
    __extends(AlgebraFacet__factory, _super);
    function AlgebraFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    AlgebraFacet__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    AlgebraFacet__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    AlgebraFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    AlgebraFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    AlgebraFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    AlgebraFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    AlgebraFacet__factory.bytecode = _bytecode;
    AlgebraFacet__factory.abi = _abi;
    return AlgebraFacet__factory;
}(ethers_1.ContractFactory));
exports.AlgebraFacet__factory = AlgebraFacet__factory;
