"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArbitrumBridgeFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "contract IGatewayRouter",
                name: "_gatewayRouter",
                type: "address",
            },
            {
                internalType: "contract IGatewayRouter",
                name: "_inbox",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "CannotBridgeToSameNetwork",
        type: "error",
    },
    {
        inputs: [],
        name: "ContractCallNotAllowed",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "receivedAmount",
                type: "uint256",
            },
        ],
        name: "CumulativeSlippageTooHigh",
        type: "error",
    },
    {
        inputs: [],
        name: "InformationMismatch",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "required",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
        ],
        name: "InsufficientBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidAmount",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidContract",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidReceiver",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeAssetTransferFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapDataProvided",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapFromZeroBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "NoTransferToNullAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAValidSpender",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAnERC20Token",
        type: "error",
    },
    {
        inputs: [],
        name: "ReentrancyError",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOverflow",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferCompleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferRecovered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                name: "bridgeData",
                type: "tuple",
            },
        ],
        name: "LiFiTransferStarted",
        type: "event",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "maxSubmissionCost",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxGas",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxGasPrice",
                        type: "uint256",
                    },
                ],
                internalType: "struct ArbitrumBridgeFacet.ArbitrumData",
                name: "_arbitrumData",
                type: "tuple",
            },
        ],
        name: "startBridgeTokensViaArbitrumBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "_swapData",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "maxSubmissionCost",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxGas",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxGasPrice",
                        type: "uint256",
                    },
                ],
                internalType: "struct ArbitrumBridgeFacet.ArbitrumData",
                name: "_arbitrumData",
                type: "tuple",
            },
        ],
        name: "swapAndStartBridgeTokensViaArbitrumBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
var _bytecode = "0x60c06040523480156200001157600080fd5b5060405162002bb038038062002bb0833981016040819052620000349162000069565b6001600160a01b039182166080521660a052620000a1565b80516001600160a01b03811681146200006457600080fd5b919050565b600080604083850312156200007d57600080fd5b62000088836200004c565b915062000098602084016200004c565b90509250929050565b60805160a051612ae2620000ce60003960006106c101526000818161083d01526108b60152612ae26000f3fe6080604052600436106100295760003560e01c80633cc9517b1461002e578063c9851d0b14610043575b600080fd5b61004161003c3660046124e7565b610056565b005b610041610051366004612593565b6102e1565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e23447612611565b905086806101000151610121576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561015f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886101828160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101b9576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101f7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610234576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610248604089013560208a0135612624565b61025390893561263b565b905061026b8b600001518c60c001518c8c3386610528565b60c08c015260808b015173ffffffffffffffffffffffffffffffffffffffff166102a557808b60c0018181516102a19190612611565b9052505b6102b08b89836106a0565b504792505050818111156102d3576102d36000846102ce8585612611565b610a03565b505060009091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161035c576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061036d3447612611565b905084806101000151156103ad576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101200151156103eb576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8661040e8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610445576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610483576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104c0576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006104d4604089013560208a0135612624565b6104df90893561263b565b90506104f389608001518a60c00151610a39565b6104fe8989836106a0565b5047925050508181111561051c5761051c6000846102ce8585612611565b50506000909155505050565b600083808203610564576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008686610573600185612611565b8181106105825761058261264e565b9050602002810190610594919061267d565b6105a59060808101906060016126bb565b905060006105b282610baf565b905073ffffffffffffffffffffffffffffffffffffffff82166105dc576105d93482612611565b90505b60006105e88989610c68565b90506105f48989610d74565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff8916602082015290810187905261062f818b8b85610de1565b60008361063b86610baf565b6106459190612611565b90508b811015610690576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d9052602481018290526044015b60405180910390fd5b9c9b505050505050505050505050565b608083015173ffffffffffffffffffffffffffffffffffffffff166107ee577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636e6e8a6a828560c0015161070b919061263b565b60a086015160c08701516040805160e086901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff90931660048401819052602484019290925287356044840152606483018290526084830191909152602087013560a483015286013560c482015261010060e482015260006101048201526101240160206040518083038185885af11580156107c3573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906107e891906126d8565b506109c7565b60808301516040517fbda009fe00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301526108b492917f00000000000000000000000000000000000000000000000000000000000000009091169063bda009fe90602401602060405180830381865afa158015610886573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108aa91906126f1565b8560c001516111d2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d2ce7d658285608001518660a001518760c0015187602001358860400135896000013560405160200161093091815260406020820181905260009082015260600190565b6040516020818303038152906040526040518863ffffffff1660e01b81526004016109609695949392919061277c565b60006040518083038185885af115801561097e573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109c59190810190612803565b505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1836040516109f6919061284c565b60405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff831615610a2f57610a2a838383611315565b505050565b610a2a8282611497565b80600003610a73576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610acc5780341015610ac8576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5d91906126d8565b905081811015610ba3576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610687565b610a2a833330856115c1565b600073ffffffffffffffffffffffffffffffffffffffff821615610c60576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610c37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5b91906126d8565b610c62565b475b92915050565b60608160008167ffffffffffffffff811115610c8657610c86612258565b604051908082528060200260200182016040528015610caf578160200160208202803683370190505b5090506000805b83811015610d6957868682818110610cd057610cd061264e565b9050602002810190610ce2919061267d565b610cf39060808101906060016126bb565b9150610cfe82610baf565b838281518110610d1057610d1061264e565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610d615734838281518110610d4957610d4961264e565b60200260200101818151610d5d9190612611565b9052505b600101610cb6565b509095945050505050565b60005b81811015610a2a5736838383818110610d9257610d9261264e565b9050602002810190610da4919061267d565b9050610db660e0820160c0830161295f565b15610dd857610dd8610dce60608301604084016126bb565b8260800135610a39565b50600101610d77565b6020840151604085015184918491849083600181146110eb5760008686610e09600185612611565b818110610e1857610e1861264e565b9050602002810190610e2a919061267d565b610e3b9060808101906060016126bb565b9050600089815b81811015610fe857368d8d83818110610e5d57610e5d61264e565b9050602002810190610e6f919061267d565b9050610e9e610e8460608301604084016126bb565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610f015750610f01610eb760408301602084016126bb565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610f185750610f18610eb760208301836126bb565b8015610f9d5750610f9d610f2f60a083018361297c565b610f3e916004916000916129e8565b610f4791612a12565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610fd3576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e51610fdf90826117db565b50600101610e42565b505060005b610ff8600185612611565b8110156110e35760008989838181106110135761101361264e565b9050602002810190611025919061267d565b6110369060808101906060016126bb565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146110da5786828151811061107d5761107d61264e565b602002602001015161108e82610baf565b6110989190612611565b9250600073ffffffffffffffffffffffffffffffffffffffff8216156110bf5760006110c1565b865b905083156110d8576110d8828a6102ce8488612611565b505b50600101610fed565b5050506111c6565b8760005b818110156111c357368b8b8381811061110a5761110a61264e565b905060200281019061111c919061267d565b9050611131610e8460608301604084016126bb565b8061114a575061114a610eb760408301602084016126bb565b80156111615750611161610eb760208301836126bb565b80156111785750611178610f2f60a083018361297c565b6111ae576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c516111ba90826117db565b506001016110ef565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166111f257505050565b73ffffffffffffffffffffffffffffffffffffffff821661123f576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa1580156112b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d891906126d8565b1015610a2a576112ea83836000611af1565b610a2a83837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611af1565b73ffffffffffffffffffffffffffffffffffffffff8316611362576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166113af576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa15801561141c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144091906126d8565b905080821115611486576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610687565b611491848484611cf1565b50505050565b73ffffffffffffffffffffffffffffffffffffffff82166114e4576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611527576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610687565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611581576040519150601f19603f3d011682016040523d82523d6000602084013e611586565b606091505b5050905080610a2a576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841661160e576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661165b576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa1580156116cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f091906126d8565b90506116fe82868686611d47565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa15801561176e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179291906126d8565b61179c9190612611565b146117d3576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b6117f16117eb60208301836126bb565b3b151590565b611827576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611867576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061187c610e8460608501604086016126bb565b61188757600061188d565b82608001355b905060006118a96118a460608601604087016126bb565b610baf565b905060006118c06118a460808701606088016126bb565b9050826000036118f7576118f76118dd60608701604088016126bb565b6118ed60408801602089016126bb565b87608001356111d2565b8460800135821015611942576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610687565b60008061195260208801886126bb565b73ffffffffffffffffffffffffffffffffffffffff168561197660a08a018a61297c565b604051611984929190612a5a565b60006040518083038185875af1925050503d80600081146119c1576040519150601f19603f3d011682016040523d82523d6000602084013e6119c6565b606091505b509150915081611a115760006119db82611da5565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106879190612a6a565b6000611a266118a460808a0160608b016126bb565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611a5760208b018b6126bb565b611a6760608c0160408d016126bb565b611a7760808d0160608e016126bb565b8c60800135898711611a895786611a93565b611a938a88612611565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b801580611b9157506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611b6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8f91906126d8565b155b611c1d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610687565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610a2a9084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611e23565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610a2a9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611c6f565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526114919085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611c6f565b6060604482511015611dea57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611e066004808551611dfe9190612611565b859190611f2f565b905080806020019051810190611e1c9190612803565b9392505050565b6000611e85826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166120499092919063ffffffff16565b805190915015610a2a5780806020019051810190611ea39190612a7d565b610a2a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610687565b606081611f3d81601f61263b565b1015611f75576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611f7f828461263b565b84511015611fb9576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611fd85760405191506000825260208201604052612040565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015612011578051835260209283019201611ff9565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60606120588484600085612060565b949350505050565b6060824710156120f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610687565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161211b9190612a9a565b60006040518083038185875af1925050503d8060008114612158576040519150601f19603f3d011682016040523d82523d6000602084013e61215d565b606091505b509150915061216e87838387612179565b979650505050505050565b6060831561220f5782516000036122085773ffffffffffffffffffffffffffffffffffffffff85163b612208576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610687565b5081612058565b61205883838151156122245781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106879190612a6a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156122ab576122ab612258565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156122f8576122f8612258565b604052919050565b600067ffffffffffffffff82111561231a5761231a612258565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261235757600080fd5b813561236a61236582612300565b6122b1565b81815284602083860101111561237f57600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146123be57600080fd5b50565b80356123cc8161239c565b919050565b80151581146123be57600080fd5b80356123cc816123d1565b600061014082840312156123fd57600080fd5b612405612287565b905081358152602082013567ffffffffffffffff8082111561242657600080fd5b61243285838601612346565b6020840152604084013591508082111561244b57600080fd5b5061245884828501612346565b60408301525061246a606083016123c1565b606082015261247b608083016123c1565b608082015261248c60a083016123c1565b60a082015260c082013560c082015260e082013560e08201526101006124b38184016123df565b908201526101206124c58382016123df565b9082015292915050565b6000606082840312156124e157600080fd5b50919050565b60008060008060a085870312156124fd57600080fd5b843567ffffffffffffffff8082111561251557600080fd5b612521888389016123ea565b9550602087013591508082111561253757600080fd5b818701915087601f83011261254b57600080fd5b81358181111561255a57600080fd5b8860208260051b850101111561256f57600080fd5b60208301955080945050505061258886604087016124cf565b905092959194509250565b600080608083850312156125a657600080fd5b823567ffffffffffffffff8111156125bd57600080fd5b6125c9858286016123ea565b9250506125d984602085016124cf565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610c6257610c626125e2565b8082028115828204841417610c6257610c626125e2565b80820180821115610c6257610c626125e2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126126b157600080fd5b9190910192915050565b6000602082840312156126cd57600080fd5b8135611e1c8161239c565b6000602082840312156126ea57600080fd5b5051919050565b60006020828403121561270357600080fd5b8151611e1c8161239c565b60005b83811015612729578181015183820152602001612711565b50506000910152565b6000815180845261274a81602086016020860161270e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff808916835280881660208401525085604083015284606083015283608083015260c060a08301526127c760c0830184612732565b98975050505050505050565b60006127e161236584612300565b90508281528383830111156127f557600080fd5b611e1c83602083018461270e565b60006020828403121561281557600080fd5b815167ffffffffffffffff81111561282c57600080fd5b8201601f8101841361283d57600080fd5b612058848251602084016127d3565b602081528151602082015260006020830151610140806040850152612875610160850183612732565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526128b08382612732565b92505060608501516128da608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e085015161010081818701528087015191505061012061294d8187018315159052565b90950151151593019290925250919050565b60006020828403121561297157600080fd5b8135611e1c816123d1565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126129b157600080fd5b83018035915067ffffffffffffffff8211156129cc57600080fd5b6020019150368190038213156129e157600080fd5b9250929050565b600080858511156129f857600080fd5b83861115612a0557600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612a525780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b602081526000611e1c6020830184612732565b600060208284031215612a8f57600080fd5b8151611e1c816123d1565b600082516126b181846020870161270e56fea26469706673582212204289759b5e0a941af04fb16ebfab1d2ef5f817eadeefe8fc61d4ad914ad32fb864736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var ArbitrumBridgeFacet__factory = /** @class */ (function (_super) {
    __extends(ArbitrumBridgeFacet__factory, _super);
    function ArbitrumBridgeFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    ArbitrumBridgeFacet__factory.prototype.deploy = function (_gatewayRouter, _inbox, overrides) {
        return _super.prototype.deploy.call(this, _gatewayRouter, _inbox, overrides || {});
    };
    ArbitrumBridgeFacet__factory.prototype.getDeployTransaction = function (_gatewayRouter, _inbox, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _gatewayRouter, _inbox, overrides || {});
    };
    ArbitrumBridgeFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ArbitrumBridgeFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ArbitrumBridgeFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ArbitrumBridgeFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ArbitrumBridgeFacet__factory.bytecode = _bytecode;
    ArbitrumBridgeFacet__factory.abi = _abi;
    return ArbitrumBridgeFacet__factory;
}(ethers_1.ContractFactory));
exports.ArbitrumBridgeFacet__factory = ArbitrumBridgeFacet__factory;
