"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArbitrumBridgeFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_gatewayRouter",
                type: "address",
                internalType: "contract IGatewayRouter",
            },
            {
                name: "_inbox",
                type: "address",
                internalType: "contract IGatewayRouter",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaArbitrumBridge",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_arbitrumData",
                type: "tuple",
                internalType: "struct ArbitrumBridgeFacet.ArbitrumData",
                components: [
                    {
                        name: "maxSubmissionCost",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "maxGas",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "maxGasPrice",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaArbitrumBridge",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_arbitrumData",
                type: "tuple",
                internalType: "struct ArbitrumBridgeFacet.ArbitrumData",
                components: [
                    {
                        name: "maxSubmissionCost",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "maxGas",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "maxGasPrice",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "AssetSwapped",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
            {
                name: "dex",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InsufficientBalance",
        inputs: [
            {
                name: "required",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "balance",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
];
var _bytecode = "0x60c060405234801561000f575f5ffd5b506040516120d93803806120d983398101604081905261002e91610060565b6001600160a01b039182166080521660a052610091565b80516001600160a01b038116811461005b575f5ffd5b919050565b5f5f60408385031215610071575f5ffd5b61007a83610045565b915061008860208401610045565b90509250929050565b60805160a0516120206100b95f395f6106a201525f818161081b015261089201526120205ff3fe608060405260043610610028575f3560e01c80633cc9517b1461002c578063c9851d0b14610041575b5f5ffd5b61003f61003a366004611a05565b610054565b005b61003f61004f366004611ab2565b6102a4565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100cf576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6100df3447611b2b565b90508680610100015161011e576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561015c576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8861017f8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101b6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036101f3576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610230576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610243604089013560208a0135611b3e565b61024e908935611b55565b90506102658b5f01518c60c001518c8c33866104e6565b60c08c01526102758b8983610681565b50479250505081811115610297576102975f846102928585611b2b565b6109d9565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161031f576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f61032f3447611b2b565b9050848061010001511561036f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101200151156103ad576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866103d08160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610407576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610444576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610481576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610494604089013560208a0135611b3e565b61049f908935611b55565b90506104b389608001518a60c00151610a0e565b6104be898983610681565b504792505050818111156104db576104db5f846102928585611b2b565b50505f909155505050565b5f83808203610521576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f868661052f600185611b2b565b81811061053e5761053e611b68565b90506020028101906105509190611b95565b610561906080810190606001611bd1565b90505f61056d82610ac2565b905073ffffffffffffffffffffffffffffffffffffffff8216610597576105943482611b2b565b90505b5f6105a28989610b0c565b90506105ae8989610c16565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff891660208201529081018790526105e9818b8b85610c82565b5f836105f486610ac2565b6105fe9190611b2b565b905073ffffffffffffffffffffffffffffffffffffffff8516610628576106258882611b2b565b90505b8b811015610671576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d9052602481018290526044015b60405180910390fd5b9c9b505050505050505050505050565b608083015173ffffffffffffffffffffffffffffffffffffffff166107cc577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636e6e8a6a828560c001516106ec9190611b55565b60a086015160c08701516040805160e086901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff90931660048401819052602484019290925287356044840152606483018290526084830191909152602087013560a483015286013560c482015261010060e48201525f6101048201526101240160206040518083038185885af11580156107a1573d5f5f3e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906107c69190611bf3565b5061099d565b60808301516040517fbda009fe00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808316600483015261089092917f00000000000000000000000000000000000000000000000000000000000000009091169063bda009fe90602401602060405180830381865afa158015610862573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108869190611c0a565b8560c0015161106a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d2ce7d658285608001518660a001518760c0015187602001358860400135895f013560405160200161090a9181526040602082018190525f9082015260600190565b6040516020818303038152906040526040518863ffffffff1660e01b815260040161093a96959493929190611c71565b5f6040518083038185885af1158015610955573d5f5f3e3d5ffd5b50505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261099b9190810190611cd9565b505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1836040516109cc9190611d4e565b60405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff8316610a03576109fe8282611096565b505050565b6109fe838383611103565b805f03610a47576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610aa05780341015610a9c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610a9c73ffffffffffffffffffffffffffffffffffffffff8316333084611171565b5f73ffffffffffffffffffffffffffffffffffffffff821615610b0457610aff73ffffffffffffffffffffffffffffffffffffffff8316306111c9565b610b06565b475b92915050565b6060815f8167ffffffffffffffff811115610b2957610b29611787565b604051908082528060200260200182016040528015610b52578160200160208202803683370190505b5090505f805b83811015610c0b57868682818110610b7257610b72611b68565b9050602002810190610b849190611b95565b610b95906080810190606001611bd1565b9150610ba082610ac2565b838281518110610bb257610bb2611b68565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610c035734838281518110610beb57610beb611b68565b60200260200101818151610bff9190611b2b565b9052505b600101610b58565b509095945050505050565b5f5b818110156109fe5736838383818110610c3357610c33611b68565b9050602002810190610c459190611b95565b9050610c5760e0820160c08301611e61565b15610c7957610c79610c6f6060830160408401611bd1565b8260800135610a0e565b50600101610c18565b602084015160408501518491849184908360018114610f84575f8686610ca9600185611b2b565b818110610cb857610cb8611b68565b9050602002810190610cca9190611b95565b610cdb906080810190606001611bd1565b90505f89815b81811015610e8457368d8d83818110610cfc57610cfc611b68565b9050602002810190610d0e9190611b95565b9050610d3d610d236060830160408401611bd1565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610d9f5750610d9f610d566040830160208401611bd1565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610db65750610db6610d566020830183611bd1565b8015610e395750610e39610dcd60a0830183611e7a565b610ddb916004915f91611ee2565b610de491611f09565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610e6f576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e51610e7b90826111fc565b50600101610ce1565b505f90505b610e94600185611b2b565b811015610f7c575f898983818110610eae57610eae611b68565b9050602002810190610ec09190611b95565b610ed1906080810190606001611bd1565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f7357868281518110610f1857610f18611b68565b6020026020010151610f2982610ac2565b610f339190611b2b565b92505f73ffffffffffffffffffffffffffffffffffffffff821615610f58575f610f5a565b865b90508315610f7157610f71828a6102928488611b2b565b505b50600101610e89565b50505061105e565b875f5b8181101561105b57368b8b83818110610fa257610fa2611b68565b9050602002810190610fb49190611b95565b9050610fc9610d236060830160408401611bd1565b80610fe25750610fe2610d566040830160208401611bd1565b8015610ff95750610ff9610d566020830183611bd1565b80156110105750611010610dcd60a0830183611e7a565b611046576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c5161105290826111fc565b50600101610f87565b50505b50505050505050505050565b6109fe8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6114ce565b73ffffffffffffffffffffffffffffffffffffffff82166110e3576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a9c73ffffffffffffffffffffffffffffffffffffffff8316826115fb565b73ffffffffffffffffffffffffffffffffffffffff8216611150576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109fe73ffffffffffffffffffffffffffffffffffffffff84168383611614565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f511417166111bc57637939f4245f526004601cfd5b5f60605260405250505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b61121161120c6020830183611bd1565b61165d565b611247576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003611286576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61129a610d236060850160408601611bd1565b6112a4575f6112aa565b82608001355b90505f6112c56112c06060860160408701611bd1565b610ac2565b90505f6112db6112c06080870160608801611bd1565b9050825f03611311576113116112f76060870160408801611bd1565b6113076040880160208901611bd1565b876080013561106a565b846080013582101561135c576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610668565b5f8061136b6020880188611bd1565b73ffffffffffffffffffffffffffffffffffffffff168561138f60a08a018a611e7a565b60405161139d929190611f6f565b5f6040518083038185875af1925050503d805f81146113d7576040519150601f19603f3d011682016040523d82523d5f602084013e6113dc565b606091505b5091509150816113ef576113ef816116ff565b5f6114036112c060808a0160608b01611bd1565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961143460208b018b611bd1565b61144460608c0160408d01611bd1565b61145460808d0160608e01611bd1565b8c608001358987116114665786611470565b6114708a88611b2b565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156115f55773ffffffffffffffffffffffffffffffffffffffff8316611537576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa1580156115aa573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115ce9190611bf3565b10156115f5576115f573ffffffffffffffffffffffffffffffffffffffff85168483611709565b50505050565b5f385f3884865af1610a9c5763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716611654576390b8ec185f526004601cfd5b5f603452505050565b6040805160178082528183019092525f9182918291602082018180368337019050509050833b915060175f60208301863c5f61169882611f7e565b90507fffffff000000000000000000000000000000000000000000000000000000000081167fef01000000000000000000000000000000000000000000000000000000000000036116f557506023015160601c3b15159392505050565b5050151592915050565b8051602082018181fd5b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716611654575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f5114171661165457633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff811182821017156117d8576117d8611787565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561182557611825611787565b604052919050565b5f67ffffffffffffffff82111561184657611846611787565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b5f82601f830112611881575f5ffd5b813561189461188f8261182d565b6117de565b8181528460208386010111156118a8575f5ffd5b816020850160208301375f918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146118e5575f5ffd5b50565b80356118f3816118c4565b919050565b803580151581146118f3575f5ffd5b5f6101408284031215611918575f5ffd5b6119206117b4565b823581529050602082013567ffffffffffffffff81111561193f575f5ffd5b61194b84828501611872565b602083015250604082013567ffffffffffffffff81111561196a575f5ffd5b61197684828501611872565b604083015250611988606083016118e8565b6060820152611999608083016118e8565b60808201526119aa60a083016118e8565b60a082015260c0828101359082015260e080830135908201526119d061010083016118f8565b6101008201526119e361012083016118f8565b61012082015292915050565b5f606082840312156119ff575f5ffd5b50919050565b5f5f5f5f60a08587031215611a18575f5ffd5b843567ffffffffffffffff811115611a2e575f5ffd5b611a3a87828801611907565b945050602085013567ffffffffffffffff811115611a56575f5ffd5b8501601f81018713611a66575f5ffd5b803567ffffffffffffffff811115611a7c575f5ffd5b8760208260051b8401011115611a90575f5ffd5b60209190910193509150611aa786604087016119ef565b905092959194509250565b5f5f60808385031215611ac3575f5ffd5b823567ffffffffffffffff811115611ad9575f5ffd5b611ae585828601611907565b925050611af584602085016119ef565b90509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b81810381811115610b0657610b06611afe565b8082028115828204841417610b0657610b06611afe565b80820180821115610b0657610b06611afe565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611bc7575f5ffd5b9190910192915050565b5f60208284031215611be1575f5ffd5b8135611bec816118c4565b9392505050565b5f60208284031215611c03575f5ffd5b5051919050565b5f60208284031215611c1a575f5ffd5b8151611bec816118c4565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b73ffffffffffffffffffffffffffffffffffffffff8716815273ffffffffffffffffffffffffffffffffffffffff8616602082015284604082015283606082015282608082015260c060a08201525f611ccd60c0830184611c25565b98975050505050505050565b5f60208284031215611ce9575f5ffd5b815167ffffffffffffffff811115611cff575f5ffd5b8201601f81018413611d0f575f5ffd5b8051611d1d61188f8261182d565b818152856020838501011115611d31575f5ffd5b8160208401602083015e5f91810160200191909152949350505050565b60208152815160208201525f60208301516101406040840152611d75610160840182611c25565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611db08282611c25565b9150506060840151611dda608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e0840151610100840152610100840151611e4961012085018215159052565b50610120840151801515610140850152509392505050565b5f60208284031215611e71575f5ffd5b611bec826118f8565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611ead575f5ffd5b83018035915067ffffffffffffffff821115611ec7575f5ffd5b602001915036819003821315611edb575f5ffd5b9250929050565b5f5f85851115611ef0575f5ffd5b83861115611efc575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015611f68577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b805160208201517fffffff0000000000000000000000000000000000000000000000000000000000811691906003821015611fe3577fffffff0000000000000000000000000000000000000000000000000000000000808360030360031b1b82161692505b505091905056fea2646970667358221220cb76549e905e88a2e22b2933e4f7f6f8bab9558b09c42d3070e167ec7fdd1b2964736f6c634300081d0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var ArbitrumBridgeFacet__factory = /** @class */ (function (_super) {
    __extends(ArbitrumBridgeFacet__factory, _super);
    function ArbitrumBridgeFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    ArbitrumBridgeFacet__factory.prototype.deploy = function (_gatewayRouter, _inbox, overrides) {
        return _super.prototype.deploy.call(this, _gatewayRouter, _inbox, overrides || {});
    };
    ArbitrumBridgeFacet__factory.prototype.getDeployTransaction = function (_gatewayRouter, _inbox, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _gatewayRouter, _inbox, overrides || {});
    };
    ArbitrumBridgeFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ArbitrumBridgeFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ArbitrumBridgeFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ArbitrumBridgeFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ArbitrumBridgeFacet__factory.bytecode = _bytecode;
    ArbitrumBridgeFacet__factory.abi = _abi;
    return ArbitrumBridgeFacet__factory;
}(ethers_1.ContractFactory));
exports.ArbitrumBridgeFacet__factory = ArbitrumBridgeFacet__factory;
