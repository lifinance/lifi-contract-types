import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { HopFacet, HopFacetInterface } from "../HopFacet";
declare type HopFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class HopFacet__factory extends ContractFactory {
    constructor(...args: HopFacetConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<HopFacet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): HopFacet;
    connect(signer: Signer): HopFacet__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50612e0f806100206000396000f3fe60806040526004361061003f5760003560e01c80633961d1ed1461004457806367fdd71e14610066578063e55f811014610086578063fa904c1214610099575b600080fd5b34801561005057600080fd5b5061006461005f366004612500565b6100ac565b005b34801561007257600080fd5b50610064610081366004612533565b610209565b610064610094366004612805565b61043e565b6100646100a73660046128b1565b610670565b6100b4610894565b7f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b9547f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b89060ff16610131576040517f87138d5c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661017e576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8381166000818152602084815260409182902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169487169485179055905192835290917fcf56a25ddc5c325bc2d2557f7eee90d061f2e19b7294a6ef738f86f2c3d9280c910160405180910390a2505050565b610211610894565b7f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b9547f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b89060ff161561028f576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b828110156103d05760008484838181106102ae576102ae6128f7565b90506040020160200160208101906102c69190612926565b73ffffffffffffffffffffffffffffffffffffffff1603610313576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b838382818110610325576103256128f7565b905060400201602001602081019061033d9190612926565b826000868685818110610352576103526128f7565b6103689260206040909202019081019150612926565b73ffffffffffffffffffffffffffffffffffffffff9081168252602082019290925260400160002080547fffffffffffffffffffffffff00000000000000000000000000000000000000001692909116919091179055806103c881612970565b915050610292565b50600181810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690911790556040517f5910f57b2fdae9f2f45a1d913c63f55985d0f77d120de8aab63e686ff670dde39061043190859085906129a8565b60405180910390a1505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016104b9576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006104ca3447612a17565b905086806101000151610509576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8780610120015115610547576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8861056a8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156105a1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036105df576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361061c576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106318a600001518b60c001518b8b33610909565b60c08b01526106408a88610a51565b5047915050818111156106625761066260008461065d8585612a17565b610cc1565b505060009091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016106eb576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006106fc3447612a17565b9050848061010001511561073c576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b858061012001511561077a576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8661079d8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156107d4576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610812576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361084f576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61086188608001518960c00151610cf7565b61086b8888610a51565b5047915050818111156108885761088860008461065d8585612a17565b50506000909155505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314610907576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600082808203610945576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610954600185612a17565b818110610963576109636128f7565b90506020028101906109759190612a2a565b610986906080810190606001612926565b9050600061099382610e6d565b905073ffffffffffffffffffffffffffffffffffffffff82166109bd576109ba3482612a17565b90505b60006109c98888610f26565b90506109d58888611032565b6109e28a8989898561109f565b6000826109ee85610e6d565b6109f89190612a17565b905089811015610a43576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b608082015173ffffffffffffffffffffffffffffffffffffffff80821660009081527f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b8602081905260409091205460c086015191921690610ab59084908390611451565b600073ffffffffffffffffffffffffffffffffffffffff841615610ada576000610ae0565b8560c001515b905046600103610bb05760e086015160a087015160c08801516040517fdeace8f5000000000000000000000000000000000000000000000000000000008152600481019390935273ffffffffffffffffffffffffffffffffffffffff918216602484015260448301526060870135606483015260808701356084830152600060a4830181905260c483015283169063deace8f590839060e4016000604051808303818588803b158015610b9257600080fd5b505af1158015610ba6573d6000803e3d6000fd5b5050505050610c82565b60e086015160a087015160c0880151604080517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019490945273ffffffffffffffffffffffffffffffffffffffff92831660248501526044840191909152873560648401526020880135608484015287013560a4830152606087013560c4830152608087013560e483015283169063eea0d7b2908390610104016000604051808303818588803b158015610c6857600080fd5b505af1158015610c7c573d6000803e3d6000fd5b50505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f186604051610cb19190612ad6565b60405180910390a1505050505050565b73ffffffffffffffffffffffffffffffffffffffff831615610ced57610ce8838383611594565b505050565b610ce88282611716565b80600003610d31576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610d8a5780341015610d86576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610df7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1b9190612be9565b905081811015610e61576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610a3a565b610ce883333085611840565b600073ffffffffffffffffffffffffffffffffffffffff821615610f1e576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610ef5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f199190612be9565b610f20565b475b92915050565b60608160008167ffffffffffffffff811115610f4457610f446125a8565b604051908082528060200260200182016040528015610f6d578160200160208202803683370190505b5090506000805b8381101561102757868682818110610f8e57610f8e6128f7565b9050602002810190610fa09190612a2a565b610fb1906080810190606001612926565b9150610fbc82610e6d565b838281518110610fce57610fce6128f7565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff821661101f5734838281518110611007576110076128f7565b6020026020010181815161101b9190612a17565b9052505b600101610f74565b509095945050505050565b60005b81811015610ce85736838383818110611050576110506128f7565b90506020028101906110629190612a2a565b905061107460e0820160c08301612c02565b156110965761109661108c6060830160408401612926565b8260800135610cf7565b50600101611035565b83838383826001811461136c57600085856110bb600185612a17565b8181106110ca576110ca6128f7565b90506020028101906110dc9190612a2a565b6110ed906080810190606001612926565b9050600089815b8181101561129857368d8d8381811061110f5761110f6128f7565b90506020028101906111219190612a2a565b90506111506111366060830160408401612926565b73ffffffffffffffffffffffffffffffffffffffff161590565b806111b357506111b36111696040830160208401612926565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156111ca57506111ca6111696020830183612926565b801561124f575061124f6111e160a0830183612c1f565b6111f091600491600091612c8b565b6111f991612cb5565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611285576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61128f8f82611a5a565b506001016110f4565b505060005b6112a8600185612a17565b8110156113645760008888838181106112c3576112c36128f7565b90506020028101906112d59190612a2a565b6112e6906080810190606001612926565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461135b5785828151811061132d5761132d6128f7565b602002602001015161133e82610e6d565b6113489190612a17565b9250821561135b5761135b818885610cc1565b5060010161129d565b505050611445565b8760005b8181101561144257368b8b8381811061138b5761138b6128f7565b905060200281019061139d9190612a2a565b90506113b26111366060830160408401612926565b806113cb57506113cb6111696040830160208401612926565b80156113e257506113e26111696020830183612926565b80156113f957506113f96111e160a0830183612c1f565b61142f576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114398d82611a5a565b50600101611370565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661147157505050565b73ffffffffffffffffffffffffffffffffffffffff82166114be576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015611533573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115579190612be9565b1015610ce85761156983836000611d70565b610ce883837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611d70565b73ffffffffffffffffffffffffffffffffffffffff83166115e1576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661162e576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa15801561169b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116bf9190612be9565b905080821115611705576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610a3a565b611710848484611f70565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216611763576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156117a6576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610a3a565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611800576040519150601f19603f3d011682016040523d82523d6000602084013e611805565b606091505b5050905080610ce8576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841661188d576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166118da576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa15801561194b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196f9190612be9565b905061197d82868686611fc6565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa1580156119ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a119190612be9565b611a1b9190612a17565b14611a52576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b611a70611a6a6020830183612926565b3b151590565b611aa6576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611ae6576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611afb6111366060850160408601612926565b611b06576000611b0c565b82608001355b90506000611b28611b236060860160408701612926565b610e6d565b90506000611b3f611b236080870160608801612926565b905082600003611b7657611b76611b5c6060870160408801612926565b611b6c6040880160208901612926565b8760800135611451565b8460800135821015611bc1576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610a3a565b600080611bd16020880188612926565b73ffffffffffffffffffffffffffffffffffffffff1685611bf560a08a018a612c1f565b604051611c03929190612cfd565b60006040518083038185875af1925050503d8060008114611c40576040519150601f19603f3d011682016040523d82523d6000602084013e611c45565b606091505b509150915081611c90576000611c5a82612024565b9050806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a9190612d0d565b6000611ca5611b2360808a0160608b01612926565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611cd660208b018b612926565b611ce660608c0160408d01612926565b611cf660808d0160608e01612926565b8c60800135898711611d085786611d12565b611d128a88612a17565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b801580611e1057506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611dea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0e9190612be9565b155b611e9c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610a3a565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610ce89084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526120a2565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610ce89084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611eee565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526117109085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611eee565b606060448251101561206957505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000612085600480855161207d9190612a17565b8591906121ae565b90508080602001905181019061209b9190612d20565b9392505050565b6000612104826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166122c89092919063ffffffff16565b805190915015610ce857808060200190518101906121229190612d97565b610ce8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610a3a565b6060816121bc81601f612db4565b10156121f4576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6121fe8284612db4565b84511015612238576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608215801561225757604051915060008252602082016040526122bf565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015612290578051835260209283019201612278565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60606122d784846000856122df565b949350505050565b606082471015612371576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610a3a565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161239a9190612dc7565b60006040518083038185875af1925050503d80600081146123d7576040519150601f19603f3d011682016040523d82523d6000602084013e6123dc565b606091505b50915091506123ed878383876123f8565b979650505050505050565b6060831561248e5782516000036124875773ffffffffffffffffffffffffffffffffffffffff85163b612487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a3a565b50816122d7565b6122d783838151156124a35781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a9190612d0d565b803573ffffffffffffffffffffffffffffffffffffffff811681146124fb57600080fd5b919050565b6000806040838503121561251357600080fd5b61251c836124d7565b915061252a602084016124d7565b90509250929050565b6000806020838503121561254657600080fd5b823567ffffffffffffffff8082111561255e57600080fd5b818501915085601f83011261257257600080fd5b81358181111561258157600080fd5b8660208260061b850101111561259657600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156125fb576125fb6125a8565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612648576126486125a8565b604052919050565b600067ffffffffffffffff82111561266a5761266a6125a8565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126126a757600080fd5b81356126ba6126b582612650565b612601565b8181528460208386010111156126cf57600080fd5b816020850160208301376000918101602001919091529392505050565b80151581146126fa57600080fd5b50565b80356124fb816126ec565b6000610140828403121561271b57600080fd5b6127236125d7565b905081358152602082013567ffffffffffffffff8082111561274457600080fd5b61275085838601612696565b6020840152604084013591508082111561276957600080fd5b5061277684828501612696565b604083015250612788606083016124d7565b6060820152612799608083016124d7565b60808201526127aa60a083016124d7565b60a082015260c082013560c082015260e082013560e08201526101006127d18184016126fd565b908201526101206127e38382016126fd565b9082015292915050565b600060a082840312156127ff57600080fd5b50919050565b60008060008060e0858703121561281b57600080fd5b843567ffffffffffffffff8082111561283357600080fd5b61283f88838901612708565b9550602087013591508082111561285557600080fd5b818701915087601f83011261286957600080fd5b81358181111561287857600080fd5b8860208260051b850101111561288d57600080fd5b6020830195508094505050506128a686604087016127ed565b905092959194509250565b60008060c083850312156128c457600080fd5b823567ffffffffffffffff8111156128db57600080fd5b6128e785828601612708565b92505061252a84602085016127ed565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561293857600080fd5b61209b826124d7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036129a1576129a1612941565b5060010190565b6020808252818101839052600090604080840186845b87811015612a0a5773ffffffffffffffffffffffffffffffffffffffff806129e5846124d7565b168452806129f48785016124d7565b16848701525091830191908301906001016129be565b5090979650505050505050565b81810381811115610f2057610f20612941565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612a5e57600080fd5b9190910192915050565b60005b83811015612a83578181015183820152602001612a6b565b50506000910152565b60008151808452612aa4816020860160208601612a68565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081528151602082015260006020830151610140806040850152612aff610160850183612a8c565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152612b3a8382612a8c565b9250506060850151612b64608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120612bd78187018315159052565b90950151151593019290925250919050565b600060208284031215612bfb57600080fd5b5051919050565b600060208284031215612c1457600080fd5b813561209b816126ec565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612c5457600080fd5b83018035915067ffffffffffffffff821115612c6f57600080fd5b602001915036819003821315612c8457600080fd5b9250929050565b60008085851115612c9b57600080fd5b83861115612ca857600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612cf55780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b60208152600061209b6020830184612a8c565b600060208284031215612d3257600080fd5b815167ffffffffffffffff811115612d4957600080fd5b8201601f81018413612d5a57600080fd5b8051612d686126b582612650565b818152856020838501011115612d7d57600080fd5b612d8e826020830160208601612a68565b95945050505050565b600060208284031215612da957600080fd5b815161209b816126ec565b80820180821115610f2057610f20612941565b60008251612a5e818460208701612a6856fea2646970667358221220c70a38c57587d393b3a4d85dbfd269a8e910370b97d58bd0f838fbf7fddf1e2164736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "AlreadyInitialized";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CannotBridgeToSameNetwork";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ContractCallNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "minAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "receivedAmount";
            readonly type: "uint256";
        }];
        readonly name: "CumulativeSlippageTooHigh";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InformationMismatch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "required";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidConfig";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidContract";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidReceiver";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeAssetTransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapDataProvided";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapFromZeroBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoTransferToNullAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotInitialized";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAValidSpender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OnlyContractOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ReentrancyError";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOutOfBounds";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOverflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "assetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "bridge";
            readonly type: "address";
        }];
        readonly name: "HopBridgeRegistered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "assetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "bridge";
                readonly type: "address";
            }];
            readonly indexed: false;
            readonly internalType: "struct HopFacet.Config[]";
            readonly name: "configs";
            readonly type: "tuple[]";
        }];
        readonly name: "HopInitialized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferRecovered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly indexed: false;
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "bridgeData";
            readonly type: "tuple";
        }];
        readonly name: "LiFiTransferStarted";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "assetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "bridge";
                readonly type: "address";
            }];
            readonly internalType: "struct HopFacet.Config[]";
            readonly name: "configs";
            readonly type: "tuple[]";
        }];
        readonly name: "initHop";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "assetId";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "bridge";
            readonly type: "address";
        }];
        readonly name: "registerBridge";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }];
            readonly internalType: "struct HopFacet.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaHop";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }];
            readonly internalType: "struct HopFacet.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaHop";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): HopFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): HopFacet;
}
export {};
