import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { HopFacet, HopFacetInterface } from "../HopFacet";
declare type HopFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class HopFacet__factory extends ContractFactory {
    constructor(...args: HopFacetConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<HopFacet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): HopFacet;
    connect(signer: Signer): HopFacet__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50612eb5806100206000396000f3fe60806040526004361061003f5760003560e01c80633961d1ed1461004457806367fdd71e14610066578063a01fe78414610086578063b3b6358714610099575b600080fd5b34801561005057600080fd5b5061006461005f36600461242a565b6100ac565b005b34801561007257600080fd5b5061006461008136600461245d565b6101ad565b6100646100943660046127d1565b610356565b6100646100a736600461287e565b6105a0565b6100b46107ea565b7f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b873ffffffffffffffffffffffffffffffffffffffff8216610122576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8381166000818152602084815260409182902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169487169485179055905192835290917fcf56a25ddc5c325bc2d2557f7eee90d061f2e19b7294a6ef738f86f2c3d9280c910160405180910390a2505050565b6101b56107ea565b7f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b860005b828110156103175760008484838181106101f5576101f56128f8565b905060400201602001602081019061020d9190612927565b73ffffffffffffffffffffffffffffffffffffffff160361025a576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83838281811061026c5761026c6128f8565b90506040020160200160208101906102849190612927565b826000868685818110610299576102996128f8565b6102af9260206040909202019081019150612927565b73ffffffffffffffffffffffffffffffffffffffff9081168252602082019290925260400160002080547fffffffffffffffffffffffff000000000000000000000000000000000000000016929091169190911790558061030f81612971565b9150506101d9565b507f5910f57b2fdae9f2f45a1d913c63f55985d0f77d120de8aab63e686ff670dde383836040516103499291906129a9565b60405180910390a1505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016103d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006103e23447612a18565b905086806101000151610421576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561045f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886104828160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156104b9576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036104f7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610534576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61054e8a600001518b60c001518b8b338c60e0015161085f565b60c08b015261055d8a886109d7565b504791506000905082821161057357600061057d565b61057d8383612a18565b905080156105915761059160008583610c82565b50506000909255505050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161061b576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061062c3447612a18565b9050848061010001511561066c576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101200151156106aa576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866106cd8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610704576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610742576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361077f576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61079188608001518960c00151610cb8565b6107a9886107a4368a90038a018a612a2b565b6109d7565b50479150600090508282116107bf5760006107c9565b6107c98383612a18565b905080156107dd576107dd60008583610c82565b5050600090925550505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff16331461085d576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008380820361089b576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600086866108aa600185612a18565b8181106108b9576108b96128f8565b90506020028101906108cb9190612a48565b6108dc906080810190606001612927565b905060006108e982610e2e565b905073ffffffffffffffffffffffffffffffffffffffff8216610913576109103482612a18565b90505b600061091f8989610ee7565b905061092b8989610ff3565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff89166020820152908101879052610966818b8b85611054565b60008361097286610e2e565b61097c9190612a18565b90508b8110156109c7576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d9052602481018290526044015b60405180910390fd5b9c9b505050505050505050505050565b608082015173ffffffffffffffffffffffffffffffffffffffff80821660009081527f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b8602081905260409091205460c086015191921690610a3b908490839061144a565b600073ffffffffffffffffffffffffffffffffffffffff841615610a63578460e00151610a77565b8560c001518560e00151610a779190612a86565b90504660011480610a885750466005145b15610b645760e086015160a08088015160c0808a015160608a015160808b0151948b0151928b01516040517fdeace8f5000000000000000000000000000000000000000000000000000000008152600481019790975273ffffffffffffffffffffffffffffffffffffffff9485166024880152604487019290925260648601526084850193909352811660a484015260c483019190915283169063deace8f590839060e4016000604051808303818588803b158015610b4657600080fd5b505af1158015610b5a573d6000803e3d6000fd5b5050505050610c43565b60e086015160a087015160c0880151875160208901516040808b015160608c015160808d015192517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019890985273ffffffffffffffffffffffffffffffffffffffff968716602489015260448801959095526064870193909352608486019190915260a485019190915260c484019190915260e483015283169063eea0d7b2908390610104016000604051808303818588803b158015610c2957600080fd5b505af1158015610c3d573d6000803e3d6000fd5b50505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f186604051610c729190612b07565b60405180910390a1505050505050565b73ffffffffffffffffffffffffffffffffffffffff831615610cae57610ca9838383611595565b505050565b610ca982826116c4565b73ffffffffffffffffffffffffffffffffffffffff8216610d115780341015610d0d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610d4b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610db8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddc9190612c1a565b905081811015610e22576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016109be565b610ca9833330856117ee565b600073ffffffffffffffffffffffffffffffffffffffff821615610edf576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610eb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eda9190612c1a565b610ee1565b475b92915050565b60608160008167ffffffffffffffff811115610f0557610f056124d2565b604051908082528060200260200182016040528015610f2e578160200160208202803683370190505b5090506000805b83811015610fe857868682818110610f4f57610f4f6128f8565b9050602002810190610f619190612a48565b610f72906080810190606001612927565b9150610f7d82610e2e565b838281518110610f8f57610f8f6128f8565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610fe05734838281518110610fc857610fc86128f8565b60200260200101818151610fdc9190612a18565b9052505b600101610f35565b509095945050505050565b60005b81811015610ca9576000838383818110611012576110126128f8565b90506020028101906110249190612a48565b61102d90612c33565b90508060c001511561104b5761104b81604001518260800151610cb8565b50600101610ff6565b602084015160408501518491849184908360018114611363576000868661107c600185612a18565b81811061108b5761108b6128f8565b905060200281019061109d9190612a48565b6110ae906080810190606001612927565b9050600089815b8181101561125b57368d8d838181106110d0576110d06128f8565b90506020028101906110e29190612a48565b90506111116110f76060830160408401612927565b73ffffffffffffffffffffffffffffffffffffffff161590565b80611174575061117461112a6040830160208401612927565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561118b575061118b61112a6020830183612927565b801561121057506112106111a260a0830183612cd8565b6111b191600491600091612d44565b6111ba91612d6e565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611246576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e516112529082611a08565b506001016110b5565b505060005b61126b600185612a18565b81101561135b576000898983818110611286576112866128f8565b90506020028101906112989190612a48565b6112a9906080810190606001612927565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611352578682815181106112f0576112f06128f8565b602002602001015161130182610e2e565b61130b9190612a18565b9250600073ffffffffffffffffffffffffffffffffffffffff821615611332576000611334565b865b9050831561135057611350828a61134b8488612a18565b610c82565b505b50600101611260565b50505061143e565b8760005b8181101561143b57368b8b83818110611382576113826128f8565b90506020028101906113949190612a48565b90506113a96110f76060830160408401612927565b806113c257506113c261112a6040830160208401612927565b80156113d957506113d961112a6020830183612927565b80156113f057506113f06111a260a0830183612cd8565b611426576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c516114329082611a08565b50600101611367565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661146a57505050565b73ffffffffffffffffffffffffffffffffffffffff82166114b7576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa15801561152d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115519190612c1a565b90508181101561158f5761158f848461158a847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612a18565b611d1e565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166115e2576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa15801561164f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116739190612c1a565b9050808211156116b9576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016109be565b61158f848484611e9a565b73ffffffffffffffffffffffffffffffffffffffff8216611711576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611754576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016109be565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146117ae576040519150601f19603f3d011682016040523d82523d6000602084013e6117b3565b606091505b5050905080610ca9576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841661183b576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611888576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa1580156118f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191d9190612c1a565b905061192b82868686611ef0565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa15801561199b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119bf9190612c1a565b6119c99190612a18565b14611a00576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b611a1e611a186020830183612927565b3b151590565b611a54576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611a94576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611aa96110f76060850160408601612927565b611ab4576000611aba565b82608001355b90506000611ad6611ad16060860160408701612927565b610e2e565b90506000611aed611ad16080870160608801612927565b905082600003611b2457611b24611b0a6060870160408801612927565b611b1a6040880160208901612927565b876080013561144a565b8460800135821015611b6f576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016109be565b600080611b7f6020880188612927565b73ffffffffffffffffffffffffffffffffffffffff1685611ba360a08a018a612cd8565b604051611bb1929190612db6565b60006040518083038185875af1925050503d8060008114611bee576040519150601f19603f3d011682016040523d82523d6000602084013e611bf3565b606091505b509150915081611c3e576000611c0882611f4e565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109be9190612dc6565b6000611c53611ad160808a0160608b01612927565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611c8460208b018b612927565b611c9460608c0160408d01612927565b611ca460808d0160608e01612927565b8c60800135898711611cb65786611cc0565b611cc08a88612a18565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611d95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db99190612c1a565b611dc39190612a86565b60405173ffffffffffffffffffffffffffffffffffffffff851660248201526044810182905290915061158f9085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611fcc565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610ca99084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611e18565b60405173ffffffffffffffffffffffffffffffffffffffff8085166024830152831660448201526064810182905261158f9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611e18565b6060604482511015611f9357505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611faf6004808551611fa79190612a18565b8591906120d8565b905080806020019051810190611fc59190612dd9565b9392505050565b600061202e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166121f29092919063ffffffff16565b805190915015610ca9578080602001905181019061204c9190612e50565b610ca9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016109be565b6060816120e681601f612a86565b101561211e576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6121288284612a86565b84511015612162576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608215801561218157604051915060008252602082016040526121e9565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156121ba5780518352602092830192016121a2565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60606122018484600085612209565b949350505050565b60608247101561229b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016109be565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516122c49190612e6d565b60006040518083038185875af1925050503d8060008114612301576040519150601f19603f3d011682016040523d82523d6000602084013e612306565b606091505b509150915061231787838387612322565b979650505050505050565b606083156123b85782516000036123b15773ffffffffffffffffffffffffffffffffffffffff85163b6123b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109be565b5081612201565b61220183838151156123cd5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109be9190612dc6565b803573ffffffffffffffffffffffffffffffffffffffff8116811461242557600080fd5b919050565b6000806040838503121561243d57600080fd5b61244683612401565b915061245460208401612401565b90509250929050565b6000806020838503121561247057600080fd5b823567ffffffffffffffff8082111561248857600080fd5b818501915085601f83011261249c57600080fd5b8135818111156124ab57600080fd5b8660208260061b85010111156124c057600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715612525576125256124d2565b60405290565b60405160e0810167ffffffffffffffff81118282101715612525576125256124d2565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612595576125956124d2565b604052919050565b600067ffffffffffffffff8211156125b7576125b76124d2565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126125f457600080fd5b81356126076126028261259d565b61254e565b81815284602083860101111561261c57600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461264757600080fd5b50565b803561242581612639565b6000610140828403121561266857600080fd5b612670612501565b905081358152602082013567ffffffffffffffff8082111561269157600080fd5b61269d858386016125e3565b602084015260408401359150808211156126b657600080fd5b506126c3848285016125e3565b6040830152506126d560608301612401565b60608201526126e660808301612401565b60808201526126f760a08301612401565b60a082015260c082013560c082015260e082013560e082015261010061271e81840161264a565b9082015261012061273083820161264a565b9082015292915050565b600061010080838503121561274e57600080fd5b6040519081019067ffffffffffffffff82118183101715612771576127716124d2565b8160405280925083358152602084013560208201526040840135604082015260608401356060820152608084013560808201526127b060a08501612401565b60a082015260c084013560c082015260e084013560e0820152505092915050565b60008060008061014085870312156127e857600080fd5b843567ffffffffffffffff8082111561280057600080fd5b61280c88838901612655565b9550602087013591508082111561282257600080fd5b818701915087601f83011261283657600080fd5b81358181111561284557600080fd5b8860208260051b850101111561285a57600080fd5b602083019550809450505050612873866040870161273a565b905092959194509250565b60008082840361012081121561289357600080fd5b833567ffffffffffffffff8111156128aa57600080fd5b6128b686828701612655565b9350506101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0820112156128ea57600080fd5b506020830190509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561293957600080fd5b611fc582612401565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036129a2576129a2612942565b5060010190565b6020808252818101839052600090604080840186845b87811015612a0b5773ffffffffffffffffffffffffffffffffffffffff806129e684612401565b168452806129f5878501612401565b16848701525091830191908301906001016129bf565b5090979650505050505050565b81810381811115610ee157610ee1612942565b60006101008284031215612a3e57600080fd5b611fc5838361273a565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612a7c57600080fd5b9190910192915050565b80820180821115610ee157610ee1612942565b60005b83811015612ab4578181015183820152602001612a9c565b50506000910152565b60008151808452612ad5816020860160208601612a99565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081528151602082015260006020830151610140806040850152612b30610160850183612abd565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152612b6b8382612abd565b9250506060850151612b95608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120612c088187018315159052565b90950151151593019290925250919050565b600060208284031215612c2c57600080fd5b5051919050565b600060e08236031215612c4557600080fd5b612c4d61252b565b612c5683612401565b8152612c6460208401612401565b6020820152612c7560408401612401565b6040820152612c8660608401612401565b60608201526080830135608082015260a083013567ffffffffffffffff811115612caf57600080fd5b612cbb368286016125e3565b60a083015250612ccd60c0840161264a565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612d0d57600080fd5b83018035915067ffffffffffffffff821115612d2857600080fd5b602001915036819003821315612d3d57600080fd5b9250929050565b60008085851115612d5457600080fd5b83861115612d6157600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612dae5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b602081526000611fc56020830184612abd565b600060208284031215612deb57600080fd5b815167ffffffffffffffff811115612e0257600080fd5b8201601f81018413612e1357600080fd5b8051612e216126028261259d565b818152856020838501011115612e3657600080fd5b612e47826020830160208601612a99565b95945050505050565b600060208284031215612e6257600080fd5b8151611fc581612639565b60008251612a7c818460208701612a9956fea26469706673582212203c5a50bcf3a4d9aa35264257385f0282e65dc56796b0a642cfef663356e72a5d64736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "CannotBridgeToSameNetwork";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ContractCallNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "minAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "receivedAmount";
            readonly type: "uint256";
        }];
        readonly name: "CumulativeSlippageTooHigh";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InformationMismatch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "required";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidConfig";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidContract";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidReceiver";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeAssetTransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapDataProvided";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapFromZeroBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoTransferToNullAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAValidSpender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OnlyContractOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ReentrancyError";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOutOfBounds";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOverflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "assetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "bridge";
            readonly type: "address";
        }];
        readonly name: "HopBridgeRegistered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "assetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "bridge";
                readonly type: "address";
            }];
            readonly indexed: false;
            readonly internalType: "struct HopFacet.Config[]";
            readonly name: "configs";
            readonly type: "tuple[]";
        }];
        readonly name: "HopInitialized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferRecovered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly indexed: false;
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "bridgeData";
            readonly type: "tuple";
        }];
        readonly name: "LiFiTransferStarted";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "assetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "bridge";
                readonly type: "address";
            }];
            readonly internalType: "struct HopFacet.Config[]";
            readonly name: "configs";
            readonly type: "tuple[]";
        }];
        readonly name: "initHop";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "assetId";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "bridge";
            readonly type: "address";
        }];
        readonly name: "registerBridge";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "relayer";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "relayerFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "nativeFee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct HopFacet.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaHop";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bonderFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "deadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationAmountOutMin";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationDeadline";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "relayer";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "relayerFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "nativeFee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct HopFacet.HopData";
            readonly name: "_hopData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaHop";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): HopFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): HopFacet;
}
export {};
