import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { VelodromeV2Facet, VelodromeV2FacetInterface } from "../VelodromeV2Facet";
type VelodromeV2FacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class VelodromeV2Facet__factory extends ContractFactory {
    constructor(...args: VelodromeV2FacetConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<VelodromeV2Facet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): VelodromeV2Facet;
    connect(signer: Signer): VelodromeV2Facet__factory;
    static readonly bytecode = "0x6080604052348015600e575f5ffd5b50610a738061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063334b26d91461002d575b5f5ffd5b61004061003b36600461089e565b610052565b60405190815260200160405180910390f35b5f5f6100648680516014018051915290565b90505f6100778780516001018051915290565b90505f61008a8880516014018051915290565b905073ffffffffffffffffffffffffffffffffffffffff831615806100c3575073ffffffffffffffffffffffffffffffffffffffff8116155b156100fa576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f600161010d8a80516001018051915290565b60ff1614905073ffffffffffffffffffffffffffffffffffffffff88166102a0575f5f8573ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610179573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061019d91906108df565b5091509150815f14806101ae575080155b156101e5576040517fdf683a9800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60ff86166001146101f757816101f9565b825b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff898116600483015291925082918c16906370a0823190602401602060405180830381865afa158015610268573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061028c919061090a565b6102969190610921565b9850505050610322565b3073ffffffffffffffffffffffffffffffffffffffff8916036102e3576102de73ffffffffffffffffffffffffffffffffffffffff881685886104bc565b610322565b3373ffffffffffffffffffffffffffffffffffffffff8916036103225761032273ffffffffffffffffffffffffffffffffffffffff8816338689610595565b6040517ff140a35a0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff88811660248301525f919086169063f140a35a90604401602060405180830381865afa158015610396573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103ba919061090a565b90505f60ff85166001146103ce57816103d0565b5f5b90505f60ff86166001146103e4575f6103e6565b825b90508673ffffffffffffffffffffffffffffffffffffffff1663022c0d9f838388886104205760405180602001604052805f81525061045d565b8e60405160200161044d919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b6040516020818303038152906040525b6040518563ffffffff1660e01b815260040161047c94939291906109ab565b5f604051808303815f87803b158015610493575f5ffd5b505af11580156104a5573d5f5f3e3d5ffd5b505050505f9750505050505050505b949350505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526105909084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526105f9565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526105f39085907f23b872dd000000000000000000000000000000000000000000000000000000009060840161050e565b50505050565b5f61065a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661070b9092919063ffffffff16565b905080515f148061067a57508080602001905181019061067a91906109ef565b610590576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60606104b484845f85855f5f8673ffffffffffffffffffffffffffffffffffffffff16858760405161073d9190610a15565b5f6040518083038185875af1925050503d805f8114610777576040519150601f19603f3d011682016040523d82523d5f602084013e61077c565b606091505b509150915061078d87838387610798565b979650505050505050565b6060831561082d5782515f036108265773ffffffffffffffffffffffffffffffffffffffff85163b610826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610702565b50816104b4565b6104b483838151156108425781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107029190610a2b565b803573ffffffffffffffffffffffffffffffffffffffff81168114610899575f5ffd5b919050565b5f5f5f5f608085870312156108b1575f5ffd5b843593506108c160208601610876565b92506108cf60408601610876565b9396929550929360600135925050565b5f5f5f606084860312156108f1575f5ffd5b5050815160208301516040909301519094929350919050565b5f6020828403121561091a575f5ffd5b5051919050565b81810381811115610959577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b92915050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b84815283602082015273ffffffffffffffffffffffffffffffffffffffff83166040820152608060608201525f6109e5608083018461095f565b9695505050505050565b5f602082840312156109ff575f5ffd5b81518015158114610a0e575f5ffd5b9392505050565b5f82518060208501845e5f920191825250919050565b602081525f610a0e602083018461095f56fea2646970667358221220a133e3cf9c4c934a4ed4b454c10e768bd74c10dc2f288e06953971327c369eab64736f6c634300081d0033";
    static readonly abi: readonly [{
        readonly type: "function";
        readonly name: "swapVelodromeV2";
        readonly inputs: readonly [{
            readonly name: "stream";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "from";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "tokenIn";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "amountIn";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "error";
        readonly name: "InvalidCallData";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "WrongPoolReserves";
        readonly inputs: readonly [];
    }];
    static createInterface(): VelodromeV2FacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): VelodromeV2Facet;
}
export {};
