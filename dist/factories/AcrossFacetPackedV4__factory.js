/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory, } from "ethers";
const _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_spokePool",
                type: "address",
                internalType: "contract IAcrossSpokePoolV4",
            },
            {
                name: "_wrappedNative",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "_owner",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "SPOKEPOOL",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract IAcrossSpokePoolV4",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "WRAPPED_NATIVE",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "cancelOwnershipTransfer",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "confirmOwnershipTransfer",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "decode_startBridgeTokensViaAcrossV4ERC20Packed",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "acrossData",
                type: "tuple",
                internalType: "struct AcrossFacetV4.AcrossV4Data",
                components: [
                    {
                        name: "receiverAddress",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "refundAddress",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "receivingAssetId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "outputAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "outputAmountMultiplier",
                        type: "uint128",
                        internalType: "uint128",
                    },
                    {
                        name: "exclusiveRelayer",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "quoteTimestamp",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "fillDeadline",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "exclusivityDeadline",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "message",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "decode_startBridgeTokensViaAcrossV4NativePacked",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "acrossData",
                type: "tuple",
                internalType: "struct AcrossFacetV4.AcrossV4Data",
                components: [
                    {
                        name: "receiverAddress",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "refundAddress",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "receivingAssetId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "outputAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "outputAmountMultiplier",
                        type: "uint128",
                        internalType: "uint128",
                    },
                    {
                        name: "exclusiveRelayer",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "quoteTimestamp",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "fillDeadline",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "exclusivityDeadline",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "message",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "encode_startBridgeTokensViaAcrossV4ERC20Packed",
        inputs: [
            {
                name: "_parameters",
                type: "tuple",
                internalType: "struct AcrossFacetPackedV4.PackedParameters",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "receiver",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "depositor",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint64",
                        internalType: "uint64",
                    },
                    {
                        name: "receivingAssetId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "outputAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "exclusiveRelayer",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "quoteTimestamp",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "fillDeadline",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "exclusivityDeadline",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "message",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
            {
                name: "sendingAssetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "encode_startBridgeTokensViaAcrossV4NativePacked",
        inputs: [
            {
                name: "_parameters",
                type: "tuple",
                internalType: "struct AcrossFacetPackedV4.PackedParameters",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "receiver",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "depositor",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint64",
                        internalType: "uint64",
                    },
                    {
                        name: "receivingAssetId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "outputAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "exclusiveRelayer",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "quoteTimestamp",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "fillDeadline",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "exclusivityDeadline",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "message",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "executeCallAndWithdraw",
        inputs: [
            {
                name: "_callTo",
                type: "address",
                internalType: "address",
            },
            {
                name: "_callData",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "_assetAddress",
                type: "address",
                internalType: "address",
            },
            {
                name: "_to",
                type: "address",
                internalType: "address",
            },
            {
                name: "_amount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "owner",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "pendingOwner",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "setApprovalForBridge",
        inputs: [
            {
                name: "tokensToApprove",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaAcrossV4ERC20Min",
        inputs: [
            {
                name: "_parameters",
                type: "tuple",
                internalType: "struct AcrossFacetPackedV4.PackedParameters",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "receiver",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "depositor",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint64",
                        internalType: "uint64",
                    },
                    {
                        name: "receivingAssetId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "outputAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "exclusiveRelayer",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "quoteTimestamp",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "fillDeadline",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "exclusivityDeadline",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "message",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
            {
                name: "sendingAssetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaAcrossV4ERC20Packed",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaAcrossV4NativeMin",
        inputs: [
            {
                name: "_parameters",
                type: "tuple",
                internalType: "struct AcrossFacetPackedV4.PackedParameters",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "receiver",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "depositor",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint64",
                        internalType: "uint64",
                    },
                    {
                        name: "receivingAssetId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "outputAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "exclusiveRelayer",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "quoteTimestamp",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "fillDeadline",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "exclusivityDeadline",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "message",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaAcrossV4NativePacked",
        inputs: [],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "transferOwnership",
        inputs: [
            {
                name: "_newOwner",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "event",
        name: "BridgeToNonEVMChain",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes",
                indexed: false,
                internalType: "bytes",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "BridgeToNonEVMChainBytes32",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "CallExecutedAndFundsWithdrawn",
        inputs: [],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiAcrossTransfer",
        inputs: [
            {
                name: "_transactionId",
                type: "bytes8",
                indexed: false,
                internalType: "bytes8",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "OwnershipTransferRequested",
        inputs: [
            {
                name: "_from",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "_to",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
            {
                name: "previousOwner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "newOwner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "InvalidCalldataLength",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidDestinationChainId",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidInputAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NewOwnerMustNotBeSelf",
        inputs: [],
    },
    {
        type: "error",
        name: "NoNullOwner",
        inputs: [],
    },
    {
        type: "error",
        name: "NoPendingOwnershipTransfer",
        inputs: [],
    },
    {
        type: "error",
        name: "NotPendingOwner",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "UnAuthorized",
        inputs: [],
    },
    {
        type: "error",
        name: "WithdrawFailed",
        inputs: [],
    },
];
const _bytecode = "0x60c060405234801561000f575f5ffd5b506040516128a63803806128a683398101604081905261002e9161006f565b5f80546001600160a01b0319166001600160a01b039283161790559190911660805260a0526100af565b6001600160a01b038116811461006c575f5ffd5b50565b5f5f5f60608486031215610081575f5ffd5b835161008c81610058565b6020850151604086015191945092506100a481610058565b809150509250925092565b60805160a0516127a56101015f395f81816102a501528181611267015261141201525f8181610331015281816108c801528181610b27015281816110a30152818161123501526113bc01526127a55ff3fe608060405260043610610109575f3560e01c80638da5cb5b116100a1578063d999984d11610071578063f2fde38b11610057578063f2fde38b14610301578063f650399214610320578063ff4c398f14610353575f5ffd5b8063d999984d14610294578063e30c3978146102d5575f5ffd5b80638da5cb5b1461020a578063a676e95a1461025a578063be103f7114610279578063c5d60e971461028c575f5ffd5b80634c478642116100dc5780634c4786421461018c5780636e96089f146101ab5780637200b829146101d757806379b80512146101eb575f5ffd5b8063012f27e71461010d5780631458d7ad1461014357806323452b9c1461016457806336b9240414610178575b5f5ffd5b348015610118575f5ffd5b5061012c610127366004611e47565b610372565b60405161013a929190611f92565b60405180910390f35b34801561014e575f5ffd5b5061016261015d3660046120e0565b61065c565b005b34801561016f575f5ffd5b5061016261078f565b348015610183575f5ffd5b50610162610858565b348015610197575f5ffd5b506101626101a636600461215b565b610aa1565b3480156101b6575f5ffd5b506101ca6101c53660046121e3565b610b79565b60405161013a9190612215565b3480156101e2575f5ffd5b50610162610ca0565b3480156101f6575f5ffd5b5061012c610205366004611e47565b610d84565b348015610215575f5ffd5b505f546102359073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161013a565b348015610265575f5ffd5b5061016261027436600461222e565b61107f565b6101626102873660046121e3565b61121e565b6101626113a5565b34801561029f575f5ffd5b506102c77f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161013a565b3480156102e0575f5ffd5b506001546102359073ffffffffffffffffffffffffffffffffffffffff1681565b34801561030c575f5ffd5b5061016261031b366004612282565b6115b4565b34801561032b575f5ffd5b506102357f000000000000000000000000000000000000000000000000000000000000000081565b34801561035e575f5ffd5b506101ca61036d36600461222e565b611710565b6104066040518061014001604052805f815260200160608152602001606081526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f151581526020015f151581525090565b6104776040518061014001604052805f81526020015f81526020015f81526020015f81526020015f6fffffffffffffffffffffffffffffffff1681526020015f81526020015f63ffffffff1681526020015f63ffffffff1681526020015f63ffffffff168152602001606081525090565b60bc8310156104b2576040517fca0ad26000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104c0600c6004858761229b565b6104c9916122c2565b7fffffffffffffffff0000000000000000000000000000000000000000000000001682526104fb602c600c858761229b565b61050491612328565b73ffffffffffffffffffffffffffffffffffffffff1660a083015261052d6090608c858761229b565b61053691612365565b60e090811c9083015261054d604c602c858761229b565b61055691612328565b6020820152610569606c604c858761229b565b61057291612328565b6040820152610585608c606c858761229b565b61058e91612328565b60608201526105a160b06090858761229b565b6105aa91612328565b60a08201526105bd60b460b0858761229b565b6105c691612365565b60e01c60c08201526105dc60b860b4858761229b565b6105e591612365565b60e090811c908201526105fc60bc60b8858761229b565b61060591612365565b60e01c61010082015261061b8360bc818761229b565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505050506101208201525b9250929050565b5f5473ffffffffffffffffffffffffffffffffffffffff1633146106ac576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8673ffffffffffffffffffffffffffffffffffffffff1686866040516106d49291906123d8565b5f604051808303815f865af19150503d805f811461070d576040519150601f19603f3d011682016040523d82523d5f602084013e610712565b606091505b505090508015610754576107278484846119fb565b6040517fdfbe65d77c5440a078a2a1d95803d06b4a5f85b26ba3ec87bc9b421781e8dec1905f90a1610786565b6040517f750b219c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050505050565b5f5473ffffffffffffffffffffffffffffffffffffffff1633146107df576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015473ffffffffffffffffffffffffffffffffffffffff1661082e576040517f75cdea1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b5f610867606c604c368461229b565b61087091612328565b90505f610881607c606c368461229b565b61088a916123e7565b60801c90506108b173ffffffffffffffffffffffffffffffffffffffff8316333084611a2b565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663ad5425c66108fb604c602c365f61229b565b61090491612328565b610912602c600c365f61229b565b61091b91612328565b8561092a60a06080365f61229b565b61093391612328565b8661094260c060a0365f61229b565b61094b91612328565b6109596080607c365f61229b565b61096291612365565b60e090811c906109759060c0365f61229b565b61097e91612328565b61098c60e460e0365f61229b565b61099591612365565b60e01c6109a660e860e4365f61229b565b6109af91612365565b60e01c6109c060ec60e8365f61229b565b6109c991612365565b60e01c6109d93660ec815f61229b565b6040518e63ffffffff1660e01b8152600401610a019d9c9b9a99989796959493929190612493565b5f604051808303815f87803b158015610a18575f5ffd5b505af1158015610a2a573d5f5f3e3d5ffd5b507fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c1339250610a609150600c90506004365f61229b565b610a69916122c2565b6040517fffffffffffffffff000000000000000000000000000000000000000000000000909116815260200160405180910390a15050565b5f5473ffffffffffffffffffffffffffffffffffffffff163314610af1576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b81811015610b7457610b6c838383818110610b1057610b1061251d565b9050602002016020810190610b259190612282565b7f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611af1565b600101610af3565b505050565b606063ffffffff610b8f6080840184840161254a565b67ffffffffffffffff161115610bd1576040517f90eaaa7000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fc5d60e97000000000000000000000000000000000000000000000000000000008235602084013560408501356080860180359060a088013590610c189060608a0161254a565b60e01b8860c001358960e0016020810190610c339190612571565b60e01b610c486101208c016101008d01612571565b60e01b610c5d6101408d016101208e01612571565b60e01b610c6e6101408e018e612594565b604051602001610c8a9d9c9b9a999897969594939291906125f5565b6040516020818303038152906040529050919050565b60015473ffffffffffffffffffffffffffffffffffffffff16338114610cf2576040517f1853971c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35f805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b610e186040518061014001604052805f815260200160608152602001606081526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f151581526020015f151581525090565b610e896040518061014001604052805f81526020015f81526020015f81526020015f81526020015f6fffffffffffffffffffffffffffffffff1681526020015f81526020015f63ffffffff1681526020015f63ffffffff1681526020015f63ffffffff168152602001606081525090565b60ec831015610ec4576040517fca0ad26000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ed2600c6004858761229b565b610edb916122c2565b7fffffffffffffffff000000000000000000000000000000000000000000000000168252610f0d602c600c858761229b565b610f1691612328565b73ffffffffffffffffffffffffffffffffffffffff1660a0830152610f3f604c602c858761229b565b610f4891612328565b6020820152610f5b606c604c858761229b565b610f6491612328565b73ffffffffffffffffffffffffffffffffffffffff166080830152610f8d607c606c858761229b565b610f96916123e7565b608090811c60c0840152610fad90607c858761229b565b610fb691612365565b60e090811c90830152610fcd60a06080858761229b565b610fd691612328565b6040820152610fe960c060a0858761229b565b610ff291612328565b606082015261100560e060c0858761229b565b61100e91612328565b60a082015261102160e460e0858761229b565b61102a91612365565b60e01c60c082015261104060e860e4858761229b565b61104991612365565b60e090811c9082015261106060ec60e8858761229b565b61106991612365565b60e01c61010082015261061b8360ec818761229b565b6110a173ffffffffffffffffffffffffffffffffffffffff8316333084611a2b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ad5425c6846040013585602001358573ffffffffffffffffffffffffffffffffffffffff165f1b8760800135868960a001358a606001602081019061111e919061254a565b60c08c01356111346101008e0160e08f01612571565b8d6101000160208101906111489190612571565b8e61012001602081019061115c9190612571565b8f80610140019061116d9190612594565b6040518e63ffffffff1660e01b81526004016111959d9c9b9a99989796959493929190612493565b5f604051808303815f87803b1580156111ac575f5ffd5b505af11580156111be573d5f5f3e3d5ffd5b50506040517fffffffffffffffff00000000000000000000000000000000000000000000000086351681527fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c1339250602001905060405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663ad5425c634604084013560208501357f000000000000000000000000000000000000000000000000000000000000000060808701803590859060a08a0135906112a29060608c0161254a565b60c08b01356112b86101008d0160e08e01612571565b6112ca6101208e016101008f01612571565b8d6101200160208101906112de9190612571565b8e8061014001906112ef9190612594565b6040518f63ffffffff1660e01b81526004016113179d9c9b9a99989796959493929190612493565b5f604051808303818588803b15801561132e575f5ffd5b505af1158015611340573d5f5f3e3d5ffd5b50506040517fffffffffffffffff00000000000000000000000000000000000000000000000085351681527fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c1339350602001915061139a9050565b60405180910390a150565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663ad5425c6346113f0604c602c365f61229b565b6113f991612328565b611407602c600c365f61229b565b61141091612328565b7f000000000000000000000000000000000000000000000000000000000000000061143f606c604c365f61229b565b61144891612328565b34611457608c606c365f61229b565b61146091612328565b61146e6090608c365f61229b565b61147791612365565b60e01c61148860b06090365f61229b565b61149191612328565b61149f60b460b0365f61229b565b6114a891612365565b60e01c6114b960b860b4365f61229b565b6114c291612365565b60e01c6114d360bc60b8365f61229b565b6114dc91612365565b60e01c6114ec3660bc815f61229b565b6040518f63ffffffff1660e01b81526004016115149d9c9b9a99989796959493929190612493565b5f604051808303818588803b15801561152b575f5ffd5b505af115801561153d573d5f5f3e3d5ffd5b507fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c13393506115759250600c915060049050365f61229b565b61157e916122c2565b6040517fffffffffffffffff000000000000000000000000000000000000000000000000909116815260200160405180910390a1565b5f5473ffffffffffffffffffffffffffffffffffffffff163314611604576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116611651576040517f1beca37400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff8216036116a0576040517fbf1ea9fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278905f90a350565b606063ffffffff6117266080860186840161254a565b67ffffffffffffffff161115611768576040517f90eaaa7000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6fffffffffffffffffffffffffffffffff8211156117b2576040517f340dabef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080517f36b92404000000000000000000000000000000000000000000000000000000006020808301919091527fffffffffffffffff0000000000000000000000000000000000000000000000008735166024830152860135602c82015290850135604c82015273ffffffffffffffffffffffffffffffffffffffff8416606c8201525f90608c0160405160208183030381529060405290505f8360801b866060016020810190611864919061254a565b6040517fffffffffffffffffffffffffffffffff0000000000000000000000000000000092909216602083015260e01b7fffffffff000000000000000000000000000000000000000000000000000000001660308201526080870135603482015260a08701356054820152607401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905290505f60c0870135611919610100890160e08a01612571565b60e01b61192e6101208a016101008b01612571565b60e01b6119436101408b016101208c01612571565b6040805160208101959095527fffffffff0000000000000000000000000000000000000000000000000000000093841690850152908216604484015260e01b166048820152604c01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905290508282826119cc6101408b018b612594565b6040516020016119e0959493929190612726565b60405160208183030381529060405293505050509392505050565b73ffffffffffffffffffffffffffffffffffffffff8316611a2057610b748282611b1d565b610b74838383611b8e565b5f6040517f23b872dd00000000000000000000000000000000000000000000000000000000815284600482015283602482015282604482015260205f6064835f8a5af13d15601f3d1160015f511416171691505080611aea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c4544000000000000000000000000604482015260640160405180910390fd5b5050505050565b610b748383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611bfc565b73ffffffffffffffffffffffffffffffffffffffff8216611b6a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b8a73ffffffffffffffffffffffffffffffffffffffff831682611d29565b5050565b73ffffffffffffffffffffffffffffffffffffffff8216611bdb576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b7473ffffffffffffffffffffffffffffffffffffffff84168383611d42565b73ffffffffffffffffffffffffffffffffffffffff841615611d235773ffffffffffffffffffffffffffffffffffffffff8316611c65576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611cd8573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611cfc9190612758565b1015611d2357611d2373ffffffffffffffffffffffffffffffffffffffff85168483611d8b565b50505050565b5f385f3884865af1611b8a5763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716611d82576390b8ec185f526004601cfd5b5f603452505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716611d82575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f51141716611d8257633e3f8f735f526004601cfd5b5f5f83601f840112611e19575f5ffd5b50813567ffffffffffffffff811115611e30575f5ffd5b602083019150836020828501011115610655575f5ffd5b5f5f60208385031215611e58575f5ffd5b823567ffffffffffffffff811115611e6e575f5ffd5b611e7a85828601611e09565b90969095509350505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b805182526020810151602083015260408101516040830152606081015160608301525f6080820151611f1860808501826fffffffffffffffffffffffffffffffff169052565b5060a082015160a084015260c0820151611f3a60c085018263ffffffff169052565b5060e0820151611f5260e085018263ffffffff169052565b50610100820151611f6c61010085018263ffffffff169052565b50610120820151610140610120850152611f8a610140850182611e86565b949350505050565b60408152825160408201525f60208401516101406060840152611fb9610180840182611e86565b905060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016080850152611ff48282611e86565b915050606085015161201e60a085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060a085015173ffffffffffffffffffffffffffffffffffffffff811660e08501525060c085015161010084015260e085015161012084015261010085015161208e61014085018215159052565b50610120850151151561016084015282810360208401526120af8185611ed2565b95945050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146120db575f5ffd5b919050565b5f5f5f5f5f5f60a087890312156120f5575f5ffd5b6120fe876120b8565b9550602087013567ffffffffffffffff811115612119575f5ffd5b61212589828a01611e09565b90965094506121389050604088016120b8565b9250612146606088016120b8565b95989497509295919493608090920135925050565b5f5f6020838503121561216c575f5ffd5b823567ffffffffffffffff811115612182575f5ffd5b8301601f81018513612192575f5ffd5b803567ffffffffffffffff8111156121a8575f5ffd5b8560208260051b84010111156121bc575f5ffd5b6020919091019590945092505050565b5f61016082840312156121dd575f5ffd5b50919050565b5f602082840312156121f3575f5ffd5b813567ffffffffffffffff811115612209575f5ffd5b611f8a848285016121cc565b602081525f6122276020830184611e86565b9392505050565b5f5f5f60608486031215612240575f5ffd5b833567ffffffffffffffff811115612256575f5ffd5b612262868287016121cc565b935050612271602085016120b8565b929592945050506040919091013590565b5f60208284031215612292575f5ffd5b612227826120b8565b5f5f858511156122a9575f5ffd5b838611156122b5575f5ffd5b5050820193919092039150565b80357fffffffffffffffff0000000000000000000000000000000000000000000000008116906008841015612321577fffffffffffffffff000000000000000000000000000000000000000000000000808560080360031b1b82161691505b5092915050565b8035602083101561235f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b165b92915050565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015612321577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505092915050565b81818437505f910190815290565b818382375f9101908152919050565b80357fffffffffffffffffffffffffffffffff000000000000000000000000000000008116906010841015612321577fffffffffffffffffffffffffffffffff00000000000000000000000000000000808560100360031b1b82161691505092915050565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b8d81528c60208201528b60408201528a60608201528960808201528860a082015267ffffffffffffffff881660c08201528660e082015263ffffffff861661010082015263ffffffff851661012082015263ffffffff84166101408201526101806101608201525f61250a6101808301848661244c565b9f9e505050505050505050505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6020828403121561255a575f5ffd5b813567ffffffffffffffff81168114612227575f5ffd5b5f60208284031215612581575f5ffd5b813563ffffffff81168114612227575f5ffd5b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126125c7575f5ffd5b83018035915067ffffffffffffffff8211156125e1575f5ffd5b602001915036819003821315610655575f5ffd5b7fffffffff000000000000000000000000000000000000000000000000000000008e1681527fffffffffffffffff0000000000000000000000000000000000000000000000008d1660048201528b600c8201528a602c82015289604c82015288606c8201527fffffffff000000000000000000000000000000000000000000000000000000008816608c8201528660908201527fffffffff00000000000000000000000000000000000000000000000000000000861660b08201527fffffffff00000000000000000000000000000000000000000000000000000000851660b48201527fffffffff00000000000000000000000000000000000000000000000000000000841660b88201525f61250a60bc830184866123ca565b5f81518060208401855e5f93019283525090919050565b5f61274361273d612737848a61270f565b8861270f565b8661270f565b838582375f9301928352509095945050505050565b5f60208284031215612768575f5ffd5b505191905056fea2646970667358221220ba894a2baf2773c31603e16d79975ebf63e740efd96bb69763ac4c5daac8805664736f6c634300081d0033";
const isSuperArgs = (xs) => xs.length > 1;
export class AcrossFacetPackedV4__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_spokePool, _wrappedNative, _owner, overrides) {
        return super.deploy(_spokePool, _wrappedNative, _owner, overrides || {});
    }
    getDeployTransaction(_spokePool, _wrappedNative, _owner, overrides) {
        return super.getDeployTransaction(_spokePool, _wrappedNative, _owner, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
