"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ISafe__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "VERSION",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "string",
                internalType: "string",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "addOwnerWithThreshold",
        inputs: [
            {
                name: "owner",
                type: "address",
                internalType: "address",
            },
            {
                name: "_threshold",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "approveHash",
        inputs: [
            {
                name: "hashToApprove",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "approvedHashes",
        inputs: [
            {
                name: "owner",
                type: "address",
                internalType: "address",
            },
            {
                name: "messageHash",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "changeThreshold",
        inputs: [
            {
                name: "_threshold",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "checkNSignatures",
        inputs: [
            {
                name: "executor",
                type: "address",
                internalType: "address",
            },
            {
                name: "dataHash",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "signatures",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "requiredSignatures",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "checkSignatures",
        inputs: [
            {
                name: "executor",
                type: "address",
                internalType: "address",
            },
            {
                name: "dataHash",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "signatures",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "disableModule",
        inputs: [
            {
                name: "prevModule",
                type: "address",
                internalType: "address",
            },
            {
                name: "module",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "domainSeparator",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "enableModule",
        inputs: [
            {
                name: "module",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "execTransaction",
        inputs: [
            {
                name: "to",
                type: "address",
                internalType: "address",
            },
            {
                name: "value",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "operation",
                type: "uint8",
                internalType: "enum Enum.Operation",
            },
            {
                name: "safeTxGas",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "baseGas",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "gasPrice",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "gasToken",
                type: "address",
                internalType: "address",
            },
            {
                name: "refundReceiver",
                type: "address",
                internalType: "address payable",
            },
            {
                name: "signatures",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "success",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "execTransactionFromModule",
        inputs: [
            {
                name: "to",
                type: "address",
                internalType: "address",
            },
            {
                name: "value",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "operation",
                type: "uint8",
                internalType: "enum Enum.Operation",
            },
        ],
        outputs: [
            {
                name: "success",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "execTransactionFromModuleReturnData",
        inputs: [
            {
                name: "to",
                type: "address",
                internalType: "address",
            },
            {
                name: "value",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "operation",
                type: "uint8",
                internalType: "enum Enum.Operation",
            },
        ],
        outputs: [
            {
                name: "success",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "returnData",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "getModulesPaginated",
        inputs: [
            {
                name: "start",
                type: "address",
                internalType: "address",
            },
            {
                name: "pageSize",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "array",
                type: "address[]",
                internalType: "address[]",
            },
            {
                name: "next",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getOwners",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getThreshold",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getTransactionHash",
        inputs: [
            {
                name: "to",
                type: "address",
                internalType: "address",
            },
            {
                name: "value",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "operation",
                type: "uint8",
                internalType: "enum Enum.Operation",
            },
            {
                name: "safeTxGas",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "baseGas",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "gasPrice",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "gasToken",
                type: "address",
                internalType: "address",
            },
            {
                name: "refundReceiver",
                type: "address",
                internalType: "address",
            },
            {
                name: "_nonce",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isModuleEnabled",
        inputs: [
            {
                name: "module",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isOwner",
        inputs: [
            {
                name: "owner",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "nonce",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "removeOwner",
        inputs: [
            {
                name: "prevOwner",
                type: "address",
                internalType: "address",
            },
            {
                name: "owner",
                type: "address",
                internalType: "address",
            },
            {
                name: "_threshold",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setFallbackHandler",
        inputs: [
            {
                name: "handler",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setGuard",
        inputs: [
            {
                name: "guard",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setModuleGuard",
        inputs: [
            {
                name: "moduleGuard",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setup",
        inputs: [
            {
                name: "_owners",
                type: "address[]",
                internalType: "address[]",
            },
            {
                name: "_threshold",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "to",
                type: "address",
                internalType: "address",
            },
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "fallbackHandler",
                type: "address",
                internalType: "address",
            },
            {
                name: "paymentToken",
                type: "address",
                internalType: "address",
            },
            {
                name: "payment",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "paymentReceiver",
                type: "address",
                internalType: "address payable",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "signedMessages",
        inputs: [
            {
                name: "messageHash",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "swapOwner",
        inputs: [
            {
                name: "prevOwner",
                type: "address",
                internalType: "address",
            },
            {
                name: "oldOwner",
                type: "address",
                internalType: "address",
            },
            {
                name: "newOwner",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "event",
        name: "AddedOwner",
        inputs: [
            {
                name: "owner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "ApproveHash",
        inputs: [
            {
                name: "approvedHash",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "owner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "ChangedFallbackHandler",
        inputs: [
            {
                name: "handler",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "ChangedGuard",
        inputs: [
            {
                name: "guard",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "ChangedModuleGuard",
        inputs: [
            {
                name: "moduleGuard",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "ChangedThreshold",
        inputs: [
            {
                name: "threshold",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "DisabledModule",
        inputs: [
            {
                name: "module",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "EnabledModule",
        inputs: [
            {
                name: "module",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "ExecutionFailure",
        inputs: [
            {
                name: "txHash",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "payment",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "ExecutionFromModuleFailure",
        inputs: [
            {
                name: "module",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "ExecutionFromModuleSuccess",
        inputs: [
            {
                name: "module",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "ExecutionSuccess",
        inputs: [
            {
                name: "txHash",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "payment",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "RemovedOwner",
        inputs: [
            {
                name: "owner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "SafeSetup",
        inputs: [
            {
                name: "initiator",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "owners",
                type: "address[]",
                indexed: false,
                internalType: "address[]",
            },
            {
                name: "threshold",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "initializer",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fallbackHandler",
                type: "address",
                indexed: false,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "SignMsg",
        inputs: [
            {
                name: "msgHash",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
        ],
        anonymous: false,
    },
];
var ISafe__factory = /** @class */ (function () {
    function ISafe__factory() {
    }
    ISafe__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ISafe__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ISafe__factory.abi = _abi;
    return ISafe__factory;
}());
exports.ISafe__factory = ISafe__factory;
