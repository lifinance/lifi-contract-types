"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChainflipFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_chainflipVault",
                type: "address",
                internalType: "contract IChainflipVault",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "CHAINFLIP_VAULT",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract IChainflipVault",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "startBridgeTokensViaChainflip",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_chainflipData",
                type: "tuple",
                internalType: "struct ChainflipFacet.ChainflipData",
                components: [
                    {
                        name: "nonEVMReceiver",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "dstToken",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "dstCallReceiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "dstCallSwapData",
                        type: "tuple[]",
                        internalType: "struct LibSwap.SwapData[]",
                        components: [
                            {
                                name: "callTo",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "approveTo",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "sendingAssetId",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "receivingAssetId",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "fromAmount",
                                type: "uint256",
                                internalType: "uint256",
                            },
                            {
                                name: "callData",
                                type: "bytes",
                                internalType: "bytes",
                            },
                            {
                                name: "requiresDeposit",
                                type: "bool",
                                internalType: "bool",
                            },
                        ],
                    },
                    {
                        name: "gasAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "cfParameters",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaChainflip",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_chainflipData",
                type: "tuple",
                internalType: "struct ChainflipFacet.ChainflipData",
                components: [
                    {
                        name: "nonEVMReceiver",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "dstToken",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "dstCallReceiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "dstCallSwapData",
                        type: "tuple[]",
                        internalType: "struct LibSwap.SwapData[]",
                        components: [
                            {
                                name: "callTo",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "approveTo",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "sendingAssetId",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "receivingAssetId",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "fromAmount",
                                type: "uint256",
                                internalType: "uint256",
                            },
                            {
                                name: "callData",
                                type: "bytes",
                                internalType: "bytes",
                            },
                            {
                                name: "requiresDeposit",
                                type: "bool",
                                internalType: "bool",
                            },
                        ],
                    },
                    {
                        name: "gasAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "cfParameters",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "BridgeToNonEVMChain",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes",
                indexed: false,
                internalType: "bytes",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "BridgeToNonEVMChainBytes32",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "EmptyNonEvmAddress",
        inputs: [],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidConfig",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
    {
        type: "error",
        name: "UnsupportedChainflipChainId",
        inputs: [],
    },
];
var _bytecode = "0x60a06040523480156200001157600080fd5b506040516200261f3803806200261f83398101604081905262000034916200006e565b6001600160a01b0381166200005c576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b0316608052620000a0565b6000602082840312156200008157600080fd5b81516001600160a01b03811681146200009957600080fd5b9392505050565b608051612541620000de6000396000818160600152818161076c015281816108450152818161090101528181610a200152610ab601526125416000f3fe6080604052600436106100345760003560e01c80630ad553b314610039578063786567f71461004e578063ee3314a1146100ab575b600080fd5b61004c610047366004611bd4565b6100be565b005b34801561005a57600080fd5b506100827f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61004c6100b9366004611c38565b6102a8565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610139576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061014a3447611d26565b90508461016f8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101a6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101e4576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610221576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b858061010001511561025f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61027187608001518860c00151610496565b61027b878761054b565b504790508181111561029c5761029c6000846102978585611d26565b610b97565b50506000909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610323576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006103343447611d26565b905086806101000151610373576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876103968160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103cd576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361040b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610448576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61045d89600001518a60c001518a8a33610bcc565b60c08a015261046c898761054b565b5047905081811115610488576104886000846102978585611d26565b505060009091555050505050565b806000036104d0576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166105295780341015610525576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61052573ffffffffffffffffffffffffffffffffffffffff8316333084610d15565b600061055a8360e00151610d72565b90506000610580846080015173ffffffffffffffffffffffffffffffffffffffff161590565b905060607311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168560a0015173ffffffffffffffffffffffffffffffffffffffff16036106a3576105d98480611d39565b9050600003610614576040517f6e70c56c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61061e8480611d39565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050505060e08601518651919250907ff9b69f466270c99522169d563c0a430e88c52865ec33b1cc36ee2a4a6ea5170b6106888780611d39565b604051610696929190611dee565b60405180910390a361075d565b60008561012001516106b9578560a001516106c9565b6106c96060860160408701611e0a565b905073ffffffffffffffffffffffffffffffffffffffff8116610718576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606083901b1660208201526034016040516020818303038152906040529150505b816107955761079585608001517f00000000000000000000000000000000000000000000000000000000000000008760c00151610df7565b846101200151156109b5576107ad6060850185611e2c565b90506000036107e8576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84516000906107fa6060870187611e2c565b8860a001516040516020016108129493929190611ef8565b604051602081830303815290604052905082156108ea5760c086015173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906307933dd290868561087e60408b0160208c01612071565b8660808c013561089160a08e018e611d39565b6040518963ffffffff1660e01b81526004016108b397969594939291906120fb565b6000604051808303818588803b1580156108cc57600080fd5b505af11580156108e0573d6000803e3d6000fd5b50505050506109af565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663bbddc2fb858461093860408a0160208b01612071565b858a608001358c608001518d60c001518d8060a001906109589190611d39565b6040518a63ffffffff1660e01b815260040161097c9998979695949392919061215f565b600060405180830381600087803b15801561099657600080fd5b505af11580156109aa573d6000803e3d6000fd5b505050505b50610b59565b60006109c46060860186611e2c565b905011156109fe576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8115610a9f5760c085015173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063dd687345908584610a5960408a0160208b01612071565b610a6660a08b018b611d39565b6040518763ffffffff1660e01b8152600401610a869594939291906121e9565b6000604051808303818588803b15801561099657600080fd5b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166304fc7da08483610aed6040890160208a01612071565b60808a015160c08b0151610b0460a08c018c611d39565b6040518863ffffffff1660e01b8152600401610b269796959493929190612231565b600060405180830381600087803b158015610b4057600080fd5b505af1158015610b54573d6000803e3d6000fd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f185604051610b88919061229d565b60405180910390a15050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610bc157610bbc8282610e23565b505050565b610bbc838383610e90565b600082808203610c08576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610c17600185611d26565b818110610c2657610c266123b0565b9050602002810190610c3891906123df565b610c49906080810190606001611e0a565b90506000610c5682610efe565b905073ffffffffffffffffffffffffffffffffffffffff8216610c8057610c7d3482611d26565b90505b6000610c8c8888610f49565b9050610c98888861105d565b610ca58a898989856110ca565b600082610cb185610efe565b610cbb9190611d26565b905089811015610d05576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9450505050505b95945050505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d156001600051141716610d6457637939f4246000526004601cfd5b600060605260405250505050565b600060018203610d8457506001919050565b61a4b18203610d9557506004919050565b660416edef1601be8203610dab57506005919050565b6512309ce540018203610dc057506003919050565b6040517f63b7b64100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b610bbc8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611299565b73ffffffffffffffffffffffffffffffffffffffff8216610e70576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61052573ffffffffffffffffffffffffffffffffffffffff8316826113c8565b73ffffffffffffffffffffffffffffffffffffffff8216610edd576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bbc73ffffffffffffffffffffffffffffffffffffffff841683836113e4565b600073ffffffffffffffffffffffffffffffffffffffff821615610f4157610f3c73ffffffffffffffffffffffffffffffffffffffff831630611433565b610f43565b475b92915050565b60608160008167ffffffffffffffff811115610f6757610f6761199f565b604051908082528060200260200182016040528015610f90578160200160208202803683370190505b5090506000805b8381101561105257868682818110610fb157610fb16123b0565b9050602002810190610fc391906123df565b610fd4906080810190606001611e0a565b9150610fdf82610efe565b838281518110610ff157610ff16123b0565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216611042573483828151811061102a5761102a6123b0565b6020026020010181815161103e9190611d26565b9052505b61104b8161241d565b9050610f97565b509095945050505050565b60005b81811015610bbc573683838381811061107b5761107b6123b0565b905060200281019061108d91906123df565b905061109f60e0820160c08301612455565b156110c1576110c16110b76060830160408401611e0a565b8260800135610496565b50600101611060565b838383838260005b8181101561127e57368a8a838181106110ed576110ed6123b0565b90506020028101906110ff91906123df565b905061112e6111146060830160408401611e0a565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061119157506111916111476040830160208401611e0a565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156111a857506111a86111476020830183611e0a565b801561122d575061122d6111bf60a0830183611d39565b6111ce91600491600091612470565b6111d79161249a565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611263576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61126d8c82611468565b506112778161241d565b90506110d2565b505061128e8484848460006116e5565b505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156113c25773ffffffffffffffffffffffffffffffffffffffff8316611302576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139b91906124e2565b10156113c2576113c273ffffffffffffffffffffffffffffffffffffffff8516848361190b565b50505050565b60003860003884865af16105255763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d156001600051141716611429576390b8ec186000526004601cfd5b6000603452505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b6114806114786020830183611e0a565b6017903b1190565b6114b6576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036114f6576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061150b6111146060850160408601611e0a565b61151657600061151c565b82608001355b905060006115386115336080860160608701611e0a565b610efe565b90508160000361156f5761156f6115556060860160408701611e0a565b6115656040870160208801611e0a565b8660800135610df7565b60008061157f6020870187611e0a565b73ffffffffffffffffffffffffffffffffffffffff16846115a360a0890189611d39565b6040516115b19291906124fb565b60006040518083038185875af1925050503d80600081146115ee576040519150601f19603f3d011682016040523d82523d6000602084013e6115f3565b606091505b5091509150816116065761160681611995565b600061161b6115336080890160608a01611e0a565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861164c60208a018a611e0a565b61165c60608b0160408c01611e0a565b61166c60808c0160608d01611e0a565b8b6080013589871161167e5786611688565b6116888a88611d26565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b83600086826116f5600182611d26565b818110611704576117046123b0565b905060200281019061171691906123df565b611727906080810190606001611e0a565b905060008060008060008060005b888110156118fb5761174860018a611d26565b81108015611757575088600114155b15611833578d8d8281811061176e5761176e6123b0565b905060200281019061178091906123df565b611791906080810190606001611e0a565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611833578a81815181106117d8576117d86123b0565b60200260200101516117e987610efe565b6117f39190611d26565b965073ffffffffffffffffffffffffffffffffffffffff86161561181857600061181a565b895b93508387111561183357611833868d610297878b611d26565b8d8d82818110611845576118456123b0565b905060200281019061185791906123df565b611868906060810190604001611e0a565b945061187385610efe565b925073ffffffffffffffffffffffffffffffffffffffff85161561189857600061189a565b895b915081831180156118d757508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b156118eb576118eb858d6102978587611d26565b6118f48161241d565b9050611735565b5050505050505050505050505050565b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d1560016000511417166114295760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d15600160005114171661142957633e3f8f736000526004601cfd5b8051602082018181fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156119f2576119f261199f565b60405290565b600082601f830112611a0957600080fd5b813567ffffffffffffffff80821115611a2457611a2461199f565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611a6a57611a6a61199f565b81604052838152866020858801011115611a8357600080fd5b836020870160208301376000602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610df257600080fd5b80358015158114610df257600080fd5b60006101408284031215611aea57600080fd5b611af26119ce565b905081358152602082013567ffffffffffffffff80821115611b1357600080fd5b611b1f858386016119f8565b60208401526040840135915080821115611b3857600080fd5b50611b45848285016119f8565b604083015250611b5760608301611aa3565b6060820152611b6860808301611aa3565b6080820152611b7960a08301611aa3565b60a082015260c082013560c082015260e082013560e0820152610100611ba0818401611ac7565b90820152610120611bb2838201611ac7565b9082015292915050565b600060c08284031215611bce57600080fd5b50919050565b60008060408385031215611be757600080fd5b823567ffffffffffffffff80821115611bff57600080fd5b611c0b86838701611ad7565b93506020850135915080821115611c2157600080fd5b50611c2e85828601611bbc565b9150509250929050565b60008060008060608587031215611c4e57600080fd5b843567ffffffffffffffff80821115611c6657600080fd5b611c7288838901611ad7565b95506020870135915080821115611c8857600080fd5b818701915087601f830112611c9c57600080fd5b813581811115611cab57600080fd5b8860208260051b8501011115611cc057600080fd5b602083019550809450506040870135915080821115611cde57600080fd5b50611ceb87828801611bbc565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610f4357610f43611cf7565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611d6e57600080fd5b83018035915067ffffffffffffffff821115611d8957600080fd5b602001915036819003821315611d9e57600080fd5b9250929050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b602081526000611e02602083018486611da5565b949350505050565b600060208284031215611e1c57600080fd5b611e2582611aa3565b9392505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611e6157600080fd5b83018035915067ffffffffffffffff821115611e7c57600080fd5b6020019150600581901b3603821315611d9e57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611ec957600080fd5b830160208101925035905067ffffffffffffffff811115611ee957600080fd5b803603821315611d9e57600080fd5b600060608083018784526020828186015281878352608092508286019050828860051b870101896000805b8b811015612046577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a850301855282357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218e3603018112611f83578283fd5b8d0160e073ffffffffffffffffffffffffffffffffffffffff80611fa684611aa3565b16875280611fb58a8501611aa3565b1689880152604081611fc8828601611aa3565b169088015250611fd9828b01611aa3565b73ffffffffffffffffffffffffffffffffffffffff168a870152818901358987015260a061200981840184611e94565b83838a015261201b848a018284611da5565b935050505060c061202d818401611ac7565b1515960195909552509385019391850191600101611f23565b50505073ffffffffffffffffffffffffffffffffffffffff881660408801529450610d0c9350505050565b60006020828403121561208357600080fd5b813563ffffffff81168114611e2557600080fd5b6000815180845260005b818110156120bd576020818501810151868301820152016120a1565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600063ffffffff808a16835260c0602084015261211b60c084018a612097565b818916604085015283810360608501526121358189612097565b91505085608084015282810360a0840152612151818587611da5565b9a9950505050505050505050565b600061010063ffffffff808d1684528160208501526121808285018d612097565b908b1660408501528381036060850152905061219c818a612097565b905087608084015273ffffffffffffffffffffffffffffffffffffffff871660a08401528560c084015282810360e08401526121d9818587611da5565b9c9b505050505050505050505050565b600063ffffffff8088168352608060208401526122096080840188612097565b81871660408501528381036060850152612224818688611da5565b9998505050505050505050565b600063ffffffff808a16835260c0602084015261225160c084018a612097565b818916604085015273ffffffffffffffffffffffffffffffffffffffff8816606085015286608085015283810360a085015261228e818688611da5565b9b9a5050505050505050505050565b6020815281516020820152600060208301516101408060408501526122c6610160850183612097565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526123018382612097565b925050606085015161232b608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e085015161010081818701528087015191505061012061239e8187018315159052565b90950151151593019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261241357600080fd5b9190910192915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361244e5761244e611cf7565b5060010190565b60006020828403121561246757600080fd5b611e2582611ac7565b6000808585111561248057600080fd5b8386111561248d57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156124da5780818660040360031b1b83161692505b505092915050565b6000602082840312156124f457600080fd5b5051919050565b818382376000910190815291905056fea2646970667358221220011ec79602ed8604845b3f7a336d118af0d63d42b43103becab8ea9a4f88503564736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var ChainflipFacet__factory = /** @class */ (function (_super) {
    __extends(ChainflipFacet__factory, _super);
    function ChainflipFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    ChainflipFacet__factory.prototype.deploy = function (_chainflipVault, overrides) {
        return _super.prototype.deploy.call(this, _chainflipVault, overrides || {});
    };
    ChainflipFacet__factory.prototype.getDeployTransaction = function (_chainflipVault, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _chainflipVault, overrides || {});
    };
    ChainflipFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ChainflipFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ChainflipFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ChainflipFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ChainflipFacet__factory.bytecode = _bytecode;
    ChainflipFacet__factory.abi = _abi;
    return ChainflipFacet__factory;
}(ethers_1.ContractFactory));
exports.ChainflipFacet__factory = ChainflipFacet__factory;
