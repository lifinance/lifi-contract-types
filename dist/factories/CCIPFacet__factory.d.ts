import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { CCIPFacet, CCIPFacetInterface } from "../CCIPFacet";
declare type CCIPFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class CCIPFacet__factory extends ContractFactory {
    constructor(...args: CCIPFacetConstructorParams);
    deploy(_routerClient: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<CCIPFacet>;
    getDeployTransaction(_routerClient: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): CCIPFacet;
    connect(signer: Signer): CCIPFacet__factory;
    static readonly bytecode = "0x60a06040523480156200001157600080fd5b506040516200329f3803806200329f833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b6080516131f7620000a86000396000818160870152818161096e01528181610d440152610d6b01526131f76000f3fe6080604052600436106100705760003560e01c8063dab6e0c51161004e578063dab6e0c514610115578063db26bc6a14610135578063ee580f0514610155578063f2f1d7511461016857600080fd5b8063128a60c81461007557806358588e20146100d35780635f352aaf146100e8575b600080fd5b34801561008157600080fd5b506100a97f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100e66100e13660046129d4565b610196565b005b3480156100f457600080fd5b50610108610103366004612a93565b610393565b6040516100ca9190612b31565b34801561012157600080fd5b506100e6610130366004612b44565b610421565b34801561014157600080fd5b506100e6610150366004612bd1565b610524565b6100e6610163366004612bfd565b6105ce565b34801561017457600080fd5b50610188610183366004612bfd565b6107bd565b6040519081526020016100ca565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610211576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006102223447612c90565b905086806101000151610261576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876102848160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156102bb576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036102f9576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610336576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103408987610a06565b61035589600001518a60c001518a8a33610a5a565b60c08a01526103648987610ba2565b5047905081811115610385576103856000846103808585612c90565b610e52565b505060009091555050505050565b60408051808201825283815282151560208083019182528351602481018790529151151560448084019190915284518084039091018152606490920190935291820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f97a657c900000000000000000000000000000000000000000000000000000000179052505b92915050565b610429610e88565b7f3f22ce35b3118b49602016e18619d263a376c8154d3cb64a93ec8c321dc6a10760005b828110156104e55783838281811061046757610467612ca3565b905060400201602001602081019061047f9190612cd2565b82600086868581811061049457610494612ca3565b90506040020160000135815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555080806104dd90612ced565b91505061044d565b507ffd8de791baba6e3e44eaaed51bcb067a436c3f10ad77b9df0a15572f3784ed9e8383604051610517929190612d25565b60405180910390a1505050565b61052c610e88565b60007f3f22ce35b3118b49602016e18619d263a376c8154d3cb64a93ec8c321dc6a1076000848152602082815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff8716908117909155915191825291925084917f5a9f2a93835bb36de575dab43c2dc2f84a30bcf9587ef9b6ccadb93419eb0423910160405180910390a2505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610649576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061065a3447612c90565b90508461067f8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156106b6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036106f4576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610731576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b858061010001511561076f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107798787610a06565b61078b87608001518860c00151610efd565b6107958787610ba2565b50479050818111156107b1576107b16000846103808585612c90565b50506000909155505050565b604080516001808252818301909252600091829190816020015b60408051808201909152600080825260208201528152602001906001900390816107d75790505090506040518060400160405280856080015173ffffffffffffffffffffffffffffffffffffffff1681526020018560c001518152508160008151811061084657610846612ca3565b60209081029190910101526040805160a08082019092529085015173ffffffffffffffffffffffffffffffffffffffff1660c08201526000908060e08101604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905281526020016108c18680612d7d565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050506020808301869052604083019190915260609091019061091990870187612d7d565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505091525060e086015190915073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906320487ded9061099e9061106f565b836040518363ffffffff1660e01b81526004016109bc929190612de9565b602060405180830381865afa1580156109d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fd9190612eed565b95945050505050565b61012082015115156000610a1a8380612d7d565b905011151514610a56576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b600082808203610a96576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610aa5600185612c90565b818110610ab457610ab4612ca3565b9050602002810190610ac69190612f06565b610ad7906080810190606001612f44565b90506000610ae4826110e9565b905073ffffffffffffffffffffffffffffffffffffffff8216610b0e57610b0b3482612c90565b90505b6000610b1a88886111a1565b9050610b2688886112ad565b610b338a8989898561131a565b600082610b3f856110e9565b610b499190612c90565b905089811015610b94576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b604080516001808252818301909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081610bb95790505090506040518060400160405280846080015173ffffffffffffffffffffffffffffffffffffffff1681526020018460c0015181525081600081518110610c2857610c28612ca3565b60209081029190910101526040805160a08082019092529084015173ffffffffffffffffffffffffffffffffffffffff1660c08201526000908060e08101604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528152602001610ca38580612d7d565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250505060208083018690526040830191909152606090910190610cfb90860186612d7d565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050915250608085015160c0860151919250610d69917f0000000000000000000000000000000000000000000000000000000000000000906116cc565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f934610db38760e0015161106f565b846040518463ffffffff1660e01b8152600401610dd1929190612de9565b60206040518083038185885af1158015610def573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610e149190612eed565b507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f184604051610e449190612f5f565b60405180910390a150505050565b73ffffffffffffffffffffffffffffffffffffffff831615610e7e57610e7983838361180f565b505050565b610e798282611991565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314610efb576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b80600003610f37576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610f8c5780341015610a56576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610ff9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101d9190612eed565b905081811015611063576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610b8b565b610e7983333085611abb565b60008181527f3f22ce35b3118b49602016e18619d263a376c8154d3cb64a93ec8c321dc6a1076020819052604082205467ffffffffffffffff168083036110e2576040517fc5a5306800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff82161561119a576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111959190612eed565b61041b565b4792915050565b60608160008167ffffffffffffffff8111156111bf576111bf61274e565b6040519080825280602002602001820160405280156111e8578160200160208202803683370190505b5090506000805b838110156112a25786868281811061120957611209612ca3565b905060200281019061121b9190612f06565b61122c906080810190606001612f44565b9150611237826110e9565b83828151811061124957611249612ca3565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff821661129a573483828151811061128257611282612ca3565b602002602001018181516112969190612c90565b9052505b6001016111ef565b509095945050505050565b60005b81811015610e7957368383838181106112cb576112cb612ca3565b90506020028101906112dd9190612f06565b90506112ef60e0820160c08301613072565b15611311576113116113076060830160408401612f44565b8260800135610efd565b506001016112b0565b8383838382600181146115e75760008585611336600185612c90565b81811061134557611345612ca3565b90506020028101906113579190612f06565b611368906080810190606001612f44565b9050600089815b8181101561151357368d8d8381811061138a5761138a612ca3565b905060200281019061139c9190612f06565b90506113cb6113b16060830160408401612f44565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061142e575061142e6113e46040830160208401612f44565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561144557506114456113e46020830183612f44565b80156114ca57506114ca61145c60a0830183612d7d565b61146b9160049160009161308f565b611474916130b9565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611500576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61150a8f82611cd5565b5060010161136f565b505060005b611523600185612c90565b8110156115df57600088888381811061153e5761153e612ca3565b90506020028101906115509190612f06565b611561906080810190606001612f44565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146115d6578582815181106115a8576115a8612ca3565b60200260200101516115b9826110e9565b6115c39190612c90565b925082156115d6576115d6818885610e52565b50600101611518565b5050506116c0565b8760005b818110156116bd57368b8b8381811061160657611606612ca3565b90506020028101906116189190612f06565b905061162d6113b16060830160408401612f44565b8061164657506116466113e46040830160208401612f44565b801561165d575061165d6113e46020830183612f44565b8015611674575061167461145c60a0830183612d7d565b6116aa576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116b48d82611cd5565b506001016115eb565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166116ec57505050565b73ffffffffffffffffffffffffffffffffffffffff8216611739576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa1580156117ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d29190612eed565b1015610e79576117e483836000611feb565b610e7983837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611feb565b73ffffffffffffffffffffffffffffffffffffffff831661185c576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166118a9576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611916573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193a9190612eed565b905080821115611980576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610b8b565b61198b8484846121eb565b50505050565b73ffffffffffffffffffffffffffffffffffffffff82166119de576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611a21576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610b8b565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611a7b576040519150601f19603f3d011682016040523d82523d6000602084013e611a80565b606091505b5050905080610e79576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416611b08576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611b55576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015611bc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bea9190612eed565b9050611bf882868686612241565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611c68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c8c9190612eed565b611c969190612c90565b14611ccd576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b611ceb611ce56020830183612f44565b3b151590565b611d21576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611d61576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611d766113b16060850160408601612f44565b611d81576000611d87565b82608001355b90506000611da3611d9e6060860160408701612f44565b6110e9565b90506000611dba611d9e6080870160608801612f44565b905082600003611df157611df1611dd76060870160408801612f44565b611de76040880160208901612f44565b87608001356116cc565b8460800135821015611e3c576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610b8b565b600080611e4c6020880188612f44565b73ffffffffffffffffffffffffffffffffffffffff1685611e7060a08a018a612d7d565b604051611e7e929190613101565b60006040518083038185875af1925050503d8060008114611ebb576040519150601f19603f3d011682016040523d82523d6000602084013e611ec0565b606091505b509150915081611f0b576000611ed58261229f565b9050806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8b9190612b31565b6000611f20611d9e60808a0160608b01612f44565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611f5160208b018b612f44565b611f6160608c0160408d01612f44565b611f7160808d0160608e01612f44565b8c60800135898711611f835786611f8d565b611f8d8a88612c90565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b80158061208b57506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015612065573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120899190612eed565b155b612117576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610b8b565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610e799084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612316565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610e799084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401612169565b60405173ffffffffffffffffffffffffffffffffffffffff8085166024830152831660448201526064810182905261198b9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401612169565b60606044825110156122e457505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b600061230060048085516122f89190612c90565b859190612425565b9050808060200190518101906110e29190613111565b6000612378826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661253f9092919063ffffffff16565b9050805160001480612399575080806020019051810190612399919061317f565b610e79576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610b8b565b60608161243381601f61319c565b101561246b576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612475828461319c565b845110156124af576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060821580156124ce5760405191506000825260208201604052612536565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156125075780518352602092830192016124ef565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b606061254e8484600085612556565b949350505050565b6060824710156125e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610b8b565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161261191906131af565b60006040518083038185875af1925050503d806000811461264e576040519150601f19603f3d011682016040523d82523d6000602084013e612653565b606091505b50915091506126648783838761266f565b979650505050505050565b606083156127055782516000036126fe5773ffffffffffffffffffffffffffffffffffffffff85163b6126fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b8b565b508161254e565b61254e838381511561271a5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8b9190612b31565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156127a1576127a161274e565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156127ee576127ee61274e565b604052919050565b600067ffffffffffffffff8211156128105761281061274e565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261284d57600080fd5b813561286061285b826127f6565b6127a7565b81815284602083860101111561287557600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146128b657600080fd5b919050565b80151581146128c957600080fd5b50565b80356128b6816128bb565b600061014082840312156128ea57600080fd5b6128f261277d565b905081358152602082013567ffffffffffffffff8082111561291357600080fd5b61291f8583860161283c565b6020840152604084013591508082111561293857600080fd5b506129458482850161283c565b60408301525061295760608301612892565b606082015261296860808301612892565b608082015261297960a08301612892565b60a082015260c082013560c082015260e082013560e08201526101006129a08184016128cc565b908201526101206129b28382016128cc565b9082015292915050565b6000604082840312156129ce57600080fd5b50919050565b600080600080606085870312156129ea57600080fd5b843567ffffffffffffffff80821115612a0257600080fd5b612a0e888389016128d7565b95506020870135915080821115612a2457600080fd5b818701915087601f830112612a3857600080fd5b813581811115612a4757600080fd5b8860208260051b8501011115612a5c57600080fd5b602083019550809450506040870135915080821115612a7a57600080fd5b50612a87878288016129bc565b91505092959194509250565b60008060408385031215612aa657600080fd5b823591506020830135612ab8816128bb565b809150509250929050565b60005b83811015612ade578181015183820152602001612ac6565b50506000910152565b60008151808452612aff816020860160208601612ac3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006110e26020830184612ae7565b60008060208385031215612b5757600080fd5b823567ffffffffffffffff80821115612b6f57600080fd5b818501915085601f830112612b8357600080fd5b813581811115612b9257600080fd5b8660208260061b8501011115612ba757600080fd5b60209290920196919550909350505050565b803567ffffffffffffffff811681146128b657600080fd5b60008060408385031215612be457600080fd5b82359150612bf460208401612bb9565b90509250929050565b60008060408385031215612c1057600080fd5b823567ffffffffffffffff80821115612c2857600080fd5b612c34868387016128d7565b93506020850135915080821115612c4a57600080fd5b50612c57858286016129bc565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561041b5761041b612c61565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215612ce457600080fd5b6110e282612bb9565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d1e57612d1e612c61565b5060010190565b6020808252818101839052600090604080840186845b87811015612d70578135835267ffffffffffffffff612d5b868401612bb9565b16838601529183019190830190600101612d3b565b5090979650505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612db257600080fd5b83018035915067ffffffffffffffff821115612dcd57600080fd5b602001915036819003821315612de257600080fd5b9250929050565b6000604067ffffffffffffffff8516835260208181850152845160a083860152612e1660e0860182612ae7565b9050818601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc080878403016060880152612e518383612ae7565b88860151888203830160808a01528051808352908601945060009350908501905b80841015612eb1578451805173ffffffffffffffffffffffffffffffffffffffff16835286015186830152938501936001939093019290860190612e72565b50606089015173ffffffffffffffffffffffffffffffffffffffff1660a08901526080890151888203830160c08a01529550610b948187612ae7565b600060208284031215612eff57600080fd5b5051919050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612f3a57600080fd5b9190910192915050565b600060208284031215612f5657600080fd5b6110e282612892565b602081528151602082015260006020830151610140806040850152612f88610160850183612ae7565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152612fc38382612ae7565b9250506060850151612fed608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206130608187018315159052565b90950151151593019290925250919050565b60006020828403121561308457600080fd5b81356110e2816128bb565b6000808585111561309f57600080fd5b838611156130ac57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156130f95780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b60006020828403121561312357600080fd5b815167ffffffffffffffff81111561313a57600080fd5b8201601f8101841361314b57600080fd5b805161315961285b826127f6565b81815285602083850101111561316e57600080fd5b6109fd826020830160208601612ac3565b60006020828403121561319157600080fd5b81516110e2816128bb565b8082018082111561041b5761041b612c61565b60008251612f3a818460208701612ac356fea2646970667358221220a9297d788c2663fb973070948717ccafcb82096479c885a932c36675f10bc6fc64736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IRouterClient";
            readonly name: "_routerClient";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "CannotBridgeToSameNetwork";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ContractCallNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "minAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "receivedAmount";
            readonly type: "uint256";
        }];
        readonly name: "CumulativeSlippageTooHigh";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InformationMismatch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "required";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidContract";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidReceiver";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeAssetTransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapDataProvided";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapFromZeroBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoTransferToNullAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAValidSpender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OnlyContractOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ReentrancyError";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOutOfBounds";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOverflow";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnknownCCIPChainSelector";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint64";
            readonly name: "selector";
            readonly type: "uint64";
        }];
        readonly name: "CCIPChainSelectorUpdated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "chainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint64";
                readonly name: "selector";
                readonly type: "uint64";
            }];
            readonly indexed: false;
            readonly internalType: "struct CCIPFacet.ChainSelector[]";
            readonly name: "chainSelectors";
            readonly type: "tuple[]";
        }];
        readonly name: "CCIPInitialized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "integrator";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "referrer";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "fromAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "toAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "fromAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "toAmount";
            readonly type: "uint256";
        }];
        readonly name: "LiFiGenericSwapCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "integrator";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "referrer";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "fromAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "toAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "fromAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "toAmount";
            readonly type: "uint256";
        }];
        readonly name: "LiFiSwappedGeneric";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferRecovered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly indexed: false;
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "bridgeData";
            readonly type: "tuple";
        }];
        readonly name: "LiFiTransferStarted";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "gasLimit";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "strictSequencing";
            readonly type: "bool";
        }];
        readonly name: "encodeDestinationArgs";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "chainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint64";
                readonly name: "selector";
                readonly type: "uint64";
            }];
            readonly internalType: "struct CCIPFacet.ChainSelector[]";
            readonly name: "chainSelectors";
            readonly type: "tuple[]";
        }];
        readonly name: "initCCIP";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "extraArgs";
                readonly type: "bytes";
            }];
            readonly internalType: "struct CCIPFacet.CCIPData";
            readonly name: "_ccipData";
            readonly type: "tuple";
        }];
        readonly name: "quoteCCIPFee";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "routerClient";
        readonly outputs: readonly [{
            readonly internalType: "contract IRouterClient";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_chainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint64";
            readonly name: "_selector";
            readonly type: "uint64";
        }];
        readonly name: "setCCIPChainSelector";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "extraArgs";
                readonly type: "bytes";
            }];
            readonly internalType: "struct CCIPFacet.CCIPData";
            readonly name: "_ccipData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaCCIP";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "extraArgs";
                readonly type: "bytes";
            }];
            readonly internalType: "struct CCIPFacet.CCIPData";
            readonly name: "_ccipData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaCCIP";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): CCIPFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): CCIPFacet;
}
export {};
