import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ChainflipFacet, ChainflipFacetInterface } from "../ChainflipFacet";
declare type ChainflipFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ChainflipFacet__factory extends ContractFactory {
    constructor(...args: ChainflipFacetConstructorParams);
    deploy(_chainflipVault: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<ChainflipFacet>;
    getDeployTransaction(_chainflipVault: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): ChainflipFacet;
    connect(signer: Signer): ChainflipFacet__factory;
    static readonly bytecode = "0x60a06040523480156200001157600080fd5b5060405162002c5038038062002c50833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b608051612b9a620000b6600039600081816060015281816108db015281816109a301528181610a1001528181610a5b0152610b2a0152612b9a6000f3fe6080604052600436106100345760003560e01c8063467f144f146100395780637766d1ed1461004e578063e2886d99146100ab575b600080fd5b61004c61004736600461248b565b6100be565b005b34801561005a57600080fd5b506100827f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61004c6100b93660046124ef565b6102a8565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610139576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061014a34476125ae565b90508461016f8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101a6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101e4576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610221576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b858061010001511561025f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61027187608001518860c00151610496565b61027b8787610616565b504790508181111561029c5761029c60008461029785856125ae565b610c07565b50506000909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610323576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061033434476125ae565b905086806101000151610373576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876103968160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103cd576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361040b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610448576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61045d89600001518a60c001518a8a33610c38565b60c08a015261046c8987610616565b50479050818111156104885761048860008461029785856125ae565b505060009091555050505050565b806000036104d0576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166105295780341015610525576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ba91906125e8565b905081811015610605576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b61061183333085610d7b565b505050565b600060018360e001510361062c575060016106fc565b61a4b18360e0015103610641575060046106fc565b660416edef1601be8360e001510361065b575060056106fc565b6512309ce540018360e0015103610674575060036106fc565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f436861696e666c697046616365743a20556e737570706f72746564206465737460448201527f696e6174696f6e20636861696e0000000000000000000000000000000000000060648201526084016105fc565b60607311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168460a0015173ffffffffffffffffffffffffffffffffffffffff16036107f0576020830135610784576040517f6e70c56c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051602080860135908201520160405160208183030381529060405290508360e0015184600001517f7be3e48a8a8b4d32138937e1809ac83481fffe48e49bb60e43ed1d3d50349e4c85602001356040516107e391815260200190565b60405180910390a3610842565b8360a00151604051602001610830919060609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b60405160208183030381529060405290505b60006108516040850185612601565b9050111515846101200151151514610895576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608084015173ffffffffffffffffffffffffffffffffffffffff16610a0657836101200151156109875760c084015173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906307933dd2908484610911602089018961266d565b61091e60408a018a612601565b600061092d60408d018d612601565b6040518a63ffffffff1660e01b8152600401610950989796959493929190612751565b6000604051808303818588803b15801561096957600080fd5b505af115801561097d573d6000803e3d6000fd5b5050505050610bca565b60c084015173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063dd6873459084846109d9602089018961266d565b6109e660408a018a612601565b6040518763ffffffff1660e01b81526004016109509594939291906127b7565b610a3984608001517f00000000000000000000000000000000000000000000000000000000000000008660c00151610f95565b83610120015115610b135773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663bbddc2fb8383610a8f602088018861266d565b610a9c6040890189612601565b60808b015160c08c015160009190610ab760408e018e612601565b6040518b63ffffffff1660e01b8152600401610adc9a999897969594939291906127ff565b600060405180830381600087803b158015610af657600080fd5b505af1158015610b0a573d6000803e3d6000fd5b50505050610bca565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166304fc7da08383610b5e602088018861266d565b608089015160c08a0151610b7560408b018b612601565b6040518863ffffffff1660e01b8152600401610b97979695949392919061288b565b600060405180830381600087803b158015610bb157600080fd5b505af1158015610bc5573d6000803e3d6000fd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f184604051610bf991906128e8565b60405180910390a150505050565b73ffffffffffffffffffffffffffffffffffffffff831615610c2e576106118383836110cc565b610611828261124e565b600082808203610c74576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610c836001856125ae565b818110610c9257610c926129fb565b9050602002810190610ca49190612a2a565b610cb5906080810190606001612a68565b90506000610cc282611378565b905073ffffffffffffffffffffffffffffffffffffffff8216610cec57610ce934826125ae565b90505b6000610cf88888611431565b9050610d04888861153d565b610d118a898989856115aa565b600082610d1d85611378565b610d2791906125ae565b905089811015610d6d576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044016105fc565b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416610dc8576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610e15576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610e86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eaa91906125e8565b9050610eb88286868661195c565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610f28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4c91906125e8565b610f5691906125ae565b14610f8d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610fb557505050565b73ffffffffffffffffffffffffffffffffffffffff8216611002576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015611077573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109b91906125e8565b10156106115761061183837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611a38565b73ffffffffffffffffffffffffffffffffffffffff8316611119576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611166576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa1580156111d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f791906125e8565b90508082111561123d576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016105fc565b611248848484611b28565b50505050565b73ffffffffffffffffffffffffffffffffffffffff821661129b576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156112de576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016105fc565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611338576040519150601f19603f3d011682016040523d82523d6000602084013e61133d565b606091505b5050905080610611576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff821615611429576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611400573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142491906125e8565b61142b565b475b92915050565b60608160008167ffffffffffffffff81111561144f5761144f612245565b604051908082528060200260200182016040528015611478578160200160208202803683370190505b5090506000805b8381101561153257868682818110611499576114996129fb565b90506020028101906114ab9190612a2a565b6114bc906080810190606001612a68565b91506114c782611378565b8382815181106114d9576114d96129fb565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff821661152a5734838281518110611512576115126129fb565b6020026020010181815161152691906125ae565b9052505b60010161147f565b509095945050505050565b60005b81811015610611573683838381811061155b5761155b6129fb565b905060200281019061156d9190612a2a565b905061157f60e0820160c08301612a83565b156115a1576115a16115976060830160408401612a68565b8260800135610496565b50600101611540565b83838383826001811461187757600085856115c66001856125ae565b8181106115d5576115d56129fb565b90506020028101906115e79190612a2a565b6115f8906080810190606001612a68565b9050600089815b818110156117a357368d8d8381811061161a5761161a6129fb565b905060200281019061162c9190612a2a565b905061165b6116416060830160408401612a68565b73ffffffffffffffffffffffffffffffffffffffff161590565b806116be57506116be6116746040830160208401612a68565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156116d557506116d56116746020830183612a68565b801561175a575061175a6116ec60a0830183612601565b6116fb91600491600091612aa0565b61170491612aca565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611790576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61179a8f82611b7e565b506001016115ff565b505060005b6117b36001856125ae565b81101561186f5760008888838181106117ce576117ce6129fb565b90506020028101906117e09190612a2a565b6117f1906080810190606001612a68565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461186657858281518110611838576118386129fb565b602002602001015161184982611378565b61185391906125ae565b9250821561186657611866818885610c07565b506001016117a8565b505050611950565b8760005b8181101561194d57368b8b83818110611896576118966129fb565b90506020028101906118a89190612a2a565b90506118bd6116416060830160408401612a68565b806118d657506118d66116746040830160208401612a68565b80156118ed57506118ed6116746020830183612a68565b801561190457506119046116ec60a0830183612601565b61193a576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6119448d82611b7e565b5060010161187b565b50505b50505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526112489085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611e5c565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052611ac48482611f6b565b6112485760405173ffffffffffffffffffffffffffffffffffffffff8416602482015260006044820152611b1e9085907f095ea7b300000000000000000000000000000000000000000000000000000000906064016119b6565b6112488482611e5c565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526106119084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016119b6565b611b94611b8e6020830183612a68565b3b151590565b611bca576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611c0a576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611c1f6116416060850160408601612a68565b611c2a576000611c30565b82608001355b90506000611c4c611c476060860160408701612a68565b611378565b90506000611c63611c476080870160608801612a68565b905082600003611c9a57611c9a611c806060870160408801612a68565b611c906040880160208901612a68565b8760800135610f95565b8460800135821015611ce5576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016105fc565b600080611cf56020880188612a68565b73ffffffffffffffffffffffffffffffffffffffff1685611d1960a08a018a612601565b604051611d27929190612b12565b60006040518083038185875af1925050503d8060008114611d64576040519150601f19603f3d011682016040523d82523d6000602084013e611d69565b606091505b509150915081611d7c57611d7c8161202c565b6000611d91611c4760808a0160608b01612a68565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611dc260208b018b612a68565b611dd260608c0160408d01612a68565b611de260808d0160608e01612a68565b8c60800135898711611df45786611dfe565b611dfe8a886125ae565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6000611ebe826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166120369092919063ffffffff16565b9050805160001480611edf575080806020019051810190611edf9190612b22565b610611576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105fc565b60008060008473ffffffffffffffffffffffffffffffffffffffff1684604051611f959190612b3f565b6000604051808303816000865af19150503d8060008114611fd2576040519150601f19603f3d011682016040523d82523d6000602084013e611fd7565b606091505b50915091508180156120015750805115806120015750808060200190518101906120019190612b22565b8015612023575073ffffffffffffffffffffffffffffffffffffffff85163b15155b95945050505050565b8051602082018181fd5b6060612045848460008561204d565b949350505050565b6060824710156120df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105fc565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516121089190612b3f565b60006040518083038185875af1925050503d8060008114612145576040519150601f19603f3d011682016040523d82523d6000602084013e61214a565b606091505b509150915061215b87838387612166565b979650505050505050565b606083156121fc5782516000036121f55773ffffffffffffffffffffffffffffffffffffffff85163b6121f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105fc565b5081612045565b61204583838151156122115781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fc9190612b51565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561229857612298612245565b60405290565b600082601f8301126122af57600080fd5b813567ffffffffffffffff808211156122ca576122ca612245565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561231057612310612245565b8160405283815286602085880101111561232957600080fd5b836020870160208301376000602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461236d57600080fd5b919050565b801515811461238057600080fd5b50565b803561236d81612372565b600061014082840312156123a157600080fd5b6123a9612274565b905081358152602082013567ffffffffffffffff808211156123ca57600080fd5b6123d68583860161229e565b602084015260408401359150808211156123ef57600080fd5b506123fc8482850161229e565b60408301525061240e60608301612349565b606082015261241f60808301612349565b608082015261243060a08301612349565b60a082015260c082013560c082015260e082013560e0820152610100612457818401612383565b90820152610120612469838201612383565b9082015292915050565b60006060828403121561248557600080fd5b50919050565b6000806040838503121561249e57600080fd5b823567ffffffffffffffff808211156124b657600080fd5b6124c28683870161238e565b935060208501359150808211156124d857600080fd5b506124e585828601612473565b9150509250929050565b6000806000806060858703121561250557600080fd5b843567ffffffffffffffff8082111561251d57600080fd5b6125298883890161238e565b9550602087013591508082111561253f57600080fd5b818701915087601f83011261255357600080fd5b81358181111561256257600080fd5b8860208260051b850101111561257757600080fd5b60208301955080945050604087013591508082111561259557600080fd5b506125a287828801612473565b91505092959194509250565b8181038181111561142b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000602082840312156125fa57600080fd5b5051919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261263657600080fd5b83018035915067ffffffffffffffff82111561265157600080fd5b60200191503681900382131561266657600080fd5b9250929050565b60006020828403121561267f57600080fd5b813563ffffffff8116811461269357600080fd5b9392505050565b60005b838110156126b557818101518382015260200161269d565b50506000910152565b600081518084526126d681602086016020860161269a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600063ffffffff808b16835260c0602084015261277160c084018b6126be565b818a166040850152838103606085015261278c81898b612708565b91505085608084015282810360a08401526127a8818587612708565b9b9a5050505050505050505050565b600063ffffffff8088168352608060208401526127d760808401886126be565b818716604085015283810360608501526127f2818688612708565b9998505050505050505050565b600061010063ffffffff808e1684528160208501526128208285018e6126be565b908c1660408501528381036060850152905061283d818a8c612708565b905087608084015273ffffffffffffffffffffffffffffffffffffffff871660a08401528560c084015282810360e084015261287a818587612708565b9d9c50505050505050505050505050565b600063ffffffff808a16835260c060208401526128ab60c084018a6126be565b818916604085015273ffffffffffffffffffffffffffffffffffffffff8816606085015286608085015283810360a08501526127a8818688612708565b6020815281516020820152600060208301516101408060408501526129116101608501836126be565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe085840301606086015261294c83826126be565b9250506060850151612976608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206129e98187018315159052565b90950151151593019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612a5e57600080fd5b9190910192915050565b600060208284031215612a7a57600080fd5b61269382612349565b600060208284031215612a9557600080fd5b813561269381612372565b60008085851115612ab057600080fd5b83861115612abd57600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612b0a5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b600060208284031215612b3457600080fd5b815161269381612372565b60008251612a5e81846020870161269a565b60208152600061269360208301846126be56fea26469706673582212201ab36b9720f94046f4a72f0e83566549d496436b4ae9b1d15a55f2dc5697a33364736f6c63430008110033";
    static readonly abi: readonly [{
        readonly type: "constructor";
        readonly inputs: readonly [{
            readonly name: "_chainflipVault";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "chainflipVault";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "startBridgeTokensViaChainflip";
        readonly inputs: readonly [{
            readonly name: "_bridgeData";
            readonly type: "tuple";
            readonly internalType: "struct ILiFi.BridgeData";
            readonly components: readonly [{
                readonly name: "transactionId";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "bridge";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "integrator";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "referrer";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receiver";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "minAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "destinationChainId";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
                readonly internalType: "bool";
            }, {
                readonly name: "hasDestinationCall";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }, {
            readonly name: "_chainflipData";
            readonly type: "tuple";
            readonly internalType: "struct ChainflipFacet.ChainflipData";
            readonly components: readonly [{
                readonly name: "dstToken";
                readonly type: "uint32";
                readonly internalType: "uint32";
            }, {
                readonly name: "nonEvmAddress";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "cfParameters";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }];
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
    }, {
        readonly type: "function";
        readonly name: "swapAndStartBridgeTokensViaChainflip";
        readonly inputs: readonly [{
            readonly name: "_bridgeData";
            readonly type: "tuple";
            readonly internalType: "struct ILiFi.BridgeData";
            readonly components: readonly [{
                readonly name: "transactionId";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "bridge";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "integrator";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "referrer";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receiver";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "minAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "destinationChainId";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
                readonly internalType: "bool";
            }, {
                readonly name: "hasDestinationCall";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }, {
            readonly name: "_swapData";
            readonly type: "tuple[]";
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly components: readonly [{
                readonly name: "callTo";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "approveTo";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receivingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "fromAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "callData";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }, {
                readonly name: "requiresDeposit";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }, {
            readonly name: "_chainflipData";
            readonly type: "tuple";
            readonly internalType: "struct ChainflipFacet.ChainflipData";
            readonly components: readonly [{
                readonly name: "dstToken";
                readonly type: "uint32";
                readonly internalType: "uint32";
            }, {
                readonly name: "nonEvmAddress";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "cfParameters";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }];
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
    }, {
        readonly type: "event";
        readonly name: "BridgeToNonEVMChain";
        readonly inputs: readonly [{
            readonly name: "transactionId";
            readonly type: "bytes32";
            readonly indexed: true;
            readonly internalType: "bytes32";
        }, {
            readonly name: "destinationChainId";
            readonly type: "uint256";
            readonly indexed: true;
            readonly internalType: "uint256";
        }, {
            readonly name: "receiver";
            readonly type: "bytes32";
            readonly indexed: false;
            readonly internalType: "bytes32";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "LiFiGenericSwapCompleted";
        readonly inputs: readonly [{
            readonly name: "transactionId";
            readonly type: "bytes32";
            readonly indexed: true;
            readonly internalType: "bytes32";
        }, {
            readonly name: "integrator";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "referrer";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "receiver";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "fromAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "toAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "fromAmount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }, {
            readonly name: "toAmount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "LiFiSwappedGeneric";
        readonly inputs: readonly [{
            readonly name: "transactionId";
            readonly type: "bytes32";
            readonly indexed: true;
            readonly internalType: "bytes32";
        }, {
            readonly name: "integrator";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "referrer";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "fromAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "toAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "fromAmount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }, {
            readonly name: "toAmount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "LiFiTransferCompleted";
        readonly inputs: readonly [{
            readonly name: "transactionId";
            readonly type: "bytes32";
            readonly indexed: true;
            readonly internalType: "bytes32";
        }, {
            readonly name: "receivingAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "receiver";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "amount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }, {
            readonly name: "timestamp";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "LiFiTransferRecovered";
        readonly inputs: readonly [{
            readonly name: "transactionId";
            readonly type: "bytes32";
            readonly indexed: true;
            readonly internalType: "bytes32";
        }, {
            readonly name: "receivingAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "receiver";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "amount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }, {
            readonly name: "timestamp";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "LiFiTransferStarted";
        readonly inputs: readonly [{
            readonly name: "bridgeData";
            readonly type: "tuple";
            readonly indexed: false;
            readonly internalType: "struct ILiFi.BridgeData";
            readonly components: readonly [{
                readonly name: "transactionId";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "bridge";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "integrator";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "referrer";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receiver";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "minAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "destinationChainId";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
                readonly internalType: "bool";
            }, {
                readonly name: "hasDestinationCall";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }];
        readonly anonymous: false;
    }, {
        readonly type: "error";
        readonly name: "CannotBridgeToSameNetwork";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "ContractCallNotAllowed";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "CumulativeSlippageTooHigh";
        readonly inputs: readonly [{
            readonly name: "minAmount";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "receivedAmount";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }, {
        readonly type: "error";
        readonly name: "EmptyNonEvmAddress";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InformationMismatch";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InsufficientBalance";
        readonly inputs: readonly [{
            readonly name: "required";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "balance";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }, {
        readonly type: "error";
        readonly name: "InvalidAmount";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidContract";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidReceiver";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NativeAssetTransferFailed";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NoSwapDataProvided";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NoSwapFromZeroBalance";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NoTransferToNullAddress";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NullAddrIsNotAValidSpender";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "ReentrancyError";
        readonly inputs: readonly [];
    }];
    static createInterface(): ChainflipFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ChainflipFacet;
}
export {};
