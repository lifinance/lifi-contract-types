import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ChainflipFacet, ChainflipFacetInterface } from "../ChainflipFacet";
declare type ChainflipFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ChainflipFacet__factory extends ContractFactory {
    constructor(...args: ChainflipFacetConstructorParams);
    deploy(_chainflipVault: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<ChainflipFacet>;
    getDeployTransaction(_chainflipVault: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): ChainflipFacet;
    connect(signer: Signer): ChainflipFacet__factory;
    static readonly bytecode = "0x60a06040523480156200001157600080fd5b5060405162002f9c38038062002f9c83398101604081905262000034916200006e565b6001600160a01b0381166200005c576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b0316608052620000a0565b6000602082840312156200008157600080fd5b81516001600160a01b03811681146200009957600080fd5b9392505050565b608051612ebe620000de600039600081816060015281816108e70152818161095601528181610a1201528181610aff0152610b7c0152612ebe6000f3fe6080604052600436106100345760003560e01c806317e6431e146100395780637766d1ed1461004e57806382232395146100ab575b600080fd5b61004c61004736600461255f565b6100be565b005b34801561005a57600080fd5b506100827f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61004c6100b93660046125c3565b6102a8565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610139576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061014a3447612682565b90508461016f8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101a6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101e4576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610221576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b858061010001511561025f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61027187608001518860c00151610496565b61027b8787610616565b504790508181111561029c5761029c6000846102978585612682565b610c5d565b50506000909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610323576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006103343447612682565b905086806101000151610373576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876103968160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103cd576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361040b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610448576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61045d89600001518a60c001518a8a33610c8e565b60c08a015261046c8987610616565b5047905081811115610488576104886000846102978585612682565b505060009091555050505050565b806000036104d0576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166105295780341015610525576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ba91906126bc565b905081811015610605576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b61061183333085610dd3565b505050565b60006106258360e00151610fed565b90506060836101200151156106b95761064160608401846126d5565b905060000361067c576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b835161068b60608501856126d5565b8660a001516040516020016106a394939291906127f1565b6040516020818303038152906040529050610702565b60006106c860608501856126d5565b90501115610702576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60607311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168560a0015173ffffffffffffffffffffffffffffffffffffffff1603610803578335610787576040517f6e70c56c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080518535602082015201604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181529082905260e0870151875187358452919350917f7be3e48a8a8b4d32138937e1809ac83481fffe48e49bb60e43ed1d3d50349e4c9060200160405180910390a36108bd565b6000856101200151610819578560a00151610829565b610829606086016040870161296a565b905073ffffffffffffffffffffffffffffffffffffffff8116610878576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606083901b1660208201526034016040516020818303038152906040529150505b608085015173ffffffffffffffffffffffffffffffffffffffff16156109105761091085608001517f00000000000000000000000000000000000000000000000000000000000000008760c00151611072565b84610120015115610ac457608085015173ffffffffffffffffffffffffffffffffffffffff166109fb5760c085015173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906307933dd290858461098f60408a0160208b0161298c565b8760808b01356109a260a08d018d6129b2565b6040518963ffffffff1660e01b81526004016109c49796959493929190612a85565b6000604051808303818588803b1580156109dd57600080fd5b505af11580156109f1573d6000803e3d6000fd5b5050505050610c1f565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663bbddc2fb8483610a496040890160208a0161298c565b8689608001358b608001518c60c001518c8060a00190610a6991906129b2565b6040518a63ffffffff1660e01b8152600401610a8d99989796959493929190612ae9565b600060405180830381600087803b158015610aa757600080fd5b505af1158015610abb573d6000803e3d6000fd5b50505050610c1f565b608085015173ffffffffffffffffffffffffffffffffffffffff16610b655760c085015173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063dd687345908584610b3860408a0160208b0161298c565b610b4560a08b018b6129b2565b6040518763ffffffff1660e01b81526004016109c4959493929190612b73565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166304fc7da08483610bb36040890160208a0161298c565b60808a015160c08b0151610bca60a08c018c6129b2565b6040518863ffffffff1660e01b8152600401610bec9796959493929190612bbb565b600060405180830381600087803b158015610c0657600080fd5b505af1158015610c1a573d6000803e3d6000fd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f185604051610c4e9190612c27565b60405180910390a15050505050565b73ffffffffffffffffffffffffffffffffffffffff831615610c84576106118383836111a9565b610611828261132b565b600082808203610cca576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610cd9600185612682565b818110610ce857610ce8612d3a565b9050602002810190610cfa9190612d69565b610d0b90608081019060600161296a565b90506000610d1882611455565b905073ffffffffffffffffffffffffffffffffffffffff8216610d4257610d3f3482612682565b90505b6000610d4e888861150e565b9050610d5a888861161a565b610d678a89898985611687565b600082610d7385611455565b610d7d9190612682565b905089811015610dc3576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044016105fc565b9450505050505b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff8416610e20576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610e6d576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610ede573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0291906126bc565b9050610f1082868686611a39565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610f80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa491906126bc565b610fae9190612682565b14610fe5576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b600060018203610fff57506001919050565b61a4b1820361101057506004919050565b660416edef1601be820361102657506005919050565b6512309ce54001820361103b57506003919050565b6040517f63b7b64100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b73ffffffffffffffffffffffffffffffffffffffff831661109257505050565b73ffffffffffffffffffffffffffffffffffffffff82166110df576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015611154573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117891906126bc565b10156106115761061183837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611b15565b73ffffffffffffffffffffffffffffffffffffffff83166111f6576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611243576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa1580156112b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d491906126bc565b90508082111561131a576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016105fc565b611325848484611c05565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216611378576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156113bb576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016105fc565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611415576040519150601f19603f3d011682016040523d82523d6000602084013e61141a565b606091505b5050905080610611576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff821615611506576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156114dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150191906126bc565b611508565b475b92915050565b60608160008167ffffffffffffffff81111561152c5761152c61231e565b604051908082528060200260200182016040528015611555578160200160208202803683370190505b5090506000805b8381101561160f5786868281811061157657611576612d3a565b90506020028101906115889190612d69565b61159990608081019060600161296a565b91506115a482611455565b8382815181106115b6576115b6612d3a565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff821661160757348382815181106115ef576115ef612d3a565b602002602001018181516116039190612682565b9052505b60010161155c565b509095945050505050565b60005b81811015610611573683838381811061163857611638612d3a565b905060200281019061164a9190612d69565b905061165c60e0820160c08301612da7565b1561167e5761167e611674606083016040840161296a565b8260800135610496565b5060010161161d565b83838383826001811461195457600085856116a3600185612682565b8181106116b2576116b2612d3a565b90506020028101906116c49190612d69565b6116d590608081019060600161296a565b9050600089815b8181101561188057368d8d838181106116f7576116f7612d3a565b90506020028101906117099190612d69565b905061173861171e606083016040840161296a565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061179b575061179b611751604083016020840161296a565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156117b257506117b2611751602083018361296a565b801561183757506118376117c960a08301836129b2565b6117d891600491600091612dc4565b6117e191612dee565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61186d576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6118778f82611c5b565b506001016116dc565b505060005b611890600185612682565b81101561194c5760008888838181106118ab576118ab612d3a565b90506020028101906118bd9190612d69565b6118ce90608081019060600161296a565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146119435785828151811061191557611915612d3a565b602002602001015161192682611455565b6119309190612682565b9250821561194357611943818885610c5d565b50600101611885565b505050611a2d565b8760005b81811015611a2a57368b8b8381811061197357611973612d3a565b90506020028101906119859190612d69565b905061199a61171e606083016040840161296a565b806119b357506119b3611751604083016020840161296a565b80156119ca57506119ca611751602083018361296a565b80156119e157506119e16117c960a08301836129b2565b611a17576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611a218d82611c5b565b50600101611958565b50505b50505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526113259085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611f39565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052611ba18482612048565b6113255760405173ffffffffffffffffffffffffffffffffffffffff8416602482015260006044820152611bfb9085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611a93565b6113258482611f39565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526106119084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611a93565b611c71611c6b602083018361296a565b3b151590565b611ca7576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611ce7576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611cfc61171e606085016040860161296a565b611d07576000611d0d565b82608001355b90506000611d29611d24606086016040870161296a565b611455565b90506000611d40611d24608087016060880161296a565b905082600003611d7757611d77611d5d606087016040880161296a565b611d6d604088016020890161296a565b8760800135611072565b8460800135821015611dc2576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016105fc565b600080611dd2602088018861296a565b73ffffffffffffffffffffffffffffffffffffffff1685611df660a08a018a6129b2565b604051611e04929190612e36565b60006040518083038185875af1925050503d8060008114611e41576040519150601f19603f3d011682016040523d82523d6000602084013e611e46565b606091505b509150915081611e5957611e5981612105565b6000611e6e611d2460808a0160608b0161296a565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611e9f60208b018b61296a565b611eaf60608c0160408d0161296a565b611ebf60808d0160608e0161296a565b8c60800135898711611ed15786611edb565b611edb8a88612682565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6000611f9b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661210f9092919063ffffffff16565b9050805160001480611fbc575080806020019051810190611fbc9190612e46565b610611576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105fc565b60008060008473ffffffffffffffffffffffffffffffffffffffff16846040516120729190612e63565b6000604051808303816000865af19150503d80600081146120af576040519150601f19603f3d011682016040523d82523d6000602084013e6120b4565b606091505b50915091508180156120de5750805115806120de5750808060200190518101906120de9190612e46565b8015610dca57505050505073ffffffffffffffffffffffffffffffffffffffff163b151590565b8051602082018181fd5b606061211e8484600085612126565b949350505050565b6060824710156121b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105fc565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516121e19190612e63565b60006040518083038185875af1925050503d806000811461221e576040519150601f19603f3d011682016040523d82523d6000602084013e612223565b606091505b50915091506122348783838761223f565b979650505050505050565b606083156122d55782516000036122ce5773ffffffffffffffffffffffffffffffffffffffff85163b6122ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105fc565b508161211e565b61211e83838151156122ea5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fc9190612e75565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156123715761237161231e565b60405290565b600082601f83011261238857600080fd5b813567ffffffffffffffff808211156123a3576123a361231e565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156123e9576123e961231e565b8160405283815286602085880101111561240257600080fd5b836020870160208301376000602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461106d57600080fd5b801515811461245457600080fd5b50565b803561106d81612446565b6000610140828403121561247557600080fd5b61247d61234d565b905081358152602082013567ffffffffffffffff8082111561249e57600080fd5b6124aa85838601612377565b602084015260408401359150808211156124c357600080fd5b506124d084828501612377565b6040830152506124e260608301612422565b60608201526124f360808301612422565b608082015261250460a08301612422565b60a082015260c082013560c082015260e082013560e082015261010061252b818401612457565b9082015261012061253d838201612457565b9082015292915050565b600060c0828403121561255957600080fd5b50919050565b6000806040838503121561257257600080fd5b823567ffffffffffffffff8082111561258a57600080fd5b61259686838701612462565b935060208501359150808211156125ac57600080fd5b506125b985828601612547565b9150509250929050565b600080600080606085870312156125d957600080fd5b843567ffffffffffffffff808211156125f157600080fd5b6125fd88838901612462565b9550602087013591508082111561261357600080fd5b818701915087601f83011261262757600080fd5b81358181111561263657600080fd5b8860208260051b850101111561264b57600080fd5b60208301955080945050604087013591508082111561266957600080fd5b5061267687828801612547565b91505092959194509250565b81810381811115611508577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000602082840312156126ce57600080fd5b5051919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261270a57600080fd5b83018035915067ffffffffffffffff82111561272557600080fd5b6020019150600581901b360382131561273d57600080fd5b9250929050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261277957600080fd5b830160208101925035905067ffffffffffffffff81111561279957600080fd5b80360382131561273d57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600060608083018784526020828186015281878352608092508286019050828860051b870101896000805b8b81101561293f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a850301855282357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218e360301811261287c578283fd5b8d0160e073ffffffffffffffffffffffffffffffffffffffff8061289f84612422565b168752806128ae8a8501612422565b16898801526040816128c1828601612422565b1690880152506128d2828b01612422565b73ffffffffffffffffffffffffffffffffffffffff168a870152818901358987015260a061290281840184612744565b83838a0152612914848a0182846127a8565b935050505060c0612926818401612457565b151596019590955250938501939185019160010161281c565b50505073ffffffffffffffffffffffffffffffffffffffff881660408801529450610dca9350505050565b60006020828403121561297c57600080fd5b61298582612422565b9392505050565b60006020828403121561299e57600080fd5b813563ffffffff8116811461298557600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126129e757600080fd5b83018035915067ffffffffffffffff821115612a0257600080fd5b60200191503681900382131561273d57600080fd5b60005b83811015612a32578181015183820152602001612a1a565b50506000910152565b60008151808452612a53816020860160208601612a17565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600063ffffffff808a16835260c06020840152612aa560c084018a612a3b565b81891660408501528381036060850152612abf8189612a3b565b91505085608084015282810360a0840152612adb8185876127a8565b9a9950505050505050505050565b600061010063ffffffff808d168452816020850152612b0a8285018d612a3b565b908b16604085015283810360608501529050612b26818a612a3b565b905087608084015273ffffffffffffffffffffffffffffffffffffffff871660a08401528560c084015282810360e0840152612b638185876127a8565b9c9b505050505050505050505050565b600063ffffffff808816835260806020840152612b936080840188612a3b565b81871660408501528381036060850152612bae8186886127a8565b9998505050505050505050565b600063ffffffff808a16835260c06020840152612bdb60c084018a612a3b565b818916604085015273ffffffffffffffffffffffffffffffffffffffff8816606085015286608085015283810360a0850152612c188186886127a8565b9b9a5050505050505050505050565b602081528151602082015260006020830151610140806040850152612c50610160850183612a3b565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152612c8b8382612a3b565b9250506060850151612cb5608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120612d288187018315159052565b90950151151593019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612d9d57600080fd5b9190910192915050565b600060208284031215612db957600080fd5b813561298581612446565b60008085851115612dd457600080fd5b83861115612de157600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612e2e5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b600060208284031215612e5857600080fd5b815161298581612446565b60008251612d9d818460208701612a17565b6020815260006129856020830184612a3b56fea2646970667358221220d164fc55da6142d147424c338a7f40ae574c06620942ac1667da7505412958bb64736f6c63430008110033";
    static readonly abi: readonly [{
        readonly type: "constructor";
        readonly inputs: readonly [{
            readonly name: "_chainflipVault";
            readonly type: "address";
            readonly internalType: "contract IChainflipVault";
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "chainflipVault";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "contract IChainflipVault";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "startBridgeTokensViaChainflip";
        readonly inputs: readonly [{
            readonly name: "_bridgeData";
            readonly type: "tuple";
            readonly internalType: "struct ILiFi.BridgeData";
            readonly components: readonly [{
                readonly name: "transactionId";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "bridge";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "integrator";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "referrer";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receiver";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "minAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "destinationChainId";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
                readonly internalType: "bool";
            }, {
                readonly name: "hasDestinationCall";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }, {
            readonly name: "_chainflipData";
            readonly type: "tuple";
            readonly internalType: "struct ChainflipFacet.ChainflipData";
            readonly components: readonly [{
                readonly name: "nonEVMReceiver";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "dstToken";
                readonly type: "uint32";
                readonly internalType: "uint32";
            }, {
                readonly name: "dstCallReceiver";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "dstCallSwapData";
                readonly type: "tuple[]";
                readonly internalType: "struct LibSwap.SwapData[]";
                readonly components: readonly [{
                    readonly name: "callTo";
                    readonly type: "address";
                    readonly internalType: "address";
                }, {
                    readonly name: "approveTo";
                    readonly type: "address";
                    readonly internalType: "address";
                }, {
                    readonly name: "sendingAssetId";
                    readonly type: "address";
                    readonly internalType: "address";
                }, {
                    readonly name: "receivingAssetId";
                    readonly type: "address";
                    readonly internalType: "address";
                }, {
                    readonly name: "fromAmount";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "callData";
                    readonly type: "bytes";
                    readonly internalType: "bytes";
                }, {
                    readonly name: "requiresDeposit";
                    readonly type: "bool";
                    readonly internalType: "bool";
                }];
            }, {
                readonly name: "gasAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "cfParameters";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }];
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
    }, {
        readonly type: "function";
        readonly name: "swapAndStartBridgeTokensViaChainflip";
        readonly inputs: readonly [{
            readonly name: "_bridgeData";
            readonly type: "tuple";
            readonly internalType: "struct ILiFi.BridgeData";
            readonly components: readonly [{
                readonly name: "transactionId";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "bridge";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "integrator";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "referrer";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receiver";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "minAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "destinationChainId";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
                readonly internalType: "bool";
            }, {
                readonly name: "hasDestinationCall";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }, {
            readonly name: "_swapData";
            readonly type: "tuple[]";
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly components: readonly [{
                readonly name: "callTo";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "approveTo";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receivingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "fromAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "callData";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }, {
                readonly name: "requiresDeposit";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }, {
            readonly name: "_chainflipData";
            readonly type: "tuple";
            readonly internalType: "struct ChainflipFacet.ChainflipData";
            readonly components: readonly [{
                readonly name: "nonEVMReceiver";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "dstToken";
                readonly type: "uint32";
                readonly internalType: "uint32";
            }, {
                readonly name: "dstCallReceiver";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "dstCallSwapData";
                readonly type: "tuple[]";
                readonly internalType: "struct LibSwap.SwapData[]";
                readonly components: readonly [{
                    readonly name: "callTo";
                    readonly type: "address";
                    readonly internalType: "address";
                }, {
                    readonly name: "approveTo";
                    readonly type: "address";
                    readonly internalType: "address";
                }, {
                    readonly name: "sendingAssetId";
                    readonly type: "address";
                    readonly internalType: "address";
                }, {
                    readonly name: "receivingAssetId";
                    readonly type: "address";
                    readonly internalType: "address";
                }, {
                    readonly name: "fromAmount";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "callData";
                    readonly type: "bytes";
                    readonly internalType: "bytes";
                }, {
                    readonly name: "requiresDeposit";
                    readonly type: "bool";
                    readonly internalType: "bool";
                }];
            }, {
                readonly name: "gasAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "cfParameters";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }];
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
    }, {
        readonly type: "event";
        readonly name: "BridgeToNonEVMChain";
        readonly inputs: readonly [{
            readonly name: "transactionId";
            readonly type: "bytes32";
            readonly indexed: true;
            readonly internalType: "bytes32";
        }, {
            readonly name: "destinationChainId";
            readonly type: "uint256";
            readonly indexed: true;
            readonly internalType: "uint256";
        }, {
            readonly name: "receiver";
            readonly type: "bytes32";
            readonly indexed: false;
            readonly internalType: "bytes32";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "LiFiGenericSwapCompleted";
        readonly inputs: readonly [{
            readonly name: "transactionId";
            readonly type: "bytes32";
            readonly indexed: true;
            readonly internalType: "bytes32";
        }, {
            readonly name: "integrator";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "referrer";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "receiver";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "fromAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "toAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "fromAmount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }, {
            readonly name: "toAmount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "LiFiSwappedGeneric";
        readonly inputs: readonly [{
            readonly name: "transactionId";
            readonly type: "bytes32";
            readonly indexed: true;
            readonly internalType: "bytes32";
        }, {
            readonly name: "integrator";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "referrer";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "fromAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "toAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "fromAmount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }, {
            readonly name: "toAmount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "LiFiTransferCompleted";
        readonly inputs: readonly [{
            readonly name: "transactionId";
            readonly type: "bytes32";
            readonly indexed: true;
            readonly internalType: "bytes32";
        }, {
            readonly name: "receivingAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "receiver";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "amount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }, {
            readonly name: "timestamp";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "LiFiTransferRecovered";
        readonly inputs: readonly [{
            readonly name: "transactionId";
            readonly type: "bytes32";
            readonly indexed: true;
            readonly internalType: "bytes32";
        }, {
            readonly name: "receivingAssetId";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "receiver";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "amount";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }, {
            readonly name: "timestamp";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "LiFiTransferStarted";
        readonly inputs: readonly [{
            readonly name: "bridgeData";
            readonly type: "tuple";
            readonly indexed: false;
            readonly internalType: "struct ILiFi.BridgeData";
            readonly components: readonly [{
                readonly name: "transactionId";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "bridge";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "integrator";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "referrer";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receiver";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "minAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "destinationChainId";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
                readonly internalType: "bool";
            }, {
                readonly name: "hasDestinationCall";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }];
        readonly anonymous: false;
    }, {
        readonly type: "error";
        readonly name: "CannotBridgeToSameNetwork";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "ContractCallNotAllowed";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "CumulativeSlippageTooHigh";
        readonly inputs: readonly [{
            readonly name: "minAmount";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "receivedAmount";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }, {
        readonly type: "error";
        readonly name: "EmptyNonEvmAddress";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InformationMismatch";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InsufficientBalance";
        readonly inputs: readonly [{
            readonly name: "required";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "balance";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }, {
        readonly type: "error";
        readonly name: "InvalidAmount";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidConfig";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidContract";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidReceiver";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NativeAssetTransferFailed";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NoSwapDataProvided";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NoSwapFromZeroBalance";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NoTransferToNullAddress";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NullAddrIsNotAValidSpender";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "ReentrancyError";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "UnsupportedChainflipChainId";
        readonly inputs: readonly [];
    }];
    static createInterface(): ChainflipFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ChainflipFacet;
}
export {};
