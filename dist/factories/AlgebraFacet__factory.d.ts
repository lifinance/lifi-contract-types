import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { AlgebraFacet, AlgebraFacetInterface } from "../AlgebraFacet";
type AlgebraFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class AlgebraFacet__factory extends ContractFactory {
    constructor(...args: AlgebraFacetConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<AlgebraFacet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): AlgebraFacet;
    connect(signer: Signer): AlgebraFacet__factory;
    static readonly bytecode = "0x6080604052348015600e575f5ffd5b50610dbf8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c80632c8958f614610038578063ff5943bf1461004d575b5f5ffd5b61004b61004636600461094a565b610072565b005b61006061005b366004610a24565b6100d8565b60405190815260200160405180910390f35b61007a6104ad565b61008684848484610544565b6100d27f12d110a66e0c5763793e5d1e64ab8a58a55eab5b86fb83d032af88fce80e258480547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b50505050565b60408051808201909152602085810180835286518701820191830191909152602486018083525160388701808452516039880180855251604d890180865251604e8a0186525f9593606090811c93871a151592901c90861a1515831580610153575073ffffffffffffffffffffffffffffffffffffffff8216155b1561018a576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff8b16036101c9576101c973ffffffffffffffffffffffffffffffffffffffff8a1633308b61059b565b7f12d110a66e0c5763793e5d1e64ab8a58a55eab5b86fb83d032af88fce80e258480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8616179055801561032a578373ffffffffffffffffffffffffffffffffffffffff1663713346943084868c8861027757610272600173fffd8963efd1fc6a506488495d951d5263988d26610b69565b610287565b6102876401000276a36001610b9b565b8f6040516020016102b4919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b6040516020818303038152906040526040518763ffffffff1660e01b81526004016102e496959493929190610c13565b60408051808303815f875af11580156102ff573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103239190610c93565b5050610420565b8373ffffffffffffffffffffffffffffffffffffffff1663128acb0883858b876103725761036d600173fffd8963efd1fc6a506488495d951d5263988d26610b69565b610382565b6103826401000276a36001610b9b565b8e6040516020016103af919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016103de959493929190610cb5565b60408051808303815f875af11580156103f9573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061041d9190610c93565b50505b7f12d110a66e0c5763793e5d1e64ab8a58a55eab5b86fb83d032af88fce80e25845473ffffffffffffffffffffffffffffffffffffffff161561048f576040517fef7e539800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b845161049b8782610d0d565b9750505050505050505b949350505050565b7f12d110a66e0c5763793e5d1e64ab8a58a55eab5b86fb83d032af88fce80e25845473ffffffffffffffffffffffffffffffffffffffff16338114610541576040517f48f89ac500000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff821660248201526044015b60405180910390fd5b50565b5f5f85136105525783610554565b845b90505f811361056357506100d2565b5f61057083850185610d20565b905061059373ffffffffffffffffffffffffffffffffffffffff82163384610677565b505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526100d29085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526106d2565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526106cd9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016105f5565b505050565b5f610733826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166107df9092919063ffffffff16565b905080515f14806107535750808060200190518101906107539190610d42565b6106cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610538565b60606104a584845f85855f5f8673ffffffffffffffffffffffffffffffffffffffff1685876040516108119190610d61565b5f6040518083038185875af1925050503d805f811461084b576040519150601f19603f3d011682016040523d82523d5f602084013e610850565b606091505b50915091506108618783838761086c565b979650505050505050565b606083156109015782515f036108fa5773ffffffffffffffffffffffffffffffffffffffff85163b6108fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610538565b50816104a5565b6104a583838151156109165781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105389190610d77565b5f5f5f5f6060858703121561095d575f5ffd5b8435935060208501359250604085013567ffffffffffffffff811115610981575f5ffd5b8501601f81018713610991575f5ffd5b803567ffffffffffffffff8111156109a7575f5ffd5b8760208284010111156109b8575f5ffd5b949793965060200194505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b73ffffffffffffffffffffffffffffffffffffffff81168114610541575f5ffd5b8035610a1f816109f3565b919050565b5f5f5f5f60808587031215610a37575f5ffd5b843567ffffffffffffffff811115610a4d575f5ffd5b8501601f81018713610a5d575f5ffd5b803567ffffffffffffffff811115610a7757610a776109c6565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160116810181811067ffffffffffffffff82111715610ae357610ae36109c6565b604052818152828201602001891015610afa575f5ffd5b816020840160208301375f60208383010152809650505050610b1e60208601610a14565b9250610b2c60408601610a14565b9396929550929360600135925050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b73ffffffffffffffffffffffffffffffffffffffff8281168282160390811115610b9557610b95610b3c565b92915050565b73ffffffffffffffffffffffffffffffffffffffff8181168382160190811115610b9557610b95610b3c565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b73ffffffffffffffffffffffffffffffffffffffff8716815273ffffffffffffffffffffffffffffffffffffffff86166020820152841515604082015283606082015273ffffffffffffffffffffffffffffffffffffffff8316608082015260c060a08201525f610c8760c0830184610bc7565b98975050505050505050565b5f5f60408385031215610ca4575f5ffd5b505080516020909101519092909150565b73ffffffffffffffffffffffffffffffffffffffff86168152841515602082015283604082015273ffffffffffffffffffffffffffffffffffffffff8316606082015260a060808201525f61086160a0830184610bc7565b81810381811115610b9557610b95610b3c565b5f60208284031215610d30575f5ffd5b8135610d3b816109f3565b9392505050565b5f60208284031215610d52575f5ffd5b81518015158114610d3b575f5ffd5b5f82518060208501845e5f920191825250919050565b602081525f610d3b6020830184610bc756fea2646970667358221220e0ec959b729dac57891f25f7086d4519c94b6e91713c34a01edf00d770e22b0964736f6c634300081d0033";
    static readonly abi: readonly [{
        readonly type: "function";
        readonly name: "algebraSwapCallback";
        readonly inputs: readonly [{
            readonly name: "amount0Delta";
            readonly type: "int256";
            readonly internalType: "int256";
        }, {
            readonly name: "amount1Delta";
            readonly type: "int256";
            readonly internalType: "int256";
        }, {
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "swapAlgebra";
        readonly inputs: readonly [{
            readonly name: "swapData";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "from";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "tokenIn";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "amountIn";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "error";
        readonly name: "AlgebraSwapUnexpected";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidCallData";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "UnexpectedCallbackSender";
        readonly inputs: readonly [{
            readonly name: "actual";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "expected";
            readonly type: "address";
            readonly internalType: "address";
        }];
    }];
    static createInterface(): AlgebraFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): AlgebraFacet;
}
export {};
