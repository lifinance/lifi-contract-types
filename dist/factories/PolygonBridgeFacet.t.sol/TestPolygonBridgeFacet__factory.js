"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestPolygonBridgeFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "contract IRootChainManager",
                name: "_rootChainManager",
                type: "address",
            },
            {
                internalType: "address",
                name: "_erc20Predicate",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "CannotBridgeToSameNetwork",
        type: "error",
    },
    {
        inputs: [],
        name: "ContractCallNotAllowed",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "receivedAmount",
                type: "uint256",
            },
        ],
        name: "CumulativeSlippageTooHigh",
        type: "error",
    },
    {
        inputs: [],
        name: "InformationMismatch",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "required",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
        ],
        name: "InsufficientBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidAmount",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidContract",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidReceiver",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeAssetTransferFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapDataProvided",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapFromZeroBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "NoTransferToNullAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAValidSpender",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAnERC20Token",
        type: "error",
    },
    {
        inputs: [],
        name: "ReentrancyError",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOverflow",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferCompleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferRecovered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                name: "bridgeData",
                type: "tuple",
            },
        ],
        name: "LiFiTransferStarted",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_dex",
                type: "address",
            },
        ],
        name: "addDex",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "_signature",
                type: "bytes4",
            },
        ],
        name: "setFunctionApprovalBySignature",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
        ],
        name: "startBridgeTokensViaPolygonBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "_swapData",
                type: "tuple[]",
            },
        ],
        name: "swapAndStartBridgeTokensViaPolygonBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
var _bytecode = "0x60c06040523480156200001157600080fd5b5060405162002c7e38038062002c7e833981016040819052620000349162000065565b6001600160a01b039182166080521660a052620000a4565b6001600160a01b03811681146200006257600080fd5b50565b600080604083850312156200007957600080fd5b825162000086816200004c565b602084015190925062000099816200004c565b809150509250929050565b60805160a051612ba6620000d860003960006109be015260008181610898015281816109450152610a760152612ba66000f3fe60806040526004361061003f5760003560e01c8063536db26614610044578063af62c7d614610066578063b4f3758114610079578063c561c1481461008c575b600080fd5b34801561005057600080fd5b5061006461005f3660046122df565b6100ac565b005b610064610074366004612561565b6100b8565b610064610087366004612596565b6102f2565b34801561009857600080fd5b506100646100a7366004612630565b610535565b6100b5816105b3565b50565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610133576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061014434476126a1565b90508380610100015115610184576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84806101200151156101c2576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856101e58160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561021c576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361025a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610297576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102a987608001518860c001516106a0565b6102b287610820565b50479150600090508282116102c85760006102d2565b6102d283836126a1565b905080156102e6576102e660008583610b1b565b50506000909255505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161036d576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061037e34476126a1565b9050858061010001516103bd576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86806101200151156103fb576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8761041e8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610455576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610493576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104d0576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e589600001518a60c001518a8a33610b4c565b60c08a01526104f389610820565b5047915060009050828211610509576000610513565b61051383836126a1565b905080156105275761052760008583610b1b565b505060009092555050505050565b6100b5817fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f6020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6105bc81610c8f565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602081905260409091205460ff1615610610575050565b73ffffffffffffffffffffffffffffffffffffffff909116600081815260208381526040822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091556002909401805494850181558252902090910180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b73ffffffffffffffffffffffffffffffffffffffff82166106f957803410156106f5576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610733576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156107a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c491906126b4565b90508181101561080f576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b61081b83333085610d2d565b505050565b6000610844826080015173ffffffffffffffffffffffffffffffffffffffff161590565b156108fb5760c082015160a08301516040517f4faa8a2600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201527f000000000000000000000000000000000000000000000000000000000000000090911691634faa8a26916024016000604051808303818588803b1580156108dd57600080fd5b505af11580156108f1573d6000803e3d6000fd5b5050505050610ae0565b60808201516040517fea60c7c400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201527f00000000000000000000000000000000000000000000000000000000000000009091169063ea60c7c490602401602060405180830381865afa15801561098e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b291906126cd565b90506109e782608001517f00000000000000000000000000000000000000000000000000000000000000008460c00151610f47565b60008260c00151604051602001610a0091815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260a085015160808601517fe3dec8fb00000000000000000000000000000000000000000000000000000000845291935073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169263e3dec8fb92610aac92918690600401612758565b600060405180830381600087803b158015610ac657600080fd5b505af1158015610ada573d6000803e3d6000fd5b50505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f182604051610b0f919061279a565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff831615610b425761081b838383611092565b61081b82826111c1565b600082808203610b88576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610b976001856126a1565b818110610ba657610ba66128ad565b9050602002810190610bb891906128dc565b610bc99060808101906060016122df565b90506000610bd6826112eb565b905073ffffffffffffffffffffffffffffffffffffffff8216610c0057610bfd34826126a1565b90505b6000610c0c88886113a4565b9050610c1888886114b0565b610c258a89898985611511565b600082610c31856112eb565b610c3b91906126a1565b905089811015610c81576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b905260248101829052604401610806565b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116610cdc576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163b6000036100b5576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416610d7a576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610dc7576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610e38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5c91906126b4565b9050610e6a828686866118c3565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610eda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efe91906126b4565b610f0891906126a1565b14610f3f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610f6757505050565b73ffffffffffffffffffffffffffffffffffffffff8216610fb4576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa15801561102a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104e91906126b4565b90508181101561108c5761108c8484611087847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6126a1565b61199f565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166110df576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa15801561114c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117091906126b4565b9050808211156111b6576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610806565b61108c848484611a9d565b73ffffffffffffffffffffffffffffffffffffffff821661120e576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611251576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610806565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146112ab576040519150601f19603f3d011682016040523d82523d6000602084013e6112b0565b606091505b505090508061081b576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff82161561139c576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611373573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139791906126b4565b61139e565b475b92915050565b60608160008167ffffffffffffffff8111156113c2576113c26122fc565b6040519080825280602002602001820160405280156113eb578160200160208202803683370190505b5090506000805b838110156114a55786868281811061140c5761140c6128ad565b905060200281019061141e91906128dc565b61142f9060808101906060016122df565b915061143a826112eb565b83828151811061144c5761144c6128ad565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff821661149d5734838281518110611485576114856128ad565b6020026020010181815161149991906126a1565b9052505b6001016113f2565b509095945050505050565b60005b8181101561081b5760008383838181106114cf576114cf6128ad565b90506020028101906114e191906128dc565b6114ea9061291a565b90508060c001511561150857611508816040015182608001516106a0565b506001016114b3565b8383838382600181146117de576000858561152d6001856126a1565b81811061153c5761153c6128ad565b905060200281019061154e91906128dc565b61155f9060808101906060016122df565b9050600089815b8181101561170a57368d8d83818110611581576115816128ad565b905060200281019061159391906128dc565b90506115c26115a860608301604084016122df565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061162557506116256115db60408301602084016122df565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561163c575061163c6115db60208301836122df565b80156116c157506116c161165360a08301836129bf565b61166291600491600091612a2b565b61166b91612a55565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6116f7576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117018f82611af3565b50600101611566565b505060005b61171a6001856126a1565b8110156117d6576000888883818110611735576117356128ad565b905060200281019061174791906128dc565b6117589060808101906060016122df565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146117cd5785828151811061179f5761179f6128ad565b60200260200101516117b0826112eb565b6117ba91906126a1565b925082156117cd576117cd818885610b1b565b5060010161170f565b5050506118b7565b8760005b818110156118b457368b8b838181106117fd576117fd6128ad565b905060200281019061180f91906128dc565b90506118246115a860608301604084016122df565b8061183d575061183d6115db60408301602084016122df565b801561185457506118546115db60208301836122df565b801561186b575061186b61165360a08301836129bf565b6118a1576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6118ab8d82611af3565b506001016117e2565b50505b50505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff8085166024830152831660448201526064810182905261108c9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611e09565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3a91906126b4565b611a449190612a9d565b60405173ffffffffffffffffffffffffffffffffffffffff851660248201526044810182905290915061108c9085907f095ea7b3000000000000000000000000000000000000000000000000000000009060640161191d565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261081b9084907fa9059cbb000000000000000000000000000000000000000000000000000000009060640161191d565b611b09611b0360208301836122df565b3b151590565b611b3f576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611b7f576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b946115a860608501604086016122df565b611b9f576000611ba5565b82608001355b90506000611bc1611bbc60608601604087016122df565b6112eb565b90506000611bd8611bbc60808701606088016122df565b905082600003611c0f57611c0f611bf560608701604088016122df565b611c0560408801602089016122df565b8760800135610f47565b8460800135821015611c5a576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610806565b600080611c6a60208801886122df565b73ffffffffffffffffffffffffffffffffffffffff1685611c8e60a08a018a6129bf565b604051611c9c929190612ab0565b60006040518083038185875af1925050503d8060008114611cd9576040519150601f19603f3d011682016040523d82523d6000602084013e611cde565b606091505b509150915081611d29576000611cf382611f15565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108069190612ac0565b6000611d3e611bbc60808a0160608b016122df565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611d6f60208b018b6122df565b611d7f60608c0160408d016122df565b611d8f60808d0160608e016122df565b8c60800135898711611da15786611dab565b611dab8a886126a1565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6000611e6b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611f939092919063ffffffff16565b80519091501561081b5780806020019051810190611e899190612ad3565b61081b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610806565b6060604482511015611f5a57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611f766004808551611f6e91906126a1565b859190611faa565b905080806020019051810190611f8c9190612af0565b9392505050565b6060611fa284846000856120c4565b949350505050565b606081611fb881601f612a9d565b1015611ff0576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611ffa8284612a9d565b84511015612034576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608215801561205357604051915060008252602082016040526120bb565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561208c578051835260209283019201612074565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b606082471015612156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610806565b73ffffffffffffffffffffffffffffffffffffffff85163b6121d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610806565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516121fd9190612b5e565b60006040518083038185875af1925050503d806000811461223a576040519150601f19603f3d011682016040523d82523d6000602084013e61223f565b606091505b509150915061224f82828661225a565b979650505050505050565b60608315612269575081611f8c565b8251156122795782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108069190612ac0565b73ffffffffffffffffffffffffffffffffffffffff811681146100b557600080fd5b80356122da816122ad565b919050565b6000602082840312156122f157600080fd5b8135611f8c816122ad565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561234f5761234f6122fc565b60405290565b60405160e0810167ffffffffffffffff8111828210171561234f5761234f6122fc565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156123bf576123bf6122fc565b604052919050565b600067ffffffffffffffff8211156123e1576123e16122fc565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261241e57600080fd5b813561243161242c826123c7565b612378565b81815284602083860101111561244657600080fd5b816020850160208301376000918101602001919091529392505050565b80151581146100b557600080fd5b80356122da81612463565b6000610140828403121561248f57600080fd5b61249761232b565b905081358152602082013567ffffffffffffffff808211156124b857600080fd5b6124c48583860161240d565b602084015260408401359150808211156124dd57600080fd5b506124ea8482850161240d565b6040830152506124fc606083016122cf565b606082015261250d608083016122cf565b608082015261251e60a083016122cf565b60a082015260c082013560c082015260e082013560e0820152610100612545818401612471565b90820152610120612557838201612471565b9082015292915050565b60006020828403121561257357600080fd5b813567ffffffffffffffff81111561258a57600080fd5b611fa28482850161247c565b6000806000604084860312156125ab57600080fd5b833567ffffffffffffffff808211156125c357600080fd5b6125cf8783880161247c565b945060208601359150808211156125e557600080fd5b818601915086601f8301126125f957600080fd5b81358181111561260857600080fd5b8760208260051b850101111561261d57600080fd5b6020830194508093505050509250925092565b60006020828403121561264257600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611f8c57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561139e5761139e612672565b6000602082840312156126c657600080fd5b5051919050565b6000602082840312156126df57600080fd5b8151611f8c816122ad565b60005b838110156127055781810151838201526020016126ed565b50506000910152565b600081518084526127268160208601602086016126ea565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff808616835280851660208401525060606040830152612791606083018461270e565b95945050505050565b6020815281516020820152600060208301516101408060408501526127c361016085018361270e565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526127fe838261270e565b9250506060850151612828608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e085015161010081818701528087015191505061012061289b8187018315159052565b90950151151593019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261291057600080fd5b9190910192915050565b600060e0823603121561292c57600080fd5b612934612355565b61293d836122cf565b815261294b602084016122cf565b602082015261295c604084016122cf565b604082015261296d606084016122cf565b60608201526080830135608082015260a083013567ffffffffffffffff81111561299657600080fd5b6129a23682860161240d565b60a0830152506129b460c08401612471565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126129f457600080fd5b83018035915067ffffffffffffffff821115612a0f57600080fd5b602001915036819003821315612a2457600080fd5b9250929050565b60008085851115612a3b57600080fd5b83861115612a4857600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612a955780818660040360031b1b83161692505b505092915050565b8082018082111561139e5761139e612672565b8183823760009101908152919050565b602081526000611f8c602083018461270e565b600060208284031215612ae557600080fd5b8151611f8c81612463565b600060208284031215612b0257600080fd5b815167ffffffffffffffff811115612b1957600080fd5b8201601f81018413612b2a57600080fd5b8051612b3861242c826123c7565b818152856020838501011115612b4d57600080fd5b6127918260208301602086016126ea565b600082516129108184602087016126ea56fea2646970667358221220b20d48bc10df7bd5f6b6efbb4b223d61c01cc57e37eecd3666e14fbd18c2e7d864736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var TestPolygonBridgeFacet__factory = /** @class */ (function (_super) {
    __extends(TestPolygonBridgeFacet__factory, _super);
    function TestPolygonBridgeFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    TestPolygonBridgeFacet__factory.prototype.deploy = function (_rootChainManager, _erc20Predicate, overrides) {
        return _super.prototype.deploy.call(this, _rootChainManager, _erc20Predicate, overrides || {});
    };
    TestPolygonBridgeFacet__factory.prototype.getDeployTransaction = function (_rootChainManager, _erc20Predicate, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _rootChainManager, _erc20Predicate, overrides || {});
    };
    TestPolygonBridgeFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    TestPolygonBridgeFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    TestPolygonBridgeFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    TestPolygonBridgeFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    TestPolygonBridgeFacet__factory.bytecode = _bytecode;
    TestPolygonBridgeFacet__factory.abi = _abi;
    return TestPolygonBridgeFacet__factory;
}(ethers_1.ContractFactory));
exports.TestPolygonBridgeFacet__factory = TestPolygonBridgeFacet__factory;
