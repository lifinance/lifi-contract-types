"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IMessageBus__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_message",
                type: "bytes",
            },
        ],
        name: "calcFee",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_message",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "sender",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint64",
                        name: "srcChainId",
                        type: "uint64",
                    },
                    {
                        internalType: "bytes32",
                        name: "srcTxHash",
                        type: "bytes32",
                    },
                ],
                internalType: "struct MsgDataTypes.RouteInfo",
                name: "_route",
                type: "tuple",
            },
            {
                internalType: "bytes[]",
                name: "_sigs",
                type: "bytes[]",
            },
            {
                internalType: "address[]",
                name: "_signers",
                type: "address[]",
            },
            {
                internalType: "uint256[]",
                name: "_powers",
                type: "uint256[]",
            },
        ],
        name: "executeMessage",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_message",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "enum MsgDataTypes.TransferType",
                        name: "t",
                        type: "uint8",
                    },
                    {
                        internalType: "address",
                        name: "sender",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "token",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint64",
                        name: "wdseq",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "srcChainId",
                        type: "uint64",
                    },
                    {
                        internalType: "bytes32",
                        name: "refId",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "srcTxHash",
                        type: "bytes32",
                    },
                ],
                internalType: "struct MsgDataTypes.TransferInfo",
                name: "_transfer",
                type: "tuple",
            },
            {
                internalType: "bytes[]",
                name: "_sigs",
                type: "bytes[]",
            },
            {
                internalType: "address[]",
                name: "_signers",
                type: "address[]",
            },
            {
                internalType: "uint256[]",
                name: "_powers",
                type: "uint256[]",
            },
        ],
        name: "executeMessageWithTransfer",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_message",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "enum MsgDataTypes.TransferType",
                        name: "t",
                        type: "uint8",
                    },
                    {
                        internalType: "address",
                        name: "sender",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "token",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint64",
                        name: "wdseq",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "srcChainId",
                        type: "uint64",
                    },
                    {
                        internalType: "bytes32",
                        name: "refId",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "srcTxHash",
                        type: "bytes32",
                    },
                ],
                internalType: "struct MsgDataTypes.TransferInfo",
                name: "_transfer",
                type: "tuple",
            },
            {
                internalType: "bytes[]",
                name: "_sigs",
                type: "bytes[]",
            },
            {
                internalType: "address[]",
                name: "_signers",
                type: "address[]",
            },
            {
                internalType: "uint256[]",
                name: "_powers",
                type: "uint256[]",
            },
        ],
        name: "executeMessageWithTransferRefund",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "liquidityBridge",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pegBridge",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pegBridgeV2",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pegVault",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pegVaultV2",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_receiver",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "_dstChainId",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_message",
                type: "bytes",
            },
        ],
        name: "sendMessage",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_receiver",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_dstChainId",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_message",
                type: "bytes",
            },
        ],
        name: "sendMessage",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_receiver",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_dstChainId",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_srcBridge",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "_srcTransferId",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "_message",
                type: "bytes",
            },
        ],
        name: "sendMessageWithTransfer",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_account",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_cumulativeFee",
                type: "uint256",
            },
            {
                internalType: "bytes[]",
                name: "_sigs",
                type: "bytes[]",
            },
            {
                internalType: "address[]",
                name: "_signers",
                type: "address[]",
            },
            {
                internalType: "uint256[]",
                name: "_powers",
                type: "uint256[]",
            },
        ],
        name: "withdrawFee",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var IMessageBus__factory = /** @class */ (function () {
    function IMessageBus__factory() {
    }
    IMessageBus__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    IMessageBus__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    IMessageBus__factory.abi = _abi;
    return IMessageBus__factory;
}());
exports.IMessageBus__factory = IMessageBus__factory;
