"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IAlgebraPool__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "initialize",
        inputs: [
            {
                name: "price",
                type: "uint160",
                internalType: "uint160",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "mint",
        inputs: [
            {
                name: "sender",
                type: "address",
                internalType: "address",
            },
            {
                name: "recipient",
                type: "address",
                internalType: "address",
            },
            {
                name: "bottomTick",
                type: "int24",
                internalType: "int24",
            },
            {
                name: "topTick",
                type: "int24",
                internalType: "int24",
            },
            {
                name: "amount",
                type: "uint128",
                internalType: "uint128",
            },
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "amount0",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "amount1",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "liquidityActual",
                type: "uint128",
                internalType: "uint128",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "swap",
        inputs: [
            {
                name: "recipient",
                type: "address",
                internalType: "address",
            },
            {
                name: "zeroForOne",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "amountSpecified",
                type: "int256",
                internalType: "int256",
            },
            {
                name: "sqrtPriceLimitX96",
                type: "uint160",
                internalType: "uint160",
            },
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "amount0",
                type: "int256",
                internalType: "int256",
            },
            {
                name: "amount1",
                type: "int256",
                internalType: "int256",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "swapSupportingFeeOnInputTokens",
        inputs: [
            {
                name: "sender",
                type: "address",
                internalType: "address",
            },
            {
                name: "recipient",
                type: "address",
                internalType: "address",
            },
            {
                name: "zeroToOne",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "amountSpecified",
                type: "int256",
                internalType: "int256",
            },
            {
                name: "limitSqrtPrice",
                type: "uint160",
                internalType: "uint160",
            },
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "amount0",
                type: "int256",
                internalType: "int256",
            },
            {
                name: "amount1",
                type: "int256",
                internalType: "int256",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "token0",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
];
var IAlgebraPool__factory = /** @class */ (function () {
    function IAlgebraPool__factory() {
    }
    IAlgebraPool__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    IAlgebraPool__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    IAlgebraPool__factory.abi = _abi;
    return IAlgebraPool__factory;
}());
exports.IAlgebraPool__factory = IAlgebraPool__factory;
