/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        type: "function",
        name: "setApprovalForBridges",
        inputs: [
            {
                name: "bridges",
                type: "address[]",
                internalType: "address[]",
            },
            {
                name: "tokensToApprove",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaHopL1ERC20",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_hopData",
                type: "tuple",
                internalType: "struct HopFacetOptimized.HopData",
                components: [
                    {
                        name: "bonderFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "amountOutMin",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationAmountOutMin",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationDeadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hopBridge",
                        type: "address",
                        internalType: "contract IHopBridge",
                    },
                    {
                        name: "relayer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "relayerFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "nativeFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaHopL1Native",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_hopData",
                type: "tuple",
                internalType: "struct HopFacetOptimized.HopData",
                components: [
                    {
                        name: "bonderFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "amountOutMin",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationAmountOutMin",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationDeadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hopBridge",
                        type: "address",
                        internalType: "contract IHopBridge",
                    },
                    {
                        name: "relayer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "relayerFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "nativeFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaHopL2ERC20",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_hopData",
                type: "tuple",
                internalType: "struct HopFacetOptimized.HopData",
                components: [
                    {
                        name: "bonderFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "amountOutMin",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationAmountOutMin",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationDeadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hopBridge",
                        type: "address",
                        internalType: "contract IHopBridge",
                    },
                    {
                        name: "relayer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "relayerFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "nativeFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaHopL2Native",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_hopData",
                type: "tuple",
                internalType: "struct HopFacetOptimized.HopData",
                components: [
                    {
                        name: "bonderFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "amountOutMin",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationAmountOutMin",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationDeadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hopBridge",
                        type: "address",
                        internalType: "contract IHopBridge",
                    },
                    {
                        name: "relayer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "relayerFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "nativeFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaHopL1ERC20",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_hopData",
                type: "tuple",
                internalType: "struct HopFacetOptimized.HopData",
                components: [
                    {
                        name: "bonderFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "amountOutMin",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationAmountOutMin",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationDeadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hopBridge",
                        type: "address",
                        internalType: "contract IHopBridge",
                    },
                    {
                        name: "relayer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "relayerFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "nativeFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaHopL1Native",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_hopData",
                type: "tuple",
                internalType: "struct HopFacetOptimized.HopData",
                components: [
                    {
                        name: "bonderFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "amountOutMin",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationAmountOutMin",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationDeadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hopBridge",
                        type: "address",
                        internalType: "contract IHopBridge",
                    },
                    {
                        name: "relayer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "relayerFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "nativeFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaHopL2ERC20",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_hopData",
                type: "tuple",
                internalType: "struct HopFacetOptimized.HopData",
                components: [
                    {
                        name: "bonderFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "amountOutMin",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationAmountOutMin",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationDeadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hopBridge",
                        type: "address",
                        internalType: "contract IHopBridge",
                    },
                    {
                        name: "relayer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "relayerFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "nativeFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaHopL2Native",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_hopData",
                type: "tuple",
                internalType: "struct HopFacetOptimized.HopData",
                components: [
                    {
                        name: "bonderFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "amountOutMin",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationAmountOutMin",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationDeadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hopBridge",
                        type: "address",
                        internalType: "contract IHopBridge",
                    },
                    {
                        name: "relayer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "relayerFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "nativeFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAnERC20Token",
        inputs: [],
    },
    {
        type: "error",
        name: "OnlyContractOwner",
        inputs: [],
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50612736806100206000396000f3fe6080604052600436106100965760003560e01c806342afe79a116100695780638d03f4561161004e5780638d03f45614610129578063ca360ae01461013c578063d40e64cc1461014f57600080fd5b806342afe79a1461010357806355c99cd81461011657600080fd5b806303add8c31461009b5780630680ded4146100b0578063082bc047146100d05780630b4cb5d8146100e3575b600080fd5b6100ae6100a9366004611db4565b610162565b005b3480156100bc57600080fd5b506100ae6100cb366004611e57565b6102bf565b6100ae6100de366004611db4565b610362565b3480156100ef57600080fd5b506100ae6100fe366004611db4565b6103c7565b6100ae61011136600461200c565b610508565b6100ae610124366004611db4565b610672565b6100ae61013736600461200c565b610749565b6100ae61014a36600461200c565b6107d8565b6100ae61015d36600461200c565b6108a9565b61017260c0820160a08301612151565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f56101a061010084013560c08601356121a4565b60e08501356101b560c0870160a08801612151565b8660c00135866060013587608001358860c00160208101906101d79190612151565b60405160e089811b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482019790975273ffffffffffffffffffffffffffffffffffffffff958616602482015260448101949094526064840192909252608483015290911660a48201529085013560c482015260e4015b6000604051808303818588803b15801561026b57600080fd5b505af115801561027f573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1826040516102b39190612264565b60405180910390a15050565b6102c76109d6565b60005b8381101561035b576103498383838181106102e7576102e76123b7565b90506020020160208101906102fc9190612151565b86868481811061030e5761030e6123b7565b90506020020160208101906103239190612151565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610a4b565b80610353816123e6565b9150506102ca565b5050505050565b61038161037560a0840160808501612151565b33308560c00135610a7c565b61039160c0820160a08301612151565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f561010083013560e08501356101b560c0870160a08801612151565b6103da61037560a0840160808501612151565b6103ea60c0820160a08301612151565b73ffffffffffffffffffffffffffffffffffffffff1663eea0d7b260e084013561041a60c0860160a08701612151565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff909116602483015260c08601356044830152843560648301526020850135608483015284013560a4820152606084013560c4820152608084013560e482015261010401600060405180830381600087803b1580156104c157600080fd5b505af11580156104d5573d6000803e3d6000fd5b505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1826040516102b39190612264565b61052384600001518560c00151858533866101000135610b3e565b60c08086019190915261053b90820160a08301612151565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f58261010001358660e001518760a001518860c00151866060013587608001358860c00160208101906105889190612151565b60405160e089811b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482019790975273ffffffffffffffffffffffffffffffffffffffff958616602482015260448101949094526064840192909252608483015290911660a48201529085013560c482015260e4015b6000604051808303818588803b15801561061c57600080fd5b505af1158015610630573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1846040516106649190612482565b60405180910390a150505050565b61068260c0820160a08301612151565b73ffffffffffffffffffffffffffffffffffffffff1663eea0d7b260c0840180359060e0860135906106b79060a08801612151565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff909116602483015260c08701356044830152853560648301526020860135608483015285013560a4820152606085013560c4820152608085013560e482015261010401610252565b61076484600001518560c00151858533866101000135610b3e565b60c08086019190915261077c90820160a08301612151565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f58261010001358660c001516107ac91906121a4565b8660e001518760a001518860c00151866060013587608001358860c00160208101906105889190612151565b6107ed84600001518560c00151858533610cde565b60c08086019190915261080590820160a08301612151565b60c085015160e086015160a0870151604080517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019390935273ffffffffffffffffffffffffffffffffffffffff918216602484015260448301849052853560648401526020860135608484015285013560a4830152606085013560c4830152608085013560e4830152929092169163eea0d7b2919061010401610603565b6108be84600001518560c00151858533610cde565b60c0808601919091526108d690820160a08301612151565b60e085015160a086015160c0870151604080517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019490945273ffffffffffffffffffffffffffffffffffffffff92831660248501526044840191909152843560648401526020850135608484015284013560a4830152606084013560c4830152608084013560e4830152919091169063eea0d7b29061010401600060405180830381600087803b15801561098f57600080fd5b505af11580156109a3573d6000803e3d6000fd5b505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1846040516106649190612482565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314610a49576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610a778383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610e21565b505050565b73ffffffffffffffffffffffffffffffffffffffff8416610ac9576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610b16576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b3873ffffffffffffffffffffffffffffffffffffffff8516848484610f4a565b50505050565b600083808203610b7a576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008686610b89600185612594565b818110610b9857610b986123b7565b9050602002810190610baa91906125a7565b610bbb906080810190606001612151565b90506000610bc882610fa7565b905073ffffffffffffffffffffffffffffffffffffffff8216610bf257610bef3482612594565b90505b6000610bfe8989610ff2565b9050610c0a89896110fe565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff89166020820152908101879052610c45818b8b8561116b565b600083610c5186610fa7565b610c5b9190612594565b905073ffffffffffffffffffffffffffffffffffffffff8516610c8557610c828882612594565b90505b8b811015610cce576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d9052602481018290526044015b60405180910390fd5b9c9b505050505050505050505050565b600082808203610d1a576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610d29600185612594565b818110610d3857610d386123b7565b9050602002810190610d4a91906125a7565b610d5b906080810190606001612151565b90506000610d6882610fa7565b905073ffffffffffffffffffffffffffffffffffffffff8216610d9257610d8f3482612594565b90505b6000610d9e8888610ff2565b9050610daa88886110fe565b610db78a89898985611561565b600082610dc385610fa7565b610dcd9190612594565b905089811015610e13576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b905260248101829052604401610cc5565b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff841615610b385773ffffffffffffffffffffffffffffffffffffffff8316610e8a576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015610eff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2391906125e5565b1015610b3857610b3873ffffffffffffffffffffffffffffffffffffffff8516848361182a565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d156001600051141716610f9957637939f4246000526004601cfd5b600060605260405250505050565b600073ffffffffffffffffffffffffffffffffffffffff821615610fea57610fe573ffffffffffffffffffffffffffffffffffffffff8316306118be565b610fec565b475b92915050565b60608160008167ffffffffffffffff81111561101057611010611ec3565b604051908082528060200260200182016040528015611039578160200160208202803683370190505b5090506000805b838110156110f35786868281811061105a5761105a6123b7565b905060200281019061106c91906125a7565b61107d906080810190606001612151565b915061108882610fa7565b83828151811061109a5761109a6123b7565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff82166110eb57348382815181106110d3576110d36123b7565b602002602001018181516110e79190612594565b9052505b600101611040565b509095945050505050565b60005b81811015610a77573683838381811061111c5761111c6123b7565b905060200281019061112e91906125a7565b905061114060e0820160c083016125fe565b15611162576111626111586060830160408401612151565b82608001356118f3565b50600101611101565b60208401516040850151849184918490836001811461147a5760008686611193600185612594565b8181106111a2576111a26123b7565b90506020028101906111b491906125a7565b6111c5906080810190606001612151565b9050600089815b8181101561137257368d8d838181106111e7576111e76123b7565b90506020028101906111f991906125a7565b905061122861120e6060830160408401612151565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061128b575061128b6112416040830160208401612151565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156112a257506112a26112416020830183612151565b801561132757506113276112b960a0830183612619565b6112c89160049160009161267e565b6112d1916126a8565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61135d576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e5161136990826119a8565b506001016111cc565b505060005b611382600185612594565b81101561147257600089898381811061139d5761139d6123b7565b90506020028101906113af91906125a7565b6113c0906080810190606001612151565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461146957868281518110611407576114076123b7565b602002602001015161141882610fa7565b6114229190612594565b9250600073ffffffffffffffffffffffffffffffffffffffff82161561144957600061144b565b865b9050831561146757611467828a6114628488612594565b611c25565b505b50600101611377565b505050611555565b8760005b8181101561155257368b8b83818110611499576114996123b7565b90506020028101906114ab91906125a7565b90506114c061120e6060830160408401612151565b806114d957506114d96112416040830160208401612151565b80156114f057506114f06112416020830183612151565b801561150757506115076112b960a0830183612619565b61153d576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c5161154990826119a8565b5060010161147e565b50505b50505050505050505050565b838383838260018114611754576000858561157d600185612594565b81811061158c5761158c6123b7565b905060200281019061159e91906125a7565b6115af906080810190606001612151565b9050600089815b8181101561168857368d8d838181106115d1576115d16123b7565b90506020028101906115e391906125a7565b90506115f861120e6060830160408401612151565b8061161157506116116112416040830160208401612151565b801561162857506116286112416020830183612151565b801561163f575061163f6112b960a0830183612619565b611675576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61167f8f826119a8565b506001016115b6565b505060005b611698600185612594565b8110156114725760008888838181106116b3576116b36123b7565b90506020028101906116c591906125a7565b6116d6906080810190606001612151565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461174b5785828151811061171d5761171d6123b7565b602002602001015161172e82610fa7565b6117389190612594565b9250821561174b5761174b818885611c25565b5060010161168d565b8760005b8181101561155257368b8b83818110611773576117736123b7565b905060200281019061178591906125a7565b905061179a61120e6060830160408401612151565b806117b357506117b36112416040830160208401612151565b80156117ca57506117ca6112416020830183612151565b80156117e157506117e16112b960a0830183612619565b611817576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6118218d826119a8565b50600101611758565b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d1560016000511417166118b45760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d1560016000511417166118b457633e3f8f736000526004601cfd5b6000603452505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b8060000361192d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166119865780341015611982576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61198273ffffffffffffffffffffffffffffffffffffffff8316333084610f4a565b6119c06119b86020830183612151565b6017903b1190565b6119f6576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611a36576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611a4b61120e6060850160408601612151565b611a56576000611a5c565b82608001355b90506000611a78611a736080860160608701612151565b610fa7565b905081600003611aaf57611aaf611a956060860160408701612151565b611aa56040870160208801612151565b8660800135610a4b565b600080611abf6020870187612151565b73ffffffffffffffffffffffffffffffffffffffff1684611ae360a0890189612619565b604051611af19291906126f0565b60006040518083038185875af1925050503d8060008114611b2e576040519150601f19603f3d011682016040523d82523d6000602084013e611b33565b606091505b509150915081611b4657611b4681611c55565b6000611b5b611a736080890160608a01612151565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3888611b8c60208a018a612151565b611b9c60608b0160408c01612151565b611bac60808c0160608d01612151565b8b60800135898711611bbe5786611bc8565b611bc88a88612594565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316611c4a57610a778282611c5f565b610a77838383611ccc565b8051602082018181fd5b73ffffffffffffffffffffffffffffffffffffffff8216611cac576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61198273ffffffffffffffffffffffffffffffffffffffff831682611d3a565b73ffffffffffffffffffffffffffffffffffffffff8216611d19576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a7773ffffffffffffffffffffffffffffffffffffffff84168383611d56565b60003860003884865af16119825763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d1560016000511417166118b4576390b8ec186000526004601cfd5b60006101208284031215611dae57600080fd5b50919050565b600080610140808486031215611dc957600080fd5b833567ffffffffffffffff811115611de057600080fd5b8401808603821315611df157600080fd5b9250611e0290508460208501611d9b565b90509250929050565b60008083601f840112611e1d57600080fd5b50813567ffffffffffffffff811115611e3557600080fd5b6020830191508360208260051b8501011115611e5057600080fd5b9250929050565b60008060008060408587031215611e6d57600080fd5b843567ffffffffffffffff80821115611e8557600080fd5b611e9188838901611e0b565b90965094506020870135915080821115611eaa57600080fd5b50611eb787828801611e0b565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611f1657611f16611ec3565b60405290565b600082601f830112611f2d57600080fd5b813567ffffffffffffffff80821115611f4857611f48611ec3565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611f8e57611f8e611ec3565b81604052838152866020858801011115611fa757600080fd5b836020870160208301376000602085830101528094505050505092915050565b73ffffffffffffffffffffffffffffffffffffffff81168114611fe957600080fd5b50565b8035611ff781611fc7565b919050565b80358015158114611ff757600080fd5b600080600080610160858703121561202357600080fd5b843567ffffffffffffffff8082111561203b57600080fd5b90860190610140828903121561205057600080fd5b612058611ef2565b8235815260208301358281111561206e57600080fd5b61207a8a828601611f1c565b60208301525060408301358281111561209257600080fd5b61209e8a828601611f1c565b6040830152506120b060608401611fec565b60608201526120c160808401611fec565b60808201526120d260a08401611fec565b60a082015260c083013560c082015260e083013560e08201526101006120f9818501611ffc565b9082015261012061210b848201611ffc565b908201529550602087013591508082111561212557600080fd5b5061213287828801611e0b565b909450925061214690508660408701611d9b565b905092959194509250565b60006020828403121561216357600080fd5b813561216e81611fc7565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610fec57610fec612175565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126121ec57600080fd5b830160208101925035905067ffffffffffffffff81111561220c57600080fd5b803603821315611e5057600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6020815281356020820152600061227e60208401846121b7565b6101408060408601526122966101608601838561221b565b92506122a560408701876121b7565b92507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08685030160608701526122dc84848361221b565b9350506122eb60608701611fec565b73ffffffffffffffffffffffffffffffffffffffff81166080870152915061231560808701611fec565b73ffffffffffffffffffffffffffffffffffffffff811660a0870152915061233f60a08701611fec565b73ffffffffffffffffffffffffffffffffffffffff811660c0870152915060c086013560e0860152610100915060e086013582860152612380828701611ffc565b91506101206123928187018415159052565b61239d818801611ffc565b9250506123ad8186018315159052565b5090949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361241757612417612175565b5060010190565b6000815180845260005b8181101561244457602081850181015186830182015201612428565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815281516020820152600060208301516101408060408501526124ab61016085018361241e565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526124e6838261241e565b9250506060850151612510608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206125838187018315159052565b8601518015158387015290506123ad565b81810381811115610fec57610fec612175565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126125db57600080fd5b9190910192915050565b6000602082840312156125f757600080fd5b5051919050565b60006020828403121561261057600080fd5b61216e82611ffc565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261264e57600080fd5b83018035915067ffffffffffffffff82111561266957600080fd5b602001915036819003821315611e5057600080fd5b6000808585111561268e57600080fd5b8386111561269b57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156126e85780818660040360031b1b83161692505b505092915050565b818382376000910190815291905056fea2646970667358221220d2014827b76f5ddef19f48043a40289577b94098934f05c457a9ef5eb53330b264736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
export class HopFacetOptimized__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
