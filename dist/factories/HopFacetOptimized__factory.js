"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.HopFacetOptimized__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        name: "CannotBridgeToSameNetwork",
        type: "error",
    },
    {
        inputs: [],
        name: "ContractCallNotAllowed",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "receivedAmount",
                type: "uint256",
            },
        ],
        name: "CumulativeSlippageTooHigh",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "required",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
        ],
        name: "InsufficientBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidAmount",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidContract",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidReceiver",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeAssetTransferFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapDataProvided",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapFromZeroBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "NoTransferToNullAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAValidSpender",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAnERC20Token",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOverflow",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "assetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "bridge",
                type: "address",
            },
        ],
        name: "HopBridgeRegistered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferCompleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferRecovered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                name: "bridgeData",
                type: "tuple",
            },
        ],
        name: "LiFiTransferStarted",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "bridges",
                type: "address[]",
            },
            {
                internalType: "address[]",
                name: "tokensToApprove",
                type: "address[]",
            },
        ],
        name: "setApprovalForBridges",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "bonderFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationAmountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationDeadline",
                        type: "uint256",
                    },
                    {
                        internalType: "contract IHopBridge",
                        name: "hopBridge",
                        type: "address",
                    },
                ],
                internalType: "struct HopFacetOptimized.HopData",
                name: "_hopData",
                type: "tuple",
            },
        ],
        name: "startBridgeTokensViaHopL1ERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "bonderFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationAmountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationDeadline",
                        type: "uint256",
                    },
                    {
                        internalType: "contract IHopBridge",
                        name: "hopBridge",
                        type: "address",
                    },
                ],
                internalType: "struct HopFacetOptimized.HopData",
                name: "_hopData",
                type: "tuple",
            },
        ],
        name: "startBridgeTokensViaHopL1Native",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "bonderFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationAmountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationDeadline",
                        type: "uint256",
                    },
                    {
                        internalType: "contract IHopBridge",
                        name: "hopBridge",
                        type: "address",
                    },
                ],
                internalType: "struct HopFacetOptimized.HopData",
                name: "_hopData",
                type: "tuple",
            },
        ],
        name: "startBridgeTokensViaHopL2ERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "bonderFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationAmountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationDeadline",
                        type: "uint256",
                    },
                    {
                        internalType: "contract IHopBridge",
                        name: "hopBridge",
                        type: "address",
                    },
                ],
                internalType: "struct HopFacetOptimized.HopData",
                name: "_hopData",
                type: "tuple",
            },
        ],
        name: "startBridgeTokensViaHopL2Native",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "_swapData",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "bonderFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationAmountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationDeadline",
                        type: "uint256",
                    },
                    {
                        internalType: "contract IHopBridge",
                        name: "hopBridge",
                        type: "address",
                    },
                ],
                internalType: "struct HopFacetOptimized.HopData",
                name: "_hopData",
                type: "tuple",
            },
        ],
        name: "swapAndStartBridgeTokensViaHopL1ERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "_swapData",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "bonderFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationAmountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationDeadline",
                        type: "uint256",
                    },
                    {
                        internalType: "contract IHopBridge",
                        name: "hopBridge",
                        type: "address",
                    },
                ],
                internalType: "struct HopFacetOptimized.HopData",
                name: "_hopData",
                type: "tuple",
            },
        ],
        name: "swapAndStartBridgeTokensViaHopL1Native",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "_swapData",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "bonderFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationAmountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationDeadline",
                        type: "uint256",
                    },
                    {
                        internalType: "contract IHopBridge",
                        name: "hopBridge",
                        type: "address",
                    },
                ],
                internalType: "struct HopFacetOptimized.HopData",
                name: "_hopData",
                type: "tuple",
            },
        ],
        name: "swapAndStartBridgeTokensViaHopL2ERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "_swapData",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "bonderFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationAmountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationDeadline",
                        type: "uint256",
                    },
                    {
                        internalType: "contract IHopBridge",
                        name: "hopBridge",
                        type: "address",
                    },
                ],
                internalType: "struct HopFacetOptimized.HopData",
                name: "_hopData",
                type: "tuple",
            },
        ],
        name: "swapAndStartBridgeTokensViaHopL2Native",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b5061358c806100206000396000f3fe6080604052600436106100955760003560e01c80636721556d11610069578063826149971161004e5780638261499714610142578063df55e12614610155578063e62534161461016857600080fd5b80636721556d1461010f578063787f2d0e1461012f57600080fd5b8062d2aed61461009a5780630680ded4146100bc5780632b53e8f3146100dc5780634db91a00146100fc575b600080fd5b3480156100a657600080fd5b506100ba6100b5366004612d1b565b610188565b005b3480156100c857600080fd5b506100ba6100d7366004612d98565b610399565b3480156100e857600080fd5b506100ba6100f7366004612e04565b610434565b6100ba61010a366004612e04565b610653565b34801561011b57600080fd5b506100ba61012a366004612d1b565b610860565b6100ba61013d366004612e04565b610a94565b6100ba610150366004612d1b565b610c53565b6100ba610163366004612d1b565b610e49565b34801561017457600080fd5b506100ba610183366004612e04565b610fef565b836101ab8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101e2576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610220576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361025d576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61027285600001518660c001518686336111a9565b60c08087019190915261028a90830160a08401612e59565b60e086015160a087015160c0880151604080517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019490945273ffffffffffffffffffffffffffffffffffffffff92831660248501526044840191909152853560648401526020860135608484015285013560a4830152606085013560c4830152608085013560e4830152919091169063eea0d7b29061010401600060405180830381600087803b15801561034357600080fd5b505af1158015610357573d6000803e3d6000fd5b505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18560405161038a9190612ee4565b60405180910390a15050505050565b60005b8381101561042d5761041b8383838181106103b9576103b9612ffc565b90506020020160208101906103ce9190612e59565b8686848181106103e0576103e0612ffc565b90506020020160208101906103f59190612e59565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6112f1565b806104258161305a565b91505061039c565b5050505050565b61043d82613092565b60a081015173ffffffffffffffffffffffffffffffffffffffff1661048e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036104cc576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610509576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61052661051c60a0850160808601612e59565b8460c0013561143c565b61053660c0830160a08401612e59565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f560e085013561056660c0870160a08801612e59565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925273ffffffffffffffffffffffffffffffffffffffff16602482015260c086013560448201526060850135606482015260808501356084820152600060a4820181905260c482015260e4015b600060405180830381600087803b1580156105ff57600080fd5b505af1158015610613573d6000803e3d6000fd5b505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f183604051610646919061314b565b60405180910390a1505050565b61065c82613092565b60a081015173ffffffffffffffffffffffffffffffffffffffff166106ad576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036106eb576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610728576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61073b61051c60a0850160808601612e59565b61074b60c0830160a08401612e59565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f560c0850180359060e0870135906107809060a08901612e59565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600481019290925273ffffffffffffffffffffffffffffffffffffffff16602482015260c087013560448201526060860135606482015260808601356084820152600060a4820181905260c482015260e4015b6000604051808303818588803b15801561081857600080fd5b505af115801561082c573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f183604051610646919061314b565b836108838160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156108ba576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036108f8576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610935576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61094a85600001518660c001518686336111a9565b50600061096f866080015173ffffffffffffffffffffffffffffffffffffffff161590565b61097a576000610980565b8560c001515b905061099260c0840160a08501612e59565b60e087015160a088015160c08901516040517fdeace8f5000000000000000000000000000000000000000000000000000000008152600481019390935273ffffffffffffffffffffffffffffffffffffffff918216602484015260448301526060860135606483015260808601356084830152600060a4830181905260c4830152919091169063deace8f590839060e4016000604051808303818588803b158015610a3c57600080fd5b505af1158015610a50573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f186604051610a849190612ee4565b60405180910390a1505050505050565b610a9d82613092565b60a081015173ffffffffffffffffffffffffffffffffffffffff16610aee576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610b2c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610b69576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b7c61051c60a0850160808601612e59565b610b8c60c0830160a08401612e59565b73ffffffffffffffffffffffffffffffffffffffff1663eea0d7b260c0850180359060e087013590610bc19060a08901612e59565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff909116602483015260c08801356044830152863560648301526020870135608483015286013560a4820152606086013560c4820152608086013560e4820152610104016107ff565b83610c768160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610cad576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610ceb576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610d28576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d3d85600001518660c001518686336111a9565b60c080870191909152610d5590830160a08401612e59565b60c086015160e087015160a08801516040517fdeace8f5000000000000000000000000000000000000000000000000000000008152600481019290925273ffffffffffffffffffffffffffffffffffffffff9081166024830152604482018390526060860135606483015260808601356084830152600060a4830181905260c4830152929092169163deace8f5919060e4015b6000604051808303818588803b158015610e0157600080fd5b505af1158015610e15573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18560405161038a9190612ee4565b83610e6c8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610ea3576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610ee1576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610f1e576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f3385600001518660c001518686336111a9565b60c080870191909152610f4b90830160a08401612e59565b60c086015160e087015160a0880151604080517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019390935273ffffffffffffffffffffffffffffffffffffffff918216602484015260448301849052863560648401526020870135608484015286013560a4830152606086013560c4830152608086013560e4830152929092169163eea0d7b2919061010401610de8565b610ff882613092565b60a081015173ffffffffffffffffffffffffffffffffffffffff16611049576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003611087576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036110c4576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110d761051c60a0850160808601612e59565b6110e760c0830160a08401612e59565b73ffffffffffffffffffffffffffffffffffffffff1663eea0d7b260e085013561111760c0870160a08801612e59565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff909116602483015260c08701356044830152853560648301526020860135608483015285013560a4820152606085013560c4820152608085013560e4820152610104016105e5565b6000828082036111e5576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856111f4600185613294565b81811061120357611203612ffc565b905060200281019061121591906132a7565b611226906080810190606001612e59565b90506000611233826115b7565b905073ffffffffffffffffffffffffffffffffffffffff821661125d5761125a3482613294565b90505b60006112698888611670565b9050611275888861177c565b6112828a898989856117dd565b60008261128e856115b7565b6112989190613294565b9050898110156112e3576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661131157505050565b73ffffffffffffffffffffffffffffffffffffffff821661135e576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa1580156113d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f891906132e5565b905081811015611436576114368484611431847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff613294565b611b8f565b50505050565b73ffffffffffffffffffffffffffffffffffffffff82166114955780341015611491576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b806000036114cf576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa15801561153c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156091906132e5565b9050818110156115a6576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016112da565b6115b283333085611d0b565b505050565b600073ffffffffffffffffffffffffffffffffffffffff821615611668576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa15801561163f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166391906132e5565b61166a565b475b92915050565b60608160008167ffffffffffffffff81111561168e5761168e612a1d565b6040519080825280602002602001820160405280156116b7578160200160208202803683370190505b5090506000805b83811015611771578686828181106116d8576116d8612ffc565b90506020028101906116ea91906132a7565b6116fb906080810190606001612e59565b9150611706826115b7565b83828151811061171857611718612ffc565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216611769573483828151811061175157611751612ffc565b602002602001018181516117659190613294565b9052505b6001016116be565b509095945050505050565b60005b818110156115b257600083838381811061179b5761179b612ffc565b90506020028101906117ad91906132a7565b6117b6906132fe565b90508060c00151156117d4576117d48160400151826080015161143c565b5060010161177f565b838383838260018114611aaa57600085856117f9600185613294565b81811061180857611808612ffc565b905060200281019061181a91906132a7565b61182b906080810190606001612e59565b9050600089815b818110156119d657368d8d8381811061184d5761184d612ffc565b905060200281019061185f91906132a7565b905061188e6118746060830160408401612e59565b73ffffffffffffffffffffffffffffffffffffffff161590565b806118f157506118f16118a76040830160208401612e59565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561190857506119086118a76020830183612e59565b801561198d575061198d61191f60a08301836133a3565b61192e91600491600091613408565b61193791613432565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6119c3576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6119cd8f82611f25565b50600101611832565b505060005b6119e6600185613294565b811015611aa2576000888883818110611a0157611a01612ffc565b9050602002810190611a1391906132a7565b611a24906080810190606001612e59565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611a9957858281518110611a6b57611a6b612ffc565b6020026020010151611a7c826115b7565b611a869190613294565b92508215611a9957611a9981888561223b565b506001016119db565b505050611b83565b8760005b81811015611b8057368b8b83818110611ac957611ac9612ffc565b9050602002810190611adb91906132a7565b9050611af06118746060830160408401612e59565b80611b095750611b096118a76040830160208401612e59565b8015611b205750611b206118a76020830183612e59565b8015611b375750611b3761191f60a08301836133a3565b611b6d576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b778d82611f25565b50600101611aae565b50505b50505050505050505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611c06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2a91906132e5565b611c34919061347a565b60405173ffffffffffffffffffffffffffffffffffffffff85166024820152604481018290529091506114369085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261226c565b73ffffffffffffffffffffffffffffffffffffffff8416611d58576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611da5576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015611e16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3a91906132e5565b9050611e4882868686612378565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611eb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611edc91906132e5565b611ee69190613294565b14611f1d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b611f3b611f356020830183612e59565b3b151590565b611f71576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611fb1576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611fc66118746060850160408601612e59565b611fd1576000611fd7565b82608001355b90506000611ff3611fee6060860160408701612e59565b6115b7565b9050600061200a611fee6080870160608801612e59565b905082600003612041576120416120276060870160408801612e59565b6120376040880160208901612e59565b87608001356112f1565b846080013582101561208c576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016112da565b60008061209c6020880188612e59565b73ffffffffffffffffffffffffffffffffffffffff16856120c060a08a018a6133a3565b6040516120ce92919061348d565b60006040518083038185875af1925050503d806000811461210b576040519150601f19603f3d011682016040523d82523d6000602084013e612110565b606091505b50915091508161215b576000612125826123d6565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112da919061349d565b6000612170611fee60808a0160608b01612e59565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896121a160208b018b612e59565b6121b160608c0160408d01612e59565b6121c160808d0160608e01612e59565b8c608001358987116121d357866121dd565b6121dd8a88613294565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831615612262576115b2838383612454565b6115b28282612583565b60006122ce826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166126ad9092919063ffffffff16565b8051909150156115b257808060200190518101906122ec91906134b0565b6115b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016112da565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526114369085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611c89565b606060448251101561241b57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000612437600480855161242f9190613294565b8591906126c4565b90508080602001905181019061244d91906134cd565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff83166124a1576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa15801561250e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061253291906132e5565b905080821115612578576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016112da565b6114368484846127de565b73ffffffffffffffffffffffffffffffffffffffff82166125d0576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115612613576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016112da565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461266d576040519150601f19603f3d011682016040523d82523d6000602084013e612672565b606091505b50509050806115b2576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60606126bc8484600085612834565b949350505050565b6060816126d281601f61347a565b101561270a576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612714828461347a565b8451101561274e576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608215801561276d57604051915060008252602082016040526127d5565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156127a657805183526020928301920161278e565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526115b29084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611c89565b6060824710156128c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016112da565b73ffffffffffffffffffffffffffffffffffffffff85163b612944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016112da565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161296d9190613544565b60006040518083038185875af1925050503d80600081146129aa576040519150601f19603f3d011682016040523d82523d6000602084013e6129af565b606091505b50915091506129bf8282866129ca565b979650505050505050565b606083156129d957508161244d565b8251156129e95782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112da919061349d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715612a7057612a70612a1d565b60405290565b60405160e0810167ffffffffffffffff81118282101715612a7057612a70612a1d565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612ae057612ae0612a1d565b604052919050565b600067ffffffffffffffff821115612b0257612b02612a1d565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112612b3f57600080fd5b8135612b52612b4d82612ae8565b612a99565b818152846020838601011115612b6757600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114612ba657600080fd5b50565b8035612bb481612b84565b919050565b8015158114612ba657600080fd5b8035612bb481612bb9565b60006101408284031215612be557600080fd5b612bed612a4c565b905081358152602082013567ffffffffffffffff80821115612c0e57600080fd5b612c1a85838601612b2e565b60208401526040840135915080821115612c3357600080fd5b50612c4084828501612b2e565b604083015250612c5260608301612ba9565b6060820152612c6360808301612ba9565b6080820152612c7460a08301612ba9565b60a082015260c082013560c082015260e082013560e0820152610100612c9b818401612bc7565b90820152610120612cad838201612bc7565b9082015292915050565b60008083601f840112612cc957600080fd5b50813567ffffffffffffffff811115612ce157600080fd5b6020830191508360208260051b8501011115612cfc57600080fd5b9250929050565b600060c08284031215612d1557600080fd5b50919050565b6000806000806101008587031215612d3257600080fd5b843567ffffffffffffffff80821115612d4a57600080fd5b612d5688838901612bd2565b95506020870135915080821115612d6c57600080fd5b50612d7987828801612cb7565b9094509250612d8d90508660408701612d03565b905092959194509250565b60008060008060408587031215612dae57600080fd5b843567ffffffffffffffff80821115612dc657600080fd5b612dd288838901612cb7565b90965094506020870135915080821115612deb57600080fd5b50612df887828801612cb7565b95989497509550505050565b60008060e08385031215612e1757600080fd5b823567ffffffffffffffff811115612e2e57600080fd5b83016101408186031215612e4157600080fd5b9150612e508460208501612d03565b90509250929050565b600060208284031215612e6b57600080fd5b813561244d81612b84565b60005b83811015612e91578181015183820152602001612e79565b50506000910152565b60008151808452612eb2816020860160208601612e76565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081528151602082015260006020830151610140806040850152612f0d610160850183612e9a565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152612f488382612e9a565b9250506060850151612f72608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120612fe58187018315159052565b8601518015158387015290505b5090949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361308b5761308b61302b565b5060010190565b600061166a3683612bd2565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126130d357600080fd5b830160208101925035905067ffffffffffffffff8111156130f357600080fd5b803603821315612cfc57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60208152813560208201526000613165602084018461309e565b61014080604086015261317d61016086018385613102565b925061318c604087018761309e565b92507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08685030160608701526131c3848483613102565b9350506131d260608701612ba9565b73ffffffffffffffffffffffffffffffffffffffff8116608087015291506131fc60808701612ba9565b73ffffffffffffffffffffffffffffffffffffffff811660a0870152915061322660a08701612ba9565b73ffffffffffffffffffffffffffffffffffffffff811660c0870152915060c086013560e0860152610100915060e086013582860152613267828701612bc7565b91506101206132798187018415159052565b613284818801612bc7565b925050612ff28186018315159052565b8181038181111561166a5761166a61302b565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126132db57600080fd5b9190910192915050565b6000602082840312156132f757600080fd5b5051919050565b600060e0823603121561331057600080fd5b613318612a76565b61332183612ba9565b815261332f60208401612ba9565b602082015261334060408401612ba9565b604082015261335160608401612ba9565b60608201526080830135608082015260a083013567ffffffffffffffff81111561337a57600080fd5b61338636828601612b2e565b60a08301525061339860c08401612bc7565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126133d857600080fd5b83018035915067ffffffffffffffff8211156133f357600080fd5b602001915036819003821315612cfc57600080fd5b6000808585111561341857600080fd5b8386111561342557600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156134725780818660040360031b1b83161692505b505092915050565b8082018082111561166a5761166a61302b565b8183823760009101908152919050565b60208152600061244d6020830184612e9a565b6000602082840312156134c257600080fd5b815161244d81612bb9565b6000602082840312156134df57600080fd5b815167ffffffffffffffff8111156134f657600080fd5b8201601f8101841361350757600080fd5b8051613515612b4d82612ae8565b81815285602083850101111561352a57600080fd5b61353b826020830160208601612e76565b95945050505050565b600082516132db818460208701612e7656fea26469706673582212205a24ee91f4a051d2edb1ae95ade19576c3981a535d06200439a40fe8f06bc85e64736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var HopFacetOptimized__factory = /** @class */ (function (_super) {
    __extends(HopFacetOptimized__factory, _super);
    function HopFacetOptimized__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    HopFacetOptimized__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    HopFacetOptimized__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    HopFacetOptimized__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    HopFacetOptimized__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    HopFacetOptimized__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    HopFacetOptimized__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    HopFacetOptimized__factory.bytecode = _bytecode;
    HopFacetOptimized__factory.abi = _abi;
    return HopFacetOptimized__factory;
}(ethers_1.ContractFactory));
exports.HopFacetOptimized__factory = HopFacetOptimized__factory;
