/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        type: "function",
        name: "depositAndExecuteWithDynamicPatches",
        inputs: [
            {
                name: "tokenAddress",
                type: "address",
                internalType: "address",
            },
            {
                name: "valueSource",
                type: "address",
                internalType: "address",
            },
            {
                name: "valueGetter",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "finalTarget",
                type: "address",
                internalType: "address",
            },
            {
                name: "value",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "offsets",
                type: "uint256[]",
                internalType: "uint256[]",
            },
            {
                name: "delegateCall",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [
            {
                name: "success",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "returnData",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "depositAndExecuteWithMultiplePatches",
        inputs: [
            {
                name: "tokenAddress",
                type: "address",
                internalType: "address",
            },
            {
                name: "valueSources",
                type: "address[]",
                internalType: "address[]",
            },
            {
                name: "valueGetters",
                type: "bytes[]",
                internalType: "bytes[]",
            },
            {
                name: "finalTarget",
                type: "address",
                internalType: "address",
            },
            {
                name: "value",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "offsetGroups",
                type: "uint256[][]",
                internalType: "uint256[][]",
            },
            {
                name: "delegateCall",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [
            {
                name: "success",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "returnData",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "executeWithDynamicPatches",
        inputs: [
            {
                name: "valueSource",
                type: "address",
                internalType: "address",
            },
            {
                name: "valueGetter",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "finalTarget",
                type: "address",
                internalType: "address",
            },
            {
                name: "value",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "offsets",
                type: "uint256[]",
                internalType: "uint256[]",
            },
            {
                name: "delegateCall",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [
            {
                name: "success",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "returnData",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "executeWithMultiplePatches",
        inputs: [
            {
                name: "valueSources",
                type: "address[]",
                internalType: "address[]",
            },
            {
                name: "valueGetters",
                type: "bytes[]",
                internalType: "bytes[]",
            },
            {
                name: "finalTarget",
                type: "address",
                internalType: "address",
            },
            {
                name: "value",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "offsetGroups",
                type: "uint256[][]",
                internalType: "uint256[][]",
            },
            {
                name: "delegateCall",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [
            {
                name: "success",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "returnData",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "error",
        name: "CallExecutionFailed",
        inputs: [],
    },
    {
        type: "error",
        name: "FailedToGetDynamicValue",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidPatchOffset",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "MismatchedArrayLengths",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAnERC20Token",
        inputs: [],
    },
    {
        type: "error",
        name: "ZeroAddress",
        inputs: [],
    },
];
const _bytecode = "";
const isSuperArgs = (xs) => xs.length > 1;
export class Patcher__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
