import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { AcrossFacet, AcrossFacetInterface } from "../AcrossFacet";
declare type AcrossFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class AcrossFacet__factory extends ContractFactory {
    constructor(...args: AcrossFacetConstructorParams);
    deploy(_spokePool: PromiseOrValue<string>, _wrappedNative: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<AcrossFacet>;
    getDeployTransaction(_spokePool: PromiseOrValue<string>, _wrappedNative: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): AcrossFacet;
    connect(signer: Signer): AcrossFacet__factory;
    static readonly bytecode = "0x60c06040523480156200001157600080fd5b5060405162002a4b38038062002a4b833981016040819052620000349162000065565b6001600160a01b039182166080521660a052620000a4565b6001600160a01b03811681146200006257600080fd5b50565b600080604083850312156200007957600080fd5b825162000086816200004c565b602084015190925062000099816200004c565b809150509250929050565b60805160a051612973620000d860003960006106c701526000818161069c0152818161077d01526107a801526129736000f3fe6080604052600436106100295760003560e01c80631fd8010c1461002e5780633a3f733214610043575b600080fd5b61004161003c366004612269565b610056565b005b6100416100513660046122cd565b610292565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e234476123bb565b9050846101078160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561013e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361017c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101b9576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156101f7576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610235576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61024788608001518960c001516104d7565b6102518888610657565b5047915060009050828211610267576000610271565b61027183836123bb565b9050801561028557610285600085836108bd565b5050600090925550505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161030d576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061031e34476123bb565b90508680610100015161035d576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561039b576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886103be8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103f5576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610433576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610470576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104858a600001518b60c001518b8b336108ee565b60c08b01526104948a88610657565b50479150600090508282116104aa5760006104b4565b6104b483836123bb565b905080156104c8576104c8600085836108bd565b50506000909255505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216610530578034101561052c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b8060000361056a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156105d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fb91906123ce565b905081811015610646576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b61065283333085610a31565b505050565b608082015173ffffffffffffffffffffffffffffffffffffffff166107735760c082015160a083015160e084015173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001692631186ec339290917f00000000000000000000000000000000000000000000000000000000000000009083906106f660208901896123e7565b61070660408a0160208b0161240a565b61071360408b018b612430565b8b606001356040518b63ffffffff1660e01b815260040161073c9998979695949392919061249c565b6000604051808303818588803b15801561075557600080fd5b505af1158015610769573d6000803e3d6000fd5b5050505050610882565b6107a682608001517f00000000000000000000000000000000000000000000000000000000000000008460c00151610c4b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631186ec338360a0015184608001518560c001518660e0015186600001602081019061080991906123e7565b6108196040890160208a0161240a565b61082660408a018a612430565b8a606001356040518a63ffffffff1660e01b815260040161084f9998979695949392919061249c565b600060405180830381600087803b15801561086957600080fd5b505af115801561087d573d6000803e3d6000fd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1826040516108b191906125af565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff8316156108e457610652838383610d96565b6106528282610ec5565b60008280820361092a576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856109396001856123bb565b818110610948576109486126c2565b905060200281019061095a91906126f1565b61096b90608081019060600161272f565b9050600061097882610fef565b905073ffffffffffffffffffffffffffffffffffffffff82166109a25761099f34826123bb565b90505b60006109ae88886110a8565b90506109ba88886111b4565b6109c78a89898985611215565b6000826109d385610fef565b6109dd91906123bb565b905089811015610a23576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440161063d565b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416610a7e576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610acb576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610b3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6091906123ce565b9050610b6e828686866115c7565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610bde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0291906123ce565b610c0c91906123bb565b14610c43576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610c6b57505050565b73ffffffffffffffffffffffffffffffffffffffff8216610cb8576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610d2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5291906123ce565b905081811015610d9057610d908484610d8b847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6123bb565b6116a3565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610de3576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610e50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7491906123ce565b905080821115610eba576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161063d565b610d908484846117a1565b73ffffffffffffffffffffffffffffffffffffffff8216610f12576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115610f55576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810182905247602482015260440161063d565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610faf576040519150601f19603f3d011682016040523d82523d6000602084013e610fb4565b606091505b5050905080610652576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff8216156110a0576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611077573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109b91906123ce565b6110a2565b475b92915050565b60608160008167ffffffffffffffff8111156110c6576110c6611fc0565b6040519080825280602002602001820160405280156110ef578160200160208202803683370190505b5090506000805b838110156111a957868682818110611110576111106126c2565b905060200281019061112291906126f1565b61113390608081019060600161272f565b915061113e82610fef565b838281518110611150576111506126c2565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff82166111a15734838281518110611189576111896126c2565b6020026020010181815161119d91906123bb565b9052505b6001016110f6565b509095945050505050565b60005b818110156106525760008383838181106111d3576111d36126c2565b90506020028101906111e591906126f1565b6111ee9061274a565b90508060c001511561120c5761120c816040015182608001516104d7565b506001016111b7565b8383838382600181146114e257600085856112316001856123bb565b818110611240576112406126c2565b905060200281019061125291906126f1565b61126390608081019060600161272f565b9050600089815b8181101561140e57368d8d83818110611285576112856126c2565b905060200281019061129791906126f1565b90506112c66112ac606083016040840161272f565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061132957506113296112df604083016020840161272f565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561134057506113406112df602083018361272f565b80156113c557506113c561135760a0830183612430565b611366916004916000916127ef565b61136f91612819565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6113fb576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114058f826117f7565b5060010161126a565b505060005b61141e6001856123bb565b8110156114da576000888883818110611439576114396126c2565b905060200281019061144b91906126f1565b61145c90608081019060600161272f565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114d1578582815181106114a3576114a36126c2565b60200260200101516114b482610fef565b6114be91906123bb565b925082156114d1576114d18188856108bd565b50600101611413565b5050506115bb565b8760005b818110156115b857368b8b83818110611501576115016126c2565b905060200281019061151391906126f1565b90506115286112ac606083016040840161272f565b8061154157506115416112df604083016020840161272f565b801561155857506115586112df602083018361272f565b801561156f575061156f61135760a0830183612430565b6115a5576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115af8d826117f7565b506001016114e6565b50505b50505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610d909085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611b0d565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561171a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173e91906123ce565b6117489190612861565b60405173ffffffffffffffffffffffffffffffffffffffff8516602482015260448101829052909150610d909085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611621565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526106529084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611621565b61180d611807602083018361272f565b3b151590565b611843576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611883576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006118986112ac606085016040860161272f565b6118a35760006118a9565b82608001355b905060006118c56118c0606086016040870161272f565b610fef565b905060006118dc6118c0608087016060880161272f565b905082600003611913576119136118f9606087016040880161272f565b611909604088016020890161272f565b8760800135610c4b565b846080013582101561195e576040517fcf479181000000000000000000000000000000000000000000000000000000008152608086013560048201526024810183905260440161063d565b60008061196e602088018861272f565b73ffffffffffffffffffffffffffffffffffffffff168561199260a08a018a612430565b6040516119a0929190612874565b60006040518083038185875af1925050503d80600081146119dd576040519150601f19603f3d011682016040523d82523d6000602084013e6119e2565b606091505b509150915081611a2d5760006119f782611c19565b9050806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063d9190612884565b6000611a426118c060808a0160608b0161272f565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611a7360208b018b61272f565b611a8360608c0160408d0161272f565b611a9360808d0160608e0161272f565b8c60800135898711611aa55786611aaf565b611aaf8a886123bb565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6000611b6f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611c979092919063ffffffff16565b8051909150156106525780806020019051810190611b8d9190612897565b610652576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161063d565b6060604482511015611c5e57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611c7a6004808551611c7291906123bb565b859190611cae565b905080806020019051810190611c9091906128b4565b9392505050565b6060611ca68484600085611dc8565b949350505050565b606081611cbc81601f612861565b1015611cf4576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611cfe8284612861565b84511015611d38576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611d575760405191506000825260208201604052611dbf565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611d90578051835260209283019201611d78565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b606082471015611e5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161063d565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611e83919061292b565b60006040518083038185875af1925050503d8060008114611ec0576040519150601f19603f3d011682016040523d82523d6000602084013e611ec5565b606091505b5091509150611ed687838387611ee1565b979650505050505050565b60608315611f77578251600003611f705773ffffffffffffffffffffffffffffffffffffffff85163b611f70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161063d565b5081611ca6565b611ca68383815115611f8c5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063d9190612884565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561201357612013611fc0565b60405290565b60405160e0810167ffffffffffffffff8111828210171561201357612013611fc0565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561208357612083611fc0565b604052919050565b600067ffffffffffffffff8211156120a5576120a5611fc0565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126120e257600080fd5b81356120f56120f08261208b565b61203c565b81815284602083860101111561210a57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461214b57600080fd5b919050565b801515811461215e57600080fd5b50565b803561214b81612150565b6000610140828403121561217f57600080fd5b612187611fef565b905081358152602082013567ffffffffffffffff808211156121a857600080fd5b6121b4858386016120d1565b602084015260408401359150808211156121cd57600080fd5b506121da848285016120d1565b6040830152506121ec60608301612127565b60608201526121fd60808301612127565b608082015261220e60a08301612127565b60a082015260c082013560c082015260e082013560e0820152610100612235818401612161565b90820152610120612247838201612161565b9082015292915050565b60006080828403121561226357600080fd5b50919050565b6000806040838503121561227c57600080fd5b823567ffffffffffffffff8082111561229457600080fd5b6122a08683870161216c565b935060208501359150808211156122b657600080fd5b506122c385828601612251565b9150509250929050565b600080600080606085870312156122e357600080fd5b843567ffffffffffffffff808211156122fb57600080fd5b6123078883890161216c565b9550602087013591508082111561231d57600080fd5b818701915087601f83011261233157600080fd5b81358181111561234057600080fd5b8860208260051b850101111561235557600080fd5b60208301955080945050604087013591508082111561237357600080fd5b5061238087828801612251565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156110a2576110a261238c565b6000602082840312156123e057600080fd5b5051919050565b6000602082840312156123f957600080fd5b81358060070b8114611c9057600080fd5b60006020828403121561241c57600080fd5b813563ffffffff81168114611c9057600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261246557600080fd5b83018035915067ffffffffffffffff82111561248057600080fd5b60200191503681900382131561249557600080fd5b9250929050565b600061010073ffffffffffffffffffffffffffffffffffffffff808d168452808c166020850152508960408401528860608401528760070b608084015263ffffffff871660a08401528060c0840152848184015250610120848682850137600083860182015260e083019390935250601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690910101979650505050505050565b60005b8381101561255c578181015183820152602001612544565b50506000910152565b6000815180845261257d816020860160208601612541565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815281516020820152600060208301516101408060408501526125d8610160850183612565565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526126138382612565565b925050606085015161263d608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206126b08187018315159052565b90950151151593019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261272557600080fd5b9190910192915050565b60006020828403121561274157600080fd5b611c9082612127565b600060e0823603121561275c57600080fd5b612764612019565b61276d83612127565b815261277b60208401612127565b602082015261278c60408401612127565b604082015261279d60608401612127565b60608201526080830135608082015260a083013567ffffffffffffffff8111156127c657600080fd5b6127d2368286016120d1565b60a0830152506127e460c08401612161565b60c082015292915050565b600080858511156127ff57600080fd5b8386111561280c57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156128595780818660040360031b1b83161692505b505092915050565b808201808211156110a2576110a261238c565b8183823760009101908152919050565b602081526000611c906020830184612565565b6000602082840312156128a957600080fd5b8151611c9081612150565b6000602082840312156128c657600080fd5b815167ffffffffffffffff8111156128dd57600080fd5b8201601f810184136128ee57600080fd5b80516128fc6120f08261208b565b81815285602083850101111561291157600080fd5b612922826020830160208601612541565b95945050505050565b6000825161272581846020870161254156fea264697066735822122036e0c3db2c56f5eb6bd2f22991948766e8dbb7eb73388dda25447f8d35e40fef64736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IAcrossSpokePool";
            readonly name: "_spokePool";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wrappedNative";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "CannotBridgeToSameNetwork";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ContractCallNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "minAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "receivedAmount";
            readonly type: "uint256";
        }];
        readonly name: "CumulativeSlippageTooHigh";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InformationMismatch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "required";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidContract";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidReceiver";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeAssetTransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapDataProvided";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapFromZeroBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoTransferToNullAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAValidSpender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ReentrancyError";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOutOfBounds";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOverflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferRecovered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly indexed: false;
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "bridgeData";
            readonly type: "tuple";
        }];
        readonly name: "LiFiTransferStarted";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "int64";
                readonly name: "relayerFeePct";
                readonly type: "int64";
            }, {
                readonly internalType: "uint32";
                readonly name: "quoteTimestamp";
                readonly type: "uint32";
            }, {
                readonly internalType: "bytes";
                readonly name: "message";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint256";
                readonly name: "maxCount";
                readonly type: "uint256";
            }];
            readonly internalType: "struct AcrossFacet.AcrossData";
            readonly name: "_acrossData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaAcross";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "int64";
                readonly name: "relayerFeePct";
                readonly type: "int64";
            }, {
                readonly internalType: "uint32";
                readonly name: "quoteTimestamp";
                readonly type: "uint32";
            }, {
                readonly internalType: "bytes";
                readonly name: "message";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint256";
                readonly name: "maxCount";
                readonly type: "uint256";
            }];
            readonly internalType: "struct AcrossFacet.AcrossData";
            readonly name: "_acrossData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaAcross";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): AcrossFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): AcrossFacet;
}
export {};
