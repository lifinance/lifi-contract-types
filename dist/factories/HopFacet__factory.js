"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.HopFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        name: "AlreadyInitialized",
        type: "error",
    },
    {
        inputs: [],
        name: "CannotBridgeToSameNetwork",
        type: "error",
    },
    {
        inputs: [],
        name: "ContractCallNotAllowed",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "receivedAmount",
                type: "uint256",
            },
        ],
        name: "CumulativeSlippageTooHigh",
        type: "error",
    },
    {
        inputs: [],
        name: "InformationMismatch",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "required",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
        ],
        name: "InsufficientBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidAmount",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidConfig",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidContract",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidReceiver",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeAssetTransferFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapDataProvided",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapFromZeroBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "NoTransferToNullAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "NotInitialized",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAValidSpender",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAnERC20Token",
        type: "error",
    },
    {
        inputs: [],
        name: "OnlyContractOwner",
        type: "error",
    },
    {
        inputs: [],
        name: "ReentrancyError",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOverflow",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "assetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "bridge",
                type: "address",
            },
        ],
        name: "HopBridgeRegistered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "assetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "bridge",
                        type: "address",
                    },
                ],
                indexed: false,
                internalType: "struct HopFacet.Config[]",
                name: "configs",
                type: "tuple[]",
            },
        ],
        name: "HopInitialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferCompleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferRecovered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                name: "bridgeData",
                type: "tuple",
            },
        ],
        name: "LiFiTransferStarted",
        type: "event",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "assetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "bridge",
                        type: "address",
                    },
                ],
                internalType: "struct HopFacet.Config[]",
                name: "configs",
                type: "tuple[]",
            },
        ],
        name: "initHop",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "assetId",
                type: "address",
            },
            {
                internalType: "address",
                name: "bridge",
                type: "address",
            },
        ],
        name: "registerBridge",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "bonderFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationAmountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationDeadline",
                        type: "uint256",
                    },
                ],
                internalType: "struct HopFacet.HopData",
                name: "_hopData",
                type: "tuple",
            },
        ],
        name: "startBridgeTokensViaHop",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "_swapData",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "bonderFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationAmountOutMin",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationDeadline",
                        type: "uint256",
                    },
                ],
                internalType: "struct HopFacet.HopData",
                name: "_hopData",
                type: "tuple",
            },
        ],
        name: "swapAndStartBridgeTokensViaHop",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b50612efc806100206000396000f3fe60806040526004361061003f5760003560e01c80633961d1ed1461004457806367fdd71e14610066578063e55f811014610086578063fa904c1214610099575b600080fd5b34801561005057600080fd5b5061006461005f36600461249c565b6100ac565b005b34801561007257600080fd5b506100646100813660046124cf565b610209565b61006461009436600461281c565b61043e565b6100646100a73660046128c8565b610683565b6100b46108cd565b7f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b9547f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b89060ff16610131576040517f87138d5c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661017e576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8381166000818152602084815260409182902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169487169485179055905192835290917fcf56a25ddc5c325bc2d2557f7eee90d061f2e19b7294a6ef738f86f2c3d9280c910160405180910390a2505050565b6102116108cd565b7f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b9547f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b89060ff161561028f576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b828110156103d05760008484838181106102ae576102ae612940565b90506040020160200160208101906102c6919061296f565b73ffffffffffffffffffffffffffffffffffffffff1603610313576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83838281811061032557610325612940565b905060400201602001602081019061033d919061296f565b82600086868581811061035257610352612940565b610368926020604090920201908101915061296f565b73ffffffffffffffffffffffffffffffffffffffff9081168252602082019290925260400160002080547fffffffffffffffffffffffff00000000000000000000000000000000000000001692909116919091179055806103c8816129b9565b915050610292565b50600181810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690911790556040517f5910f57b2fdae9f2f45a1d913c63f55985d0f77d120de8aab63e686ff670dde39061043190859085906129f1565b60405180910390a1505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016104b9576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006104ca3447612a60565b905086806101000151610509576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8780610120015115610547576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8861056a8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156105a1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036105df576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361061c576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106318a600001518b60c001518b8b33610942565b60c08b01526106408a88610a8a565b5047915060009050828211610656576000610660565b6106608383612a60565b905080156106745761067460008583610d47565b50506000909255505050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016106fe576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061070f3447612a60565b9050848061010001511561074f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b858061012001511561078d576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866107b08160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156107e7576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610825576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610862576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61087488608001518960c00151610d7d565b61088c88610887368a90038a018a612a73565b610a8a565b50479150600090508282116108a25760006108ac565b6108ac8383612a60565b905080156108c0576108c060008583610d47565b5050600090925550505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314610940576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008280820361097e576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000858561098d600185612a60565b81811061099c5761099c612940565b90506020028101906109ae9190612a8f565b6109bf90608081019060600161296f565b905060006109cc82610ef3565b905073ffffffffffffffffffffffffffffffffffffffff82166109f6576109f33482612a60565b90505b6000610a028888610fac565b9050610a0e88886110b8565b610a1b8a89898985611119565b600082610a2785610ef3565b610a319190612a60565b905089811015610a7c576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b8160e001514603610ac7576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608082015173ffffffffffffffffffffffffffffffffffffffff80821660009081527f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b8602081905260409091205460c086015191921690610b2b90849083906114cb565b600073ffffffffffffffffffffffffffffffffffffffff841615610b50576000610b56565b8560c001515b905046600103610c295760e086015160a087015160c0880151606088015160808901516040517fdeace8f5000000000000000000000000000000000000000000000000000000008152600481019590955273ffffffffffffffffffffffffffffffffffffffff9384166024860152604485019290925260648401526084830152600060a4830181905260c483015283169063deace8f590839060e4016000604051808303818588803b158015610c0b57600080fd5b505af1158015610c1f573d6000803e3d6000fd5b5050505050610d08565b60e086015160a087015160c0880151875160208901516040808b015160608c015160808d015192517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019890985273ffffffffffffffffffffffffffffffffffffffff968716602489015260448801959095526064870193909352608486019190915260a485019190915260c484019190915260e483015283169063eea0d7b2908390610104016000604051808303818588803b158015610cee57600080fd5b505af1158015610d02573d6000803e3d6000fd5b50505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f186604051610d379190612b3b565b60405180910390a1505050505050565b73ffffffffffffffffffffffffffffffffffffffff831615610d7357610d6e838383611616565b505050565b610d6e8282611745565b73ffffffffffffffffffffffffffffffffffffffff8216610dd65780341015610dd2576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610e10576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610e7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea19190612c4e565b905081811015610ee7576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610a73565b610d6e8333308561186f565b600073ffffffffffffffffffffffffffffffffffffffff821615610fa4576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610f7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9f9190612c4e565b610fa6565b475b92915050565b60608160008167ffffffffffffffff811115610fca57610fca612544565b604051908082528060200260200182016040528015610ff3578160200160208202803683370190505b5090506000805b838110156110ad5786868281811061101457611014612940565b90506020028101906110269190612a8f565b61103790608081019060600161296f565b915061104282610ef3565b83828151811061105457611054612940565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff82166110a5573483828151811061108d5761108d612940565b602002602001018181516110a19190612a60565b9052505b600101610ffa565b509095945050505050565b60005b81811015610d6e5760008383838181106110d7576110d7612940565b90506020028101906110e99190612a8f565b6110f290612c67565b90508060c00151156111105761111081604001518260800151610d7d565b506001016110bb565b8383838382600181146113e65760008585611135600185612a60565b81811061114457611144612940565b90506020028101906111569190612a8f565b61116790608081019060600161296f565b9050600089815b8181101561131257368d8d8381811061118957611189612940565b905060200281019061119b9190612a8f565b90506111ca6111b0606083016040840161296f565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061122d575061122d6111e3604083016020840161296f565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561124457506112446111e3602083018361296f565b80156112c957506112c961125b60a0830183612d0c565b61126a91600491600091612d78565b61127391612da2565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6112ff576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113098f82611a89565b5060010161116e565b505060005b611322600185612a60565b8110156113de57600088888381811061133d5761133d612940565b905060200281019061134f9190612a8f565b61136090608081019060600161296f565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113d5578582815181106113a7576113a7612940565b60200260200101516113b882610ef3565b6113c29190612a60565b925082156113d5576113d5818885610d47565b50600101611317565b5050506114bf565b8760005b818110156114bc57368b8b8381811061140557611405612940565b90506020028101906114179190612a8f565b905061142c6111b0606083016040840161296f565b8061144557506114456111e3604083016020840161296f565b801561145c575061145c6111e3602083018361296f565b8015611473575061147361125b60a0830183612d0c565b6114a9576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114b38d82611a89565b506001016113ea565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166114eb57505050565b73ffffffffffffffffffffffffffffffffffffffff8216611538576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa1580156115ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d29190612c4e565b90508181101561161057611610848461160b847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612a60565b611d9f565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316611663576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa1580156116d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f49190612c4e565b90508082111561173a576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610a73565b611610848484611f1b565b73ffffffffffffffffffffffffffffffffffffffff8216611792576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156117d5576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610a73565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461182f576040519150601f19603f3d011682016040523d82523d6000602084013e611834565b606091505b5050905080610d6e576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff84166118bc576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611909576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa15801561197a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199e9190612c4e565b90506119ac82868686611f71565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611a1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a409190612c4e565b611a4a9190612a60565b14611a81576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b611a9f611a99602083018361296f565b3b151590565b611ad5576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611b15576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b2a6111b0606085016040860161296f565b611b35576000611b3b565b82608001355b90506000611b57611b52606086016040870161296f565b610ef3565b90506000611b6e611b52608087016060880161296f565b905082600003611ba557611ba5611b8b606087016040880161296f565b611b9b604088016020890161296f565b87608001356114cb565b8460800135821015611bf0576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610a73565b600080611c00602088018861296f565b73ffffffffffffffffffffffffffffffffffffffff1685611c2460a08a018a612d0c565b604051611c32929190612dea565b60006040518083038185875af1925050503d8060008114611c6f576040519150601f19603f3d011682016040523d82523d6000602084013e611c74565b606091505b509150915081611cbf576000611c8982611fcf565b9050806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a739190612dfa565b6000611cd4611b5260808a0160608b0161296f565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611d0560208b018b61296f565b611d1560608c0160408d0161296f565b611d2560808d0160608e0161296f565b8c60800135898711611d375786611d41565b611d418a88612a60565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611e16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3a9190612c4e565b611e449190612e0d565b60405173ffffffffffffffffffffffffffffffffffffffff85166024820152604481018290529091506116109085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261204d565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610d6e9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611e99565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526116109085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611e99565b606060448251101561201457505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b600061203060048085516120289190612a60565b859190612159565b9050808060200190518101906120469190612e20565b9392505050565b60006120af826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166122739092919063ffffffff16565b805190915015610d6e57808060200190518101906120cd9190612e97565b610d6e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610a73565b60608161216781601f612e0d565b101561219f576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6121a98284612e0d565b845110156121e3576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015612202576040519150600082526020820160405261226a565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561223b578051835260209283019201612223565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6060612282848460008561228a565b949350505050565b60608247101561231c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610a73565b73ffffffffffffffffffffffffffffffffffffffff85163b61239a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a73565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516123c39190612eb4565b60006040518083038185875af1925050503d8060008114612400576040519150601f19603f3d011682016040523d82523d6000602084013e612405565b606091505b5091509150612415828286612420565b979650505050505050565b6060831561242f575081612046565b82511561243f5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a739190612dfa565b803573ffffffffffffffffffffffffffffffffffffffff8116811461249757600080fd5b919050565b600080604083850312156124af57600080fd5b6124b883612473565b91506124c660208401612473565b90509250929050565b600080602083850312156124e257600080fd5b823567ffffffffffffffff808211156124fa57600080fd5b818501915085601f83011261250e57600080fd5b81358181111561251d57600080fd5b8660208260061b850101111561253257600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561259757612597612544565b60405290565b60405160e0810167ffffffffffffffff8111828210171561259757612597612544565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561260757612607612544565b604052919050565b600067ffffffffffffffff82111561262957612629612544565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261266657600080fd5b81356126796126748261260f565b6125c0565b81815284602083860101111561268e57600080fd5b816020850160208301376000918101602001919091529392505050565b80151581146126b957600080fd5b50565b8035612497816126ab565b600061014082840312156126da57600080fd5b6126e2612573565b905081358152602082013567ffffffffffffffff8082111561270357600080fd5b61270f85838601612655565b6020840152604084013591508082111561272857600080fd5b5061273584828501612655565b60408301525061274760608301612473565b606082015261275860808301612473565b608082015261276960a08301612473565b60a082015260c082013560c082015260e082013560e08201526101006127908184016126bc565b908201526101206127a28382016126bc565b9082015292915050565b600060a082840312156127be57600080fd5b60405160a0810181811067ffffffffffffffff821117156127e1576127e1612544565b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b60008060008060e0858703121561283257600080fd5b843567ffffffffffffffff8082111561284a57600080fd5b612856888389016126c7565b9550602087013591508082111561286c57600080fd5b818701915087601f83011261288057600080fd5b81358181111561288f57600080fd5b8860208260051b85010111156128a457600080fd5b6020830195508094505050506128bd86604087016127ac565b905092959194509250565b60008082840360c08112156128dc57600080fd5b833567ffffffffffffffff8111156128f357600080fd5b6128ff868287016126c7565b93505060a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561293257600080fd5b506020830190509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561298157600080fd5b61204682612473565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036129ea576129ea61298a565b5060010190565b6020808252818101839052600090604080840186845b87811015612a535773ffffffffffffffffffffffffffffffffffffffff80612a2e84612473565b16845280612a3d878501612473565b1684870152509183019190830190600101612a07565b5090979650505050505050565b81810381811115610fa657610fa661298a565b600060a08284031215612a8557600080fd5b61204683836127ac565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612ac357600080fd5b9190910192915050565b60005b83811015612ae8578181015183820152602001612ad0565b50506000910152565b60008151808452612b09816020860160208601612acd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081528151602082015260006020830151610140806040850152612b64610160850183612af1565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152612b9f8382612af1565b9250506060850151612bc9608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120612c3c8187018315159052565b90950151151593019290925250919050565b600060208284031215612c6057600080fd5b5051919050565b600060e08236031215612c7957600080fd5b612c8161259d565b612c8a83612473565b8152612c9860208401612473565b6020820152612ca960408401612473565b6040820152612cba60608401612473565b60608201526080830135608082015260a083013567ffffffffffffffff811115612ce357600080fd5b612cef36828601612655565b60a083015250612d0160c084016126bc565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612d4157600080fd5b83018035915067ffffffffffffffff821115612d5c57600080fd5b602001915036819003821315612d7157600080fd5b9250929050565b60008085851115612d8857600080fd5b83861115612d9557600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612de25780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b6020815260006120466020830184612af1565b80820180821115610fa657610fa661298a565b600060208284031215612e3257600080fd5b815167ffffffffffffffff811115612e4957600080fd5b8201601f81018413612e5a57600080fd5b8051612e686126748261260f565b818152856020838501011115612e7d57600080fd5b612e8e826020830160208601612acd565b95945050505050565b600060208284031215612ea957600080fd5b8151612046816126ab565b60008251612ac3818460208701612acd56fea26469706673582212206f160abe29f005694c108a901ce742190a05022beeb2b448ba12031cd571968064736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var HopFacet__factory = /** @class */ (function (_super) {
    __extends(HopFacet__factory, _super);
    function HopFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    HopFacet__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    HopFacet__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    HopFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    HopFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    HopFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    HopFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    HopFacet__factory.bytecode = _bytecode;
    HopFacet__factory.abi = _abi;
    return HopFacet__factory;
}(ethers_1.ContractFactory));
exports.HopFacet__factory = HopFacet__factory;
