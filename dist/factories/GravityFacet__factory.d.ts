import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { GravityFacet, GravityFacetInterface } from "../GravityFacet";
declare type GravityFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class GravityFacet__factory extends ContractFactory {
    constructor(...args: GravityFacetConstructorParams);
    deploy(_router: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<GravityFacet>;
    getDeployTransaction(_router: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): GravityFacet;
    connect(signer: Signer): GravityFacet__factory;
    static readonly bytecode = "0x60a06040523480156200001157600080fd5b506040516200286938038062002869833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b6080516127ce6200009b60003960008181610717015261078901526127ce6000f3fe6080604052600436106100295760003560e01c806331191ec31461002e578063eca3735c14610043575b600080fd5b61004161003c3660046121af565b610056565b005b610041610051366004612213565b6102ed565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e23447612301565b90508480610100015115610122576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8580610120015115610160576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866101838160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101ba576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101f8576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610235576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87610258816080015173ffffffffffffffffffffffffffffffffffffffff161590565b1561028f576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102a189608001518a60c0015161058d565b6102ab898961070d565b5047925060009150508282116102c25760006102cc565b6102cc8383612301565b905080156102e0576102e06000858361082e565b5050600090925550505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610368576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006103793447612301565b9050868061010001516103b8576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101200151156103f6576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886104198160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610450576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361048e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104cb576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b896104ee816080015173ffffffffffffffffffffffffffffffffffffffff161590565b15610525576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61053a8b600001518c60c001518c8c3361085f565b60c08c01526105498b8961070d565b50479250600091505082821161056057600061056a565b61056a8383612301565b9050801561057e5761057e6000858361082e565b50506000909255505050505050565b73ffffffffffffffffffffffffffffffffffffffff82166105e657803410156105e2576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610620576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa15801561068d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b19190612314565b9050818110156106fc576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b610708833330856109a2565b505050565b61074082608001517f00000000000000000000000000000000000000000000000000000000000000008460c00151610bbc565b6080820151815160c08401516040517f0f21235700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001693630f212357936107c193919290919060040161237d565b600060405180830381600087803b1580156107db57600080fd5b505af11580156107ef573d6000803e3d6000fd5b505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161082291906123bc565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff83161561085557610708838383610d07565b6107088282610e36565b60008280820361089b576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856108aa600185612301565b8181106108b9576108b96124b1565b90506020028101906108cb91906124e0565b6108dc90608081019060600161251e565b905060006108e982610f60565b905073ffffffffffffffffffffffffffffffffffffffff8216610913576109103482612301565b90505b600061091f8888611019565b905061092b8888611125565b6109388a89898985611186565b60008261094485610f60565b61094e9190612301565b905089811015610994576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044016106f3565b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff84166109ef576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610a3c576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610aad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad19190612314565b9050610adf82868686611538565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610b4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b739190612314565b610b7d9190612301565b14610bb4576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610bdc57505050565b73ffffffffffffffffffffffffffffffffffffffff8216610c29576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610c9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc39190612314565b905081811015610d0157610d018484610cfc847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612301565b6115f6565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610d54576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610dc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de59190612314565b905080821115610e2b576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016106f3565b610d018484846116f4565b73ffffffffffffffffffffffffffffffffffffffff8216610e83576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115610ec6576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016106f3565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610f20576040519150601f19603f3d011682016040523d82523d6000602084013e610f25565b606091505b5050905080610708576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff821615611011576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610fe8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100c9190612314565b611013565b475b92915050565b60608160008167ffffffffffffffff81111561103757611037611ef5565b604051908082528060200260200182016040528015611060578160200160208202803683370190505b5090506000805b8381101561111a57868682818110611081576110816124b1565b905060200281019061109391906124e0565b6110a490608081019060600161251e565b91506110af82610f60565b8382815181106110c1576110c16124b1565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff821661111257348382815181106110fa576110fa6124b1565b6020026020010181815161110e9190612301565b9052505b600101611067565b509095945050505050565b60005b81811015610708576000838383818110611144576111446124b1565b905060200281019061115691906124e0565b61115f90612539565b90508060c001511561117d5761117d8160400151826080015161058d565b50600101611128565b83838383826001811461145357600085856111a2600185612301565b8181106111b1576111b16124b1565b90506020028101906111c391906124e0565b6111d490608081019060600161251e565b9050600089815b8181101561137f57368d8d838181106111f6576111f66124b1565b905060200281019061120891906124e0565b905061123761121d606083016040840161251e565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061129a575061129a611250604083016020840161251e565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156112b157506112b1611250602083018361251e565b801561133657506113366112c860a08301836125de565b6112d79160049160009161264a565b6112e091612674565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61136c576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113768f8261174a565b506001016111db565b505060005b61138f600185612301565b81101561144b5760008888838181106113aa576113aa6124b1565b90506020028101906113bc91906124e0565b6113cd90608081019060600161251e565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461144257858281518110611414576114146124b1565b602002602001015161142582610f60565b61142f9190612301565b925082156114425761144281888561082e565b50600101611384565b50505061152c565b8760005b8181101561152957368b8b83818110611472576114726124b1565b905060200281019061148491906124e0565b905061149961121d606083016040840161251e565b806114b257506114b2611250604083016020840161251e565b80156114c957506114c9611250602083018361251e565b80156114e057506114e06112c860a08301836125de565b611516576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115208d8261174a565b50600101611457565b50505b50505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610d019085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611a60565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561166d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116919190612314565b61169b91906126bc565b60405173ffffffffffffffffffffffffffffffffffffffff8516602482015260448101829052909150610d019085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611592565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526107089084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611592565b61176061175a602083018361251e565b3b151590565b611796576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036117d6576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006117eb61121d606085016040860161251e565b6117f65760006117fc565b82608001355b90506000611818611813606086016040870161251e565b610f60565b9050600061182f611813608087016060880161251e565b9050826000036118665761186661184c606087016040880161251e565b61185c604088016020890161251e565b8760800135610bbc565b84608001358210156118b1576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016106f3565b6000806118c1602088018861251e565b73ffffffffffffffffffffffffffffffffffffffff16856118e560a08a018a6125de565b6040516118f39291906126cf565b60006040518083038185875af1925050503d8060008114611930576040519150601f19603f3d011682016040523d82523d6000602084013e611935565b606091505b50915091508161198057600061194a82611b6c565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f391906126df565b600061199561181360808a0160608b0161251e565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896119c660208b018b61251e565b6119d660608c0160408d0161251e565b6119e660808d0160608e0161251e565b8c608001358987116119f85786611a02565b611a028a88612301565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6000611ac2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611bea9092919063ffffffff16565b8051909150156107085780806020019051810190611ae091906126f2565b610708576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016106f3565b6060604482511015611bb157505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611bcd6004808551611bc59190612301565b859190611c01565b905080806020019051810190611be3919061270f565b9392505050565b6060611bf98484600085611cfd565b949350505050565b606081611c0f81601f6126bc565b1015611c47576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c5182846126bc565b84511015611c8b576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611caa5760405191506000825260208201604052611cf4565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611ce3578051835260209283019201611ccb565b5050858452601f01601f1916604052505b50949350505050565b606082471015611d8f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016106f3565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611db89190612786565b60006040518083038185875af1925050503d8060008114611df5576040519150601f19603f3d011682016040523d82523d6000602084013e611dfa565b606091505b5091509150611e0b87838387611e16565b979650505050505050565b60608315611eac578251600003611ea55773ffffffffffffffffffffffffffffffffffffffff85163b611ea5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106f3565b5081611bf9565b611bf98383815115611ec15781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f391906126df565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611f4857611f48611ef5565b60405290565b60405160e0810167ffffffffffffffff81118282101715611f4857611f48611ef5565b604051601f8201601f1916810167ffffffffffffffff81118282101715611f9a57611f9a611ef5565b604052919050565b600067ffffffffffffffff821115611fbc57611fbc611ef5565b50601f01601f191660200190565b600082601f830112611fdb57600080fd5b8135611fee611fe982611fa2565b611f71565b81815284602083860101111561200357600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461204457600080fd5b919050565b801515811461205757600080fd5b50565b803561204481612049565b6000610140828403121561207857600080fd5b612080611f24565b905081358152602082013567ffffffffffffffff808211156120a157600080fd5b6120ad85838601611fca565b602084015260408401359150808211156120c657600080fd5b506120d384828501611fca565b6040830152506120e560608301612020565b60608201526120f660808301612020565b608082015261210760a08301612020565b60a082015260c082013560c082015260e082013560e082015261010061212e81840161205a565b9082015261012061214083820161205a565b9082015292915050565b60006020828403121561215c57600080fd5b6040516020810167ffffffffffffffff828210818311171561218057612180611ef5565b81604052829350843591508082111561219857600080fd5b506121a585828601611fca565b8252505092915050565b600080604083850312156121c257600080fd5b823567ffffffffffffffff808211156121da57600080fd5b6121e686838701612065565b935060208501359150808211156121fc57600080fd5b506122098582860161214a565b9150509250929050565b6000806000806060858703121561222957600080fd5b843567ffffffffffffffff8082111561224157600080fd5b61224d88838901612065565b9550602087013591508082111561226357600080fd5b818701915087601f83011261227757600080fd5b81358181111561228657600080fd5b8860208260051b850101111561229b57600080fd5b6020830195508094505060408701359150808211156122b957600080fd5b506122c68782880161214a565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115611013576110136122d2565b60006020828403121561232657600080fd5b5051919050565b60005b83811015612348578181015183820152602001612330565b50506000910152565b6000815180845261236981602086016020860161232d565b601f01601f19169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff841681526060602082015260006123ac6060830185612351565b9050826040830152949350505050565b6020815281516020820152600060208301516101408060408501526123e5610160850183612351565b91506040850151601f198584030160608601526124028382612351565b925050606085015161242c608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e085015161010081818701528087015191505061012061249f8187018315159052565b90950151151593019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261251457600080fd5b9190910192915050565b60006020828403121561253057600080fd5b611be382612020565b600060e0823603121561254b57600080fd5b612553611f4e565b61255c83612020565b815261256a60208401612020565b602082015261257b60408401612020565b604082015261258c60608401612020565b60608201526080830135608082015260a083013567ffffffffffffffff8111156125b557600080fd5b6125c136828601611fca565b60a0830152506125d360c0840161205a565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261261357600080fd5b83018035915067ffffffffffffffff82111561262e57600080fd5b60200191503681900382131561264357600080fd5b9250929050565b6000808585111561265a57600080fd5b8386111561266757600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156126b45780818660040360031b1b83161692505b505092915050565b80820180821115611013576110136122d2565b8183823760009101908152919050565b602081526000611be36020830184612351565b60006020828403121561270457600080fd5b8151611be381612049565b60006020828403121561272157600080fd5b815167ffffffffffffffff81111561273857600080fd5b8201601f8101841361274957600080fd5b8051612757611fe982611fa2565b81815285602083850101111561276c57600080fd5b61277d82602083016020860161232d565b95945050505050565b6000825161251481846020870161232d56fea26469706673582212201fb5064f03d354a2eb0d52bbb3e65b500c150e22dd823987ab80024f06f96fd364736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IGravityRouter";
            readonly name: "_router";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "CannotBridgeToSameNetwork";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ContractCallNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "minAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "receivedAmount";
            readonly type: "uint256";
        }];
        readonly name: "CumulativeSlippageTooHigh";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InformationMismatch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "required";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidContract";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidReceiver";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeAssetNotSupported";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeAssetTransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapDataProvided";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapFromZeroBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoTransferToNullAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAValidSpender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ReentrancyError";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOutOfBounds";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOverflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferRecovered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly indexed: false;
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "bridgeData";
            readonly type: "tuple";
        }];
        readonly name: "LiFiTransferStarted";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "string";
                readonly name: "destinationAddress";
                readonly type: "string";
            }];
            readonly internalType: "struct GravityFacet.GravityData";
            readonly name: "_gravityData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaGravity";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "string";
                readonly name: "destinationAddress";
                readonly type: "string";
            }];
            readonly internalType: "struct GravityFacet.GravityData";
            readonly name: "_gravityData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaGravity";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): GravityFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): GravityFacet;
}
export {};
