"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ICurveV2__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "exchange",
        inputs: [
            {
                name: "i",
                type: "int128",
                internalType: "int128",
            },
            {
                name: "j",
                type: "int128",
                internalType: "int128",
            },
            {
                name: "dx",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "min_dy",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "exchange_received",
        inputs: [
            {
                name: "i",
                type: "int128",
                internalType: "int128",
            },
            {
                name: "j",
                type: "int128",
                internalType: "int128",
            },
            {
                name: "dx",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "min_dy",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
];
var ICurveV2__factory = /** @class */ (function () {
    function ICurveV2__factory() {
    }
    ICurveV2__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ICurveV2__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ICurveV2__factory.abi = _abi;
    return ICurveV2__factory;
}());
exports.ICurveV2__factory = ICurveV2__factory;
