"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeBridgeFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "contract IDeBridgeGate",
                name: "_deBridgeGate",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "CannotBridgeToSameNetwork",
        type: "error",
    },
    {
        inputs: [],
        name: "ContractCallNotAllowed",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "receivedAmount",
                type: "uint256",
            },
        ],
        name: "CumulativeSlippageTooHigh",
        type: "error",
    },
    {
        inputs: [],
        name: "InformationMismatch",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "required",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
        ],
        name: "InsufficientBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidAmount",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidContract",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidReceiver",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeAssetTransferFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapDataProvided",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapFromZeroBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "NoTransferToNullAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAValidSpender",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAnERC20Token",
        type: "error",
    },
    {
        inputs: [],
        name: "ReentrancyError",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOverflow",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "string",
                name: "integrator",
                type: "string",
            },
            {
                indexed: false,
                internalType: "string",
                name: "referrer",
                type: "string",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "fromAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "toAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "fromAmount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "toAmount",
                type: "uint256",
            },
        ],
        name: "LiFiGenericSwapCompleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "string",
                name: "integrator",
                type: "string",
            },
            {
                indexed: false,
                internalType: "string",
                name: "referrer",
                type: "string",
            },
            {
                indexed: false,
                internalType: "address",
                name: "fromAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "toAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "fromAmount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "toAmount",
                type: "uint256",
            },
        ],
        name: "LiFiSwappedGeneric",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferCompleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferRecovered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                name: "bridgeData",
                type: "tuple",
            },
        ],
        name: "LiFiTransferStarted",
        type: "event",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "nativeFee",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "useAssetFee",
                        type: "bool",
                    },
                    {
                        internalType: "uint32",
                        name: "referralCode",
                        type: "uint32",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "executionFee",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "flags",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "fallbackAddress",
                                type: "bytes",
                            },
                            {
                                internalType: "bytes",
                                name: "data",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct DeBridgeFacet.SubmissionAutoParamsTo",
                        name: "autoParams",
                        type: "tuple",
                    },
                ],
                internalType: "struct DeBridgeFacet.DeBridgeData",
                name: "_deBridgeData",
                type: "tuple",
            },
        ],
        name: "startBridgeTokensViaDeBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "_swapData",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "nativeFee",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "useAssetFee",
                        type: "bool",
                    },
                    {
                        internalType: "uint32",
                        name: "referralCode",
                        type: "uint32",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "executionFee",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "flags",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "fallbackAddress",
                                type: "bytes",
                            },
                            {
                                internalType: "bytes",
                                name: "data",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct DeBridgeFacet.SubmissionAutoParamsTo",
                        name: "autoParams",
                        type: "tuple",
                    },
                ],
                internalType: "struct DeBridgeFacet.DeBridgeData",
                name: "_deBridgeData",
                type: "tuple",
            },
        ],
        name: "swapAndStartBridgeTokensViaDeBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
var _bytecode = "0x60a06040523480156200001157600080fd5b5060405162002dc238038062002dc2833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b608051612d19620000a96000396000818161068c0152818161071a01528181610831015261085c0152612d196000f3fe6080604052600436106100295760003560e01c80635fcb02601461002e578063be3d5ec514610043575b600080fd5b61004161003c36600461227f565b610056565b005b61004161005136600461255a565b61026d565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e23447612648565b90506100ed8561265b565b60a081015173ffffffffffffffffffffffffffffffffffffffff1661013e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361017c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101b9576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101c28661265b565b806101000151156101ff576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61021161020b8861265b565b87610466565b61022e61022460a0890160808a01612667565b8860c001356104cb565b61024061023a8861265b565b87610647565b50479050818111156102615761026160008461025c8585612648565b6109f2565b50506000909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102e8576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006102f93447612648565b905086806101000151610338576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8761035b8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610392576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036103d0576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361040d576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104178987610466565b885160c08a015161042d91908a8a338b35610a23565b60c08a015261043c8987610647565b50479050818111156104585761045860008461025c8585612648565b505060009091555050505050565b6101208201511515600061047d6060840184612682565b61048b9060608101906126c0565b9050111515146104c7576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610505576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661055a57803410156104c7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156105c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105eb919061272c565b905081811015610636576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b61064283333085610bbe565b505050565b60e08201516040517f7796656c00000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001691637796656c916106c39160040190815260200190565b606060405180830381865afa1580156106e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107049190612745565b8051909150600090156107185781516107a7565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166335087f0a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610783573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a7919061272c565b9050823581146107e3576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610807856080015173ffffffffffffffffffffffffffffffffffffffff161590565b9050833581156108275760c086015161082090826127b5565b905061085a565b61085a86608001517f00000000000000000000000000000000000000000000000000000000000000008860c00151610dd8565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663be2974768288608001518960c001518a60e001518b60a001516040516020016108e6919060609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152610923908d0160208e016127c8565b61093360608e0160408f016127e5565b61094060608f018f612682565b60405160200161095091906128b8565b6040516020818303038152906040526040518963ffffffff1660e01b815260040161098197969594939291906129ae565b6000604051808303818588803b15801561099a57600080fd5b505af11580156109ae573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1866040516109e29190612a32565b60405180910390a1505050505050565b73ffffffffffffffffffffffffffffffffffffffff831615610a1957610642838383610f1b565b610642828261109d565b600083808203610a5f576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008686610a6e600185612648565b818110610a7d57610a7d612b45565b9050602002810190610a8f9190612b74565b610aa0906080810190606001612667565b90506000610aad826111c7565b905073ffffffffffffffffffffffffffffffffffffffff8216610ad757610ad43482612648565b90505b6000610ae38989611280565b9050610aef898961138c565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff89166020820152908101879052610b2a818b8b856113f9565b600083610b36866111c7565b610b409190612648565b905073ffffffffffffffffffffffffffffffffffffffff8516610b6a57610b678882612648565b90505b8b811015610bae576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d90526024810182905260440161062d565b9c9b505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416610c0b576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610c58576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610cc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ced919061272c565b9050610cfb828686866117ea565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610d6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8f919061272c565b610d999190612648565b14610dd0576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610df857505050565b73ffffffffffffffffffffffffffffffffffffffff8216610e45576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015610eba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ede919061272c565b101561064257610ef0838360006118c6565b61064283837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6118c6565b73ffffffffffffffffffffffffffffffffffffffff8316610f68576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610fb5576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611022573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611046919061272c565b90508082111561108c576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161062d565b611097848484611a48565b50505050565b73ffffffffffffffffffffffffffffffffffffffff82166110ea576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4781111561112d576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810182905247602482015260440161062d565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611187576040519150601f19603f3d011682016040523d82523d6000602084013e61118c565b606091505b5050905080610642576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff821615611278576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa15801561124f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611273919061272c565b61127a565b475b92915050565b60608160008167ffffffffffffffff81111561129e5761129e6122ec565b6040519080825280602002602001820160405280156112c7578160200160208202803683370190505b5090506000805b83811015611381578686828181106112e8576112e8612b45565b90506020028101906112fa9190612b74565b61130b906080810190606001612667565b9150611316826111c7565b83828151811061132857611328612b45565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216611379573483828151811061136157611361612b45565b602002602001018181516113759190612648565b9052505b6001016112ce565b509095945050505050565b60005b8181101561064257368383838181106113aa576113aa612b45565b90506020028101906113bc9190612b74565b90506113ce60e0820160c083016127c8565b156113f0576113f06113e66060830160408401612667565b82608001356104cb565b5060010161138f565b6020840151604085015184918491849083600181146117035760008686611421600185612648565b81811061143057611430612b45565b90506020028101906114429190612b74565b611453906080810190606001612667565b9050600089815b8181101561160057368d8d8381811061147557611475612b45565b90506020028101906114879190612b74565b90506114b661149c6060830160408401612667565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061151957506115196114cf6040830160208401612667565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561153057506115306114cf6020830183612667565b80156115b557506115b561154760a08301836126c0565b61155691600491600091612ba8565b61155f91612bd2565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6115eb576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e516115f79082611a9e565b5060010161145a565b505060005b611610600185612648565b8110156116fb57600089898381811061162b5761162b612b45565b905060200281019061163d9190612b74565b61164e906080810190606001612667565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146116f25786828151811061169557611695612b45565b60200260200101516116a6826111c7565b6116b09190612648565b9250600073ffffffffffffffffffffffffffffffffffffffff8216156116d75760006116d9565b865b905083156116f0576116f0828a61025c8488612648565b505b50600101611605565b5050506117de565b8760005b818110156117db57368b8b8381811061172257611722612b45565b90506020028101906117349190612b74565b905061174961149c6060830160408401612667565b8061176257506117626114cf6040830160208401612667565b801561177957506117796114cf6020830183612667565b8015611790575061179061154760a08301836126c0565b6117c6576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c516117d29082611a9e565b50600101611707565b50505b50505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526110979085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611db4565b80158061196657506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611940573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611964919061272c565b155b6119f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161062d565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526106429084907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611844565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526106429084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611844565b611ab4611aae6020830183612667565b3b151590565b611aea576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611b2a576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b3f61149c6060850160408601612667565b611b4a576000611b50565b82608001355b90506000611b6c611b676060860160408701612667565b6111c7565b90506000611b83611b676080870160608801612667565b905082600003611bba57611bba611ba06060870160408801612667565b611bb06040880160208901612667565b8760800135610dd8565b8460800135821015611c05576040517fcf479181000000000000000000000000000000000000000000000000000000008152608086013560048201526024810183905260440161062d565b600080611c156020880188612667565b73ffffffffffffffffffffffffffffffffffffffff1685611c3960a08a018a6126c0565b604051611c47929190612c1a565b60006040518083038185875af1925050503d8060008114611c84576040519150601f19603f3d011682016040523d82523d6000602084013e611c89565b606091505b509150915081611cd4576000611c9e82611ec0565b9050806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062d9190612c2a565b6000611ce9611b6760808a0160608b01612667565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611d1a60208b018b612667565b611d2a60608c0160408d01612667565b611d3a60808d0160608e01612667565b8c60800135898711611d4c5786611d56565b611d568a88612648565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6000611e16826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611f3e9092919063ffffffff16565b8051909150156106425780806020019051810190611e349190612c3d565b610642576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161062d565b6060604482511015611f0557505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611f216004808551611f199190612648565b859190611f55565b905080806020019051810190611f379190612c5a565b9392505050565b6060611f4d848460008561206f565b949350505050565b606081611f6381601f6127b5565b1015611f9b576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611fa582846127b5565b84511015611fdf576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611ffe5760405191506000825260208201604052612066565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561203757805183526020928301920161201f565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b606082471015612101576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161062d565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161212a9190612cd1565b60006040518083038185875af1925050503d8060008114612167576040519150601f19603f3d011682016040523d82523d6000602084013e61216c565b606091505b509150915061217d87838387612188565b979650505050505050565b6060831561221e5782516000036122175773ffffffffffffffffffffffffffffffffffffffff85163b612217576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161062d565b5081611f4d565b611f4d83838151156122335781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062d9190612c2a565b60006080828403121561227957600080fd5b50919050565b6000806040838503121561229257600080fd5b823567ffffffffffffffff808211156122aa57600080fd5b9084019061014082870312156122bf57600080fd5b909250602084013590808211156122d557600080fd5b506122e285828601612267565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561233f5761233f6122ec565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561238c5761238c6122ec565b604052919050565b600067ffffffffffffffff8211156123ae576123ae6122ec565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126123eb57600080fd5b81356123fe6123f982612394565b612345565b81815284602083860101111561241357600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461245457600080fd5b919050565b801515811461246757600080fd5b50565b803561245481612459565b6000610140828403121561248857600080fd5b61249061231b565b905081358152602082013567ffffffffffffffff808211156124b157600080fd5b6124bd858386016123da565b602084015260408401359150808211156124d657600080fd5b506124e3848285016123da565b6040830152506124f560608301612430565b606082015261250660808301612430565b608082015261251760a08301612430565b60a082015260c082013560c082015260e082013560e082015261010061253e81840161246a565b9082015261012061255083820161246a565b9082015292915050565b6000806000806060858703121561257057600080fd5b843567ffffffffffffffff8082111561258857600080fd5b61259488838901612475565b955060208701359150808211156125aa57600080fd5b818701915087601f8301126125be57600080fd5b8135818111156125cd57600080fd5b8860208260051b85010111156125e257600080fd5b60208301955080945050604087013591508082111561260057600080fd5b5061260d87828801612267565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561127a5761127a612619565b600061127a3683612475565b60006020828403121561267957600080fd5b611f3782612430565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818336030181126126b657600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126126f557600080fd5b83018035915067ffffffffffffffff82111561271057600080fd5b60200191503681900382131561272557600080fd5b9250929050565b60006020828403121561273e57600080fd5b5051919050565b60006060828403121561275757600080fd5b6040516060810181811067ffffffffffffffff8211171561277a5761277a6122ec565b60405282518152602083015161278f81612459565b6020820152604083015161ffff811681146127a957600080fd5b60408201529392505050565b8082018082111561127a5761127a612619565b6000602082840312156127da57600080fd5b8135611f3781612459565b6000602082840312156127f757600080fd5b813563ffffffff81168114611f3757600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261284057600080fd5b830160208101925035905067ffffffffffffffff81111561286057600080fd5b80360382131561272557600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60208152813560208201526020820135604082015260006128dc604084018461280b565b608060608501526128f160a08501828461286f565b915050612901606085018561280b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe085840301608086015261293683828461286f565b9695505050505050565b60005b8381101561295b578181015183820152602001612943565b50506000910152565b6000815180845261297c816020860160208601612940565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600061010073ffffffffffffffffffffffffffffffffffffffff8a1683528860208401528760408401528060608401526129ea81840188612964565b90508281038060808501526000825286151560a085015263ffffffff861660c08501526020810160e085015250612a246020820185612964565b9a9950505050505050505050565b602081528151602082015260006020830151610140806040850152612a5b610160850183612964565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152612a968382612964565b9250506060850151612ac0608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120612b338187018315159052565b90950151151593019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126126b657600080fd5b60008085851115612bb857600080fd5b83861115612bc557600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612c125780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b602081526000611f376020830184612964565b600060208284031215612c4f57600080fd5b8151611f3781612459565b600060208284031215612c6c57600080fd5b815167ffffffffffffffff811115612c8357600080fd5b8201601f81018413612c9457600080fd5b8051612ca26123f982612394565b818152856020838501011115612cb757600080fd5b612cc8826020830160208601612940565b95945050505050565b600082516126b681846020870161294056fea2646970667358221220c6af2f3d996ce743102ff6330c7d20087156ca030d037f9c1723477cd46b582d64736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var DeBridgeFacet__factory = /** @class */ (function (_super) {
    __extends(DeBridgeFacet__factory, _super);
    function DeBridgeFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    DeBridgeFacet__factory.prototype.deploy = function (_deBridgeGate, overrides) {
        return _super.prototype.deploy.call(this, _deBridgeGate, overrides || {});
    };
    DeBridgeFacet__factory.prototype.getDeployTransaction = function (_deBridgeGate, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _deBridgeGate, overrides || {});
    };
    DeBridgeFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    DeBridgeFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    DeBridgeFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    DeBridgeFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    DeBridgeFacet__factory.bytecode = _bytecode;
    DeBridgeFacet__factory.abi = _abi;
    return DeBridgeFacet__factory;
}(ethers_1.ContractFactory));
exports.DeBridgeFacet__factory = DeBridgeFacet__factory;
