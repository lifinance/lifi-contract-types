"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeBridgeFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_deBridgeGate",
                type: "address",
                internalType: "contract IDeBridgeGate",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaDeBridge",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_deBridgeData",
                type: "tuple",
                internalType: "struct DeBridgeFacet.DeBridgeData",
                components: [
                    {
                        name: "nativeFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "useAssetFee",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "referralCode",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "autoParams",
                        type: "tuple",
                        internalType: "struct DeBridgeFacet.SubmissionAutoParamsTo",
                        components: [
                            {
                                name: "executionFee",
                                type: "uint256",
                                internalType: "uint256",
                            },
                            {
                                name: "flags",
                                type: "uint256",
                                internalType: "uint256",
                            },
                            {
                                name: "fallbackAddress",
                                type: "bytes",
                                internalType: "bytes",
                            },
                            {
                                name: "data",
                                type: "bytes",
                                internalType: "bytes",
                            },
                        ],
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaDeBridge",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_deBridgeData",
                type: "tuple",
                internalType: "struct DeBridgeFacet.DeBridgeData",
                components: [
                    {
                        name: "nativeFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "useAssetFee",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "referralCode",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "autoParams",
                        type: "tuple",
                        internalType: "struct DeBridgeFacet.SubmissionAutoParamsTo",
                        components: [
                            {
                                name: "executionFee",
                                type: "uint256",
                                internalType: "uint256",
                            },
                            {
                                name: "flags",
                                type: "uint256",
                                internalType: "uint256",
                            },
                            {
                                name: "fallbackAddress",
                                type: "bytes",
                                internalType: "bytes",
                            },
                            {
                                name: "data",
                                type: "bytes",
                                internalType: "bytes",
                            },
                        ],
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InsufficientBalance",
        inputs: [
            {
                name: "required",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "balance",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NativeAssetTransferFailed",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NoTransferToNullAddress",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAnERC20Token",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
    {
        type: "error",
        name: "SliceOutOfBounds",
        inputs: [],
    },
    {
        type: "error",
        name: "SliceOverflow",
        inputs: [],
    },
];
var _bytecode = "0x60a06040523480156200001157600080fd5b5060405162002dc538038062002dc5833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b608051612d1c620000a96000396000818161068c0152818161071a01528181610831015261085c0152612d1c6000f3fe6080604052600436106100295760003560e01c80635fcb02601461002e578063be3d5ec514610043575b600080fd5b61004161003c366004612282565b610056565b005b61004161005136600461255d565b61026d565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e2344761264b565b90506100ed8561265e565b60a081015173ffffffffffffffffffffffffffffffffffffffff1661013e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361017c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101b9576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101c28661265e565b806101000151156101ff576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61021161020b8861265e565b87610466565b61022e61022460a0890160808a0161266a565b8860c001356104cb565b61024061023a8861265e565b87610647565b50479050818111156102615761026160008461025c858561264b565b6109f2565b50506000909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102e8576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006102f9344761264b565b905086806101000151610338576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8761035b8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610392576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036103d0576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361040d576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104178987610466565b885160c08a015161042d91908a8a338b35610a23565b60c08a015261043c8987610647565b50479050818111156104585761045860008461025c858561264b565b505060009091555050505050565b6101208201511515600061047d6060840184612685565b61048b9060608101906126c3565b9050111515146104c7576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610505576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661055a57803410156104c7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156105c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105eb919061272f565b905081811015610636576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b61064283333085610bbe565b505050565b60e08201516040517f7796656c00000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001691637796656c916106c39160040190815260200190565b606060405180830381865afa1580156106e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107049190612748565b8051909150600090156107185781516107a7565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166335087f0a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610783573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a7919061272f565b9050823581146107e3576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610807856080015173ffffffffffffffffffffffffffffffffffffffff161590565b9050833581156108275760c086015161082090826127b8565b905061085a565b61085a86608001517f00000000000000000000000000000000000000000000000000000000000000008860c00151610dd8565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663be2974768288608001518960c001518a60e001518b60a001516040516020016108e6919060609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152610923908d0160208e016127cb565b61093360608e0160408f016127e8565b61094060608f018f612685565b60405160200161095091906128bb565b6040516020818303038152906040526040518963ffffffff1660e01b815260040161098197969594939291906129b1565b6000604051808303818588803b15801561099a57600080fd5b505af11580156109ae573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1866040516109e29190612a35565b60405180910390a1505050505050565b73ffffffffffffffffffffffffffffffffffffffff831615610a1957610642838383610f1b565b610642828261109d565b600083808203610a5f576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008686610a6e60018561264b565b818110610a7d57610a7d612b48565b9050602002810190610a8f9190612b77565b610aa090608081019060600161266a565b90506000610aad826111c7565b905073ffffffffffffffffffffffffffffffffffffffff8216610ad757610ad4348261264b565b90505b6000610ae38989611280565b9050610aef898961138c565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff89166020820152908101879052610b2a818b8b856113f9565b600083610b36866111c7565b610b40919061264b565b905073ffffffffffffffffffffffffffffffffffffffff8516610b6a57610b67888261264b565b90505b8b811015610bae576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d90526024810182905260440161062d565b9c9b505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416610c0b576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610c58576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610cc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ced919061272f565b9050610cfb828686866117ea565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610d6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8f919061272f565b610d99919061264b565b14610dd0576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610df857505050565b73ffffffffffffffffffffffffffffffffffffffff8216610e45576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015610eba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ede919061272f565b101561064257610ef0838360006118c6565b61064283837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6118c6565b73ffffffffffffffffffffffffffffffffffffffff8316610f68576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610fb5576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611022573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611046919061272f565b90508082111561108c576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161062d565b611097848484611a48565b50505050565b73ffffffffffffffffffffffffffffffffffffffff82166110ea576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4781111561112d576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810182905247602482015260440161062d565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611187576040519150601f19603f3d011682016040523d82523d6000602084013e61118c565b606091505b5050905080610642576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff821615611278576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa15801561124f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611273919061272f565b61127a565b475b92915050565b60608160008167ffffffffffffffff81111561129e5761129e6122ef565b6040519080825280602002602001820160405280156112c7578160200160208202803683370190505b5090506000805b83811015611381578686828181106112e8576112e8612b48565b90506020028101906112fa9190612b77565b61130b90608081019060600161266a565b9150611316826111c7565b83828151811061132857611328612b48565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216611379573483828151811061136157611361612b48565b60200260200101818151611375919061264b565b9052505b6001016112ce565b509095945050505050565b60005b8181101561064257368383838181106113aa576113aa612b48565b90506020028101906113bc9190612b77565b90506113ce60e0820160c083016127cb565b156113f0576113f06113e6606083016040840161266a565b82608001356104cb565b5060010161138f565b602084015160408501518491849184908360018114611703576000868661142160018561264b565b81811061143057611430612b48565b90506020028101906114429190612b77565b61145390608081019060600161266a565b9050600089815b8181101561160057368d8d8381811061147557611475612b48565b90506020028101906114879190612b77565b90506114b661149c606083016040840161266a565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061151957506115196114cf604083016020840161266a565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561153057506115306114cf602083018361266a565b80156115b557506115b561154760a08301836126c3565b61155691600491600091612bab565b61155f91612bd5565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6115eb576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e516115f79082611a9e565b5060010161145a565b505060005b61161060018561264b565b8110156116fb57600089898381811061162b5761162b612b48565b905060200281019061163d9190612b77565b61164e90608081019060600161266a565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146116f25786828151811061169557611695612b48565b60200260200101516116a6826111c7565b6116b0919061264b565b9250600073ffffffffffffffffffffffffffffffffffffffff8216156116d75760006116d9565b865b905083156116f0576116f0828a61025c848861264b565b505b50600101611605565b5050506117de565b8760005b818110156117db57368b8b8381811061172257611722612b48565b90506020028101906117349190612b77565b905061174961149c606083016040840161266a565b8061176257506117626114cf604083016020840161266a565b801561177957506117796114cf602083018361266a565b8015611790575061179061154760a08301836126c3565b6117c6576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c516117d29082611a9e565b50600101611707565b50505b50505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526110979085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611db4565b80158061196657506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611940573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611964919061272f565b155b6119f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161062d565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526106429084907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611844565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526106429084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611844565b611ab4611aae602083018361266a565b3b151590565b611aea576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611b2a576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b3f61149c606085016040860161266a565b611b4a576000611b50565b82608001355b90506000611b6c611b67606086016040870161266a565b6111c7565b90506000611b83611b67608087016060880161266a565b905082600003611bba57611bba611ba0606087016040880161266a565b611bb0604088016020890161266a565b8760800135610dd8565b8460800135821015611c05576040517fcf479181000000000000000000000000000000000000000000000000000000008152608086013560048201526024810183905260440161062d565b600080611c15602088018861266a565b73ffffffffffffffffffffffffffffffffffffffff1685611c3960a08a018a6126c3565b604051611c47929190612c1d565b60006040518083038185875af1925050503d8060008114611c84576040519150601f19603f3d011682016040523d82523d6000602084013e611c89565b606091505b509150915081611cd4576000611c9e82611ec3565b9050806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062d9190612c2d565b6000611ce9611b6760808a0160608b0161266a565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611d1a60208b018b61266a565b611d2a60608c0160408d0161266a565b611d3a60808d0160608e0161266a565b8c60800135898711611d4c5786611d56565b611d568a8861264b565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6000611e16826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611f419092919063ffffffff16565b9050805160001480611e37575080806020019051810190611e379190612c40565b610642576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161062d565b6060604482511015611f0857505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611f246004808551611f1c919061264b565b859190611f58565b905080806020019051810190611f3a9190612c5d565b9392505050565b6060611f508484600085612072565b949350505050565b606081611f6681601f6127b8565b1015611f9e576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611fa882846127b8565b84511015611fe2576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060821580156120015760405191506000825260208201604052612069565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561203a578051835260209283019201612022565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b606082471015612104576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161062d565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161212d9190612cd4565b60006040518083038185875af1925050503d806000811461216a576040519150601f19603f3d011682016040523d82523d6000602084013e61216f565b606091505b50915091506121808783838761218b565b979650505050505050565b6060831561222157825160000361221a5773ffffffffffffffffffffffffffffffffffffffff85163b61221a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161062d565b5081611f50565b611f5083838151156122365781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062d9190612c2d565b60006080828403121561227c57600080fd5b50919050565b6000806040838503121561229557600080fd5b823567ffffffffffffffff808211156122ad57600080fd5b9084019061014082870312156122c257600080fd5b909250602084013590808211156122d857600080fd5b506122e58582860161226a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715612342576123426122ef565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561238f5761238f6122ef565b604052919050565b600067ffffffffffffffff8211156123b1576123b16122ef565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126123ee57600080fd5b81356124016123fc82612397565b612348565b81815284602083860101111561241657600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461245757600080fd5b919050565b801515811461246a57600080fd5b50565b80356124578161245c565b6000610140828403121561248b57600080fd5b61249361231e565b905081358152602082013567ffffffffffffffff808211156124b457600080fd5b6124c0858386016123dd565b602084015260408401359150808211156124d957600080fd5b506124e6848285016123dd565b6040830152506124f860608301612433565b606082015261250960808301612433565b608082015261251a60a08301612433565b60a082015260c082013560c082015260e082013560e082015261010061254181840161246d565b9082015261012061255383820161246d565b9082015292915050565b6000806000806060858703121561257357600080fd5b843567ffffffffffffffff8082111561258b57600080fd5b61259788838901612478565b955060208701359150808211156125ad57600080fd5b818701915087601f8301126125c157600080fd5b8135818111156125d057600080fd5b8860208260051b85010111156125e557600080fd5b60208301955080945050604087013591508082111561260357600080fd5b506126108782880161226a565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561127a5761127a61261c565b600061127a3683612478565b60006020828403121561267c57600080fd5b611f3a82612433565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818336030181126126b957600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126126f857600080fd5b83018035915067ffffffffffffffff82111561271357600080fd5b60200191503681900382131561272857600080fd5b9250929050565b60006020828403121561274157600080fd5b5051919050565b60006060828403121561275a57600080fd5b6040516060810181811067ffffffffffffffff8211171561277d5761277d6122ef565b6040528251815260208301516127928161245c565b6020820152604083015161ffff811681146127ac57600080fd5b60408201529392505050565b8082018082111561127a5761127a61261c565b6000602082840312156127dd57600080fd5b8135611f3a8161245c565b6000602082840312156127fa57600080fd5b813563ffffffff81168114611f3a57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261284357600080fd5b830160208101925035905067ffffffffffffffff81111561286357600080fd5b80360382131561272857600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60208152813560208201526020820135604082015260006128df604084018461280e565b608060608501526128f460a085018284612872565b915050612904606085018561280e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016080860152612939838284612872565b9695505050505050565b60005b8381101561295e578181015183820152602001612946565b50506000910152565b6000815180845261297f816020860160208601612943565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600061010073ffffffffffffffffffffffffffffffffffffffff8a1683528860208401528760408401528060608401526129ed81840188612967565b90508281038060808501526000825286151560a085015263ffffffff861660c08501526020810160e085015250612a276020820185612967565b9a9950505050505050505050565b602081528151602082015260006020830151610140806040850152612a5e610160850183612967565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152612a998382612967565b9250506060850151612ac3608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120612b368187018315159052565b90950151151593019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126126b957600080fd5b60008085851115612bbb57600080fd5b83861115612bc857600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612c155780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b602081526000611f3a6020830184612967565b600060208284031215612c5257600080fd5b8151611f3a8161245c565b600060208284031215612c6f57600080fd5b815167ffffffffffffffff811115612c8657600080fd5b8201601f81018413612c9757600080fd5b8051612ca56123fc82612397565b818152856020838501011115612cba57600080fd5b612ccb826020830160208601612943565b95945050505050565b600082516126b981846020870161294356fea26469706673582212202bf34726578985f2cdd8904cbe18c3710acb8f76e87983c719af5cd9b87c3dd264736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var DeBridgeFacet__factory = /** @class */ (function (_super) {
    __extends(DeBridgeFacet__factory, _super);
    function DeBridgeFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    DeBridgeFacet__factory.prototype.deploy = function (_deBridgeGate, overrides) {
        return _super.prototype.deploy.call(this, _deBridgeGate, overrides || {});
    };
    DeBridgeFacet__factory.prototype.getDeployTransaction = function (_deBridgeGate, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _deBridgeGate, overrides || {});
    };
    DeBridgeFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    DeBridgeFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    DeBridgeFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    DeBridgeFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    DeBridgeFacet__factory.bytecode = _bytecode;
    DeBridgeFacet__factory.abi = _abi;
    return DeBridgeFacet__factory;
}(ethers_1.ContractFactory));
exports.DeBridgeFacet__factory = DeBridgeFacet__factory;
