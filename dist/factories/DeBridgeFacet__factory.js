"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeBridgeFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "contract IDeBridgeGate",
                name: "_deBridgeGate",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "CannotBridgeToSameNetwork",
        type: "error",
    },
    {
        inputs: [],
        name: "ContractCallNotAllowed",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "receivedAmount",
                type: "uint256",
            },
        ],
        name: "CumulativeSlippageTooHigh",
        type: "error",
    },
    {
        inputs: [],
        name: "InformationMismatch",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "required",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
        ],
        name: "InsufficientBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidAmount",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidContract",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidReceiver",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeAssetTransferFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapDataProvided",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapFromZeroBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "NoTransferToNullAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAValidSpender",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAnERC20Token",
        type: "error",
    },
    {
        inputs: [],
        name: "ReentrancyError",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOverflow",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferCompleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferRecovered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                name: "bridgeData",
                type: "tuple",
            },
        ],
        name: "LiFiTransferStarted",
        type: "event",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bytes",
                        name: "permit",
                        type: "bytes",
                    },
                    {
                        internalType: "uint256",
                        name: "nativeFee",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "useAssetFee",
                        type: "bool",
                    },
                    {
                        internalType: "uint32",
                        name: "referralCode",
                        type: "uint32",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "executionFee",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "flags",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "fallbackAddress",
                                type: "bytes",
                            },
                            {
                                internalType: "bytes",
                                name: "data",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct DeBridgeFacet.SubmissionAutoParamsTo",
                        name: "autoParams",
                        type: "tuple",
                    },
                ],
                internalType: "struct DeBridgeFacet.DeBridgeData",
                name: "_deBridgeData",
                type: "tuple",
            },
        ],
        name: "startBridgeTokensViaDeBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "_swapData",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "bytes",
                        name: "permit",
                        type: "bytes",
                    },
                    {
                        internalType: "uint256",
                        name: "nativeFee",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "useAssetFee",
                        type: "bool",
                    },
                    {
                        internalType: "uint32",
                        name: "referralCode",
                        type: "uint32",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "executionFee",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "flags",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "fallbackAddress",
                                type: "bytes",
                            },
                            {
                                internalType: "bytes",
                                name: "data",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct DeBridgeFacet.SubmissionAutoParamsTo",
                        name: "autoParams",
                        type: "tuple",
                    },
                ],
                internalType: "struct DeBridgeFacet.DeBridgeData",
                name: "_deBridgeData",
                type: "tuple",
            },
        ],
        name: "swapAndStartBridgeTokensViaDeBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
var _bytecode = "0x60a06040523480156200001157600080fd5b5060405162002acd38038062002acd833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b608051612a326200009b600039600081816106fa01526107250152612a326000f3fe6080604052600436106100295760003560e01c80633031d53c1461002e578063d53582b014610043575b600080fd5b61004161003c366004612254565b610056565b005b610041610051366004612313565b6102a3565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e234476123af565b905086806101000151610121576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101448160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561017b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101b9576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101f6576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61020089876104cc565b61021a89600001518a60c001518a8a338b60200135610531565b60c08a0152608089015173ffffffffffffffffffffffffffffffffffffffff166102585785602001358960c00181815161025491906123af565b9052505b61026289876106a9565b504790506000828211610276576000610280565b61028083836123af565b9050801561029457610294600085836108a8565b50506000909255505050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161031e576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061032f34476123af565b905061033a856123c2565b60a081015173ffffffffffffffffffffffffffffffffffffffff1661038b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036103c9576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610406576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040f866123c2565b8061010001511561044c576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61045e610458886123c2565b876104cc565b61047b61047160a0890160808a016123ce565b8860c001356108de565b61048d610487886123c2565b876106a9565b5047905060008282116104a15760006104ab565b6104ab83836123af565b905080156104bf576104bf600085836108a8565b5050600090925550505050565b610120820151151560006104e360808401846123e9565b6104f1906060810190612427565b90501115151461052d576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60008380820361056d576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000868661057c6001856123af565b81811061058b5761058b612493565b905060200281019061059d91906124c2565b6105ae9060808101906060016123ce565b905060006105bb82610a50565b905073ffffffffffffffffffffffffffffffffffffffff82166105e5576105e234826123af565b90505b60006105f18989610b09565b90506105fd8989610c15565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff89166020820152908101879052610638818b8b85610c76565b60008361064486610a50565b61064e91906123af565b90508b811015610699576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d9052602481018290526044015b60405180910390fd5b9c9b505050505050505050505050565b60006106cd836080015173ffffffffffffffffffffffffffffffffffffffff161590565b9050602082013581156106f05760c08401516106e990826124f6565b9050610723565b61072384608001517f00000000000000000000000000000000000000000000000000000000000000008660c0015161106c565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663be2974768286608001518760c001518860e001518960a001516040516020016107af919060609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b60408051601f198184030181529190526107c98a80612427565b6107d960608d0160408e01612509565b6107e960808e0160608f01612526565b6107f660808f018f6123e9565b60405160200161080691906125db565b6040516020818303038152906040526040518b63ffffffff1660e01b815260040161083999989796959493929190612695565b6000604051808303818588803b15801561085257600080fd5b505af1158015610866573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18460405161089a919061270e565b60405180910390a150505050565b73ffffffffffffffffffffffffffffffffffffffff8316156108d4576108cf8383836111b7565b505050565b6108cf82826112e6565b73ffffffffffffffffffffffffffffffffffffffff8216610933578034101561052d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060000361096d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156109da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fe9190612803565b905081811015610a44576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610690565b6108cf83333085611410565b600073ffffffffffffffffffffffffffffffffffffffff821615610b01576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610ad8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afc9190612803565b610b03565b475b92915050565b60608160008167ffffffffffffffff811115610b2757610b27611fe7565b604051908082528060200260200182016040528015610b50578160200160208202803683370190505b5090506000805b83811015610c0a57868682818110610b7157610b71612493565b9050602002810190610b8391906124c2565b610b949060808101906060016123ce565b9150610b9f82610a50565b838281518110610bb157610bb1612493565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610c025734838281518110610bea57610bea612493565b60200260200101818151610bfe91906123af565b9052505b600101610b57565b509095945050505050565b60005b818110156108cf576000838383818110610c3457610c34612493565b9050602002810190610c4691906124c2565b610c4f9061281c565b90508060c0015115610c6d57610c6d816040015182608001516108de565b50600101610c18565b602084015160408501518491849184908360018114610f855760008686610c9e6001856123af565b818110610cad57610cad612493565b9050602002810190610cbf91906124c2565b610cd09060808101906060016123ce565b9050600089815b81811015610e7d57368d8d83818110610cf257610cf2612493565b9050602002810190610d0491906124c2565b9050610d33610d1960608301604084016123ce565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610d965750610d96610d4c60408301602084016123ce565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610dad5750610dad610d4c60208301836123ce565b8015610e325750610e32610dc460a0830183612427565b610dd3916004916000916128c1565b610ddc916128eb565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610e68576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e51610e74908261162a565b50600101610cd7565b505060005b610e8d6001856123af565b811015610f7d576000898983818110610ea857610ea8612493565b9050602002810190610eba91906124c2565b610ecb9060808101906060016123ce565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f7457868281518110610f1257610f12612493565b6020026020010151610f2382610a50565b610f2d91906123af565b9250600073ffffffffffffffffffffffffffffffffffffffff821615610f54576000610f56565b865b90508315610f7257610f72828a610f6d84886123af565b6108a8565b505b50600101610e82565b505050611060565b8760005b8181101561105d57368b8b83818110610fa457610fa4612493565b9050602002810190610fb691906124c2565b9050610fcb610d1960608301604084016123ce565b80610fe45750610fe4610d4c60408301602084016123ce565b8015610ffb5750610ffb610d4c60208301836123ce565b80156110125750611012610dc460a0830183612427565b611048576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c51611054908261162a565b50600101610f89565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661108c57505050565b73ffffffffffffffffffffffffffffffffffffffff82166110d9576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa15801561114f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111739190612803565b9050818110156111b1576111b184846111ac847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6123af565b611940565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316611204576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611271573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112959190612803565b9050808211156112db576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610690565b6111b1848484611a9e565b73ffffffffffffffffffffffffffffffffffffffff8216611333576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611376576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610690565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146113d0576040519150601f19603f3d011682016040523d82523d6000602084013e6113d5565b606091505b50509050806108cf576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841661145d576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166114aa576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa15801561151b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153f9190612803565b905061154d82868686611af4565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa1580156115bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e19190612803565b6115eb91906123af565b14611622576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b61164061163a60208301836123ce565b3b151590565b611676576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036116b6576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006116cb610d1960608501604086016123ce565b6116d65760006116dc565b82608001355b905060006116f86116f360608601604087016123ce565b610a50565b9050600061170f6116f360808701606088016123ce565b9050826000036117465761174661172c60608701604088016123ce565b61173c60408801602089016123ce565b876080013561106c565b8460800135821015611791576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610690565b6000806117a160208801886123ce565b73ffffffffffffffffffffffffffffffffffffffff16856117c560a08a018a612427565b6040516117d3929190612933565b60006040518083038185875af1925050503d8060008114611810576040519150601f19603f3d011682016040523d82523d6000602084013e611815565b606091505b50915091508161186057600061182a82611b52565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106909190612943565b60006118756116f360808a0160608b016123ce565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896118a660208b018b6123ce565b6118b660608c0160408d016123ce565b6118c660808d0160608e016123ce565b8c608001358987116118d857866118e2565b6118e28a886123af565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156119b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119db9190612803565b6119e591906124f6565b60405173ffffffffffffffffffffffffffffffffffffffff85166024820152604481018290529091506111b19085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611bd0565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526108cf9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611a3a565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526111b19085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611a3a565b6060604482511015611b9757505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611bb36004808551611bab91906123af565b859190611cdc565b905080806020019051810190611bc99190612956565b9392505050565b6000611c32826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611dd89092919063ffffffff16565b8051909150156108cf5780806020019051810190611c5091906129cd565b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610690565b606081611cea81601f6124f6565b1015611d22576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d2c82846124f6565b84511015611d66576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611d855760405191506000825260208201604052611dcf565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611dbe578051835260209283019201611da6565b5050858452601f01601f1916604052505b50949350505050565b6060611de78484600085611def565b949350505050565b606082471015611e81576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610690565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611eaa91906129ea565b60006040518083038185875af1925050503d8060008114611ee7576040519150601f19603f3d011682016040523d82523d6000602084013e611eec565b606091505b5091509150611efd87838387611f08565b979650505050505050565b60608315611f9e578251600003611f975773ffffffffffffffffffffffffffffffffffffffff85163b611f97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610690565b5081611de7565b611de78383815115611fb35781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106909190612943565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561203a5761203a611fe7565b60405290565b60405160e0810167ffffffffffffffff8111828210171561203a5761203a611fe7565b604051601f8201601f1916810167ffffffffffffffff8111828210171561208c5761208c611fe7565b604052919050565b600067ffffffffffffffff8211156120ae576120ae611fe7565b50601f01601f191660200190565b600082601f8301126120cd57600080fd5b81356120e06120db82612094565b612063565b8181528460208386010111156120f557600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461213657600080fd5b919050565b801515811461214957600080fd5b50565b80356121368161213b565b6000610140828403121561216a57600080fd5b612172612016565b905081358152602082013567ffffffffffffffff8082111561219357600080fd5b61219f858386016120bc565b602084015260408401359150808211156121b857600080fd5b506121c5848285016120bc565b6040830152506121d760608301612112565b60608201526121e860808301612112565b60808201526121f960a08301612112565b60a082015260c082013560c082015260e082013560e082015261010061222081840161214c565b9082015261012061223283820161214c565b9082015292915050565b600060a0828403121561224e57600080fd5b50919050565b6000806000806060858703121561226a57600080fd5b843567ffffffffffffffff8082111561228257600080fd5b61228e88838901612157565b955060208701359150808211156122a457600080fd5b818701915087601f8301126122b857600080fd5b8135818111156122c757600080fd5b8860208260051b85010111156122dc57600080fd5b6020830195508094505060408701359150808211156122fa57600080fd5b506123078782880161223c565b91505092959194509250565b6000806040838503121561232657600080fd5b823567ffffffffffffffff8082111561233e57600080fd5b90840190610140828703121561235357600080fd5b9092506020840135908082111561236957600080fd5b506123768582860161223c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610b0357610b03612380565b6000610b033683612157565b6000602082840312156123e057600080fd5b611bc982612112565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8183360301811261241d57600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261245c57600080fd5b83018035915067ffffffffffffffff82111561247757600080fd5b60200191503681900382131561248c57600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261241d57600080fd5b80820180821115610b0357610b03612380565b60006020828403121561251b57600080fd5b8135611bc98161213b565b60006020828403121561253857600080fd5b813563ffffffff81168114611bc957600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261258157600080fd5b830160208101925035905067ffffffffffffffff8111156125a157600080fd5b80360382131561248c57600080fd5b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b60208152813560208201526020820135604082015260006125ff604084018461254c565b6080606085015261261460a0850182846125b0565b915050612624606085018561254c565b601f1985840301608086015261263b8382846125b0565b9695505050505050565b60005b83811015612660578181015183820152602001612648565b50506000910152565b60008151808452612681816020860160208601612645565b601f01601f19169290920160200192915050565b600061010073ffffffffffffffffffffffffffffffffffffffff8c1683528a60208401528960408401528060608401526126d18184018a612669565b905082810360808401526126e681888a6125b0565b905085151560a084015263ffffffff851660c084015282810360e08401526106998185612669565b602081528151602082015260006020830151610140806040850152612737610160850183612669565b91506040850151601f198584030160608601526127548382612669565b925050606085015161277e608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206127f18187018315159052565b90950151151593019290925250919050565b60006020828403121561281557600080fd5b5051919050565b600060e0823603121561282e57600080fd5b612836612040565b61283f83612112565b815261284d60208401612112565b602082015261285e60408401612112565b604082015261286f60608401612112565b60608201526080830135608082015260a083013567ffffffffffffffff81111561289857600080fd5b6128a4368286016120bc565b60a0830152506128b660c0840161214c565b60c082015292915050565b600080858511156128d157600080fd5b838611156128de57600080fd5b5050820193919092039150565b7fffffffff00000000000000000000000000000000000000000000000000000000813581811691600485101561292b5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b602081526000611bc96020830184612669565b60006020828403121561296857600080fd5b815167ffffffffffffffff81111561297f57600080fd5b8201601f8101841361299057600080fd5b805161299e6120db82612094565b8181528560208385010111156129b357600080fd5b6129c4826020830160208601612645565b95945050505050565b6000602082840312156129df57600080fd5b8151611bc98161213b565b6000825161241d81846020870161264556fea264697066735822122025e0a28147f1328d1f24692e1573e6e3901a0148ebf68d850a858ecf86eeb66e64736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var DeBridgeFacet__factory = /** @class */ (function (_super) {
    __extends(DeBridgeFacet__factory, _super);
    function DeBridgeFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    DeBridgeFacet__factory.prototype.deploy = function (_deBridgeGate, overrides) {
        return _super.prototype.deploy.call(this, _deBridgeGate, overrides || {});
    };
    DeBridgeFacet__factory.prototype.getDeployTransaction = function (_deBridgeGate, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _deBridgeGate, overrides || {});
    };
    DeBridgeFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    DeBridgeFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    DeBridgeFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    DeBridgeFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    DeBridgeFacet__factory.bytecode = _bytecode;
    DeBridgeFacet__factory.abi = _abi;
    return DeBridgeFacet__factory;
}(ethers_1.ContractFactory));
exports.DeBridgeFacet__factory = DeBridgeFacet__factory;
