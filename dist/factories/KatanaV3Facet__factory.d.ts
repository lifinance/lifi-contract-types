import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { KatanaV3Facet, KatanaV3FacetInterface } from "../KatanaV3Facet";
type KatanaV3FacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class KatanaV3Facet__factory extends ContractFactory {
    constructor(...args: KatanaV3FacetConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<KatanaV3Facet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): KatanaV3Facet;
    connect(signer: Signer): KatanaV3Facet__factory;
    static readonly bytecode = "0x6080604052348015600e575f5ffd5b506109fb8061001c5f395ff3fe60806040526004361061001d575f3560e01c8063be60c2c414610021575b5f5ffd5b61003461002f36600461070c565b610036565b005b835160408051602080880182529287018301928101929092528181019052805180516014820180845251601583018085525160299093018452606091821c925f9190911a600114911c8215806100a0575073ffffffffffffffffffffffffffffffffffffffff8116155b156100d7576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8373ffffffffffffffffffffffffffffffffffffffff16635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610121573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101459190610824565b90505f8173ffffffffffffffffffffffffffffffffffffffff1663b0f479a16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610191573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101b59190610824565b90505f8573ffffffffffffffffffffffffffffffffffffffff1663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610201573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102259190610846565b90505f8561029f578673ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610276573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061029a9190610824565b61030c565b8673ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102e8573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061030c9190610824565b90503373ffffffffffffffffffffffffffffffffffffffff8c160361033c576103378a33858c6104d5565b610364565b3073ffffffffffffffffffffffffffffffffffffffff8c1603610364576103648a848b610597565b6040805160018082528183019092525f91816020015b606081526020019060019003908161037a575050604080517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060608f811b821660208401527fffffff000000000000000000000000000000000000000000000000000000000060e889901b16603484015286901b1660378201528151808203602b018152604b820190925291925061041d9188918d915f91908290606b016108b4565b604051602081830303815290604052815f8151811061043e5761043e610905565b60200260200101819052508373ffffffffffffffffffffffffffffffffffffffff166324856bc36040518060400160405280600181526020015f815250836040518363ffffffff1660e01b8152600401610499929190610932565b5f604051808303815f87803b1580156104b0575f5ffd5b505af11580156104c2573d5f5f3e3d5ffd5b5050505050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416610522576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661056f576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61059173ffffffffffffffffffffffffffffffffffffffff851684848461060a565b50505050565b73ffffffffffffffffffffffffffffffffffffffff82166105e4576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61060573ffffffffffffffffffffffffffffffffffffffff84168383610662565b505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f5114171661065557637939f4245f526004601cfd5b5f60605260405250505050565b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166106a2576390b8ec185f526004601cfd5b5f603452505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b73ffffffffffffffffffffffffffffffffffffffff811681146106f9575f5ffd5b50565b8035610707816106d8565b919050565b5f5f5f5f6080858703121561071f575f5ffd5b843567ffffffffffffffff811115610735575f5ffd5b8501601f81018713610745575f5ffd5b803567ffffffffffffffff81111561075f5761075f6106ab565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160116810181811067ffffffffffffffff821117156107cb576107cb6106ab565b6040528181528282016020018910156107e2575f5ffd5b816020840160208301375f60208383010152809650505050610806602086016106fc565b9250610814604086016106fc565b9396929550929360600135925050565b5f60208284031215610834575f5ffd5b815161083f816106d8565b9392505050565b5f60208284031215610856575f5ffd5b815162ffffff8116811461083f575f5ffd5b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b73ffffffffffffffffffffffffffffffffffffffff8616815284602082015260ff8416604082015260a060608201525f6108f160a0830185610868565b905082151560808301529695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b604081525f6109446040830185610868565b828103602084015280845180835260208301915060208160051b840101602087015f5b838110156109b7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08684030185526109a1838351610868565b6020958601959093509190910190600101610967565b50909897505050505050505056fea26469706673582212206d026bc04798c0b50790e035cb9b37e21c03360f93fe531bc08d5d8737d550f664736f6c634300081d0033";
    static readonly abi: readonly [{
        readonly type: "function";
        readonly name: "swapKatanaV3";
        readonly inputs: readonly [{
            readonly name: "swapData";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "from";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "tokenIn";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "amountIn";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
    }, {
        readonly type: "error";
        readonly name: "InvalidCallData";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidReceiver";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly inputs: readonly [];
    }];
    static createInterface(): KatanaV3FacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): KatanaV3Facet;
}
export {};
