import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { NXTPFacet, NXTPFacetInterface } from "../NXTPFacet";
declare type NXTPFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class NXTPFacet__factory extends ContractFactory {
    constructor(...args: NXTPFacetConstructorParams);
    deploy(_txManager: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<NXTPFacet>;
    getDeployTransaction(_txManager: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): NXTPFacet;
    connect(signer: Signer): NXTPFacet__factory;
    static readonly bytecode = "0x60a06040523480156200001157600080fd5b5060405162002d0438038062002d04833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b608051612c696200009b600039600081816107ef01526108a50152612c696000f3fe6080604052600436106100295760003560e01c80639c70d7e61461002e578063c9fb76b114610043575b600080fd5b61004161003c36600461222a565b610056565b005b6100416100513660046122e9565b6102b7565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e2344761237c565b905086806101000151610121576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101378160a001516001600160a01b03161590565b1561016e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101ac576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101e9576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61012089015115156102076101fd88612474565b6040015151151590565b151514610240576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61024a868a61050b565b61025f89600001518a60c001518a8a336106a6565b60c08a01526102768961027188612474565b6107dc565b50479050600082821161028a576000610294565b610294838361237c565b905080156102a8576102a8600085836109e0565b50506000909255505050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610332576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155336000610343344761237c565b90508480610100015115610383576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856103998160a001516001600160a01b03161590565b156103d0576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361040e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361044b576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610120870151151561045f6101fd88612474565b151514610498576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104a2868861050b565b6104bf6104b560a088016080890161254d565b8860c00151610a09565b6104cc8761027188612474565b5047905060008282116104e05760006104ea565b6104ea838361237c565b905080156104fe576104fe600085836109e0565b5050600090925550505050565b80608001516001600160a01b031682608001602081019061052c919061254d565b6001600160a01b0316146105a1576040517f90d4ad8f00000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f73656e64696e674173736574496400000000000000000000000000000000000060448201526064015b60405180910390fd5b60a08101516001600160a01b03166105c0610100840160e0850161254d565b6001600160a01b031614610630576040517f90d4ad8f00000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f726563656976696e6741646472657373000000000000000000000000000000006044820152606401610598565b8060e00151826101400135146106a2576040517f90d4ad8f00000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f726563656976696e67436861696e4964000000000000000000000000000000006044820152606401610598565b5050565b6000828082036106e2576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856106f160018561237c565b8181106107005761070061256a565b90506020028101906107129190612599565b61072390608081019060600161254d565b9050600061073082610b61565b90506001600160a01b03821661074d5761074a348261237c565b90505b60006107598888610c00565b90506107658888610cff565b6107728a89898985610d60565b60008261077e85610b61565b610788919061237c565b9050898110156107ce576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b905260248101829052604401610598565b9a9950505050505050505050565b80516080015160c08301516108149082907f0000000000000000000000000000000000000000000000000000000000000000906110de565b815160c081015160e0909101516001600160a01b038216610861576040517fd7a2b02200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0381166108a1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d94593726108e3836001600160a01b03161590565b6108ee5760006108f4565b8460c001515b6040518060e00160405280866000015181526020018760c001518152602001866020015181526020018660400151815260200186606001518152602001866080015181526020018660a001518152506040518363ffffffff1660e01b815260040161095f9190612732565b6102006040518083038185885af115801561097e573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109a391906127e8565b507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1836040516109d391906128ed565b60405180910390a1505050565b6001600160a01b038316156109ff576109fa838383611202565b505050565b6109fa8282611317565b6001600160a01b038216610a5157803410156106a2576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600003610a8b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610aeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0f91906129bb565b905081811015610b55576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610598565b6109fa83333085611427565b60006001600160a01b03821615610bf8576040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610bcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf391906129bb565b610bfa565b475b92915050565b60608160008167ffffffffffffffff811115610c1e57610c1e611f55565b604051908082528060200260200182016040528015610c47578160200160208202803683370190505b5090506000805b83811015610cf457868682818110610c6857610c6861256a565b9050602002810190610c7a9190612599565b610c8b90608081019060600161254d565b9150610c9682610b61565b838281518110610ca857610ca861256a565b60209081029190910101526001600160a01b038216610cec5734838281518110610cd457610cd461256a565b60200260200101818151610ce8919061237c565b9052505b600101610c4e565b509095945050505050565b60005b818110156109fa576000838383818110610d1e57610d1e61256a565b9050602002810190610d309190612599565b610d39906129d4565b90508060c0015115610d5757610d5781604001518260800151610a09565b50600101610d02565b838383838260018114610ff95760008585610d7c60018561237c565b818110610d8b57610d8b61256a565b9050602002810190610d9d9190612599565b610dae90608081019060600161254d565b9050600089815b81811015610f3f57368d8d83818110610dd057610dd061256a565b9050602002810190610de29190612599565b9050610e04610df7606083016040840161254d565b6001600160a01b03161590565b80610e5a5750610e5a610e1d604083016020840161254d565b6001600160a01b031660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610e715750610e71610e1d602083018361254d565b8015610ef65750610ef6610e8860a0830183612a79565b610e9791600491600091612ae5565b610ea091612b0f565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610f2c576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f368f8261160d565b50600101610db5565b505060005b610f4f60018561237c565b811015610ff1576000888883818110610f6a57610f6a61256a565b9050602002810190610f7c9190612599565b610f8d90608081019060600161254d565b9050836001600160a01b0316816001600160a01b031614610fe857858281518110610fba57610fba61256a565b6020026020010151610fcb82610b61565b610fd5919061237c565b92508215610fe857610fe88188856109e0565b50600101610f44565b5050506110d2565b8760005b818110156110cf57368b8b838181106110185761101861256a565b905060200281019061102a9190612599565b905061103f610df7606083016040840161254d565b806110585750611058610e1d604083016020840161254d565b801561106f575061106f610e1d602083018361254d565b80156110865750611086610e8860a0830183612a79565b6110bc576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110c68d8261160d565b50600101610ffd565b50505b50505050505050505050565b6001600160a01b0383166110f157505050565b6001600160a01b038216611131576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa15801561119a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111be91906129bb565b9050818110156111fc576111fc84846111f7847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61237c565b611909565b50505050565b6001600160a01b038316611242576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa1580156112a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c691906129bb565b90508082111561130c576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610598565b6111fc848484611a4d565b6001600160a01b038216611357576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4781111561139a576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610598565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146113e7576040519150601f19603f3d011682016040523d82523d6000602084013e6113ec565b606091505b50509050806109fa576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038416611467576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0382166114a7576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015285916000918316906370a0823190602401602060405180830381865afa15801561150b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152f91906129bb565b905061153d82868686611a96565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152849183918516906370a0823190602401602060405180830381865afa1580156115a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c491906129bb565b6115ce919061237c565b14611605576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b61162361161d602083018361254d565b3b151590565b611659576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611699576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006116ae610df7606085016040860161254d565b6116b95760006116bf565b82608001355b905060006116db6116d6606086016040870161254d565b610b61565b905060006116f26116d6608087016060880161254d565b9050826000036117295761172961170f606087016040880161254d565b61171f604088016020890161254d565b87608001356110de565b8460800135821015611774576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610598565b600080611784602088018861254d565b6001600160a01b03168561179b60a08a018a612a79565b6040516117a9929190612b57565b60006040518083038185875af1925050503d80600081146117e6576040519150601f19603f3d011682016040523d82523d6000602084013e6117eb565b606091505b50915091508161183657600061180082611ae7565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105989190612b67565b600061184b6116d660808a0160608b0161254d565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961187c60208b018b61254d565b61188c60608c0160408d0161254d565b61189c60808d0160608e0161254d565b8c608001358987116118ae57866118b8565b6118b88a8861237c565b604080519687526001600160a01b0395861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611973573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199791906129bb565b6119a19190612b7a565b6040516001600160a01b0385166024820152604481018290529091506111fc9085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611b65565b6040516001600160a01b0383166024820152604481018290526109fa9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016119e9565b6040516001600160a01b03808516602483015283166044820152606481018290526111fc9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016119e9565b6060604482511015611b2c57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611b486004808551611b40919061237c565b859190611c64565b905080806020019051810190611b5e9190612b8d565b9392505050565b6000611bba826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611d609092919063ffffffff16565b8051909150156109fa5780806020019051810190611bd89190612c04565b6109fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610598565b606081611c7281601f612b7a565b1015611caa576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611cb48284612b7a565b84511015611cee576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611d0d5760405191506000825260208201604052611d57565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611d46578051835260209283019201611d2e565b5050858452601f01601f1916604052505b50949350505050565b6060611d6f8484600085611d77565b949350505050565b606082471015611e09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610598565b600080866001600160a01b03168587604051611e259190612c21565b60006040518083038185875af1925050503d8060008114611e62576040519150601f19603f3d011682016040523d82523d6000602084013e611e67565b606091505b5091509150611e7887838387611e83565b979650505050505050565b60608315611f0c578251600003611f05576001600160a01b0385163b611f05576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610598565b5081611d6f565b611d6f8383815115611f215781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105989190612b67565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611fa857611fa8611f55565b60405290565b6040516101a0810167ffffffffffffffff81118282101715611fa857611fa8611f55565b60405160c0810167ffffffffffffffff81118282101715611fa857611fa8611f55565b604051610200810167ffffffffffffffff81118282101715611fa857611fa8611f55565b60405160e0810167ffffffffffffffff81118282101715611fa857611fa8611f55565b604051601f8201601f1916810167ffffffffffffffff8111828210171561206557612065611f55565b604052919050565b600067ffffffffffffffff82111561208757612087611f55565b50601f01601f191660200190565b600082601f8301126120a657600080fd5b81356120b96120b48261206d565b61203c565b8181528460208386010111156120ce57600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b038116811461210057600080fd5b50565b803561210e816120eb565b919050565b801515811461210057600080fd5b803561210e81612113565b6000610140828403121561213f57600080fd5b612147611f84565b905081358152602082013567ffffffffffffffff8082111561216857600080fd5b61217485838601612095565b6020840152604084013591508082111561218d57600080fd5b5061219a84828501612095565b6040830152506121ac60608301612103565b60608201526121bd60808301612103565b60808201526121ce60a08301612103565b60a082015260c082013560c082015260e082013560e08201526101006121f5818401612121565b90820152610120612207838201612121565b9082015292915050565b6000610240828403121561222457600080fd5b50919050565b6000806000806060858703121561224057600080fd5b843567ffffffffffffffff8082111561225857600080fd5b6122648883890161212c565b9550602087013591508082111561227a57600080fd5b818701915087601f83011261228e57600080fd5b81358181111561229d57600080fd5b8860208260051b85010111156122b257600080fd5b6020830195508094505060408701359150808211156122d057600080fd5b506122dd87828801612211565b91505092959194509250565b600080604083850312156122fc57600080fd5b823567ffffffffffffffff8082111561231457600080fd5b6123208683870161212c565b9350602085013591508082111561233657600080fd5b5061234385828601612211565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610bfa57610bfa61234d565b60006101a082840312156123a257600080fd5b6123aa611fae565b90506123b582612103565b81526123c360208301612103565b60208201526123d460408301612103565b60408201526123e560608301612103565b60608201526123f660808301612103565b608082015261240760a08301612103565b60a082015261241860c08301612103565b60c082015261242960e08301612103565b60e082015261010061243c818401612103565b908201526101208281013590820152610140808301359082015261016080830135908201526101809182013591810191909152919050565b6000610240823603121561248757600080fd5b61248f611fd2565b612499368461238f565b81526101a083013560208201526101c083013567ffffffffffffffff808211156124c257600080fd5b6124ce36838701612095565b60408401526101e08501359150808211156124e857600080fd5b6124f436838701612095565b606084015261020085013591508082111561250e57600080fd5b61251a36838701612095565b608084015261022085013591508082111561253457600080fd5b5061254136828601612095565b60a08301525092915050565b60006020828403121561255f57600080fd5b8135611b5e816120eb565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126125cd57600080fd5b9190910192915050565b80516001600160a01b0316825260208101516125fe60208401826001600160a01b03169052565b50604081015161261960408401826001600160a01b03169052565b50606081015161263460608401826001600160a01b03169052565b50608081015161264f60808401826001600160a01b03169052565b5060a081015161266a60a08401826001600160a01b03169052565b5060c081015161268560c08401826001600160a01b03169052565b5060e08101516126a060e08401826001600160a01b03169052565b50610100818101516001600160a01b03169083015261012080820151908301526101408082015190830152610160808201519083015261018090810151910152565b60005b838110156126fd5781810151838201526020016126e5565b50506000910152565b6000815180845261271e8160208601602086016126e2565b601f01601f19169290920160200192915050565b602081526127446020820183516125d7565b60208201516101c082015260408201516101e08201526000606083015161026080610200850152612779610280850183612706565b91506080850151601f1980868503016102208701526127988483612706565b935060a0870151915080868503016102408701526127b68483612706565b935060c08701519150808685030183870152506127d38382612706565b9695505050505050565b805161210e816120eb565b600061020082840312156127fb57600080fd5b612803611ff5565b61280c836127dd565b815261281a602084016127dd565b602082015261282b604084016127dd565b604082015261283c606084016127dd565b606082015261284d608084016127dd565b608082015261285e60a084016127dd565b60a082015261286f60c084016127dd565b60c082015261288060e084016127dd565b60e08201526101006128938185016127dd565b9082015261012083810151908201526101408084015190820152610160808401519082015261018080840151908201526101a080840151908201526101c080840151908201526101e0928301519281019290925250919050565b602081528151602082015260006020830151610140806040850152612916610160850183612706565b91506040850151601f198584030160608601526129338382612706565b925050606085015161295060808601826001600160a01b03169052565b5060808501516001600160a01b03811660a08601525060a08501516001600160a01b03811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206129a98187018315159052565b90950151151593019290925250919050565b6000602082840312156129cd57600080fd5b5051919050565b600060e082360312156129e657600080fd5b6129ee612019565b6129f783612103565b8152612a0560208401612103565b6020820152612a1660408401612103565b6040820152612a2760608401612103565b60608201526080830135608082015260a083013567ffffffffffffffff811115612a5057600080fd5b612a5c36828601612095565b60a083015250612a6e60c08401612121565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612aae57600080fd5b83018035915067ffffffffffffffff821115612ac957600080fd5b602001915036819003821315612ade57600080fd5b9250929050565b60008085851115612af557600080fd5b83861115612b0257600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612b4f5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b602081526000611b5e6020830184612706565b80820180821115610bfa57610bfa61234d565b600060208284031215612b9f57600080fd5b815167ffffffffffffffff811115612bb657600080fd5b8201601f81018413612bc757600080fd5b8051612bd56120b48261206d565b818152856020838501011115612bea57600080fd5b612bfb8260208301602086016126e2565b95945050505050565b600060208284031215612c1657600080fd5b8151611b5e81612113565b600082516125cd8184602087016126e256fea264697066735822122054c5e297636f8ba53cf9f495fc43dfd582621a20bd05ba2d9dc5aff4b1a5c3b864736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract ITransactionManager";
            readonly name: "_txManager";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "CannotBridgeToSameNetwork";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ContractCallNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "minAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "receivedAmount";
            readonly type: "uint256";
        }];
        readonly name: "CumulativeSlippageTooHigh";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InformationMismatch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "required";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidContract";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidFallbackAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidReceiver";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "message";
            readonly type: "string";
        }];
        readonly name: "InvariantDataMismatch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeAssetTransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapDataProvided";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapFromZeroBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoTransferToNullAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAValidSpender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ReentrancyError";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOutOfBounds";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOverflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferRecovered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly indexed: false;
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "bridgeData";
            readonly type: "tuple";
        }];
        readonly name: "LiFiTransferStarted";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "receivingChainTxManagerAddress";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "user";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "router";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "sendingAssetId";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "receivingAssetId";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "sendingChainFallback";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "receivingAddress";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "callTo";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "sendingChainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "receivingChainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "callDataHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "transactionId";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct ITransactionManager.InvariantTransactionData";
                readonly name: "invariantData";
                readonly type: "tuple";
            }, {
                readonly internalType: "uint256";
                readonly name: "expiry";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "encryptedCallData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "encodedBid";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "bidSignature";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "encodedMeta";
                readonly type: "bytes";
            }];
            readonly internalType: "struct NXTPFacet.NXTPData";
            readonly name: "_nxtpData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaNXTP";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "receivingChainTxManagerAddress";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "user";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "router";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "sendingAssetId";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "receivingAssetId";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "sendingChainFallback";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "receivingAddress";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "callTo";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "sendingChainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "receivingChainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "callDataHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "transactionId";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct ITransactionManager.InvariantTransactionData";
                readonly name: "invariantData";
                readonly type: "tuple";
            }, {
                readonly internalType: "uint256";
                readonly name: "expiry";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "encryptedCallData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "encodedBid";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "bidSignature";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "encodedMeta";
                readonly type: "bytes";
            }];
            readonly internalType: "struct NXTPFacet.NXTPData";
            readonly name: "_nxtpData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaNXTP";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): NXTPFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): NXTPFacet;
}
export {};
