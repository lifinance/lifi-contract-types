"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.AcrossFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_spokePool",
                type: "address",
                internalType: "contract IAcrossSpokePool",
            },
            {
                name: "_wrappedNative",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaAcross",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_acrossData",
                type: "tuple",
                internalType: "struct AcrossFacet.AcrossData",
                components: [
                    {
                        name: "relayerFeePct",
                        type: "int64",
                        internalType: "int64",
                    },
                    {
                        name: "quoteTimestamp",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "message",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "maxCount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaAcross",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_acrossData",
                type: "tuple",
                internalType: "struct AcrossFacet.AcrossData",
                components: [
                    {
                        name: "relayerFeePct",
                        type: "int64",
                        internalType: "int64",
                    },
                    {
                        name: "quoteTimestamp",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "message",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "maxCount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
];
var _bytecode = "0x60c06040523480156200001157600080fd5b5060405162001db838038062001db8833981016040819052620000349162000065565b6001600160a01b039182166080521660a052620000a4565b6001600160a01b03811681146200006257600080fd5b50565b600080604083850312156200007957600080fd5b825162000086816200004c565b602084015190925062000099816200004c565b809150509250929050565b60805160a051611ce0620000d860003960006105d10152600081816105a60152818161068701526106b20152611ce06000f3fe6080604052600436106100295760003560e01c80631fd8010c1461002e5780633a3f733214610043575b600080fd5b61004161003c366004611737565b610056565b005b61004161005136600461179b565b61027f565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e2344761185a565b9050846101078160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561013e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361017c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101b9576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156101f7576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610235576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61024788608001518960c001516104ac565b6102518888610561565b5047915050818111156102735761027360008461026e858561185a565b6107c7565b50506000909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102fa576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061030b344761185a565b90508680610100015161034a576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8780610120015115610388576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886103ab8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103e2576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610420576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361045d576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104728a600001518b60c001518b8b336107fc565b60c08b01526104818a88610561565b50479150508181111561049e5761049e60008461026e858561185a565b505060009091555050505050565b806000036104e6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661053f578034101561053b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61053b73ffffffffffffffffffffffffffffffffffffffff8316333084610943565b608082015173ffffffffffffffffffffffffffffffffffffffff1661067d5760c082015160a083015160e084015173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001692631186ec339290917f00000000000000000000000000000000000000000000000000000000000000009083906106006020890189611894565b61061060408a0160208b016118be565b61061d60408b018b6118e4565b8b606001356040518b63ffffffff1660e01b815260040161064699989796959493929190611950565b6000604051808303818588803b15801561065f57600080fd5b505af1158015610673573d6000803e3d6000fd5b505050505061078c565b6106b082608001517f00000000000000000000000000000000000000000000000000000000000000008460c001516109a0565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631186ec338360a0015184608001518560c001518660e001518660000160208101906107139190611894565b6107236040890160208a016118be565b61073060408a018a6118e4565b8a606001356040518a63ffffffff1660e01b815260040161075999989796959493929190611950565b600060405180830381600087803b15801561077357600080fd5b505af1158015610787573d6000803e3d6000fd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1826040516107bb9190611a59565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff83166107f1576107ec82826109cc565b505050565b6107ec838383610a39565b600082808203610838576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000858561084760018561185a565b81811061085657610856611b6c565b90506020028101906108689190611b9b565b610879906080810190606001611bd9565b9050600061088682610aa7565b905073ffffffffffffffffffffffffffffffffffffffff82166108b0576108ad348261185a565b90505b60006108bc8888610af2565b90506108c88888610bfe565b6108d58a89898985610c6b565b6000826108e185610aa7565b6108eb919061185a565b905089811015610935576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d15600160005114171661099257637939f4246000526004601cfd5b600060605260405250505050565b6107ec8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61101d565b73ffffffffffffffffffffffffffffffffffffffff8216610a19576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61053b73ffffffffffffffffffffffffffffffffffffffff83168261114c565b73ffffffffffffffffffffffffffffffffffffffff8216610a86576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107ec73ffffffffffffffffffffffffffffffffffffffff84168383611168565b600073ffffffffffffffffffffffffffffffffffffffff821615610aea57610ae573ffffffffffffffffffffffffffffffffffffffff8316306111b7565b610aec565b475b92915050565b60608160008167ffffffffffffffff811115610b1057610b106114fd565b604051908082528060200260200182016040528015610b39578160200160208202803683370190505b5090506000805b83811015610bf357868682818110610b5a57610b5a611b6c565b9050602002810190610b6c9190611b9b565b610b7d906080810190606001611bd9565b9150610b8882610aa7565b838281518110610b9a57610b9a611b6c565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610beb5734838281518110610bd357610bd3611b6c565b60200260200101818151610be7919061185a565b9052505b600101610b40565b509095945050505050565b60005b818110156107ec5736838383818110610c1c57610c1c611b6c565b9050602002810190610c2e9190611b9b565b9050610c4060e0820160c08301611bf4565b15610c6257610c62610c586060830160408401611bd9565b82608001356104ac565b50600101610c01565b838383838260018114610f385760008585610c8760018561185a565b818110610c9657610c96611b6c565b9050602002810190610ca89190611b9b565b610cb9906080810190606001611bd9565b9050600089815b81811015610e6457368d8d83818110610cdb57610cdb611b6c565b9050602002810190610ced9190611b9b565b9050610d1c610d026060830160408401611bd9565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610d7f5750610d7f610d356040830160208401611bd9565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610d965750610d96610d356020830183611bd9565b8015610e1b5750610e1b610dad60a08301836118e4565b610dbc91600491600091611c0f565b610dc591611c39565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610e51576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e5b8f826111ec565b50600101610cc0565b505060005b610e7460018561185a565b811015610f30576000888883818110610e8f57610e8f611b6c565b9050602002810190610ea19190611b9b565b610eb2906080810190606001611bd9565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f2757858281518110610ef957610ef9611b6c565b6020026020010151610f0a82610aa7565b610f14919061185a565b92508215610f2757610f278188856107c7565b50600101610e69565b505050611011565b8760005b8181101561100e57368b8b83818110610f5757610f57611b6c565b9050602002810190610f699190611b9b565b9050610f7e610d026060830160408401611bd9565b80610f975750610f97610d356040830160208401611bd9565b8015610fae5750610fae610d356020830183611bd9565b8015610fc55750610fc5610dad60a08301836118e4565b610ffb576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110058d826111ec565b50600101610f3c565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156111465773ffffffffffffffffffffffffffffffffffffffff8316611086576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa1580156110fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111f9190611c81565b10156111465761114673ffffffffffffffffffffffffffffffffffffffff85168483611469565b50505050565b60003860003884865af161053b5763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d1560016000511417166111ad576390b8ec186000526004601cfd5b6000603452505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b6112046111fc6020830183611bd9565b6017903b1190565b61123a576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080810135600081900361127a576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061128f610d026060850160408601611bd9565b61129a5760006112a0565b82608001355b905060006112bc6112b76080860160608701611bd9565b610aa7565b9050816000036112f3576112f36112d96060860160408701611bd9565b6112e96040870160208801611bd9565b86608001356109a0565b6000806113036020870187611bd9565b73ffffffffffffffffffffffffffffffffffffffff168461132760a08901896118e4565b604051611335929190611c9a565b60006040518083038185875af1925050503d8060008114611372576040519150601f19603f3d011682016040523d82523d6000602084013e611377565b606091505b50915091508161138a5761138a816114f3565b600061139f6112b76080890160608a01611bd9565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38886113d060208a018a611bd9565b6113e060608b0160408c01611bd9565b6113f060808c0160608d01611bd9565b8b60800135898711611402578661140c565b61140c8a8861185a565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d1560016000511417166111ad5760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d1560016000511417166111ad57633e3f8f736000526004601cfd5b8051602082018181fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611550576115506114fd565b60405290565b600082601f83011261156757600080fd5b813567ffffffffffffffff80821115611582576115826114fd565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156115c8576115c86114fd565b816040528381528660208588010111156115e157600080fd5b836020870160208301376000602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461162557600080fd5b919050565b8035801515811461162557600080fd5b6000610140828403121561164d57600080fd5b61165561152c565b905081358152602082013567ffffffffffffffff8082111561167657600080fd5b61168285838601611556565b6020840152604084013591508082111561169b57600080fd5b506116a884828501611556565b6040830152506116ba60608301611601565b60608201526116cb60808301611601565b60808201526116dc60a08301611601565b60a082015260c082013560c082015260e082013560e082015261010061170381840161162a565b9082015261012061171583820161162a565b9082015292915050565b60006080828403121561173157600080fd5b50919050565b6000806040838503121561174a57600080fd5b823567ffffffffffffffff8082111561176257600080fd5b61176e8683870161163a565b9350602085013591508082111561178457600080fd5b506117918582860161171f565b9150509250929050565b600080600080606085870312156117b157600080fd5b843567ffffffffffffffff808211156117c957600080fd5b6117d58883890161163a565b955060208701359150808211156117eb57600080fd5b818701915087601f8301126117ff57600080fd5b81358181111561180e57600080fd5b8860208260051b850101111561182357600080fd5b60208301955080945050604087013591508082111561184157600080fd5b5061184e8782880161171f565b91505092959194509250565b81810381811115610aec577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000602082840312156118a657600080fd5b81358060070b81146118b757600080fd5b9392505050565b6000602082840312156118d057600080fd5b813563ffffffff811681146118b757600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261191957600080fd5b83018035915067ffffffffffffffff82111561193457600080fd5b60200191503681900382131561194957600080fd5b9250929050565b600061010073ffffffffffffffffffffffffffffffffffffffff808d168452808c166020850152508960408401528860608401528760070b608084015263ffffffff871660a08401528060c0840152848184015250610120848682850137600083860182015260e083019390935250601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690910101979650505050505050565b6000815180845260005b81811015611a1b576020818501810151868301820152016119ff565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081528151602082015260006020830151610140806040850152611a826101608501836119f5565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152611abd83826119f5565b9250506060850151611ae7608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120611b5a8187018315159052565b90950151151593019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611bcf57600080fd5b9190910192915050565b600060208284031215611beb57600080fd5b6118b782611601565b600060208284031215611c0657600080fd5b6118b78261162a565b60008085851115611c1f57600080fd5b83861115611c2c57600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015611c795780818660040360031b1b83161692505b505092915050565b600060208284031215611c9357600080fd5b5051919050565b818382376000910190815291905056fea26469706673582212200a1a3ed06bbcaf6ebb0e23c87488c595b7d1a801a45999a914f8da436a142d3e64736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var AcrossFacet__factory = /** @class */ (function (_super) {
    __extends(AcrossFacet__factory, _super);
    function AcrossFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    AcrossFacet__factory.prototype.deploy = function (_spokePool, _wrappedNative, overrides) {
        return _super.prototype.deploy.call(this, _spokePool, _wrappedNative, overrides || {});
    };
    AcrossFacet__factory.prototype.getDeployTransaction = function (_spokePool, _wrappedNative, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _spokePool, _wrappedNative, overrides || {});
    };
    AcrossFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    AcrossFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    AcrossFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    AcrossFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    AcrossFacet__factory.bytecode = _bytecode;
    AcrossFacet__factory.abi = _abi;
    return AcrossFacet__factory;
}(ethers_1.ContractFactory));
exports.AcrossFacet__factory = AcrossFacet__factory;
