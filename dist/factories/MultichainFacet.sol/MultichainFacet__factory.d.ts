import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { MultichainFacet, MultichainFacetInterface } from "../../MultichainFacet.sol/MultichainFacet";
declare type MultichainFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MultichainFacet__factory extends ContractFactory {
    constructor(...args: MultichainFacetConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<MultichainFacet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): MultichainFacet;
    connect(signer: Signer): MultichainFacet__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b506133fd806100206000396000f3fe60806040526004361061005a5760003560e01c8063dcd5733b11610043578063dcd5733b14610094578063dfd83090146100b4578063ef55f6dd146100d457600080fd5b8063a342d3ff1461005f578063bcd733b314610074575b600080fd5b61007261006d366004612c8a565b6100e7565b005b34801561008057600080fd5b5061007261008f366004612d06565b6103ab565b3480156100a057600080fd5b506100726100af366004612d7b565b61054e565b3480156100c057600080fd5b506100726100cf366004612de7565b610747565b6100726100e2366004612e3a565b6109ad565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610162576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006101733447612eb8565b9050868061010001516101b2576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101200151156101f0576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886102138160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561024a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610288576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036102c5576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f1ee407b3d26d6d639b123c41c4a76edbb0ed1dd9e1bbd835fcab743f9a070b728060006102f660208b018b612ecb565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff16610356576040517f466d7fef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61036b8b600001518c60c001518c8c33610c83565b60c08c015261037a8b89610dcb565b5047925050508181111561039d5761039d6000846103988585612eb8565b61112d565b505060009091555050505050565b6103b3611163565b7f1ee407b3d26d6d639b123c41c4a76edbb0ed1dd9e1bbd835fcab743f9a070b73547f1ee407b3d26d6d639b123c41c4a76edbb0ed1dd9e1bbd835fcab743f9a070b729060ff16610430576040517f87138d5c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b67ffffffffffffffff811683111561050f5783838267ffffffffffffffff1681811061046157610461612ee6565b90506040020160200160208101906104799190612ecb565b82600201600086868567ffffffffffffffff1681811061049b5761049b612ee6565b6104b19260206040909202019081019150612ecb565b73ffffffffffffffffffffffffffffffffffffffff9081168252602082019290925260400160002080547fffffffffffffffffffffffff00000000000000000000000000000000000000001692909116919091179055600101610433565b507fbcc160cb920b2b041ee8915122941375065d36950ffc1d026789ac3db33d7efc8383604051610541929190612f15565b60405180910390a1505050565b610556611163565b7f1ee407b3d26d6d639b123c41c4a76edbb0ed1dd9e1bbd835fcab743f9a070b73547f1ee407b3d26d6d639b123c41c4a76edbb0ed1dd9e1bbd835fcab743f9a070b729060ff166105d3576040517f87138d5c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8360005b818110156107015760008787838181106105f3576105f3612ee6565b90506020020160208101906106089190612ecb565b73ffffffffffffffffffffffffffffffffffffffff1603610655576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84848281811061066757610667612ee6565b905060200201602081019061067c9190612f84565b83600089898581811061069157610691612ee6565b90506020020160208101906106a69190612ecb565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556001016105d7565b507f2c54db8b386392c78501cad30dd4571a5a59d23826fc1053f2f620621909c3da868686866040516107379493929190612fa1565b60405180910390a1505050505050565b61074f611163565b7f1ee407b3d26d6d639b123c41c4a76edbb0ed1dd9e1bbd835fcab743f9a070b7273ffffffffffffffffffffffffffffffffffffffff84166107bd576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018101805473ffffffffffffffffffffffffffffffffffffffff8616610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff8216811790925560ff91821691161715610845576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160005b8181101561094e57600085858381811061086557610865612ee6565b905060200201602081019061087a9190612ecb565b73ffffffffffffffffffffffffffffffffffffffff16036108c7576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018360008787858181106108de576108de612ee6565b90506020020160208101906108f39190612ecb565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055600101610849565b50600182810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690911790556040517fe51c1d2eff84ab6f9ee1bd80996062dc0cb46f36d7becb600280a7083294908890600090a15050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610a28576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155336000610a393447612eb8565b90508480610100015115610a79576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8580610120015115610ab7576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86610ada8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610b11576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610b4f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610b8c576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f1ee407b3d26d6d639b123c41c4a76edbb0ed1dd9e1bbd835fcab743f9a070b72806000610bbd60208b018b612ecb565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff16610c1d576040517f466d7fef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608089015173ffffffffffffffffffffffffffffffffffffffff1615610c4f57610c4f89608001518a60c001516111d8565b610c598989610dcb565b50479250505081811115610c7757610c776000846103988585612eb8565b50506000909155505050565b600082808203610cbf576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610cce600185612eb8565b818110610cdd57610cdd612ee6565b9050602002810190610cef919061303c565b610d00906080810190606001612ecb565b90506000610d0d8261134e565b905073ffffffffffffffffffffffffffffffffffffffff8216610d3757610d343482612eb8565b90505b6000610d438888611407565b9050610d4f8888611513565b610d5c8a89898985611580565b600082610d688561134e565b610d729190612eb8565b905089811015610dbd576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b608082015173ffffffffffffffffffffffffffffffffffffffff16610df36020830183612ecb565b73ffffffffffffffffffffffffffffffffffffffff1603610ebe57608082015160c083015160a08401516040517f628d6cba000000000000000000000000000000000000000000000000000000008152600481019290925273ffffffffffffffffffffffffffffffffffffffff90811660248301529091169063628d6cba906044016020604051808303816000875af1158015610e94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb8919061307a565b506110f2565b60808201517f1ee407b3d26d6d639b123c41c4a76edbb0ed1dd9e1bbd835fcab743f9a070b729073ffffffffffffffffffffffffffffffffffffffff16610fb957610f0c6020830183612ecb565b60c0840151600183015460a086015160e08701516040517fa5e5657100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff610100909404841660048201529183166024830152604482015292169163a5e5657191906064016000604051808303818588803b158015610f9b57600080fd5b505af1158015610faf573d6000803e3d6000fd5b50505050506110f0565b6080830151610fd990610fcf6020850185612ecb565b8560c00151611932565b608083015173ffffffffffffffffffffffffffffffffffffffff90811660009081526002830160209081526040909120549091169061101a90840184612ecb565b73ffffffffffffffffffffffffffffffffffffffff9081169063edbdf5e290831661104957856080015161104b565b825b60a087015160c088015160e0808a01516040519186901b7fffffffff0000000000000000000000000000000000000000000000000000000016825273ffffffffffffffffffffffffffffffffffffffff948516600483015293909216602483015260448201526064810191909152608401600060405180830381600087803b1580156110d657600080fd5b505af11580156110ea573d6000803e3d6000fd5b50505050505b505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1826040516111219190613105565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff83161561115957611154838383611a75565b505050565b6111548282611bf7565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff1633146111d6576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b80600003611212576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661126b5780341015611267576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156112d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fc9190613218565b905081811015611342576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610db4565b61115483333085611d21565b600073ffffffffffffffffffffffffffffffffffffffff8216156113ff576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156113d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113fa9190613218565b611401565b475b92915050565b60608160008167ffffffffffffffff811115611425576114256129b8565b60405190808252806020026020018201604052801561144e578160200160208202803683370190505b5090506000805b838110156115085786868281811061146f5761146f612ee6565b9050602002810190611481919061303c565b611492906080810190606001612ecb565b915061149d8261134e565b8382815181106114af576114af612ee6565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff821661150057348382815181106114e8576114e8612ee6565b602002602001018181516114fc9190612eb8565b9052505b600101611455565b509095945050505050565b60005b81811015611154573683838381811061153157611531612ee6565b9050602002810190611543919061303c565b905061155560e0820160c08301612f84565b156115775761157761156d6060830160408401612ecb565b82608001356111d8565b50600101611516565b83838383826001811461184d576000858561159c600185612eb8565b8181106115ab576115ab612ee6565b90506020028101906115bd919061303c565b6115ce906080810190606001612ecb565b9050600089815b8181101561177957368d8d838181106115f0576115f0612ee6565b9050602002810190611602919061303c565b90506116316116176060830160408401612ecb565b73ffffffffffffffffffffffffffffffffffffffff161590565b80611694575061169461164a6040830160208401612ecb565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156116ab57506116ab61164a6020830183612ecb565b801561173057506117306116c260a0830183613231565b6116d191600491600091613296565b6116da916132c0565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611766576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117708f82611f3b565b506001016115d5565b505060005b611789600185612eb8565b8110156118455760008888838181106117a4576117a4612ee6565b90506020028101906117b6919061303c565b6117c7906080810190606001612ecb565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461183c5785828151811061180e5761180e612ee6565b602002602001015161181f8261134e565b6118299190612eb8565b9250821561183c5761183c81888561112d565b5060010161177e565b505050611926565b8760005b8181101561192357368b8b8381811061186c5761186c612ee6565b905060200281019061187e919061303c565b90506118936116176060830160408401612ecb565b806118ac57506118ac61164a6040830160208401612ecb565b80156118c357506118c361164a6020830183612ecb565b80156118da57506118da6116c260a0830183613231565b611910576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61191a8d82611f3b565b50600101611851565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661195257505050565b73ffffffffffffffffffffffffffffffffffffffff821661199f576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015611a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a389190613218565b101561115457611a4a83836000612251565b61115483837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612251565b73ffffffffffffffffffffffffffffffffffffffff8316611ac2576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611b0f576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611b7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba09190613218565b905080821115611be6576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610db4565b611bf1848484612451565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216611c44576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611c87576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610db4565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611ce1576040519150601f19603f3d011682016040523d82523d6000602084013e611ce6565b606091505b5050905080611154576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416611d6e576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611dbb576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015611e2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e509190613218565b9050611e5e828686866124a7565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611ece573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ef29190613218565b611efc9190612eb8565b14611f33576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b611f51611f4b6020830183612ecb565b3b151590565b611f87576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611fc7576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611fdc6116176060850160408601612ecb565b611fe7576000611fed565b82608001355b905060006120096120046060860160408701612ecb565b61134e565b905060006120206120046080870160608801612ecb565b9050826000036120575761205761203d6060870160408801612ecb565b61204d6040880160208901612ecb565b8760800135611932565b84608001358210156120a2576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610db4565b6000806120b26020880188612ecb565b73ffffffffffffffffffffffffffffffffffffffff16856120d660a08a018a613231565b6040516120e4929190613308565b60006040518083038185875af1925050503d8060008114612121576040519150601f19603f3d011682016040523d82523d6000602084013e612126565b606091505b50915091508161217157600061213b82612505565b9050806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db49190613318565b600061218661200460808a0160608b01612ecb565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896121b760208b018b612ecb565b6121c760608c0160408d01612ecb565b6121d760808d0160608e01612ecb565b8c608001358987116121e957866121f3565b6121f38a88612eb8565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b8015806122f157506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156122cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ef9190613218565b155b61237d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610db4565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526111549084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612583565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526111549084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016123cf565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052611bf19085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016123cf565b606060448251101561254a57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000612566600480855161255e9190612eb8565b85919061268f565b90508080602001905181019061257c919061332b565b9392505050565b60006125e5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166127a99092919063ffffffff16565b8051909150156111545780806020019051810190612603919061307a565b611154576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610db4565b60608161269d81601f6133a2565b10156126d5576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6126df82846133a2565b84511015612719576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608215801561273857604051915060008252602082016040526127a0565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015612771578051835260209283019201612759565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60606127b884846000856127c0565b949350505050565b606082471015612852576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610db4565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161287b91906133b5565b60006040518083038185875af1925050503d80600081146128b8576040519150601f19603f3d011682016040523d82523d6000602084013e6128bd565b606091505b50915091506128ce878383876128d9565b979650505050505050565b6060831561296f5782516000036129685773ffffffffffffffffffffffffffffffffffffffff85163b612968576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610db4565b50816127b8565b6127b883838151156129845781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db49190613318565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715612a0b57612a0b6129b8565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612a5857612a586129b8565b604052919050565b600067ffffffffffffffff821115612a7a57612a7a6129b8565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112612ab757600080fd5b8135612aca612ac582612a60565b612a11565b818152846020838601011115612adf57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114612b2057600080fd5b919050565b8015158114612b3357600080fd5b50565b8035612b2081612b25565b60006101408284031215612b5457600080fd5b612b5c6129e7565b905081358152602082013567ffffffffffffffff80821115612b7d57600080fd5b612b8985838601612aa6565b60208401526040840135915080821115612ba257600080fd5b50612baf84828501612aa6565b604083015250612bc160608301612afc565b6060820152612bd260808301612afc565b6080820152612be360a08301612afc565b60a082015260c082013560c082015260e082013560e0820152610100612c0a818401612b36565b90820152610120612c1c838201612b36565b9082015292915050565b60008083601f840112612c3857600080fd5b50813567ffffffffffffffff811115612c5057600080fd5b6020830191508360208260051b8501011115612c6b57600080fd5b9250929050565b600060208284031215612c8457600080fd5b50919050565b60008060008060608587031215612ca057600080fd5b843567ffffffffffffffff80821115612cb857600080fd5b612cc488838901612b41565b95506020870135915080821115612cda57600080fd5b50612ce787828801612c26565b9094509250612cfb90508660408701612c72565b905092959194509250565b60008060208385031215612d1957600080fd5b823567ffffffffffffffff80821115612d3157600080fd5b818501915085601f830112612d4557600080fd5b813581811115612d5457600080fd5b8660208260061b8501011115612d6957600080fd5b60209290920196919550909350505050565b60008060008060408587031215612d9157600080fd5b843567ffffffffffffffff80821115612da957600080fd5b612db588838901612c26565b90965094506020870135915080821115612dce57600080fd5b50612ddb87828801612c26565b95989497509550505050565b600080600060408486031215612dfc57600080fd5b612e0584612afc565b9250602084013567ffffffffffffffff811115612e2157600080fd5b612e2d86828701612c26565b9497909650939450505050565b60008060408385031215612e4d57600080fd5b823567ffffffffffffffff811115612e6457600080fd5b612e7085828601612b41565b925050612e808460208501612c72565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561140157611401612e89565b600060208284031215612edd57600080fd5b61257c82612afc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020808252818101839052600090604080840186845b87811015612f775773ffffffffffffffffffffffffffffffffffffffff80612f5284612afc565b16845280612f61878501612afc565b1684870152509183019190830190600101612f2b565b5090979650505050505050565b600060208284031215612f9657600080fd5b813561257c81612b25565b6040808252810184905260008560608301825b87811015612fef5773ffffffffffffffffffffffffffffffffffffffff612fda84612afc565b16825260209283019290910190600101612fb4565b5083810360208581019190915285825291508590820160005b8681101561302f57823561301b81612b25565b151582529183019190830190600101613008565b5098975050505050505050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261307057600080fd5b9190910192915050565b60006020828403121561308c57600080fd5b815161257c81612b25565b60005b838110156130b257818101518382015260200161309a565b50506000910152565b600081518084526130d3816020860160208601613097565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152815160208201526000602083015161014080604085015261312e6101608501836130bb565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe085840301606086015261316983826130bb565b9250506060850151613193608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206132068187018315159052565b90950151151593019290925250919050565b60006020828403121561322a57600080fd5b5051919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261326657600080fd5b83018035915067ffffffffffffffff82111561328157600080fd5b602001915036819003821315612c6b57600080fd5b600080858511156132a657600080fd5b838611156132b357600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156133005780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b60208152600061257c60208301846130bb565b60006020828403121561333d57600080fd5b815167ffffffffffffffff81111561335457600080fd5b8201601f8101841361336557600080fd5b8051613373612ac582612a60565b81815285602083850101111561338857600080fd5b613399826020830160208601613097565b95945050505050565b8082018082111561140157611401612e89565b6000825161307081846020870161309756fea2646970667358221220e10d00ce137475dc353ca15ccb5357897f29ce000edd19bc3a3fe2b9646e4a2064736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "AlreadyInitialized";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CannotBridgeToSameNetwork";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ContractCallNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "minAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "receivedAmount";
            readonly type: "uint256";
        }];
        readonly name: "CumulativeSlippageTooHigh";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InformationMismatch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "required";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidConfig";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidContract";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidReceiver";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidRouter";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeAssetTransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapDataProvided";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapFromZeroBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoTransferToNullAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotInitialized";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAValidSpender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OnlyContractOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ReentrancyError";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOutOfBounds";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOverflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "tokenAddress";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "anyTokenAddress";
                readonly type: "address";
            }];
            readonly indexed: false;
            readonly internalType: "struct MultichainFacet.AnyMapping[]";
            readonly name: "mappings";
            readonly type: "tuple[]";
        }];
        readonly name: "AnyMappingUpdated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferRecovered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly indexed: false;
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "bridgeData";
            readonly type: "tuple";
        }];
        readonly name: "LiFiTransferStarted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [];
        readonly name: "MultichainInitialized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address[]";
            readonly name: "routers";
            readonly type: "address[]";
        }, {
            readonly indexed: false;
            readonly internalType: "bool[]";
            readonly name: "allowed";
            readonly type: "bool[]";
        }];
        readonly name: "MultichainRoutersUpdated";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "anyNative";
            readonly type: "address";
        }, {
            readonly internalType: "address[]";
            readonly name: "routers";
            readonly type: "address[]";
        }];
        readonly name: "initMultichain";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "routers";
            readonly type: "address[]";
        }, {
            readonly internalType: "bool[]";
            readonly name: "allowed";
            readonly type: "bool[]";
        }];
        readonly name: "registerRouters";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "router";
                readonly type: "address";
            }];
            readonly internalType: "struct MultichainFacet.MultichainData";
            readonly name: "_multichainData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaMultichain";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "router";
                readonly type: "address";
            }];
            readonly internalType: "struct MultichainFacet.MultichainData";
            readonly name: "_multichainData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaMultichain";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "tokenAddress";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "anyTokenAddress";
                readonly type: "address";
            }];
            readonly internalType: "struct MultichainFacet.AnyMapping[]";
            readonly name: "mappings";
            readonly type: "tuple[]";
        }];
        readonly name: "updateAddressMappings";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): MultichainFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MultichainFacet;
}
export {};
