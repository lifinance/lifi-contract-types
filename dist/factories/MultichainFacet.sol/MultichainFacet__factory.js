"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MultichainFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "initMultichain",
        inputs: [
            {
                name: "anyNative",
                type: "address",
                internalType: "address",
            },
            {
                name: "routers",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "registerRouters",
        inputs: [
            {
                name: "routers",
                type: "address[]",
                internalType: "address[]",
            },
            {
                name: "allowed",
                type: "bool[]",
                internalType: "bool[]",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaMultichain",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_multichainData",
                type: "tuple",
                internalType: "struct MultichainFacet.MultichainData",
                components: [
                    {
                        name: "router",
                        type: "address",
                        internalType: "address",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaMultichain",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_multichainData",
                type: "tuple",
                internalType: "struct MultichainFacet.MultichainData",
                components: [
                    {
                        name: "router",
                        type: "address",
                        internalType: "address",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "updateAddressMappings",
        inputs: [
            {
                name: "mappings",
                type: "tuple[]",
                internalType: "struct MultichainFacet.AnyMapping[]",
                components: [
                    {
                        name: "tokenAddress",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "anyTokenAddress",
                        type: "address",
                        internalType: "address",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "event",
        name: "AnyMappingUpdated",
        inputs: [
            {
                name: "mappings",
                type: "tuple[]",
                indexed: false,
                internalType: "struct MultichainFacet.AnyMapping[]",
                components: [
                    {
                        name: "tokenAddress",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "anyTokenAddress",
                        type: "address",
                        internalType: "address",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "MultichainInitialized",
        inputs: [],
        anonymous: false,
    },
    {
        type: "event",
        name: "MultichainRoutersUpdated",
        inputs: [
            {
                name: "routers",
                type: "address[]",
                indexed: false,
                internalType: "address[]",
            },
            {
                name: "allowed",
                type: "bool[]",
                indexed: false,
                internalType: "bool[]",
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InsufficientBalance",
        inputs: [
            {
                name: "required",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "balance",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidConfig",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidRouter",
        inputs: [],
    },
    {
        type: "error",
        name: "NativeAssetTransferFailed",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NoTransferToNullAddress",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAnERC20Token",
        inputs: [],
    },
    {
        type: "error",
        name: "OnlyContractOwner",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
    {
        type: "error",
        name: "SliceOutOfBounds",
        inputs: [],
    },
    {
        type: "error",
        name: "SliceOverflow",
        inputs: [],
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b506132b8806100206000396000f3fe60806040526004361061005a5760003560e01c8063dcd5733b11610043578063dcd5733b14610094578063dfd83090146100b4578063ef55f6dd146100d457600080fd5b8063a342d3ff1461005f578063bcd733b314610074575b600080fd5b61007261006d366004612b45565b6100e7565b005b34801561008057600080fd5b5061007261008f366004612bc1565b6103ab565b3480156100a057600080fd5b506100726100af366004612c36565b6104f2565b3480156100c057600080fd5b506100726100cf366004612ca2565b61068f565b6100726100e2366004612cf5565b610855565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610162576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006101733447612d73565b9050868061010001516101b2576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101200151156101f0576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886102138160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561024a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610288576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036102c5576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f1ee407b3d26d6d639b123c41c4a76edbb0ed1dd9e1bbd835fcab743f9a070b728060006102f660208b018b612d86565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff16610356576040517f466d7fef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61036b8b600001518c60c001518c8c33610b2b565b60c08c015261037a8b89610c73565b5047925050508181111561039d5761039d6000846103988585612d73565b610fd5565b505060009091555050505050565b6103b361100b565b7f1ee407b3d26d6d639b123c41c4a76edbb0ed1dd9e1bbd835fcab743f9a070b7260005b67ffffffffffffffff81168311156104b35783838267ffffffffffffffff1681811061040557610405612da1565b905060400201602001602081019061041d9190612d86565b82600201600086868567ffffffffffffffff1681811061043f5761043f612da1565b6104559260206040909202019081019150612d86565b73ffffffffffffffffffffffffffffffffffffffff9081168252602082019290925260400160002080547fffffffffffffffffffffffff000000000000000000000000000000000000000016929091169190911790556001016103d7565b507fbcc160cb920b2b041ee8915122941375065d36950ffc1d026789ac3db33d7efc83836040516104e5929190612dd0565b60405180910390a1505050565b6104fa61100b565b7f1ee407b3d26d6d639b123c41c4a76edbb0ed1dd9e1bbd835fcab743f9a070b728360005b8181101561064957600087878381811061053b5761053b612da1565b90506020020160208101906105509190612d86565b73ffffffffffffffffffffffffffffffffffffffff160361059d576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8484828181106105af576105af612da1565b90506020020160208101906105c49190612e3f565b8360008989858181106105d9576105d9612da1565b90506020020160208101906105ee9190612d86565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905560010161051f565b507f2c54db8b386392c78501cad30dd4571a5a59d23826fc1053f2f620621909c3da8686868660405161067f9493929190612e5c565b60405180910390a1505050505050565b61069761100b565b7f1ee407b3d26d6d639b123c41c4a76edbb0ed1dd9e1bbd835fcab743f9a070b7380547fffffffffffffffffffffff0000000000000000000000000000000000000000ff1661010073ffffffffffffffffffffffffffffffffffffffff8616021790557f1ee407b3d26d6d639b123c41c4a76edbb0ed1dd9e1bbd835fcab743f9a070b728160005b8181101561082457600085858381811061073b5761073b612da1565b90506020020160208101906107509190612d86565b73ffffffffffffffffffffffffffffffffffffffff160361079d576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018360008787858181106107b4576107b4612da1565b90506020020160208101906107c99190612d86565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905560010161071f565b506040517fe51c1d2eff84ab6f9ee1bd80996062dc0cb46f36d7becb600280a7083294908890600090a15050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016108d0576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006108e13447612d73565b90508480610100015115610921576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b858061012001511561095f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866109828160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156109b9576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036109f7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610a34576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f1ee407b3d26d6d639b123c41c4a76edbb0ed1dd9e1bbd835fcab743f9a070b72806000610a6560208b018b612d86565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff16610ac5576040517f466d7fef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608089015173ffffffffffffffffffffffffffffffffffffffff1615610af757610af789608001518a60c00151611080565b610b018989610c73565b50479250505081811115610b1f57610b1f6000846103988585612d73565b50506000909155505050565b600082808203610b67576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610b76600185612d73565b818110610b8557610b85612da1565b9050602002810190610b979190612ef7565b610ba8906080810190606001612d86565b90506000610bb5826111f6565b905073ffffffffffffffffffffffffffffffffffffffff8216610bdf57610bdc3482612d73565b90505b6000610beb88886112af565b9050610bf788886113bb565b610c048a89898985611428565b600082610c10856111f6565b610c1a9190612d73565b905089811015610c65576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b608082015173ffffffffffffffffffffffffffffffffffffffff16610c9b6020830183612d86565b73ffffffffffffffffffffffffffffffffffffffff1603610d6657608082015160c083015160a08401516040517f628d6cba000000000000000000000000000000000000000000000000000000008152600481019290925273ffffffffffffffffffffffffffffffffffffffff90811660248301529091169063628d6cba906044016020604051808303816000875af1158015610d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d609190612f35565b50610f9a565b60808201517f1ee407b3d26d6d639b123c41c4a76edbb0ed1dd9e1bbd835fcab743f9a070b729073ffffffffffffffffffffffffffffffffffffffff16610e6157610db46020830183612d86565b60c0840151600183015460a086015160e08701516040517fa5e5657100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff610100909404841660048201529183166024830152604482015292169163a5e5657191906064016000604051808303818588803b158015610e4357600080fd5b505af1158015610e57573d6000803e3d6000fd5b5050505050610f98565b6080830151610e8190610e776020850185612d86565b8560c001516117da565b608083015173ffffffffffffffffffffffffffffffffffffffff908116600090815260028301602090815260409091205490911690610ec290840184612d86565b73ffffffffffffffffffffffffffffffffffffffff9081169063edbdf5e2908316610ef1578560800151610ef3565b825b60a087015160c088015160e0808a01516040519186901b7fffffffff0000000000000000000000000000000000000000000000000000000016825273ffffffffffffffffffffffffffffffffffffffff948516600483015293909216602483015260448201526064810191909152608401600060405180830381600087803b158015610f7e57600080fd5b505af1158015610f92573d6000803e3d6000fd5b50505050505b505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f182604051610fc99190612fc0565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff83161561100157610ffc83838361191d565b505050565b610ffc8282611a9f565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff16331461107e576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b806000036110ba576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611113578034101561110f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015611180573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a491906130d3565b9050818110156111ea576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610c5c565b610ffc83333085611bc9565b600073ffffffffffffffffffffffffffffffffffffffff8216156112a7576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa15801561127e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a291906130d3565b6112a9565b475b92915050565b60608160008167ffffffffffffffff8111156112cd576112cd612873565b6040519080825280602002602001820160405280156112f6578160200160208202803683370190505b5090506000805b838110156113b05786868281811061131757611317612da1565b90506020028101906113299190612ef7565b61133a906080810190606001612d86565b9150611345826111f6565b83828151811061135757611357612da1565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff82166113a8573483828151811061139057611390612da1565b602002602001018181516113a49190612d73565b9052505b6001016112fd565b509095945050505050565b60005b81811015610ffc57368383838181106113d9576113d9612da1565b90506020028101906113eb9190612ef7565b90506113fd60e0820160c08301612e3f565b1561141f5761141f6114156060830160408401612d86565b8260800135611080565b506001016113be565b8383838382600181146116f55760008585611444600185612d73565b81811061145357611453612da1565b90506020028101906114659190612ef7565b611476906080810190606001612d86565b9050600089815b8181101561162157368d8d8381811061149857611498612da1565b90506020028101906114aa9190612ef7565b90506114d96114bf6060830160408401612d86565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061153c575061153c6114f26040830160208401612d86565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561155357506115536114f26020830183612d86565b80156115d857506115d861156a60a08301836130ec565b61157991600491600091613151565b6115829161317b565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61160e576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116188f82611df3565b5060010161147d565b505060005b611631600185612d73565b8110156116ed57600088888381811061164c5761164c612da1565b905060200281019061165e9190612ef7565b61166f906080810190606001612d86565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146116e4578582815181106116b6576116b6612da1565b60200260200101516116c7826111f6565b6116d19190612d73565b925082156116e4576116e4818885610fd5565b50600101611626565b5050506117ce565b8760005b818110156117cb57368b8b8381811061171457611714612da1565b90506020028101906117269190612ef7565b905061173b6114bf6060830160408401612d86565b8061175457506117546114f26040830160208401612d86565b801561176b575061176b6114f26020830183612d86565b8015611782575061178261156a60a08301836130ec565b6117b8576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117c28d82611df3565b506001016116f9565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166117fa57505050565b73ffffffffffffffffffffffffffffffffffffffff8216611847576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa1580156118bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e091906130d3565b1015610ffc576118f283836000612109565b610ffc83837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612109565b73ffffffffffffffffffffffffffffffffffffffff831661196a576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166119b7576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611a24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a4891906130d3565b905080821115611a8e576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610c5c565b611a99848484612309565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216611aec576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611b2f576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610c5c565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611b89576040519150601f19603f3d011682016040523d82523d6000602084013e611b8e565b606091505b5050905080610ffc576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416611c16576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611c63576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015611cd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cf891906130d3565b9050611d068286868661235f565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015260009183918516906370a0823190602401602060405180830381865afa158015611d77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9b91906130d3565b611da59190612d73565b905083611db38260016131c3565b11611dea576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050505050565b611e09611e036020830183612d86565b3b151590565b611e3f576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611e7f576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611e946114bf6060850160408601612d86565b611e9f576000611ea5565b82608001355b90506000611ec1611ebc6060860160408701612d86565b6111f6565b90506000611ed8611ebc6080870160608801612d86565b905082600003611f0f57611f0f611ef56060870160408801612d86565b611f056040880160208901612d86565b87608001356117da565b8460800135821015611f5a576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610c5c565b600080611f6a6020880188612d86565b73ffffffffffffffffffffffffffffffffffffffff1685611f8e60a08a018a6130ec565b604051611f9c9291906131d6565b60006040518083038185875af1925050503d8060008114611fd9576040519150601f19603f3d011682016040523d82523d6000602084013e611fde565b606091505b509150915081612029576000611ff3826123bd565b9050806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5c91906131e6565b600061203e611ebc60808a0160608b01612d86565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961206f60208b018b612d86565b61207f60608c0160408d01612d86565b61208f60808d0160608e01612d86565b8c608001358987116120a157866120ab565b6120ab8a88612d73565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b8015806121a957506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015612183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121a791906130d3565b155b612235576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610c5c565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610ffc9084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261243b565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610ffc9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401612287565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052611a999085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401612287565b606060448251101561240257505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b600061241e60048085516124169190612d73565b85919061254a565b90508080602001905181019061243491906131f9565b9392505050565b600061249d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166126649092919063ffffffff16565b90508051600014806124be5750808060200190518101906124be9190612f35565b610ffc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610c5c565b60608161255881601f6131c3565b1015612590576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61259a82846131c3565b845110156125d4576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060821580156125f3576040519150600082526020820160405261265b565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561262c578051835260209283019201612614565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6060612673848460008561267b565b949350505050565b60608247101561270d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610c5c565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516127369190613270565b60006040518083038185875af1925050503d8060008114612773576040519150601f19603f3d011682016040523d82523d6000602084013e612778565b606091505b509150915061278987838387612794565b979650505050505050565b6060831561282a5782516000036128235773ffffffffffffffffffffffffffffffffffffffff85163b612823576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c5c565b5081612673565b612673838381511561283f5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5c91906131e6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156128c6576128c6612873565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561291357612913612873565b604052919050565b600067ffffffffffffffff82111561293557612935612873565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261297257600080fd5b81356129856129808261291b565b6128cc565b81815284602083860101111561299a57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146129db57600080fd5b919050565b80151581146129ee57600080fd5b50565b80356129db816129e0565b60006101408284031215612a0f57600080fd5b612a176128a2565b905081358152602082013567ffffffffffffffff80821115612a3857600080fd5b612a4485838601612961565b60208401526040840135915080821115612a5d57600080fd5b50612a6a84828501612961565b604083015250612a7c606083016129b7565b6060820152612a8d608083016129b7565b6080820152612a9e60a083016129b7565b60a082015260c082013560c082015260e082013560e0820152610100612ac58184016129f1565b90820152610120612ad78382016129f1565b9082015292915050565b60008083601f840112612af357600080fd5b50813567ffffffffffffffff811115612b0b57600080fd5b6020830191508360208260051b8501011115612b2657600080fd5b9250929050565b600060208284031215612b3f57600080fd5b50919050565b60008060008060608587031215612b5b57600080fd5b843567ffffffffffffffff80821115612b7357600080fd5b612b7f888389016129fc565b95506020870135915080821115612b9557600080fd5b50612ba287828801612ae1565b9094509250612bb690508660408701612b2d565b905092959194509250565b60008060208385031215612bd457600080fd5b823567ffffffffffffffff80821115612bec57600080fd5b818501915085601f830112612c0057600080fd5b813581811115612c0f57600080fd5b8660208260061b8501011115612c2457600080fd5b60209290920196919550909350505050565b60008060008060408587031215612c4c57600080fd5b843567ffffffffffffffff80821115612c6457600080fd5b612c7088838901612ae1565b90965094506020870135915080821115612c8957600080fd5b50612c9687828801612ae1565b95989497509550505050565b600080600060408486031215612cb757600080fd5b612cc0846129b7565b9250602084013567ffffffffffffffff811115612cdc57600080fd5b612ce886828701612ae1565b9497909650939450505050565b60008060408385031215612d0857600080fd5b823567ffffffffffffffff811115612d1f57600080fd5b612d2b858286016129fc565b925050612d3b8460208501612b2d565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156112a9576112a9612d44565b600060208284031215612d9857600080fd5b612434826129b7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020808252818101839052600090604080840186845b87811015612e325773ffffffffffffffffffffffffffffffffffffffff80612e0d846129b7565b16845280612e1c8785016129b7565b1684870152509183019190830190600101612de6565b5090979650505050505050565b600060208284031215612e5157600080fd5b8135612434816129e0565b6040808252810184905260008560608301825b87811015612eaa5773ffffffffffffffffffffffffffffffffffffffff612e95846129b7565b16825260209283019290910190600101612e6f565b5083810360208581019190915285825291508590820160005b86811015612eea578235612ed6816129e0565b151582529183019190830190600101612ec3565b5098975050505050505050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612f2b57600080fd5b9190910192915050565b600060208284031215612f4757600080fd5b8151612434816129e0565b60005b83811015612f6d578181015183820152602001612f55565b50506000910152565b60008151808452612f8e816020860160208601612f52565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081528151602082015260006020830151610140806040850152612fe9610160850183612f76565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526130248382612f76565b925050606085015161304e608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206130c18187018315159052565b90950151151593019290925250919050565b6000602082840312156130e557600080fd5b5051919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261312157600080fd5b83018035915067ffffffffffffffff82111561313c57600080fd5b602001915036819003821315612b2657600080fd5b6000808585111561316157600080fd5b8386111561316e57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156131bb5780818660040360031b1b83161692505b505092915050565b808201808211156112a9576112a9612d44565b8183823760009101908152919050565b6020815260006124346020830184612f76565b60006020828403121561320b57600080fd5b815167ffffffffffffffff81111561322257600080fd5b8201601f8101841361323357600080fd5b80516132416129808261291b565b81815285602083850101111561325657600080fd5b613267826020830160208601612f52565b95945050505050565b60008251612f2b818460208701612f5256fea2646970667358221220d462e85f5eb50d3f0de002da3e4b0fc2e2d818e4d0d82d9d7fed03d433e0eeee64736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var MultichainFacet__factory = /** @class */ (function (_super) {
    __extends(MultichainFacet__factory, _super);
    function MultichainFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    MultichainFacet__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    MultichainFacet__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    MultichainFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    MultichainFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    MultichainFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    MultichainFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    MultichainFacet__factory.bytecode = _bytecode;
    MultichainFacet__factory.abi = _abi;
    return MultichainFacet__factory;
}(ethers_1.ContractFactory));
exports.MultichainFacet__factory = MultichainFacet__factory;
