"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.DiamondLoupeFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "facetAddress",
        inputs: [
            {
                name: "_functionSelector",
                type: "bytes4",
                internalType: "bytes4",
            },
        ],
        outputs: [
            {
                name: "facetAddress_",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "facetAddresses",
        inputs: [],
        outputs: [
            {
                name: "facetAddresses_",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "facetFunctionSelectors",
        inputs: [
            {
                name: "_facet",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "facetFunctionSelectors_",
                type: "bytes4[]",
                internalType: "bytes4[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "facets",
        inputs: [],
        outputs: [
            {
                name: "facets_",
                type: "tuple[]",
                internalType: "struct IDiamondLoupe.Facet[]",
                components: [
                    {
                        name: "facetAddress",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "functionSelectors",
                        type: "bytes4[]",
                        internalType: "bytes4[]",
                    },
                ],
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "supportsInterface",
        inputs: [
            {
                name: "_interfaceId",
                type: "bytes4",
                internalType: "bytes4",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
];
var _bytecode = "0x608060405234801561000f575f80fd5b506107be8061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610064575f3560e01c80637a0ed6271161004d5780637a0ed627146100f5578063adfca15e1461010a578063cdffacc61461012a575f80fd5b806301ffc9a71461006857806352ef6b2c146100e0575b5f80fd5b6100cb610076366004610546565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100e86101c5565b6040516100d7919061058c565b6100fd610254565b6040516100d79190610641565b61011d6101183660046106e9565b61044a565b6040516100d7919061071c565b6101a0610138366004610546565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d7565b60605f7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6002810180546040805160208084028201810190925282815293945083018282801561024957602002820191905f5260205f20905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161021e575b505050505091505090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e546060907fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c908067ffffffffffffffff8111156102b4576102b461072e565b6040519080825280602002602001820160405280156102f957816020015b604080518082019091525f8152606060208201528152602001906001900390816102d25790505b5092505f5b81811015610444575f83600201828154811061031c5761031c61075b565b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050808583815181106103595761035961075b565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff92831690529082165f9081526001860182526040908190208054825181850281018501909352808352919290919083018282801561041657602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116103c35790505b505050505085838151811061042d5761042d61075b565b6020908102919091018101510152506001016102fe565b50505090565b73ffffffffffffffffffffffffffffffffffffffff81165f9081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d602090815260409182902080548351818402810184019094528084526060937fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c939092919083018282801561053957602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116104e65790505b5050505050915050919050565b5f60208284031215610556575f80fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610585575f80fd5b9392505050565b602080825282518282018190525f9190848201906040850190845b818110156105d957835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016105a7565b50909695505050505050565b5f815180845260208085019450602084015f5b838110156106365781517fffffffff0000000000000000000000000000000000000000000000000000000016875295820195908201906001016105f8565b509495945050505050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b838110156106db578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00185528151805173ffffffffffffffffffffffffffffffffffffffff1684528701518784018790526106c8878501826105e5565b9588019593505090860190600101610668565b509098975050505050505050565b5f602082840312156106f9575f80fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610585575f80fd5b602081525f61058560208301846105e5565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffdfea264697066735822122023a3e32412829d33912602e541cde2c0d4057a10e0ce28965a976539274509cd64736f6c63430008160033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var DiamondLoupeFacet__factory = /** @class */ (function (_super) {
    __extends(DiamondLoupeFacet__factory, _super);
    function DiamondLoupeFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    DiamondLoupeFacet__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    DiamondLoupeFacet__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    DiamondLoupeFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    DiamondLoupeFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    DiamondLoupeFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    DiamondLoupeFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    DiamondLoupeFacet__factory.bytecode = _bytecode;
    DiamondLoupeFacet__factory.abi = _abi;
    return DiamondLoupeFacet__factory;
}(ethers_1.ContractFactory));
exports.DiamondLoupeFacet__factory = DiamondLoupeFacet__factory;
