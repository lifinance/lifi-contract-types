"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.EverclearFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_feeAdapter",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "FEE_ADAPTER",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract IEverclearFeeAdapter",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "startBridgeTokensViaEverclear",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_everclearData",
                type: "tuple",
                internalType: "struct EverclearFacet.EverclearData",
                components: [
                    {
                        name: "receiverAddress",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "outputAsset",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "maxFee",
                        type: "uint24",
                        internalType: "uint24",
                    },
                    {
                        name: "ttl",
                        type: "uint48",
                        internalType: "uint48",
                    },
                    {
                        name: "data",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "fee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "sig",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaEverclear",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_everclearData",
                type: "tuple",
                internalType: "struct EverclearFacet.EverclearData",
                components: [
                    {
                        name: "receiverAddress",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "outputAsset",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "maxFee",
                        type: "uint24",
                        internalType: "uint24",
                    },
                    {
                        name: "ttl",
                        type: "uint48",
                        internalType: "uint48",
                    },
                    {
                        name: "data",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "fee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "sig",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "AssetSwapped",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
            {
                name: "dex",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "BridgeToNonEVMChain",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes",
                indexed: false,
                internalType: "bytes",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "BridgeToNonEVMChainBytes32",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidCallData",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidConfig",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
];
var _bytecode = "0x60a060405234801561000f575f5ffd5b5060405161235138038061235183398101604081905261002e91610066565b6001600160a01b038116610055576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b0316608052610093565b5f60208284031215610076575f5ffd5b81516001600160a01b038116811461008c575f5ffd5b9392505050565b6080516122926100bf5f395f8181605d015281816106400152818161076e01526108c401526122925ff3fe608060405260043610610033575f3560e01c8063168f2a1e14610037578063661d9c201461004c578063f71122d8146100a8575b5f5ffd5b61004a6100453660046119f3565b6100bb565b005b348015610057575f5ffd5b5061007f7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61004a6100b6366004611a58565b6102e0565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610136576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6101463447611b1e565b90508461016b8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101a2576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036101df576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361021c576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b858061010001511561025a576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610298576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102aa88608001518960c00151610508565b6102b488886105bc565b5047915050818111156102d5576102d55f846102d08585611b1e565b610a30565b50505f909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161035b576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f61036b3447611b1e565b9050868061010001516103aa576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101200151156103e8576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8861040b8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610442576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f0361047f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104bc576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104d08a5f01518b60c001518b8b33610a65565b60c08b01526104df8a886105bc565b5047915050818111156104fb576104fb5f846102d08585611b1e565b50505f9091555050505050565b805f03610541576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661059a5780341015610596576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61059673ffffffffffffffffffffffffffffffffffffffff8316333084610ba7565b803515806105cc57506020810135155b15610603576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610626836080015173ffffffffffffffffffffffffffffffffffffffff161590565b15610636575060c0820151610669565b61066983608001517f00000000000000000000000000000000000000000000000000000000000000008560c00151610bff565b6040805160608101825260a0840135815260c084013560208201525f91810161069560e0860186611b56565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92018290525093909452505060408051600180825281830190925293945090929150602080830190803683370190505090508460e00151815f8151811061070757610707611bbe565b602002602001019063ffffffff16908163ffffffff16815250507311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168560a0015173ffffffffffffffffffffffffffffffffffffffff16036108c2577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633bd1c7548483875f0135896080015189602001358a60a001358c60c001516107cc9190611b1e565b6107dc60608d0160408e01611bfe565b6107ec60808e0160608f01611c33565b6107f960808f018f611b56565b8d6040518c63ffffffff1660e01b815260040161081f9a99989796959493929190611d11565b5f6040518083038185885af115801561083a573d5f5f3e3d5ffd5b50505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108809190810190611ef5565b505060e08501518551604051863581527f815cd8dc72093a13fe3577112c391b6279303956526382ab98772d0239dbf78c9060200160405180910390a36109f2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633bd1c75484838860a0015173ffffffffffffffffffffffffffffffffffffffff165f1b896080015189602001358a60a001358c60c0015161093b9190611b1e565b61094b60608d0160408e01611bfe565b61095b60808e0160608f01611c33565b61096860808f018f611b56565b8d6040518c63ffffffff1660e01b815260040161098e9a99989796959493929190611d11565b5f6040518083038185885af11580156109a9573d5f5f3e3d5ffd5b50505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109ef9190810190611ef5565b50505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f185604051610a219190612028565b60405180910390a15050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610a5a57610a558282610c2b565b505050565b610a55838383610c98565b5f82808203610aa0576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8585610aae600185611b1e565b818110610abd57610abd611bbe565b9050602002810190610acf919061213b565b610ae0906080810190606001612177565b90505f610aec82610d06565b905073ffffffffffffffffffffffffffffffffffffffff8216610b1657610b133482611b1e565b90505b5f610b218888610d50565b9050610b2d8888610e5a565b610b3a8a89898985610ec6565b5f82610b4585610d06565b610b4f9190611b1e565b905089811015610b99576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f51141716610bf257637939f4245f526004601cfd5b5f60605260405250505050565b610a558383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611088565b73ffffffffffffffffffffffffffffffffffffffff8216610c78576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61059673ffffffffffffffffffffffffffffffffffffffff8316826111b5565b73ffffffffffffffffffffffffffffffffffffffff8216610ce5576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a5573ffffffffffffffffffffffffffffffffffffffff841683836111ce565b5f73ffffffffffffffffffffffffffffffffffffffff821615610d4857610d4373ffffffffffffffffffffffffffffffffffffffff831630611217565b610d4a565b475b92915050565b6060815f8167ffffffffffffffff811115610d6d57610d6d61175c565b604051908082528060200260200182016040528015610d96578160200160208202803683370190505b5090505f5f5b83811015610e4f57868682818110610db657610db6611bbe565b9050602002810190610dc8919061213b565b610dd9906080810190606001612177565b9150610de482610d06565b838281518110610df657610df6611bbe565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610e475734838281518110610e2f57610e2f611bbe565b60200260200101818151610e439190611b1e565b9052505b600101610d9c565b509095945050505050565b5f5b81811015610a555736838383818110610e7757610e77611bbe565b9050602002810190610e89919061213b565b9050610e9b60e0820160c08301612190565b15610ebd57610ebd610eb36060830160408401612177565b8260800135610508565b50600101610e5c565b83838383825f5b8181101561106e57368a8a83818110610ee857610ee8611bbe565b9050602002810190610efa919061213b565b9050610f29610f0f6060830160408401612177565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610f8b5750610f8b610f426040830160208401612177565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610fa25750610fa2610f426020830183612177565b80156110255750611025610fb960a0830183611b56565b610fc7916004915f916121a9565b610fd0916121d0565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61105b576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110658c8261124a565b50600101610ecd565b505061107d848484845f6114bd565b505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156111af5773ffffffffffffffffffffffffffffffffffffffff83166110f1576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611164573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111889190612236565b10156111af576111af73ffffffffffffffffffffffffffffffffffffffff851684836116d4565b50505050565b5f385f3884865af16105965763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f5114171661120e576390b8ec185f526004601cfd5b5f603452505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b61126261125a6020830183612177565b6017903b1190565b611298576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f8190036112d7576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6112eb610f0f6060850160408601612177565b6112f5575f6112fb565b82608001355b90505f6113166113116080860160608701612177565b610d06565b9050815f0361134c5761134c6113326060860160408701612177565b6113426040870160208801612177565b8660800135610bff565b5f8061135b6020870187612177565b73ffffffffffffffffffffffffffffffffffffffff168461137f60a0890189611b56565b60405161138d92919061224d565b5f6040518083038185875af1925050503d805f81146113c7576040519150601f19603f3d011682016040523d82523d5f602084013e6113cc565b606091505b5091509150816113df576113df81611752565b5f6113f36113116080890160608a01612177565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861142460208a018a612177565b61143460608b0160408c01612177565b61144460808c0160608d01612177565b8b608001358987116114565786611460565b6114608a88611b1e565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f86826114cc600182611b1e565b8181106114db576114db611bbe565b90506020028101906114ed919061213b565b6114fe906080810190606001612177565b90505f5f5f5f5f5f5f5b888110156116c45761151b60018a611b1e565b8110801561152a575088600114155b15611605578d8d8281811061154157611541611bbe565b9050602002810190611553919061213b565b611564906080810190606001612177565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611605578a81815181106115ab576115ab611bbe565b60200260200101516115bc87610d06565b6115c69190611b1e565b965073ffffffffffffffffffffffffffffffffffffffff8616156115ea575f6115ec565b895b93508387111561160557611605868d6102d0878b611b1e565b8d8d8281811061161757611617611bbe565b9050602002810190611629919061213b565b61163a906060810190604001612177565b945061164585610d06565b925073ffffffffffffffffffffffffffffffffffffffff851615611669575f61166b565b895b915081831180156116a857508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b156116bc576116bc858d6102d08587611b1e565b600101611508565b5050505050505050505050505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f5114171661120e575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f5114171661120e57633e3f8f735f526004601cfd5b8051602082018181fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff811182821017156117ad576117ad61175c565b60405290565b604051610180810167ffffffffffffffff811182821017156117ad576117ad61175c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561181e5761181e61175c565b604052919050565b5f67ffffffffffffffff82111561183f5761183f61175c565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b5f82601f83011261187a575f5ffd5b813561188d61188882611826565b6117d7565b8181528460208386010111156118a1575f5ffd5b816020850160208301375f918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146118e0575f5ffd5b919050565b803580151581146118e0575f5ffd5b5f6101408284031215611905575f5ffd5b61190d611789565b823581529050602082013567ffffffffffffffff81111561192c575f5ffd5b6119388482850161186b565b602083015250604082013567ffffffffffffffff811115611957575f5ffd5b6119638482850161186b565b604083015250611975606083016118bd565b6060820152611986608083016118bd565b608082015261199760a083016118bd565b60a082015260c0828101359082015260e080830135908201526119bd61010083016118e5565b6101008201526119d061012083016118e5565b61012082015292915050565b5f61010082840312156119ed575f5ffd5b50919050565b5f5f60408385031215611a04575f5ffd5b823567ffffffffffffffff811115611a1a575f5ffd5b611a26858286016118f4565b925050602083013567ffffffffffffffff811115611a42575f5ffd5b611a4e858286016119dc565b9150509250929050565b5f5f5f5f60608587031215611a6b575f5ffd5b843567ffffffffffffffff811115611a81575f5ffd5b611a8d878288016118f4565b945050602085013567ffffffffffffffff811115611aa9575f5ffd5b8501601f81018713611ab9575f5ffd5b803567ffffffffffffffff811115611acf575f5ffd5b8760208260051b8401011115611ae3575f5ffd5b60209190910193509150604085013567ffffffffffffffff811115611b06575f5ffd5b611b12878288016119dc565b91505092959194509250565b81810381811115610d4a577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611b89575f5ffd5b83018035915067ffffffffffffffff821115611ba3575f5ffd5b602001915036819003821315611bb7575f5ffd5b9250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b62ffffff81168114611bfb575f5ffd5b50565b5f60208284031215611c0e575f5ffd5b8135611c1981611beb565b9392505050565b65ffffffffffff81168114611bfb575f5ffd5b5f60208284031215611c43575f5ffd5b8135611c1981611c20565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b80518252602081015160208301525f604082015160606040850152611d096060850182611c95565b949350505050565b6101208082528b519082018190525f9060208d0190610140840190835b81811015611d5257835163ffffffff16835260209384019390920191600101611d2e565b50508c6020850152611d7c604085018d73ffffffffffffffffffffffffffffffffffffffff169052565b8a6060850152896080850152611d9960a085018a62ffffff169052565b65ffffffffffff881660c085015283810360e0850152611dba818789611c4e565b915050828103610100840152611dd08185611ce1565b9d9c50505050505050505050505050565b80516118e081611beb565b805163ffffffff811681146118e0575f5ffd5b805167ffffffffffffffff811681146118e0575f5ffd5b80516118e081611c20565b5f82601f830112611e30575f5ffd5b815167ffffffffffffffff811115611e4a57611e4a61175c565b8060051b611e5a602082016117d7565b91825260208185018101929081019086841115611e75575f5ffd5b6020860192505b83831015611e9e57611e8d83611dec565b825260209283019290910190611e7c565b9695505050505050565b5f82601f830112611eb7575f5ffd5b8151611ec561188882611826565b818152846020838601011115611ed9575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f60408385031215611f06575f5ffd5b8251602084015190925067ffffffffffffffff811115611f24575f5ffd5b83016101808186031215611f36575f5ffd5b611f3e6117b3565b81518152602080830151908201526040808301519082015260608083015190820152611f6c60808301611de1565b6080820152611f7d60a08301611dec565b60a0820152611f8e60c08301611dff565b60c0820152611f9f60e08301611e16565b60e0820152611fb16101008301611e16565b610100820152610120828101519082015261014082015167ffffffffffffffff811115611fdc575f5ffd5b611fe887828501611e21565b6101408301525061016082015167ffffffffffffffff811115612009575f5ffd5b61201587828501611ea8565b6101608301525080925050509250929050565b60208152815160208201525f6020830151610140604084015261204f610160840182611c95565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084830301606085015261208a8282611c95565b91505060608401516120b4608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e084015161010084015261010084015161212361012085018215159052565b50610120840151801515610140850152509392505050565b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261216d575f5ffd5b9190910192915050565b5f60208284031215612187575f5ffd5b611c19826118bd565b5f602082840312156121a0575f5ffd5b611c19826118e5565b5f5f858511156121b7575f5ffd5b838611156121c3575f5ffd5b5050820193919092039150565b80357fffffffff00000000000000000000000000000000000000000000000000000000811690600484101561222f577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b5f60208284031215612246575f5ffd5b5051919050565b818382375f910190815291905056fea2646970667358221220f825f66d5ca36ef6566bffd2266fa5475717b17a9b6be30d0d91d6ea7623704064736f6c634300081d0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var EverclearFacet__factory = /** @class */ (function (_super) {
    __extends(EverclearFacet__factory, _super);
    function EverclearFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    EverclearFacet__factory.prototype.deploy = function (_feeAdapter, overrides) {
        return _super.prototype.deploy.call(this, _feeAdapter, overrides || {});
    };
    EverclearFacet__factory.prototype.getDeployTransaction = function (_feeAdapter, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _feeAdapter, overrides || {});
    };
    EverclearFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    EverclearFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    EverclearFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    EverclearFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    EverclearFacet__factory.bytecode = _bytecode;
    EverclearFacet__factory.abi = _abi;
    return EverclearFacet__factory;
}(ethers_1.ContractFactory));
exports.EverclearFacet__factory = EverclearFacet__factory;
