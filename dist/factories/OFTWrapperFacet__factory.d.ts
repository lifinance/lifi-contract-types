import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { OFTWrapperFacet, OFTWrapperFacetInterface } from "../OFTWrapperFacet";
declare type OFTWrapperFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class OFTWrapperFacet__factory extends ContractFactory {
    constructor(...args: OFTWrapperFacetConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<OFTWrapperFacet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): OFTWrapperFacet;
    connect(signer: Signer): OFTWrapperFacet__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b506155bf80620000216000396000f3fe60806040526004361061015f5760003560e01c80639c130c90116100c0578063d87687c511610074578063e0e4343911610059578063e0e434391461039f578063f85a8104146103da578063fec34c651461040e57600080fd5b8063d87687c514610358578063db5205b91461036b57600080fd5b8063b095cb1f116100a5578063b095cb1f14610305578063b2c92caf14610325578063ca6ed7aa1461034557600080fd5b80639c130c90146102d2578063ad91858e146102e557600080fd5b80635572ad261161011757806363ebdd16116100fc57806363ebdd161461028c578063994afa771461029f5780639aedbd51146102b257600080fd5b80635572ad261461025957806355a6abd11461026c57600080fd5b806322dd4d611161014857806322dd4d611461020157806330983cfd146102315780635123fca21461024657600080fd5b806313a11d301461016457806319aa62251461019c575b600080fd5b34801561017057600080fd5b5061018461017f36600461470e565b61042e565b60405161ffff90911681526020015b60405180910390f35b3480156101a857600080fd5b506101d07f1f7ecdf70000000000000000000000000000000000000000000000000000000081565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610193565b34801561020d57600080fd5b5061022161021c366004614754565b6104a2565b6040519015158152602001610193565b61024461023f366004614784565b610581565b005b610244610254366004614a35565b610828565b610244610267366004614784565b610ab5565b34801561027857600080fd5b50610244610287366004614b40565b610d23565b61024461029a366004614a35565b610e87565b6102446102ad366004614a35565b6110e8565b3480156102be57600080fd5b506102216102cd366004614754565b611349565b6102446102e0366004614784565b6113be565b3480156102f157600080fd5b506101d0610300366004614b82565b61162c565b34801561031157600080fd5b50610221610320366004614754565b6117a9565b34801561033157600080fd5b50610244610340366004614bbb565b61181e565b610244610353366004614784565b611921565b610244610366366004614a35565b611b8f565b34801561037757600080fd5b506101d07f6984a9e80000000000000000000000000000000000000000000000000000000081565b3480156103ab57600080fd5b506103bf6103ba366004614c69565b611df0565b60408051825181526020928301519281019290925201610193565b3480156103e657600080fd5b506101d07f14e4ceea0000000000000000000000000000000000000000000000000000000081565b34801561041a57600080fd5b50610244610429366004614d2f565b61223b565b60008181527f608781073f01794b73ba8b53f9bf51c5736a00b4b810e85848a443f8753518206020819052604082205461ffff169182900361049c576040517f7c152fe300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50919050565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f14e4ceea00000000000000000000000000000000000000000000000000000000600482015260009073ffffffffffffffffffffffffffffffffffffffff8316906301ffc9a7906024015b602060405180830381865afa92505050801561056a575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261056791810190614d5b565b60015b61057657506000919050565b92915050565b919050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016105fc576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061060d3447614da7565b905061061885614dba565b60a081015173ffffffffffffffffffffffffffffffffffffffff16610669576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036106a7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036106e4576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106ed86614dba565b8061010001511561072a576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61073387614dba565b80610120015115610770576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61077988614dba565b608081015173ffffffffffffffffffffffffffffffffffffffff166107ca576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107e76107dd60a08b0160808c01614754565b8a60c001356122df565b6107f96107f38a614dba565b8961245a565b5047925050508181111561081c5761081c6000846108178585614da7565b6125fc565b50506000909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016108a3576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006108b43447614da7565b9050866108d98160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610910576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361094e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361098b576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061010001516109c8576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8880610120015115610a06576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b89610a29816080015173ffffffffffffffffffffffffffffffffffffffff161590565b15610a60576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a7a8b600001518c60c001518c8c338d6060013561262d565b60c08c0152610a898b896127c8565b50479250505081811115610aa757610aa76000846108178585614da7565b505060009091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610b30576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155336000610b413447614da7565b9050610b4c85614dba565b60a081015173ffffffffffffffffffffffffffffffffffffffff16610b9d576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610bdb576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610c18576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c2186614dba565b80610100015115610c5e576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c6787614dba565b80610120015115610ca4576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cad88614dba565b608081015173ffffffffffffffffffffffffffffffffffffffff16610cfe576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d116107dd60a08b0160808c01614754565b6107f9610d1d8a614dba565b8961293d565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff163314610d6957610d69612a5f565b7f608781073f01794b73ba8b53f9bf51c5736a00b4b810e85848a443f87535182060005b82811015610e4857838382818110610da757610da7614dc6565b9050604002016020016020810190610dbf9190614df5565b826001016000868685818110610dd757610dd7614dc6565b610ded9260206040909202019081019150614754565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055600101610d8d565b507f92682ecc014a97bbec662ad336059e03f483ab7221fe680ecd62827e3e4e7af78383604051610e7a929190614e12565b60405180910390a1505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610f02576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155336000610f133447614da7565b905086610f388160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610f6f576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610fad576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610fea576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101000151611027576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8880610120015115611065576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b89611088816080015173ffffffffffffffffffffffffffffffffffffffff161590565b156110bf576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110d98b600001518c60c001518c8c338d6060013561262d565b60c08c0152610a898b8961293d565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01611163576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006111743447614da7565b9050866111998160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156111d0576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361120e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361124b576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101000151611288576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b88806101200151156112c6576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b896112e9816080015173ffffffffffffffffffffffffffffffffffffffff161590565b15611320576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61133a8b600001518c60c001518c8c338d6060013561262d565b60c08c0152610a898b8961245a565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f1f7ecdf700000000000000000000000000000000000000000000000000000000600482015260009073ffffffffffffffffffffffffffffffffffffffff8316906301ffc9a790602401610513565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01611439576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061144a3447614da7565b905061145585614dba565b60a081015173ffffffffffffffffffffffffffffffffffffffff166114a6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036114e4576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103611521576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61152a86614dba565b80610100015115611567576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61157087614dba565b806101200151156115ad576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115b688614dba565b608081015173ffffffffffffffffffffffffffffffffffffffff16611607576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61161a6107dd60a08b0160808c01614754565b6107f96116268a614dba565b89612aff565b6000611637836104a2565b1561169057811561166957507fd87687c500000000000000000000000000000000000000000000000000000000610576565b507f9c130c9000000000000000000000000000000000000000000000000000000000610576565b61169983611349565b156116f25781156116cb57507f63ebdd1600000000000000000000000000000000000000000000000000000000610576565b507f5572ad2600000000000000000000000000000000000000000000000000000000610576565b6116fb836117a9565b1561175457811561172d57507f5123fca200000000000000000000000000000000000000000000000000000000610576565b507fca6ed7aa00000000000000000000000000000000000000000000000000000000610576565b811561178157507f994afa7700000000000000000000000000000000000000000000000000000000610576565b507f30983cfd0000000000000000000000000000000000000000000000000000000092915050565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f6984a9e800000000000000000000000000000000000000000000000000000000600482015260009073ffffffffffffffffffffffffffffffffffffffff8316906301ffc9a790602401610513565b611826612cea565b7f608781073f01794b73ba8b53f9bf51c5736a00b4b810e85848a443f87535182060005b848110156118d65785858281811061186457611864614dc6565b905060400201602001602081019061187c9190614e83565b82600088888581811061189157611891614dc6565b90506040020160000135815260200190815260200160002060006101000a81548161ffff021916908361ffff16021790555080806118ce90614e9e565b91505061184a565b506118e18383610d23565b7f96880005092711fcc990347568496bd28f9e708df16e95347fe9a50a6641e2be8585604051611912929190614ed6565b60405180910390a15050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161199c576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006119ad3447614da7565b90506119b885614dba565b60a081015173ffffffffffffffffffffffffffffffffffffffff16611a09576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003611a47576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103611a84576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611a8d86614dba565b80610100015115611aca576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611ad387614dba565b80610120015115611b10576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b1988614dba565b608081015173ffffffffffffffffffffffffffffffffffffffff16611b6a576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b7d6107dd60a08b0160808c01614754565b6107f9611b898a614dba565b896127c8565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01611c0a576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155336000611c1b3447614da7565b905086611c408160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15611c77576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003611cb5576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103611cf2576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101000151611d2f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8880610120015115611d6d576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b89611d90816080015173ffffffffffffffffffffffffffffffffffffffff161590565b15611dc7576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611de18b600001518c60c001518c8c338d6060013561262d565b60c08c0152610a898b89612aff565b60408051808201909152600080825260208201527f30983cfd00000000000000000000000000000000000000000000000000000000611e308b600061162c565b7fffffffff000000000000000000000000000000000000000000000000000000001614612123576000611e628a61042e565b6040517f365260b400000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff8c169063365260b490611ec19084908c908e908d908d908d90600401614f64565b6040805180830381865afa925050508015611f17575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611f1491810190614fa2565b60015b612114576040805160608a901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660208201528151601481830301815260348201928390527f2a205e3d0000000000000000000000000000000000000000000000000000000090925273ffffffffffffffffffffffffffffffffffffffff8d1691632a205e3d91611fb59185918e908d908d908d90603801615034565b6040805180830381865afa92505050801561200b575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261200891810190614fa2565b60015b61210757612017615072565b806308c379a003612073575061202b61508e565b806120365750612075565b806040517f609c9a7a00000000000000000000000000000000000000000000000000000000815260040161206a919061512b565b60405180910390fd5b505b3d80801561209f576040519150601f19603f3d011682016040523d82523d6000602084013e6120a4565b606091505b506040517f609c9a7a00000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6661696c656420776974686f7574206572726f72206d65737361676500000000604482015260640161206a565b908352602083015261211d565b90835260208301525b5061222e565b600082900361215e576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808b73ffffffffffffffffffffffffffffffffffffffff16858560405161218892919061513e565b600060405180830381855afa9150503d80600081146121c3576040519150601f19603f3d011682016040523d82523d6000602084013e6121c8565b606091505b50915091508115806121d957508051155b15612210576040517f350c20f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808060200190518101906122249190614fa2565b6020850152835250505b9998505050505050505050565b612243612cea565b60007f608781073f01794b73ba8b53f9bf51c5736a00b4b810e85848a443f8753518206000848152602082815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff8716908117909155915191825291925084917fa51f0b4ec175b5bcd05e1dfff3bac4a47454a5b2bae58e440c736a77f6117cb7910160405180910390a2505050565b80600003612319576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216612372578034101561236e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156123df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612403919061514e565b905081811015612449576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161206a565b61245583333085612d5f565b505050565b608082015161247f9061247561016084016101408501614754565b8460c00151612f71565b61248d610120820182615167565b90506000036124c8576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6124dd6124d86020830183614754565b6130b4565b612513576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006125226020830183614754565b73ffffffffffffffffffffffffffffffffffffffff16606083013561254b610120850185615167565b60405161255992919061513e565b60006040518083038185875af1925050503d8060008114612596576040519150601f19603f3d011682016040523d82523d6000602084013e61259b565b606091505b50509050806125d6576040517f350c20f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006125e58460e0015161042e565b90506125f684828560200135613135565b50505050565b73ffffffffffffffffffffffffffffffffffffffff831615612623576124558383836131ec565b6124558282613368565b600083808203612669576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008686612678600185614da7565b81811061268757612687614dc6565b905060200281019061269991906151cc565b6126aa906080810190606001614754565b905060006126b782613492565b905073ffffffffffffffffffffffffffffffffffffffff82166126e1576126de3482614da7565b90505b60006126ed898961354a565b90506126f98989613656565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff89166020820152908101879052612734818b8b856136c3565b60008361274086613492565b61274a9190614da7565b905073ffffffffffffffffffffffffffffffffffffffff8516612774576127718882614da7565b90505b8b8110156127b8576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d90526024810182905260440161206a565b9c9b505050505050505050505050565b60008060006127d78585613ab4565b6080880151929550909350915060006127f36020870187614754565b73ffffffffffffffffffffffffffffffffffffffff1614612839576080860151612829906128246020880188614754565b613bbb565b6128366020860186614754565b90505b61284c8660800151828860c00151612f71565b612855816130b4565b61288b576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60c0860151604080517f2cdf0b9500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841692632cdf0b959260608a0135926128f49230928b928b92918e0135908b9060040161524d565b6000604051808303818588803b15801561290d57600080fd5b505af1158015612921573d6000803e3d6000fd5b505050505061293586858760200135613135565b505050505050565b600080600061294c8585613ab4565b6080880151929550909350915060006129686020870187614754565b73ffffffffffffffffffffffffffffffffffffffff16146129a9576080860151612999906128246020880188614754565b6129a66020860186614754565b90505b6129bc8660800151828860c00151612f71565b6129c5816130b4565b6129fb576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60c08601516040517f695ef6bf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169163695ef6bf916060890135916128f49130918a918a91908a90600401615298565b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fdf05114fe8fad5d7cd2d71c5651effc2a4c21f13ee8b4a462e2a3bd4e140c73e6020818152604080842033855290915290912054600160ff909116151514612afc576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60808201516000612b136020840184614754565b73ffffffffffffffffffffffffffffffffffffffff1614612b54576080830151612b44906128246020850185614754565b612b516020830183614754565b90505b612b678360800151828560c00151612f71565b612b70816130b4565b612ba6576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166351905636836060013530612bd58760e0015161042e565b8760a00151604051602001612c15919060609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905260c089015133612c5960a08b0160808c01614754565b612c6660a08c018c615167565b6040518a63ffffffff1660e01b8152600401612c899897969594939291906152dd565b6000604051808303818588803b158015612ca257600080fd5b505af1158015612cb6573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f183604051610e7a9190615340565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314612d5d576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b73ffffffffffffffffffffffffffffffffffffffff8416612dac576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216612df9576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015612e6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e8e919061514e565b9050612e9c82868686613c8e565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015612f0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f30919061514e565b612f3a9190614da7565b14612935576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316612f9157505050565b73ffffffffffffffffffffffffffffffffffffffff8216612fde576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015613053573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613077919061514e565b10156124555761308983836000613d6a565b61245583837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff613d6a565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f608781073f01794b73ba8b53f9bf51c5736a00b4b810e85848a443f87535182160205260408120547f608781073f01794b73ba8b53f9bf51c5736a00b4b810e85848a443f8753518209060ff161561312c5750600192915050565b50600092915050565b7311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168360a0015173ffffffffffffffffffffffffffffffffffffffff16036131bd57825160405182815261ffff841691907fb8d30778bd43c671fe8fa1761b944a0fe8f00c3a0416677a72eea2a561f357f59060200160405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f183604051610e7a9190615340565b73ffffffffffffffffffffffffffffffffffffffff8316613239576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216613286576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa1580156132f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613317919061514e565b90508082111561335d576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161206a565b6125f6848484613eec565b73ffffffffffffffffffffffffffffffffffffffff82166133b5576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156133f8576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810182905247602482015260440161206a565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114613452576040519150601f19603f3d011682016040523d82523d6000602084013e613457565b606091505b5050905080612455576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff821615613543576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa15801561351a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061353e919061514e565b610576565b4792915050565b60608160008167ffffffffffffffff811115613568576135686147f1565b604051908082528060200260200182016040528015613591578160200160208202803683370190505b5090506000805b8381101561364b578686828181106135b2576135b2614dc6565b90506020028101906135c491906151cc565b6135d5906080810190606001614754565b91506135e082613492565b8382815181106135f2576135f2614dc6565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216613643573483828151811061362b5761362b614dc6565b6020026020010181815161363f9190614da7565b9052505b600101613598565b509095945050505050565b60005b81811015612455573683838381811061367457613674614dc6565b905060200281019061368691906151cc565b905061369860e0820160c08301614df5565b156136ba576136ba6136b06060830160408401614754565b82608001356122df565b50600101613659565b6020840151604085015184918491849083600181146139cd57600086866136eb600185614da7565b8181106136fa576136fa614dc6565b905060200281019061370c91906151cc565b61371d906080810190606001614754565b9050600089815b818110156138ca57368d8d8381811061373f5761373f614dc6565b905060200281019061375191906151cc565b90506137806137666060830160408401614754565b73ffffffffffffffffffffffffffffffffffffffff161590565b806137e357506137e36137996040830160208401614754565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156137fa57506137fa6137996020830183614754565b801561387f575061387f61381160a0830183615167565b61382091600491600091615453565b6138299161547d565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6138b5576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e516138c19082613f42565b50600101613724565b505060005b6138da600185614da7565b8110156139c55760008989838181106138f5576138f5614dc6565b905060200281019061390791906151cc565b613918906080810190606001614754565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146139bc5786828151811061395f5761395f614dc6565b602002602001015161397082613492565b61397a9190614da7565b9250600073ffffffffffffffffffffffffffffffffffffffff8216156139a15760006139a3565b865b905083156139ba576139ba828a6108178488614da7565b505b506001016138cf565b505050613aa8565b8760005b81811015613aa557368b8b838181106139ec576139ec614dc6565b90506020028101906139fe91906151cc565b9050613a136137666060830160408401614754565b80613a2c5750613a2c6137996040830160208401614754565b8015613a435750613a436137996020830183614754565b8015613a5a5750613a5a61381160a0830183615167565b613a90576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c51613a9c9082613f42565b506001016139d1565b50505b50505050505050505050565b6040805160608082018352600080835260208301819052928201528190613ade8560e0015161042e565b92507311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168560a0015173ffffffffffffffffffffffffffffffffffffffff1603613b375783602001359150613b55565b60a085015173ffffffffffffffffffffffffffffffffffffffff1691505b6040805160608101825233815260006020820152908101613b7960a0870187615167565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505091525092959194509192509050565b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613c1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c4191906154c5565b73ffffffffffffffffffffffffffffffffffffffff161461236e576040517f4ef44d3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526125f69085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152614258565b801580613e0a57506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015613de4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e08919061514e565b155b613e96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161206a565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526124559084907f095ea7b30000000000000000000000000000000000000000000000000000000090606401613ce8565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526124559084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401613ce8565b613f58613f526020830183614754565b3b151590565b613f8e576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003613fce576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000613fe36137666060850160408601614754565b613fee576000613ff4565b82608001355b9050600061401061400b6060860160408701614754565b613492565b9050600061402761400b6080870160608801614754565b90508260000361405e5761405e6140446060870160408801614754565b6140546040880160208901614754565b8760800135612f71565b84608001358210156140a9576040517fcf479181000000000000000000000000000000000000000000000000000000008152608086013560048201526024810183905260440161206a565b6000806140b96020880188614754565b73ffffffffffffffffffffffffffffffffffffffff16856140dd60a08a018a615167565b6040516140eb92919061513e565b60006040518083038185875af1925050503d8060008114614128576040519150601f19603f3d011682016040523d82523d6000602084013e61412d565b606091505b50915091508161417857600061414282614367565b9050806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161206a919061512b565b600061418d61400b60808a0160608b01614754565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896141be60208b018b614754565b6141ce60608c0160408d01614754565b6141de60808d0160608e01614754565b8c608001358987116141f057866141fa565b6141fa8a88614da7565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b60006142ba826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166143e59092919063ffffffff16565b90508051600014806142db5750808060200190518101906142db9190614d5b565b612455576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161206a565b60606044825110156143ac57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b60006143c860048085516143c09190614da7565b8591906143fc565b9050808060200190518101906143de91906154e2565b9392505050565b60606143f48484600085614516565b949350505050565b60608161440a81601f615564565b1015614442576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61444c8284615564565b84511015614486576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060821580156144a5576040519150600082526020820160405261450d565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156144de5780518352602092830192016144c6565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6060824710156145a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161206a565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516145d19190615577565b60006040518083038185875af1925050503d806000811461460e576040519150601f19603f3d011682016040523d82523d6000602084013e614613565b606091505b50915091506146248783838761462f565b979650505050505050565b606083156146c55782516000036146be5773ffffffffffffffffffffffffffffffffffffffff85163b6146be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161206a565b50816143f4565b6143f483838151156146da5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161206a919061512b565b60006020828403121561472057600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff81168114612afc57600080fd5b803561057c81614727565b60006020828403121561476657600080fd5b81356143de81614727565b6000610160828403121561049c57600080fd5b6000806040838503121561479757600080fd5b823567ffffffffffffffff808211156147af57600080fd5b9084019061014082870312156147c457600080fd5b909250602084013590808211156147da57600080fd5b506147e785828601614771565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715614864576148646147f1565b6040525050565b604051610140810167ffffffffffffffff8111828210171561488f5761488f6147f1565b60405290565b600067ffffffffffffffff8211156148af576148af6147f1565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126148ec57600080fd5b81356148f781614895565b6040516149048282614820565b82815285602084870101111561491957600080fd5b82602086016020830137600092810160200192909252509392505050565b8015158114612afc57600080fd5b803561057c81614937565b6000610140828403121561496357600080fd5b61496b61486b565b905081358152602082013567ffffffffffffffff8082111561498c57600080fd5b614998858386016148db565b602084015260408401359150808211156149b157600080fd5b506149be848285016148db565b6040830152506149d060608301614749565b60608201526149e160808301614749565b60808201526149f260a08301614749565b60a082015260c082013560c082015260e082013560e0820152610100614a19818401614945565b90820152610120614a2b838201614945565b9082015292915050565b60008060008060608587031215614a4b57600080fd5b843567ffffffffffffffff80821115614a6357600080fd5b614a6f88838901614950565b95506020870135915080821115614a8557600080fd5b818701915087601f830112614a9957600080fd5b813581811115614aa857600080fd5b8860208260051b8501011115614abd57600080fd5b602083019550809450506040870135915080821115614adb57600080fd5b50614ae887828801614771565b91505092959194509250565b60008083601f840112614b0657600080fd5b50813567ffffffffffffffff811115614b1e57600080fd5b6020830191508360208260061b8501011115614b3957600080fd5b9250929050565b60008060208385031215614b5357600080fd5b823567ffffffffffffffff811115614b6a57600080fd5b614b7685828601614af4565b90969095509350505050565b60008060408385031215614b9557600080fd5b8235614ba081614727565b91506020830135614bb081614937565b809150509250929050565b60008060008060408587031215614bd157600080fd5b843567ffffffffffffffff80821115614be957600080fd5b614bf588838901614af4565b90965094506020870135915080821115614c0e57600080fd5b50614c1b87828801614af4565b95989497509550505050565b60008083601f840112614c3957600080fd5b50813567ffffffffffffffff811115614c5157600080fd5b602083019150836020828501011115614b3957600080fd5b600080600080600080600080600060e08a8c031215614c8757600080fd5b8935614c9281614727565b985060208a0135975060408a0135965060608a0135955060808a0135614cb781614937565b945060a08a013567ffffffffffffffff80821115614cd457600080fd5b614ce08d838e01614c27565b909650945060c08c0135915080821115614cf957600080fd5b50614d068c828d01614c27565b915080935050809150509295985092959850929598565b803561ffff8116811461057c57600080fd5b60008060408385031215614d4257600080fd5b82359150614d5260208401614d1d565b90509250929050565b600060208284031215614d6d57600080fd5b81516143de81614937565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561057657610576614d78565b60006105763683614950565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215614e0757600080fd5b81356143de81614937565b6020808252818101839052600090604080840186845b87811015614e76578135614e3b81614727565b73ffffffffffffffffffffffffffffffffffffffff16835281850135614e6081614937565b1515838601529183019190830190600101614e28565b5090979650505050505050565b600060208284031215614e9557600080fd5b6143de82614d1d565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614ecf57614ecf614d78565b5060010190565b6020808252818101839052600090604080840186845b87811015614e76578135835261ffff614f06868401614d1d565b16838601529183019190830190600101614eec565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b61ffff87168152856020820152846040820152831515606082015260a060808201526000614f9660a083018486614f1b565b98975050505050505050565b60008060408385031215614fb557600080fd5b505080516020909101519092909150565b60005b83811015614fe1578181015183820152602001614fc9565b50506000910152565b60008151808452615002816020860160208601614fc6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b61ffff8716815260a06020820152600061505160a0830188614fea565b8660408401528515156060840152828103608084015261222e818587614f1b565b600060033d111561508b5760046000803e5060005160e01c5b90565b600060443d101561509c5790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff81602484011181841117156150ea57505050505090565b82850191508151818111156151025750505050505090565b843d870101602082850101111561511c5750505050505090565b61364b60208286010187614820565b6020815260006143de6020830184614fea565b8183823760009101908152919050565b60006020828403121561516057600080fd5b5051919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261519c57600080fd5b83018035915067ffffffffffffffff8211156151b757600080fd5b602001915036819003821315614b3957600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261520057600080fd5b9190910192915050565b600073ffffffffffffffffffffffffffffffffffffffff808351168452806020840151166020850152506040820151606060408501526143f46060850182614fea565b73ffffffffffffffffffffffffffffffffffffffff8716815261ffff8616602082015284604082015283606082015282608082015260c060a08201526000614f9660c083018461520a565b73ffffffffffffffffffffffffffffffffffffffff8616815261ffff8516602082015283604082015282606082015260a06080820152600061462460a083018461520a565b600073ffffffffffffffffffffffffffffffffffffffff808b16835261ffff8a16602084015260e0604084015261531760e084018a614fea565b886060850152818816608085015281871660a085015283810360c08501526127b8818688614f1b565b602081528151602082015260006020830151610140806040850152615369610160850183614fea565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526153a48382614fea565b92505060608501516153ce608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206154418187018315159052565b90950151151593019290925250919050565b6000808585111561546357600080fd5b8386111561547057600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156154bd5780818660040360031b1b83161692505b505092915050565b6000602082840312156154d757600080fd5b81516143de81614727565b6000602082840312156154f457600080fd5b815167ffffffffffffffff81111561550b57600080fd5b8201601f8101841361551c57600080fd5b805161552781614895565b6040516155348282614820565b82815286602084860101111561554957600080fd5b61555a836020830160208701614fc6565b9695505050505050565b8082018082111561057657610576614d78565b60008251615200818460208701614fc656fea26469706673582212206eb2a2a5625954be0333ee9c1104bbef1b2a042fd259011769971dc5ad663f2b64736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "CannotBridgeToSameNetwork";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ContractCallNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "originalError";
            readonly type: "string";
        }];
        readonly name: "ContractWithNonStandardFeeEstimateFunction";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "minAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "receivedAmount";
            readonly type: "uint256";
        }];
        readonly name: "CumulativeSlippageTooHigh";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ExternalCallFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InformationMismatch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "required";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidCallData";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidContract";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidProxyOFTAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidReceiver";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeAssetNotSupported";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeAssetTransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapDataProvided";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapFromZeroBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoTransferToNullAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAValidSpender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OnlyContractOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ReentrancyError";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOutOfBounds";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOverflow";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnAuthorized";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnknownLayerZeroChain";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "uint16";
            readonly name: "layerZeroChainId";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "receiver";
            readonly type: "bytes32";
        }];
        readonly name: "BridgeToNonEVMChain";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "layerZeroChainId";
            readonly type: "uint16";
        }];
        readonly name: "LayerZeroChainIdSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "integrator";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "referrer";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "fromAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "toAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "fromAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "toAmount";
            readonly type: "uint256";
        }];
        readonly name: "LiFiGenericSwapCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "integrator";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "referrer";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "fromAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "toAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "fromAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "toAmount";
            readonly type: "uint256";
        }];
        readonly name: "LiFiSwappedGeneric";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferRecovered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly indexed: false;
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "bridgeData";
            readonly type: "tuple";
        }];
        readonly name: "LiFiTransferStarted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "chainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint16";
                readonly name: "layerZeroChainId";
                readonly type: "uint16";
            }];
            readonly indexed: false;
            readonly internalType: "struct OFTWrapperFacet.ChainIdConfig[]";
            readonly name: "chainIdConfigs";
            readonly type: "tuple[]";
        }];
        readonly name: "OFTWrapperInitialized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "contractAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "whitelisted";
                readonly type: "bool";
            }];
            readonly indexed: false;
            readonly internalType: "struct OFTWrapperFacet.WhitelistConfig[]";
            readonly name: "whitelistConfigs";
            readonly type: "tuple[]";
        }];
        readonly name: "WhitelistUpdated";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "INTERFACE_ID_IOFTCore";
        readonly outputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "";
            readonly type: "bytes4";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "INTERFACE_ID_IOFTV2";
        readonly outputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "";
            readonly type: "bytes4";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "INTERFACE_ID_IOFTWithFee";
        readonly outputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "";
            readonly type: "bytes4";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "contractAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "whitelisted";
                readonly type: "bool";
            }];
            readonly internalType: "struct OFTWrapperFacet.WhitelistConfig[]";
            readonly name: "configs";
            readonly type: "tuple[]";
        }];
        readonly name: "batchWhitelist";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_sendingAssetId";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "_withSrcSwap";
            readonly type: "bool";
        }];
        readonly name: "determineOFTBridgeSendFunction";
        readonly outputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "bridgeFunctionSelector";
            readonly type: "bytes4";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_sendingAssetId";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_destinationChainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_receiver";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bool";
            readonly name: "_useZro";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes";
            readonly name: "_adapterParams";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "_customCodeCallData";
            readonly type: "bytes";
        }];
        readonly name: "estimateOFTFees";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "nativeFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "zroFee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct OFTWrapperFacet.OftFeeEstimate";
            readonly name: "feeEstimate";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_chainId";
            readonly type: "uint256";
        }];
        readonly name: "getOFTLayerZeroChainId";
        readonly outputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "layerZeroChainId";
            readonly type: "uint16";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "chainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint16";
                readonly name: "layerZeroChainId";
                readonly type: "uint16";
            }];
            readonly internalType: "struct OFTWrapperFacet.ChainIdConfig[]";
            readonly name: "chainIdConfigs";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "contractAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "whitelisted";
                readonly type: "bool";
            }];
            readonly internalType: "struct OFTWrapperFacet.WhitelistConfig[]";
            readonly name: "whitelistConfigs";
            readonly type: "tuple[]";
        }];
        readonly name: "initOFTWrapper";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_sendingAssetId";
            readonly type: "address";
        }];
        readonly name: "isOftV1";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_sendingAssetId";
            readonly type: "address";
        }];
        readonly name: "isOftV2";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_sendingAssetId";
            readonly type: "address";
        }];
        readonly name: "isOftV2WithFee";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_chainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint16";
            readonly name: "_layerZeroChainId";
            readonly type: "uint16";
        }];
        readonly name: "setOFTLayerZeroChainId";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "proxyOftAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "receiver";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "lzFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "zroPaymentAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bytes";
                readonly name: "adapterParams";
                readonly type: "bytes";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "callerBps";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "caller";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes2";
                    readonly name: "partnerId";
                    readonly type: "bytes2";
                }];
                readonly internalType: "struct IOFT.FeeObj";
                readonly name: "feeObj";
                readonly type: "tuple";
            }, {
                readonly internalType: "bytes";
                readonly name: "customCode_sendTokensCallData";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "customCode_approveTo";
                readonly type: "address";
            }];
            readonly internalType: "struct OFTWrapperFacet.OFTWrapperData";
            readonly name: "_oftWrapperData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaCustomCodeOFT";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "proxyOftAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "receiver";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "lzFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "zroPaymentAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bytes";
                readonly name: "adapterParams";
                readonly type: "bytes";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "callerBps";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "caller";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes2";
                    readonly name: "partnerId";
                    readonly type: "bytes2";
                }];
                readonly internalType: "struct IOFT.FeeObj";
                readonly name: "feeObj";
                readonly type: "tuple";
            }, {
                readonly internalType: "bytes";
                readonly name: "customCode_sendTokensCallData";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "customCode_approveTo";
                readonly type: "address";
            }];
            readonly internalType: "struct OFTWrapperFacet.OFTWrapperData";
            readonly name: "_oftWrapperData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaOFTWrapperV1";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "proxyOftAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "receiver";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "lzFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "zroPaymentAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bytes";
                readonly name: "adapterParams";
                readonly type: "bytes";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "callerBps";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "caller";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes2";
                    readonly name: "partnerId";
                    readonly type: "bytes2";
                }];
                readonly internalType: "struct IOFT.FeeObj";
                readonly name: "feeObj";
                readonly type: "tuple";
            }, {
                readonly internalType: "bytes";
                readonly name: "customCode_sendTokensCallData";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "customCode_approveTo";
                readonly type: "address";
            }];
            readonly internalType: "struct OFTWrapperFacet.OFTWrapperData";
            readonly name: "_oftWrapperData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaOFTWrapperV2";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "proxyOftAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "receiver";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "lzFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "zroPaymentAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bytes";
                readonly name: "adapterParams";
                readonly type: "bytes";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "callerBps";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "caller";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes2";
                    readonly name: "partnerId";
                    readonly type: "bytes2";
                }];
                readonly internalType: "struct IOFT.FeeObj";
                readonly name: "feeObj";
                readonly type: "tuple";
            }, {
                readonly internalType: "bytes";
                readonly name: "customCode_sendTokensCallData";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "customCode_approveTo";
                readonly type: "address";
            }];
            readonly internalType: "struct OFTWrapperFacet.OFTWrapperData";
            readonly name: "_oftWrapperData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaOFTWrapperV2WithFee";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "proxyOftAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "receiver";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "lzFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "zroPaymentAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bytes";
                readonly name: "adapterParams";
                readonly type: "bytes";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "callerBps";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "caller";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes2";
                    readonly name: "partnerId";
                    readonly type: "bytes2";
                }];
                readonly internalType: "struct IOFT.FeeObj";
                readonly name: "feeObj";
                readonly type: "tuple";
            }, {
                readonly internalType: "bytes";
                readonly name: "customCode_sendTokensCallData";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "customCode_approveTo";
                readonly type: "address";
            }];
            readonly internalType: "struct OFTWrapperFacet.OFTWrapperData";
            readonly name: "_oftWrapperData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaCustomCodeOFT";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "proxyOftAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "receiver";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "lzFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "zroPaymentAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bytes";
                readonly name: "adapterParams";
                readonly type: "bytes";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "callerBps";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "caller";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes2";
                    readonly name: "partnerId";
                    readonly type: "bytes2";
                }];
                readonly internalType: "struct IOFT.FeeObj";
                readonly name: "feeObj";
                readonly type: "tuple";
            }, {
                readonly internalType: "bytes";
                readonly name: "customCode_sendTokensCallData";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "customCode_approveTo";
                readonly type: "address";
            }];
            readonly internalType: "struct OFTWrapperFacet.OFTWrapperData";
            readonly name: "_oftWrapperData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaOFTWrapperV1";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "proxyOftAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "receiver";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "lzFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "zroPaymentAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bytes";
                readonly name: "adapterParams";
                readonly type: "bytes";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "callerBps";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "caller";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes2";
                    readonly name: "partnerId";
                    readonly type: "bytes2";
                }];
                readonly internalType: "struct IOFT.FeeObj";
                readonly name: "feeObj";
                readonly type: "tuple";
            }, {
                readonly internalType: "bytes";
                readonly name: "customCode_sendTokensCallData";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "customCode_approveTo";
                readonly type: "address";
            }];
            readonly internalType: "struct OFTWrapperFacet.OFTWrapperData";
            readonly name: "_oftWrapperData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaOFTWrapperV2";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "proxyOftAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "receiver";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "lzFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "zroPaymentAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bytes";
                readonly name: "adapterParams";
                readonly type: "bytes";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "callerBps";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "caller";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes2";
                    readonly name: "partnerId";
                    readonly type: "bytes2";
                }];
                readonly internalType: "struct IOFT.FeeObj";
                readonly name: "feeObj";
                readonly type: "tuple";
            }, {
                readonly internalType: "bytes";
                readonly name: "customCode_sendTokensCallData";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "customCode_approveTo";
                readonly type: "address";
            }];
            readonly internalType: "struct OFTWrapperFacet.OFTWrapperData";
            readonly name: "_oftWrapperData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaOFTWrapperV2WithFee";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): OFTWrapperFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): OFTWrapperFacet;
}
export {};
