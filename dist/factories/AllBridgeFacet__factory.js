"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.AllBridgeFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_allBridge",
                type: "address",
                internalType: "contract IAllBridge",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaAllBridge",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_allBridgeData",
                type: "tuple",
                internalType: "struct AllBridgeFacet.AllBridgeData",
                components: [
                    {
                        name: "fees",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "recipient",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "receiveToken",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "nonce",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "messenger",
                        type: "uint8",
                        internalType: "enum IAllBridge.MessengerProtocol",
                    },
                    {
                        name: "payFeeWithSendingAsset",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaAllBridge",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_allBridgeData",
                type: "tuple",
                internalType: "struct AllBridgeFacet.AllBridgeData",
                components: [
                    {
                        name: "fees",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "recipient",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "receiveToken",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "nonce",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "messenger",
                        type: "uint8",
                        internalType: "enum IAllBridge.MessengerProtocol",
                    },
                    {
                        name: "payFeeWithSendingAsset",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
];
var _bytecode = "0x60a060405234801561001057600080fd5b50604051611d9d380380611d9d83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051611d04610099600039600081816105fd0152818161063d015261073c0152611d046000f3fe6080604052600436106100295760003560e01c8063a74ccb351461002e578063e40f246014610043575b600080fd5b61004161003c3660046117c9565b610056565b005b610041610051366004611876565b610288565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e234476118c6565b905086806101000151610121576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561015f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886101828160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101b9576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101f7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610234576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102498a600001518b60c001518b8b336104ac565b60c08b01526102588a886105f3565b50479150508181111561027a5761027a60008461027585856118c6565b610858565b505060009091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610303576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061031434476118c6565b9050846103398160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610370576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036103ae576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036103eb576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8580610100015115610429576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610467576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61047988608001518960c0015161088d565b61048388886105f3565b5047915050818111156104a0576104a060008461027585856118c6565b50506000909155505050565b6000828082036104e8576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856104f76001856118c6565b81811061050657610506611900565b9050602002810190610518919061192f565b61052990608081019060600161196d565b9050600061053682610942565b905073ffffffffffffffffffffffffffffffffffffffff82166105605761055d34826118c6565b90505b600061056c888861098d565b90506105788888610a99565b6105858a89898985610b06565b60008261059185610942565b61059b91906118c6565b9050898110156105e5576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b61062682608001517f00000000000000000000000000000000000000000000000000000000000000008460c00151610eb8565b61063660e0820160c0830161198f565b1561073a577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634cd480bd836080015173ffffffffffffffffffffffffffffffffffffffff1660001b8460c0015184602001358560400135866060013587608001358860a00160208101906106c191906119aa565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e08a901b16815261070397969594939291908b3590600401611a06565b600060405180830381600087803b15801561071d57600080fd5b505af1158015610731573d6000803e3d6000fd5b5050505061081d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634cd480bd8260000135846080015173ffffffffffffffffffffffffffffffffffffffff1660001b8560c0015185602001358660400135876060013588608001358960a00160208101906107c591906119aa565b60006040518a63ffffffff1660e01b81526004016107ea989796959493929190611a06565b6000604051808303818588803b15801561080357600080fd5b505af1158015610817573d6000803e3d6000fd5b50505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161084c9190611ab4565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff83166108825761087d8282610ee4565b505050565b61087d838383610f51565b806000036108c7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610920578034101561091c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61091c73ffffffffffffffffffffffffffffffffffffffff8316333084610fbf565b600073ffffffffffffffffffffffffffffffffffffffff8216156109855761098073ffffffffffffffffffffffffffffffffffffffff83163061101c565b610987565b475b92915050565b60608160008167ffffffffffffffff8111156109ab576109ab61158f565b6040519080825280602002602001820160405280156109d4578160200160208202803683370190505b5090506000805b83811015610a8e578686828181106109f5576109f5611900565b9050602002810190610a07919061192f565b610a1890608081019060600161196d565b9150610a2382610942565b838281518110610a3557610a35611900565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610a865734838281518110610a6e57610a6e611900565b60200260200101818151610a8291906118c6565b9052505b6001016109db565b509095945050505050565b60005b8181101561087d5736838383818110610ab757610ab7611900565b9050602002810190610ac9919061192f565b9050610adb60e0820160c0830161198f565b15610afd57610afd610af3606083016040840161196d565b826080013561088d565b50600101610a9c565b838383838260018114610dd35760008585610b226001856118c6565b818110610b3157610b31611900565b9050602002810190610b43919061192f565b610b5490608081019060600161196d565b9050600089815b81811015610cff57368d8d83818110610b7657610b76611900565b9050602002810190610b88919061192f565b9050610bb7610b9d606083016040840161196d565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610c1a5750610c1a610bd0604083016020840161196d565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610c315750610c31610bd0602083018361196d565b8015610cb65750610cb6610c4860a0830183611bc7565b610c5791600491600091611c33565b610c6091611c5d565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610cec576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cf68f82611051565b50600101610b5b565b505060005b610d0f6001856118c6565b811015610dcb576000888883818110610d2a57610d2a611900565b9050602002810190610d3c919061192f565b610d4d90608081019060600161196d565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610dc257858281518110610d9457610d94611900565b6020026020010151610da582610942565b610daf91906118c6565b92508215610dc257610dc2818885610858565b50600101610d04565b505050610eac565b8760005b81811015610ea957368b8b83818110610df257610df2611900565b9050602002810190610e04919061192f565b9050610e19610b9d606083016040840161196d565b80610e325750610e32610bd0604083016020840161196d565b8015610e495750610e49610bd0602083018361196d565b8015610e605750610e60610c4860a0830183611bc7565b610e96576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ea08d82611051565b50600101610dd7565b50505b50505050505050505050565b61087d8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6112cb565b73ffffffffffffffffffffffffffffffffffffffff8216610f31576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61091c73ffffffffffffffffffffffffffffffffffffffff8316826113fa565b73ffffffffffffffffffffffffffffffffffffffff8216610f9e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61087d73ffffffffffffffffffffffffffffffffffffffff84168383611416565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d15600160005114171661100e57637939f4246000526004601cfd5b600060605260405250505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b611066611061602083018361196d565b611465565b61109c576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036110dc576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006110f1610b9d606085016040860161196d565b6110fc576000611102565b82608001355b9050600061111e611119608086016060870161196d565b610942565b9050816000036111555761115561113b606086016040870161196d565b61114b604087016020880161196d565b8660800135610eb8565b600080611165602087018761196d565b73ffffffffffffffffffffffffffffffffffffffff168461118960a0890189611bc7565b604051611197929190611ca5565b60006040518083038185875af1925050503d80600081146111d4576040519150601f19603f3d011682016040523d82523d6000602084013e6111d9565b606091505b5091509150816111ec576111ec816114fb565b60006112016111196080890160608a0161196d565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861123260208a018a61196d565b61124260608b0160408c0161196d565b61125260808c0160608d0161196d565b8b60800135898711611264578661126e565b61126e8a886118c6565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156113f45773ffffffffffffffffffffffffffffffffffffffff8316611334576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa1580156113a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cd9190611cb5565b10156113f4576113f473ffffffffffffffffffffffffffffffffffffffff85168483611505565b50505050565b60003860003884865af161091c5763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d15600160005114171661145b576390b8ec186000526004601cfd5b6000603452505050565b6040805160178082528183019092526000918291906020820181803683370190505090506017600060208301853c60208101517f10ff0000000000000000000000000000000000000000000000000000000000007fffffff00000000000000000000000000000000000000000000000000000000008216016114f257506023015160601c3b151592915050565b5050503b151590565b8051602082018181fd5b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d15600160005114171661145b5760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d15600160005114171661145b57633e3f8f736000526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156115e2576115e261158f565b60405290565b600082601f8301126115f957600080fd5b813567ffffffffffffffff808211156116145761161461158f565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561165a5761165a61158f565b8160405283815286602085880101111561167357600080fd5b836020870160208301376000602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146116b757600080fd5b919050565b803580151581146116b757600080fd5b600061014082840312156116df57600080fd5b6116e76115be565b905081358152602082013567ffffffffffffffff8082111561170857600080fd5b611714858386016115e8565b6020840152604084013591508082111561172d57600080fd5b5061173a848285016115e8565b60408301525061174c60608301611693565b606082015261175d60808301611693565b608082015261176e60a08301611693565b60a082015260c082013560c082015260e082013560e08201526101006117958184016116bc565b908201526101206117a78382016116bc565b9082015292915050565b600060e082840312156117c357600080fd5b50919050565b60008060008061012085870312156117e057600080fd5b843567ffffffffffffffff808211156117f857600080fd5b611804888389016116cc565b9550602087013591508082111561181a57600080fd5b818701915087601f83011261182e57600080fd5b81358181111561183d57600080fd5b8860208260051b850101111561185257600080fd5b60208301955080945050505061186b86604087016117b1565b905092959194509250565b600080610100838503121561188a57600080fd5b823567ffffffffffffffff8111156118a157600080fd5b6118ad858286016116cc565b9250506118bd84602085016117b1565b90509250929050565b81810381811115610987577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261196357600080fd5b9190910192915050565b60006020828403121561197f57600080fd5b61198882611693565b9392505050565b6000602082840312156119a157600080fd5b611988826116bc565b6000602082840312156119bc57600080fd5b81356004811061198857600080fd5b60048110611a02577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000610100820190508982528860208301528760408301528660608301528560808301528460a0830152611a3d60c08301856119cb565b8260e08301529998505050505050505050565b6000815180845260005b81811015611a7657602081850181015186830182015201611a5a565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081528151602082015260006020830151610140806040850152611add610160850183611a50565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152611b188382611a50565b9250506060850151611b42608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120611bb58187018315159052565b90950151151593019290925250919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611bfc57600080fd5b83018035915067ffffffffffffffff821115611c1757600080fd5b602001915036819003821315611c2c57600080fd5b9250929050565b60008085851115611c4357600080fd5b83861115611c5057600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015611c9d5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b600060208284031215611cc757600080fd5b505191905056fea2646970667358221220cd82a4d22d0c2333d1fe345c62b9c5aac1068f785796fa19e61963e39e74ab5c64736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var AllBridgeFacet__factory = /** @class */ (function (_super) {
    __extends(AllBridgeFacet__factory, _super);
    function AllBridgeFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    AllBridgeFacet__factory.prototype.deploy = function (_allBridge, overrides) {
        return _super.prototype.deploy.call(this, _allBridge, overrides || {});
    };
    AllBridgeFacet__factory.prototype.getDeployTransaction = function (_allBridge, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _allBridge, overrides || {});
    };
    AllBridgeFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    AllBridgeFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    AllBridgeFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    AllBridgeFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    AllBridgeFacet__factory.bytecode = _bytecode;
    AllBridgeFacet__factory.abi = _abi;
    return AllBridgeFacet__factory;
}(ethers_1.ContractFactory));
exports.AllBridgeFacet__factory = AllBridgeFacet__factory;
