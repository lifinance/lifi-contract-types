"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.AmarokFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "contract IConnextHandler",
                name: "_connextHandler",
                type: "address",
            },
            {
                internalType: "uint32",
                name: "_srcChainDomain",
                type: "uint32",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "CannotBridgeToSameNetwork",
        type: "error",
    },
    {
        inputs: [],
        name: "ContractCallNotAllowed",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "receivedAmount",
                type: "uint256",
            },
        ],
        name: "CumulativeSlippageTooHigh",
        type: "error",
    },
    {
        inputs: [],
        name: "InformationMismatch",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "required",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
        ],
        name: "InsufficientBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidAmount",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidContract",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidReceiver",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeAssetNotSupported",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeAssetTransferFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapDataProvided",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapFromZeroBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "NoTransferToNullAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAValidSpender",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAnERC20Token",
        type: "error",
    },
    {
        inputs: [],
        name: "OnlyContractOwner",
        type: "error",
    },
    {
        inputs: [],
        name: "ReentrancyError",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOverflow",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "domain",
                type: "uint32",
            },
        ],
        name: "UnknownAmarokDomain",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint32",
                name: "domain",
                type: "uint32",
            },
        ],
        name: "AmarokDomainSet",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferCompleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferRecovered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                name: "bridgeData",
                type: "tuple",
            },
        ],
        name: "LiFiTransferStarted",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_chainId",
                type: "uint256",
            },
            {
                internalType: "uint32",
                name: "_domain",
                type: "uint32",
            },
        ],
        name: "setAmarokDomain",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "uint256",
                        name: "relayerFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "slippageTol",
                        type: "uint256",
                    },
                ],
                internalType: "struct AmarokFacet.AmarokData",
                name: "_amarokData",
                type: "tuple",
            },
        ],
        name: "startBridgeTokensViaAmarok",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "_swapData",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "uint256",
                        name: "relayerFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "slippageTol",
                        type: "uint256",
                    },
                ],
                internalType: "struct AmarokFacet.AmarokData",
                name: "_amarokData",
                type: "tuple",
            },
        ],
        name: "swapAndStartBridgeTokensViaAmarok",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
var _bytecode = "0x60c06040523480156200001157600080fd5b5060405162002b2c38038062002b2c833981016040819052620000349162000051565b6001600160a01b0390911660805263ffffffff1660a052620000a3565b600080604083850312156200006557600080fd5b82516001600160a01b03811681146200007d57600080fd5b602084015190925063ffffffff811681146200009857600080fd5b809150509250929050565b60805160a051612a5f620000cd60003960005050600081816108b701526109060152612a5f6000f3fe6080604052600436106100345760003560e01c8063280c6deb1461003957806338293edd1461005b578063b1848d2e1461006e575b600080fd5b34801561004557600080fd5b50610059610054366004612129565b610081565b005b61005961006936600461217a565b61011c565b61005961007c36600461243c565b6103e5565b610089610690565b60007feb4198458a814793befc1a2917bf545aff2a1c03cd5d74bd029e61245d484aaf60008481526020829052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff871690811790915590519293509185917ff7d9e84ed3fcc363e379b957a2727eab9d6cb676f99533cbe3b68dadc0153dd991a3505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610197576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006101a8344761252a565b90506101b38561253d565b806101000151156101f0576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101f98661253d565b60a081015173ffffffffffffffffffffffffffffffffffffffff1661024a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610288576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036102c5576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102ce8761253d565b608081015173ffffffffffffffffffffffffffffffffffffffff1661031f576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61033161014089016101208a01612549565b151561033c88610705565b151514610375576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61039261038860a08a0160808b01612566565b8960c0013561071c565b6103a461039e8961253d565b8861089c565b50479150600090508282116103ba5760006103c4565b6103c4838361252a565b905080156103d8576103d8600085836109eb565b5050600090925550505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610460576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155336000610471344761252a565b9050868061010001516104b0576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876104d38160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561050a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610548576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610585576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886105a8816080015173ffffffffffffffffffffffffffffffffffffffff161590565b156105df576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b89610120015115156105f088610705565b151514610629576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61063e8a600001518b60c001518b8b33610a1c565b60c08b015261064d8a8861089c565b504791506000905082821161066357600061066d565b61066d838361252a565b9050801561068157610681600085836109eb565b50506000909255505050505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314610703576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000806107128380612581565b9050119050919050565b73ffffffffffffffffffffffffffffffffffffffff82166107755780341015610771576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b806000036107af576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa15801561081c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084091906125ed565b90508181101561088b576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b61089783333085610b5f565b505050565b60006108ab8360e00151610d79565b90506108e083608001517f00000000000000000000000000000000000000000000000000000000000000008560c00151610df7565b60a0830151608084015160c085015173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001692638aac16ba9260208701359286929190829060408a01356109488b80612581565b6040518a63ffffffff1660e01b815260040161096b989796959493929190612606565b60206040518083038185885af1158015610989573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109ae91906125ed565b507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1836040516109de91906126d4565b60405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff831615610a1257610897838383610f42565b6108978282611071565b600082808203610a58576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610a6760018561252a565b818110610a7657610a766127c9565b9050602002810190610a8891906127f8565b610a99906080810190606001612566565b90506000610aa68261119b565b905073ffffffffffffffffffffffffffffffffffffffff8216610ad057610acd348261252a565b90505b6000610adc8888611254565b9050610ae88888611360565b610af58a898989856113c1565b600082610b018561119b565b610b0b919061252a565b905089811015610b51576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b905260248101829052604401610882565b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416610bac576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610bf9576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610c6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8e91906125ed565b9050610c9c82868686611773565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610d0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3091906125ed565b610d3a919061252a565b14610d71576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b60008181527feb4198458a814793befc1a2917bf545aff2a1c03cd5d74bd029e61245d484aaf6020819052604082205463ffffffff16808303610df0576040517f34d1a6a800000000000000000000000000000000000000000000000000000000815263ffffffff82166004820152602401610882565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8316610e1757505050565b73ffffffffffffffffffffffffffffffffffffffff8216610e64576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610eda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efe91906125ed565b905081811015610f3c57610f3c8484610f37847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61252a565b611831565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610f8f576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610ffc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102091906125ed565b905080821115611066576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610882565b610f3c84848461192f565b73ffffffffffffffffffffffffffffffffffffffff82166110be576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611101576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610882565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461115b576040519150601f19603f3d011682016040523d82523d6000602084013e611160565b606091505b5050905080610897576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff82161561124c576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611223573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124791906125ed565b61124e565b475b92915050565b60608160008167ffffffffffffffff811115611272576112726121e7565b60405190808252806020026020018201604052801561129b578160200160208202803683370190505b5090506000805b83811015611355578686828181106112bc576112bc6127c9565b90506020028101906112ce91906127f8565b6112df906080810190606001612566565b91506112ea8261119b565b8382815181106112fc576112fc6127c9565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff821661134d5734838281518110611335576113356127c9565b60200260200101818151611349919061252a565b9052505b6001016112a2565b509095945050505050565b60005b8181101561089757600083838381811061137f5761137f6127c9565b905060200281019061139191906127f8565b61139a90612836565b90508060c00151156113b8576113b88160400151826080015161071c565b50600101611363565b83838383826001811461168e57600085856113dd60018561252a565b8181106113ec576113ec6127c9565b90506020028101906113fe91906127f8565b61140f906080810190606001612566565b9050600089815b818110156115ba57368d8d83818110611431576114316127c9565b905060200281019061144391906127f8565b90506114726114586060830160408401612566565b73ffffffffffffffffffffffffffffffffffffffff161590565b806114d557506114d561148b6040830160208401612566565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156114ec57506114ec61148b6020830183612566565b8015611571575061157161150360a0830183612581565b611512916004916000916128db565b61151b91612905565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6115a7576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115b18f82611985565b50600101611416565b505060005b6115ca60018561252a565b8110156116865760008888838181106115e5576115e56127c9565b90506020028101906115f791906127f8565b611608906080810190606001612566565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461167d5785828151811061164f5761164f6127c9565b60200260200101516116608261119b565b61166a919061252a565b9250821561167d5761167d8188856109eb565b506001016115bf565b505050611767565b8760005b8181101561176457368b8b838181106116ad576116ad6127c9565b90506020028101906116bf91906127f8565b90506116d46114586060830160408401612566565b806116ed57506116ed61148b6040830160208401612566565b8015611704575061170461148b6020830183612566565b801561171b575061171b61150360a0830183612581565b611751576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61175b8d82611985565b50600101611692565b50505b50505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610f3c9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611c9b565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156118a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118cc91906125ed565b6118d6919061294d565b60405173ffffffffffffffffffffffffffffffffffffffff8516602482015260448101829052909150610f3c9085907f095ea7b300000000000000000000000000000000000000000000000000000000906064016117cd565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526108979084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016117cd565b61199b6119956020830183612566565b3b151590565b6119d1576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611a11576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611a266114586060850160408601612566565b611a31576000611a37565b82608001355b90506000611a53611a4e6060860160408701612566565b61119b565b90506000611a6a611a4e6080870160608801612566565b905082600003611aa157611aa1611a876060870160408801612566565b611a976040880160208901612566565b8760800135610df7565b8460800135821015611aec576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610882565b600080611afc6020880188612566565b73ffffffffffffffffffffffffffffffffffffffff1685611b2060a08a018a612581565b604051611b2e929190612960565b60006040518083038185875af1925050503d8060008114611b6b576040519150601f19603f3d011682016040523d82523d6000602084013e611b70565b606091505b509150915081611bbb576000611b8582611da7565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108829190612970565b6000611bd0611a4e60808a0160608b01612566565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611c0160208b018b612566565b611c1160608c0160408d01612566565b611c2160808d0160608e01612566565b8c60800135898711611c335786611c3d565b611c3d8a8861252a565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6000611cfd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611e1e9092919063ffffffff16565b8051909150156108975780806020019051810190611d1b9190612983565b610897576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610882565b6060604482511015611dec57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611e086004808551611e00919061252a565b859190611e35565b905080806020019051810190610df091906129a0565b6060611e2d8484600085611f31565b949350505050565b606081611e4381601f61294d565b1015611e7b576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611e85828461294d565b84511015611ebf576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611ede5760405191506000825260208201604052611f28565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611f17578051835260209283019201611eff565b5050858452601f01601f1916604052505b50949350505050565b606082471015611fc3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610882565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611fec9190612a17565b60006040518083038185875af1925050503d8060008114612029576040519150601f19603f3d011682016040523d82523d6000602084013e61202e565b606091505b509150915061203f8783838761204a565b979650505050505050565b606083156120e05782516000036120d95773ffffffffffffffffffffffffffffffffffffffff85163b6120d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610882565b5081611e2d565b611e2d83838151156120f55781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108829190612970565b6000806040838503121561213c57600080fd5b82359150602083013563ffffffff8116811461215757600080fd5b809150509250929050565b60006060828403121561217457600080fd5b50919050565b6000806040838503121561218d57600080fd5b823567ffffffffffffffff808211156121a557600080fd5b9084019061014082870312156121ba57600080fd5b909250602084013590808211156121d057600080fd5b506121dd85828601612162565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561223a5761223a6121e7565b60405290565b60405160e0810167ffffffffffffffff8111828210171561223a5761223a6121e7565b604051601f8201601f1916810167ffffffffffffffff8111828210171561228c5761228c6121e7565b604052919050565b600067ffffffffffffffff8211156122ae576122ae6121e7565b50601f01601f191660200190565b600082601f8301126122cd57600080fd5b81356122e06122db82612294565b612263565b8181528460208386010111156122f557600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461233657600080fd5b919050565b801515811461234957600080fd5b50565b80356123368161233b565b6000610140828403121561236a57600080fd5b612372612216565b905081358152602082013567ffffffffffffffff8082111561239357600080fd5b61239f858386016122bc565b602084015260408401359150808211156123b857600080fd5b506123c5848285016122bc565b6040830152506123d760608301612312565b60608201526123e860808301612312565b60808201526123f960a08301612312565b60a082015260c082013560c082015260e082013560e082015261010061242081840161234c565b9082015261012061243283820161234c565b9082015292915050565b6000806000806060858703121561245257600080fd5b843567ffffffffffffffff8082111561246a57600080fd5b61247688838901612357565b9550602087013591508082111561248c57600080fd5b818701915087601f8301126124a057600080fd5b8135818111156124af57600080fd5b8860208260051b85010111156124c457600080fd5b6020830195508094505060408701359150808211156124e257600080fd5b506124ef87828801612162565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561124e5761124e6124fb565b600061124e3683612357565b60006020828403121561255b57600080fd5b8135610df08161233b565b60006020828403121561257857600080fd5b610df082612312565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126125b657600080fd5b83018035915067ffffffffffffffff8211156125d157600080fd5b6020019150368190038213156125e657600080fd5b9250929050565b6000602082840312156125ff57600080fd5b5051919050565b63ffffffff89168152600073ffffffffffffffffffffffffffffffffffffffff808a16602084015280891660408401528088166060840152508560808301528460a083015260e060c08301528260e08301526101008385828501376000838501820152601f909301601f191690910190910198975050505050505050565b60005b8381101561269f578181015183820152602001612687565b50506000910152565b600081518084526126c0816020860160208601612684565b601f01601f19169290920160200192915050565b6020815281516020820152600060208301516101408060408501526126fd6101608501836126a8565b91506040850151601f1985840301606086015261271a83826126a8565b9250506060850151612744608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206127b78187018315159052565b90950151151593019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261282c57600080fd5b9190910192915050565b600060e0823603121561284857600080fd5b612850612240565b61285983612312565b815261286760208401612312565b602082015261287860408401612312565b604082015261288960608401612312565b60608201526080830135608082015260a083013567ffffffffffffffff8111156128b257600080fd5b6128be368286016122bc565b60a0830152506128d060c0840161234c565b60c082015292915050565b600080858511156128eb57600080fd5b838611156128f857600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156129455780818660040360031b1b83161692505b505092915050565b8082018082111561124e5761124e6124fb565b8183823760009101908152919050565b602081526000610df060208301846126a8565b60006020828403121561299557600080fd5b8151610df08161233b565b6000602082840312156129b257600080fd5b815167ffffffffffffffff8111156129c957600080fd5b8201601f810184136129da57600080fd5b80516129e86122db82612294565b8181528560208385010111156129fd57600080fd5b612a0e826020830160208601612684565b95945050505050565b6000825161282c81846020870161268456fea2646970667358221220e6c4b981683005f00a2b203d362ca24e20618cc5e71e99b4ea916ecf6259ec3d64736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var AmarokFacet__factory = /** @class */ (function (_super) {
    __extends(AmarokFacet__factory, _super);
    function AmarokFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    AmarokFacet__factory.prototype.deploy = function (_connextHandler, _srcChainDomain, overrides) {
        return _super.prototype.deploy.call(this, _connextHandler, _srcChainDomain, overrides || {});
    };
    AmarokFacet__factory.prototype.getDeployTransaction = function (_connextHandler, _srcChainDomain, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _connextHandler, _srcChainDomain, overrides || {});
    };
    AmarokFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    AmarokFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    AmarokFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    AmarokFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    AmarokFacet__factory.bytecode = _bytecode;
    AmarokFacet__factory.abi = _abi;
    return AmarokFacet__factory;
}(ethers_1.ContractFactory));
exports.AmarokFacet__factory = AmarokFacet__factory;
