"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.AmarokFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "contract IConnextHandler",
                name: "_connextHandler",
                type: "address",
            },
            {
                internalType: "uint32",
                name: "_srcChainDomain",
                type: "uint32",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "CannotBridgeToSameNetwork",
        type: "error",
    },
    {
        inputs: [],
        name: "ContractCallNotAllowed",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "receivedAmount",
                type: "uint256",
            },
        ],
        name: "CumulativeSlippageTooHigh",
        type: "error",
    },
    {
        inputs: [],
        name: "InformationMismatch",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "required",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
        ],
        name: "InsufficientBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidAmount",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidContract",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidReceiver",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeAssetNotSupported",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeAssetTransferFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapDataProvided",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapFromZeroBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "NoTransferToNullAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAValidSpender",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAnERC20Token",
        type: "error",
    },
    {
        inputs: [],
        name: "OnlyContractOwner",
        type: "error",
    },
    {
        inputs: [],
        name: "ReentrancyError",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOverflow",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "domain",
                type: "uint32",
            },
        ],
        name: "UnknownAmarokDomain",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint32",
                name: "domain",
                type: "uint32",
            },
        ],
        name: "AmarokDomainSet",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferCompleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferRecovered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                name: "bridgeData",
                type: "tuple",
            },
        ],
        name: "LiFiTransferStarted",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_chainId",
                type: "uint256",
            },
            {
                internalType: "uint32",
                name: "_domain",
                type: "uint32",
            },
        ],
        name: "setAmarokDomain",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "relayerFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "slippageTol",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "delegate",
                        type: "address",
                    },
                ],
                internalType: "struct AmarokFacet.AmarokData",
                name: "_amarokData",
                type: "tuple",
            },
        ],
        name: "startBridgeTokensViaAmarok",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "_swapData",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "relayerFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "slippageTol",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "delegate",
                        type: "address",
                    },
                ],
                internalType: "struct AmarokFacet.AmarokData",
                name: "_amarokData",
                type: "tuple",
            },
        ],
        name: "swapAndStartBridgeTokensViaAmarok",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
var _bytecode = "0x60c06040523480156200001157600080fd5b5060405162002c2e38038062002c2e833981016040819052620000349162000051565b6001600160a01b0390911660805263ffffffff1660a052620000a3565b600080604083850312156200006557600080fd5b82516001600160a01b03811681146200007d57600080fd5b602084015190925063ffffffff811681146200009857600080fd5b809150509250929050565b60805160a051612b61620000cd600039600050506000818161087f01526108d20152612b616000f3fe6080604052600436106100345760003560e01c8063280c6deb1461003957806364a74ee21461005b578063ef27dc6f1461006e575b600080fd5b34801561004557600080fd5b50610059610054366004612195565b610081565b005b610059610069366004612477565b61011c565b61005961007c366004612536565b6103c7565b610089610690565b60007feb4198458a814793befc1a2917bf545aff2a1c03cd5d74bd029e61245d484aaf60008481526020829052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff871690811790915590519293509185917ff7d9e84ed3fcc363e379b957a2727eab9d6cb676f99533cbe3b68dadc0153dd991a3505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610197576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006101a834476125d2565b9050868061010001516101e7576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8761020a8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610241576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361027f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036102bc576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886102df816080015173ffffffffffffffffffffffffffffffffffffffff161590565b15610316576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b896101200151151561032788610705565b151514610360576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103758a600001518b60c001518b8b3361071c565b60c08b01526103848a88610864565b504791506000905082821161039a5760006103a4565b6103a483836125d2565b905080156103b8576103b8600085836109e3565b50506000909255505050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610442576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061045334476125d2565b905061045e856125e5565b8061010001511561049b576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104a4866125e5565b60a081015173ffffffffffffffffffffffffffffffffffffffff166104f5576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610533576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610570576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610579876125e5565b608081015173ffffffffffffffffffffffffffffffffffffffff166105ca576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105dc61014089016101208a016125f1565b15156105e788610705565b151514610620576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61063d61063360a08a0160808b0161260e565b8960c00135610a19565b61064f610649896125e5565b88610864565b504791506000905082821161066557600061066f565b61066f83836125d2565b9050801561068357610683600085836109e3565b5050600090925550505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314610703576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000806107128380612629565b9050119050919050565b600082808203610758576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856107676001856125d2565b81811061077657610776612695565b905060200281019061078891906126c4565b61079990608081019060600161260e565b905060006107a682610b8f565b905073ffffffffffffffffffffffffffffffffffffffff82166107d0576107cd34826125d2565b90505b60006107dc8888610c48565b90506107e88888610d54565b6107f58a89898985610db5565b60008261080185610b8f565b61080b91906125d2565b905089811015610856576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b60006108738360e00151611167565b90506108a883608001517f00000000000000000000000000000000000000000000000000000000000000008560c001516111e5565b60008361012001516108be578360a001516108ce565b6108ce604084016020850161260e565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638aac16ba84604001358484886080015188608001602081019061092b919061260e565b60c08b015160608b013561093f8c80612629565b6040518a63ffffffff1660e01b8152600401610962989796959493929190612702565b60206040518083038185885af1158015610980573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109a5919061279e565b507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1846040516109d59190612825565b60405180910390a150505050565b73ffffffffffffffffffffffffffffffffffffffff831615610a0f57610a0a838383611330565b505050565b610a0a828261145f565b73ffffffffffffffffffffffffffffffffffffffff8216610a725780341015610a6e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610aac576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d919061279e565b905081811015610b83576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161084d565b610a0a83333085611589565b600073ffffffffffffffffffffffffffffffffffffffff821615610c40576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610c17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3b919061279e565b610c42565b475b92915050565b60608160008167ffffffffffffffff811115610c6657610c666121ce565b604051908082528060200260200182016040528015610c8f578160200160208202803683370190505b5090506000805b83811015610d4957868682818110610cb057610cb0612695565b9050602002810190610cc291906126c4565b610cd390608081019060600161260e565b9150610cde82610b8f565b838281518110610cf057610cf0612695565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610d415734838281518110610d2957610d29612695565b60200260200101818151610d3d91906125d2565b9052505b600101610c96565b509095945050505050565b60005b81811015610a0a576000838383818110610d7357610d73612695565b9050602002810190610d8591906126c4565b610d8e90612938565b90508060c0015115610dac57610dac81604001518260800151610a19565b50600101610d57565b8383838382600181146110825760008585610dd16001856125d2565b818110610de057610de0612695565b9050602002810190610df291906126c4565b610e0390608081019060600161260e565b9050600089815b81811015610fae57368d8d83818110610e2557610e25612695565b9050602002810190610e3791906126c4565b9050610e66610e4c606083016040840161260e565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610ec95750610ec9610e7f604083016020840161260e565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610ee05750610ee0610e7f602083018361260e565b8015610f655750610f65610ef760a0830183612629565b610f06916004916000916129dd565b610f0f91612a07565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610f9b576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610fa58f826117a3565b50600101610e0a565b505060005b610fbe6001856125d2565b81101561107a576000888883818110610fd957610fd9612695565b9050602002810190610feb91906126c4565b610ffc90608081019060600161260e565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146110715785828151811061104357611043612695565b602002602001015161105482610b8f565b61105e91906125d2565b92508215611071576110718188856109e3565b50600101610fb3565b50505061115b565b8760005b8181101561115857368b8b838181106110a1576110a1612695565b90506020028101906110b391906126c4565b90506110c8610e4c606083016040840161260e565b806110e157506110e1610e7f604083016020840161260e565b80156110f857506110f8610e7f602083018361260e565b801561110f575061110f610ef760a0830183612629565b611145576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61114f8d826117a3565b50600101611086565b50505b50505050505050505050565b60008181527feb4198458a814793befc1a2917bf545aff2a1c03cd5d74bd029e61245d484aaf6020819052604082205463ffffffff168083036111de576040517f34d1a6a800000000000000000000000000000000000000000000000000000000815263ffffffff8216600482015260240161084d565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff831661120557505050565b73ffffffffffffffffffffffffffffffffffffffff8216611252576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa1580156112c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ec919061279e565b90508181101561132a5761132a8484611325847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6125d2565b611ab9565b50505050565b73ffffffffffffffffffffffffffffffffffffffff831661137d576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa1580156113ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140e919061279e565b905080821115611454576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161084d565b61132a848484611c35565b73ffffffffffffffffffffffffffffffffffffffff82166114ac576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156114ef576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810182905247602482015260440161084d565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611549576040519150601f19603f3d011682016040523d82523d6000602084013e61154e565b606091505b5050905080610a0a576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff84166115d6576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611623576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015611694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b8919061279e565b90506116c682868686611c8b565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175a919061279e565b61176491906125d2565b1461179b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b6117b96117b3602083018361260e565b3b151590565b6117ef576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080810135600081900361182f576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611844610e4c606085016040860161260e565b61184f576000611855565b82608001355b9050600061187161186c606086016040870161260e565b610b8f565b9050600061188861186c608087016060880161260e565b9050826000036118bf576118bf6118a5606087016040880161260e565b6118b5604088016020890161260e565b87608001356111e5565b846080013582101561190a576040517fcf479181000000000000000000000000000000000000000000000000000000008152608086013560048201526024810183905260440161084d565b60008061191a602088018861260e565b73ffffffffffffffffffffffffffffffffffffffff168561193e60a08a018a612629565b60405161194c929190612a4f565b60006040518083038185875af1925050503d8060008114611989576040519150601f19603f3d011682016040523d82523d6000602084013e61198e565b606091505b5091509150816119d95760006119a382611ce9565b9050806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084d9190612a5f565b60006119ee61186c60808a0160608b0161260e565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611a1f60208b018b61260e565b611a2f60608c0160408d0161260e565b611a3f60808d0160608e0161260e565b8c60800135898711611a515786611a5b565b611a5b8a886125d2565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611b30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b54919061279e565b611b5e9190612a72565b60405173ffffffffffffffffffffffffffffffffffffffff851660248201526044810182905290915061132a9085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611d60565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610a0a9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611bb3565b60405173ffffffffffffffffffffffffffffffffffffffff8085166024830152831660448201526064810182905261132a9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611bb3565b6060604482511015611d2e57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611d4a6004808551611d4291906125d2565b859190611e6c565b9050808060200190518101906111de9190612a85565b6000611dc2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611f869092919063ffffffff16565b805190915015610a0a5780806020019051810190611de09190612afc565b610a0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161084d565b606081611e7a81601f612a72565b1015611eb2576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611ebc8284612a72565b84511015611ef6576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611f155760405191506000825260208201604052611f7d565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611f4e578051835260209283019201611f36565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6060611f958484600085611f9d565b949350505050565b60608247101561202f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161084d565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516120589190612b19565b60006040518083038185875af1925050503d8060008114612095576040519150601f19603f3d011682016040523d82523d6000602084013e61209a565b606091505b50915091506120ab878383876120b6565b979650505050505050565b6060831561214c5782516000036121455773ffffffffffffffffffffffffffffffffffffffff85163b612145576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161084d565b5081611f95565b611f9583838151156121615781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084d9190612a5f565b600080604083850312156121a857600080fd5b82359150602083013563ffffffff811681146121c357600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715612221576122216121ce565b60405290565b60405160e0810167ffffffffffffffff81118282101715612221576122216121ce565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612291576122916121ce565b604052919050565b600067ffffffffffffffff8211156122b3576122b36121ce565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126122f057600080fd5b81356123036122fe82612299565b61224a565b81815284602083860101111561231857600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461235957600080fd5b919050565b801515811461236c57600080fd5b50565b80356123598161235e565b6000610140828403121561238d57600080fd5b6123956121fd565b905081358152602082013567ffffffffffffffff808211156123b657600080fd5b6123c2858386016122df565b602084015260408401359150808211156123db57600080fd5b506123e8848285016122df565b6040830152506123fa60608301612335565b606082015261240b60808301612335565b608082015261241c60a08301612335565b60a082015260c082013560c082015260e082013560e082015261010061244381840161236f565b9082015261012061245583820161236f565b9082015292915050565b600060a0828403121561247157600080fd5b50919050565b6000806000806060858703121561248d57600080fd5b843567ffffffffffffffff808211156124a557600080fd5b6124b18883890161237a565b955060208701359150808211156124c757600080fd5b818701915087601f8301126124db57600080fd5b8135818111156124ea57600080fd5b8860208260051b85010111156124ff57600080fd5b60208301955080945050604087013591508082111561251d57600080fd5b5061252a8782880161245f565b91505092959194509250565b6000806040838503121561254957600080fd5b823567ffffffffffffffff8082111561256157600080fd5b90840190610140828703121561257657600080fd5b9092506020840135908082111561258c57600080fd5b506125998582860161245f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610c4257610c426125a3565b6000610c42368361237a565b60006020828403121561260357600080fd5b81356111de8161235e565b60006020828403121561262057600080fd5b6111de82612335565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261265e57600080fd5b83018035915067ffffffffffffffff82111561267957600080fd5b60200191503681900382131561268e57600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126126f857600080fd5b9190910192915050565b63ffffffff89168152600073ffffffffffffffffffffffffffffffffffffffff808a16602084015280891660408401528088166060840152508560808301528460a083015260e060c08301528260e08301526101008385828501376000838501820152601f9093017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690910190910198975050505050505050565b6000602082840312156127b057600080fd5b5051919050565b60005b838110156127d25781810151838201526020016127ba565b50506000910152565b600081518084526127f38160208601602086016127b7565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152815160208201526000602083015161014080604085015261284e6101608501836127db565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe085840301606086015261288983826127db565b92505060608501516128b3608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206129268187018315159052565b90950151151593019290925250919050565b600060e0823603121561294a57600080fd5b612952612227565b61295b83612335565b815261296960208401612335565b602082015261297a60408401612335565b604082015261298b60608401612335565b60608201526080830135608082015260a083013567ffffffffffffffff8111156129b457600080fd5b6129c0368286016122df565b60a0830152506129d260c0840161236f565b60c082015292915050565b600080858511156129ed57600080fd5b838611156129fa57600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612a475780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b6020815260006111de60208301846127db565b80820180821115610c4257610c426125a3565b600060208284031215612a9757600080fd5b815167ffffffffffffffff811115612aae57600080fd5b8201601f81018413612abf57600080fd5b8051612acd6122fe82612299565b818152856020838501011115612ae257600080fd5b612af38260208301602086016127b7565b95945050505050565b600060208284031215612b0e57600080fd5b81516111de8161235e565b600082516126f88184602087016127b756fea26469706673582212201e27948ece0cb4858fa9bfecc7c9a99fd6918e4f2d69de256d173280082408b464736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var AmarokFacet__factory = /** @class */ (function (_super) {
    __extends(AmarokFacet__factory, _super);
    function AmarokFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    AmarokFacet__factory.prototype.deploy = function (_connextHandler, _srcChainDomain, overrides) {
        return _super.prototype.deploy.call(this, _connextHandler, _srcChainDomain, overrides || {});
    };
    AmarokFacet__factory.prototype.getDeployTransaction = function (_connextHandler, _srcChainDomain, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _connextHandler, _srcChainDomain, overrides || {});
    };
    AmarokFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    AmarokFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    AmarokFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    AmarokFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    AmarokFacet__factory.bytecode = _bytecode;
    AmarokFacet__factory.abi = _abi;
    return AmarokFacet__factory;
}(ethers_1.ContractFactory));
exports.AmarokFacet__factory = AmarokFacet__factory;
