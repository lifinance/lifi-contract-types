"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CBridgeFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "contract ICBridge",
                name: "_cBridge",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "CannotBridgeToSameNetwork",
        type: "error",
    },
    {
        inputs: [],
        name: "ContractCallNotAllowed",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "receivedAmount",
                type: "uint256",
            },
        ],
        name: "CumulativeSlippageTooHigh",
        type: "error",
    },
    {
        inputs: [],
        name: "InformationMismatch",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "required",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
        ],
        name: "InsufficientBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidAmount",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidContract",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidReceiver",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeAssetTransferFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapDataProvided",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapFromZeroBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "NoTransferToNullAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAValidSpender",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAnERC20Token",
        type: "error",
    },
    {
        inputs: [],
        name: "ReentrancyError",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOverflow",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferCompleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferRecovered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                name: "bridgeData",
                type: "tuple",
            },
        ],
        name: "LiFiTransferStarted",
        type: "event",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint32",
                        name: "maxSlippage",
                        type: "uint32",
                    },
                    {
                        internalType: "uint64",
                        name: "nonce",
                        type: "uint64",
                    },
                ],
                internalType: "struct CBridgeFacet.CBridgeData",
                name: "_cBridgeData",
                type: "tuple",
            },
        ],
        name: "startBridgeTokensViaCBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "_swapData",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "uint32",
                        name: "maxSlippage",
                        type: "uint32",
                    },
                    {
                        internalType: "uint64",
                        name: "nonce",
                        type: "uint64",
                    },
                ],
                internalType: "struct CBridgeFacet.CBridgeData",
                name: "_cBridgeData",
                type: "tuple",
            },
        ],
        name: "swapAndStartBridgeTokensViaCBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
var _bytecode = "0x60a06040523480156200001157600080fd5b50604051620029b8380380620029b8833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b608051612916620000a26000396000818161063901528181610738015261076301526129166000f3fe6080604052600436106100295760003560e01c8063482c6a851461002e578063ae0b91e514610043575b600080fd5b61004161003c36600461235a565b610056565b005b610041610051366004612406565b610288565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e23447612484565b905086806101000151610121576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561015f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886101828160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101b9576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101f7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610234576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102498a600001518b60c001518b8b336104ac565b60c08b01526102588a886105f4565b50479150508181111561027a5761027a6000846102758585612484565b6108be565b505060009091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610303576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006103143447612484565b90508480610100015115610354576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8580610120015115610392576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866103b58160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103ec576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361042a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610467576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61047988608001518960c001516108f4565b61048388886105f4565b5047915050818111156104a0576104a06000846102758585612484565b50506000909155505050565b6000828082036104e8576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856104f7600185612484565b81811061050657610506612497565b905060200281019061051891906124c6565b610529906080810190606001612504565b9050600061053682610a6a565b905073ffffffffffffffffffffffffffffffffffffffff82166105605761055d3482612484565b90505b600061056c8888610b23565b90506105788888610c2f565b6105858a89898985610c9c565b60008261059185610a6a565b61059b9190612484565b9050898110156105e6576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b608082015173ffffffffffffffffffffffffffffffffffffffff1661072e5760c082015160a083015160e084015173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001692633f2e5fc39290918290610674604088016020890161251f565b6106816020890189612549565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b16815273ffffffffffffffffffffffffffffffffffffffff9095166004860152602485019390935267ffffffffffffffff918216604485015216606483015263ffffffff16608482015260a4016000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050610883565b61076182608001517f00000000000000000000000000000000000000000000000000000000000000008460c0015161104e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a5977fbb8360a0015184608001518560c001518660e001518660200160208101906107c4919061251f565b6107d16020890189612549565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b16815273ffffffffffffffffffffffffffffffffffffffff9687166004820152959094166024860152604485019290925267ffffffffffffffff908116606485015216608483015263ffffffff1660a482015260c401600060405180830381600087803b15801561086a57600080fd5b505af115801561087e573d6000803e3d6000fd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1826040516108b291906125dd565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff8316156108ea576108e5838383611191565b505050565b6108e58282611313565b8060000361092e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166109875780341015610983576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156109f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1891906126f0565b905081811015610a5e576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016105dd565b6108e58333308561143d565b600073ffffffffffffffffffffffffffffffffffffffff821615610b1b576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610af2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1691906126f0565b610b1d565b475b92915050565b60608160008167ffffffffffffffff811115610b4157610b416120d4565b604051908082528060200260200182016040528015610b6a578160200160208202803683370190505b5090506000805b83811015610c2457868682818110610b8b57610b8b612497565b9050602002810190610b9d91906124c6565b610bae906080810190606001612504565b9150610bb982610a6a565b838281518110610bcb57610bcb612497565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610c1c5734838281518110610c0457610c04612497565b60200260200101818151610c189190612484565b9052505b600101610b71565b509095945050505050565b60005b818110156108e55736838383818110610c4d57610c4d612497565b9050602002810190610c5f91906124c6565b9050610c7160e0820160c08301612709565b15610c9357610c93610c896060830160408401612504565b82608001356108f4565b50600101610c32565b838383838260018114610f695760008585610cb8600185612484565b818110610cc757610cc7612497565b9050602002810190610cd991906124c6565b610cea906080810190606001612504565b9050600089815b81811015610e9557368d8d83818110610d0c57610d0c612497565b9050602002810190610d1e91906124c6565b9050610d4d610d336060830160408401612504565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610db05750610db0610d666040830160208401612504565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610dc75750610dc7610d666020830183612504565b8015610e4c5750610e4c610dde60a0830183612726565b610ded91600491600091612792565b610df6916127bc565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610e82576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e8c8f82611657565b50600101610cf1565b505060005b610ea5600185612484565b811015610f61576000888883818110610ec057610ec0612497565b9050602002810190610ed291906124c6565b610ee3906080810190606001612504565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f5857858281518110610f2a57610f2a612497565b6020026020010151610f3b82610a6a565b610f459190612484565b92508215610f5857610f588188856108be565b50600101610e9a565b505050611042565b8760005b8181101561103f57368b8b83818110610f8857610f88612497565b9050602002810190610f9a91906124c6565b9050610faf610d336060830160408401612504565b80610fc85750610fc8610d666040830160208401612504565b8015610fdf5750610fdf610d666020830183612504565b8015610ff65750610ff6610dde60a0830183612726565b61102c576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110368d82611657565b50600101610f6d565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661106e57505050565b73ffffffffffffffffffffffffffffffffffffffff82166110bb576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015611130573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115491906126f0565b10156108e5576111668383600061196d565b6108e583837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61196d565b73ffffffffffffffffffffffffffffffffffffffff83166111de576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661122b576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112bc91906126f0565b905080821115611302576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016105dd565b61130d848484611b6d565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216611360576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156113a3576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016105dd565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146113fd576040519150601f19603f3d011682016040523d82523d6000602084013e611402565b606091505b50509050806108e5576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841661148a576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166114d7576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015611548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156c91906126f0565b905061157a82868686611bc3565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa1580156115ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160e91906126f0565b6116189190612484565b1461164f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b61166d6116676020830183612504565b3b151590565b6116a3576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036116e3576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006116f8610d336060850160408601612504565b611703576000611709565b82608001355b905060006117256117206060860160408701612504565b610a6a565b9050600061173c6117206080870160608801612504565b905082600003611773576117736117596060870160408801612504565b6117696040880160208901612504565b876080013561104e565b84608001358210156117be576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016105dd565b6000806117ce6020880188612504565b73ffffffffffffffffffffffffffffffffffffffff16856117f260a08a018a612726565b604051611800929190612804565b60006040518083038185875af1925050503d806000811461183d576040519150601f19603f3d011682016040523d82523d6000602084013e611842565b606091505b50915091508161188d57600061185782611c21565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dd9190612814565b60006118a261172060808a0160608b01612504565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896118d360208b018b612504565b6118e360608c0160408d01612504565b6118f360808d0160608e01612504565b8c60800135898711611905578661190f565b61190f8a88612484565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b801580611a0d57506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156119e7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0b91906126f0565b155b611a99576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016105dd565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526108e59084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611c9f565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526108e59084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611aeb565b60405173ffffffffffffffffffffffffffffffffffffffff8085166024830152831660448201526064810182905261130d9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611aeb565b6060604482511015611c6657505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611c826004808551611c7a9190612484565b859190611dab565b905080806020019051810190611c989190612827565b9392505050565b6000611d01826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611ec59092919063ffffffff16565b8051909150156108e55780806020019051810190611d1f919061289e565b6108e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105dd565b606081611db981601f6128bb565b1015611df1576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611dfb82846128bb565b84511015611e35576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611e545760405191506000825260208201604052611ebc565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611e8d578051835260209283019201611e75565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6060611ed48484600085611edc565b949350505050565b606082471015611f6e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105dd565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611f9791906128ce565b60006040518083038185875af1925050503d8060008114611fd4576040519150601f19603f3d011682016040523d82523d6000602084013e611fd9565b606091505b5091509150611fea87838387611ff5565b979650505050505050565b6060831561208b5782516000036120845773ffffffffffffffffffffffffffffffffffffffff85163b612084576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105dd565b5081611ed4565b611ed483838151156120a05781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dd9190612814565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715612127576121276120d4565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612174576121746120d4565b604052919050565b600067ffffffffffffffff821115612196576121966120d4565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126121d357600080fd5b81356121e66121e18261217c565b61212d565b8181528460208386010111156121fb57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461223c57600080fd5b919050565b801515811461224f57600080fd5b50565b803561223c81612241565b6000610140828403121561227057600080fd5b612278612103565b905081358152602082013567ffffffffffffffff8082111561229957600080fd5b6122a5858386016121c2565b602084015260408401359150808211156122be57600080fd5b506122cb848285016121c2565b6040830152506122dd60608301612218565b60608201526122ee60808301612218565b60808201526122ff60a08301612218565b60a082015260c082013560c082015260e082013560e0820152610100612326818401612252565b90820152610120612338838201612252565b9082015292915050565b60006040828403121561235457600080fd5b50919050565b6000806000806080858703121561237057600080fd5b843567ffffffffffffffff8082111561238857600080fd5b6123948883890161225d565b955060208701359150808211156123aa57600080fd5b818701915087601f8301126123be57600080fd5b8135818111156123cd57600080fd5b8860208260051b85010111156123e257600080fd5b6020830195508094505050506123fb8660408701612342565b905092959194509250565b6000806060838503121561241957600080fd5b823567ffffffffffffffff81111561243057600080fd5b61243c8582860161225d565b92505061244c8460208501612342565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610b1d57610b1d612455565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126124fa57600080fd5b9190910192915050565b60006020828403121561251657600080fd5b611c9882612218565b60006020828403121561253157600080fd5b813567ffffffffffffffff81168114611c9857600080fd5b60006020828403121561255b57600080fd5b813563ffffffff81168114611c9857600080fd5b60005b8381101561258a578181015183820152602001612572565b50506000910152565b600081518084526125ab81602086016020860161256f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081528151602082015260006020830151610140806040850152612606610160850183612593565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526126418382612593565b925050606085015161266b608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206126de8187018315159052565b90950151151593019290925250919050565b60006020828403121561270257600080fd5b5051919050565b60006020828403121561271b57600080fd5b8135611c9881612241565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261275b57600080fd5b83018035915067ffffffffffffffff82111561277657600080fd5b60200191503681900382131561278b57600080fd5b9250929050565b600080858511156127a257600080fd5b838611156127af57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156127fc5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b602081526000611c986020830184612593565b60006020828403121561283957600080fd5b815167ffffffffffffffff81111561285057600080fd5b8201601f8101841361286157600080fd5b805161286f6121e18261217c565b81815285602083850101111561288457600080fd5b61289582602083016020860161256f565b95945050505050565b6000602082840312156128b057600080fd5b8151611c9881612241565b80820180821115610b1d57610b1d612455565b600082516124fa81846020870161256f56fea264697066735822122052c7be4550cf64030a7a0cb75a7ca964f63f71aa5fc48a70f6492a0005d486e864736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var CBridgeFacet__factory = /** @class */ (function (_super) {
    __extends(CBridgeFacet__factory, _super);
    function CBridgeFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    CBridgeFacet__factory.prototype.deploy = function (_cBridge, overrides) {
        return _super.prototype.deploy.call(this, _cBridge, overrides || {});
    };
    CBridgeFacet__factory.prototype.getDeployTransaction = function (_cBridge, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _cBridge, overrides || {});
    };
    CBridgeFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    CBridgeFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    CBridgeFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    CBridgeFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    CBridgeFacet__factory.bytecode = _bytecode;
    CBridgeFacet__factory.abi = _abi;
    return CBridgeFacet__factory;
}(ethers_1.ContractFactory));
exports.CBridgeFacet__factory = CBridgeFacet__factory;
