"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CBridgeFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_cBridge",
                type: "address",
                internalType: "contract ICBridge",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaCBridge",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_cBridgeData",
                type: "tuple",
                internalType: "struct CBridgeFacet.CBridgeData",
                components: [
                    {
                        name: "maxSlippage",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "nonce",
                        type: "uint64",
                        internalType: "uint64",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaCBridge",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_cBridgeData",
                type: "tuple",
                internalType: "struct CBridgeFacet.CBridgeData",
                components: [
                    {
                        name: "maxSlippage",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "nonce",
                        type: "uint64",
                        internalType: "uint64",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "triggerRefund",
        inputs: [
            {
                name: "_callTo",
                type: "address",
                internalType: "address payable",
            },
            {
                name: "_callData",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "_assetAddress",
                type: "address",
                internalType: "address",
            },
            {
                name: "_to",
                type: "address",
                internalType: "address",
            },
            {
                name: "_amount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "event",
        name: "CBridgeRefund",
        inputs: [
            {
                name: "_assetAddress",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "_to",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "ExternalCallFailed",
        inputs: [],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InsufficientBalance",
        inputs: [
            {
                name: "required",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "balance",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
    {
        type: "error",
        name: "UnAuthorized",
        inputs: [],
    },
];
var _bytecode = "0x60a060405234801561001057600080fd5b50604051620022323803806200223283398101604081905261003191610042565b6001600160a01b0316608052610072565b60006020828403121561005457600080fd5b81516001600160a01b038116811461006b57600080fd5b9392505050565b608051612190620000a26000396000818160e00152818161095001528181610a4f0152610a7a01526121906000f3fe6080604052600436106100345760003560e01c80630d19e51914610039578063482c6a851461005b578063ae0b91e51461006e575b600080fd5b34801561004557600080fd5b50610059610054366004611999565b610081565b005b610059610069366004611c5b565b610298565b61005961007c366004611d07565b6104ca565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff1633146100c7576100c76106ee565b8573ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff161461014c576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008673ffffffffffffffffffffffffffffffffffffffff168686604051610175929190611d56565b6000604051808303816000865af19150503d80600081146101b2576040519150601f19603f3d011682016040523d82523d6000602084013e6101b7565b606091505b505080915050806101f4576040517f350c20f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff841615610218578361021a565b335b905061022785828561078e565b8073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f9779662e766b5675e69e09303bc2f58ae30397b71b8021ab947defd27747b95f8560405161028691815260200190565b60405180910390a35050505050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610313576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006103243447611d66565b905086806101000151610363576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101200151156103a1576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886103c48160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103fb576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610439576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610476576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61048b8a600001518b60c001518b8b336107c3565b60c08b015261049a8a8861090b565b5047915050818111156104bc576104bc6000846104b78585611d66565b61078e565b505060009091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610545576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006105563447611d66565b90508480610100015115610596576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101200151156105d4576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866105f78160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561062e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361066c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036106a9576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106bb88608001518960c00151610bd5565b6106c5888861090b565b5047915050818111156106e2576106e26000846104b78585611d66565b50506000909155505050565b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fdf05114fe8fad5d7cd2d71c5651effc2a4c21f13ee8b4a462e2a3bd4e140c73e6020818152604080842033855290915290912054600160ff90911615151461078b576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b73ffffffffffffffffffffffffffffffffffffffff83166107b8576107b38282610c8a565b505050565b6107b3838383610cf7565b6000828082036107ff576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000858561080e600185611d66565b81811061081d5761081d611da0565b905060200281019061082f9190611dcf565b610840906080810190606001611e0d565b9050600061084d82610d65565b905073ffffffffffffffffffffffffffffffffffffffff8216610877576108743482611d66565b90505b60006108838888610db0565b905061088f8888610ebc565b61089c8a89898985610f29565b6000826108a885610d65565b6108b29190611d66565b9050898110156108fd576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b608082015173ffffffffffffffffffffffffffffffffffffffff16610a455760c082015160a083015160e084015173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001692633f2e5fc3929091829061098b6040880160208901611e31565b6109986020890189611e5b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b16815273ffffffffffffffffffffffffffffffffffffffff9095166004860152602485019390935267ffffffffffffffff918216604485015216606483015263ffffffff16608482015260a4016000604051808303818588803b158015610a2757600080fd5b505af1158015610a3b573d6000803e3d6000fd5b5050505050610b9a565b610a7882608001517f00000000000000000000000000000000000000000000000000000000000000008460c001516112db565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a5977fbb8360a0015184608001518560c001518660e00151866020016020810190610adb9190611e31565b610ae86020890189611e5b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b16815273ffffffffffffffffffffffffffffffffffffffff9687166004820152959094166024860152604485019290925267ffffffffffffffff908116606485015216608483015263ffffffff1660a482015260c401600060405180830381600087803b158015610b8157600080fd5b505af1158015610b95573d6000803e3d6000fd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f182604051610bc99190611ee5565b60405180910390a15050565b80600003610c0f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610c685780341015610c64576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610c6473ffffffffffffffffffffffffffffffffffffffff8316333084611307565b73ffffffffffffffffffffffffffffffffffffffff8216610cd7576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c6473ffffffffffffffffffffffffffffffffffffffff831682611364565b73ffffffffffffffffffffffffffffffffffffffff8216610d44576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107b373ffffffffffffffffffffffffffffffffffffffff84168383611380565b600073ffffffffffffffffffffffffffffffffffffffff821615610da857610da373ffffffffffffffffffffffffffffffffffffffff8316306113cf565b610daa565b475b92915050565b60608160008167ffffffffffffffff811115610dce57610dce611a4a565b604051908082528060200260200182016040528015610df7578160200160208202803683370190505b5090506000805b83811015610eb157868682818110610e1857610e18611da0565b9050602002810190610e2a9190611dcf565b610e3b906080810190606001611e0d565b9150610e4682610d65565b838281518110610e5857610e58611da0565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610ea95734838281518110610e9157610e91611da0565b60200260200101818151610ea59190611d66565b9052505b600101610dfe565b509095945050505050565b60005b818110156107b35736838383818110610eda57610eda611da0565b9050602002810190610eec9190611dcf565b9050610efe60e0820160c08301611ff8565b15610f2057610f20610f166060830160408401611e0d565b8260800135610bd5565b50600101610ebf565b8383838382600181146111f65760008585610f45600185611d66565b818110610f5457610f54611da0565b9050602002810190610f669190611dcf565b610f77906080810190606001611e0d565b9050600089815b8181101561112257368d8d83818110610f9957610f99611da0565b9050602002810190610fab9190611dcf565b9050610fda610fc06060830160408401611e0d565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061103d575061103d610ff36040830160208401611e0d565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156110545750611054610ff36020830183611e0d565b80156110d957506110d961106b60a0830183612013565b61107a9160049160009161207f565b611083916120a9565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61110f576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111198f82611404565b50600101610f7e565b505060005b611132600185611d66565b8110156111ee57600088888381811061114d5761114d611da0565b905060200281019061115f9190611dcf565b611170906080810190606001611e0d565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146111e5578582815181106111b7576111b7611da0565b60200260200101516111c882610d65565b6111d29190611d66565b925082156111e5576111e581888561078e565b50600101611127565b5050506112cf565b8760005b818110156112cc57368b8b8381811061121557611215611da0565b90506020028101906112279190611dcf565b905061123c610fc06060830160408401611e0d565b806112555750611255610ff36040830160208401611e0d565b801561126c575061126c610ff36020830183611e0d565b8015611283575061128361106b60a0830183612013565b6112b9576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112c38d82611404565b506001016111fa565b50505b50505050505050505050565b6107b38383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6116e1565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d15600160005114171661135657637939f4246000526004601cfd5b600060605260405250505050565b60003860003884865af1610c645763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d1560016000511417166113c5576390b8ec186000526004601cfd5b6000603452505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b6114196114146020830183611e0d565b6117f4565b61144f576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080810135600081900361148f576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006114a4610fc06060850160408601611e0d565b6114af5760006114b5565b82608001355b905060006114d16114cc6060860160408701611e0d565b610d65565b905060006114e86114cc6080870160608801611e0d565b90508260000361151f5761151f6115056060870160408801611e0d565b6115156040880160208901611e0d565b87608001356112db565b846080013582101561156a576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016108f4565b60008061157a6020880188611e0d565b73ffffffffffffffffffffffffffffffffffffffff168561159e60a08a018a612013565b6040516115ac929190611d56565b60006040518083038185875af1925050503d80600081146115e9576040519150601f19603f3d011682016040523d82523d6000602084013e6115ee565b606091505b50915091508161160157611601816118d3565b60006116166114cc60808a0160608b01611e0d565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961164760208b018b611e0d565b61165760608c0160408d01611e0d565b61166760808d0160608e01611e0d565b8c608001358987116116795786611683565b6116838a88611d66565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661172e576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa1580156117a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c791906120f1565b10156117ee576117ee73ffffffffffffffffffffffffffffffffffffffff851684836118dd565b50505050565b604080516003808252818301909252600091829182917fef0100000000000000000000000000000000000000000000000000000000000091839160208201818036833701905050863b945090507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4706003600060208401893c863f9350600061187b8361210a565b90507fffffff0000000000000000000000000000000000000000000000000000000000808516908216036118b757506001979650505050505050565b6000861180156118c75750818514155b98975050505050505050565b8051602082018181fd5b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d1560016000511417166113c55760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d1560016000511417166113c557633e3f8f736000526004601cfd5b73ffffffffffffffffffffffffffffffffffffffff8116811461078b57600080fd5b803561199481611967565b919050565b60008060008060008060a087890312156119b257600080fd5b86356119bd81611967565b9550602087013567ffffffffffffffff808211156119da57600080fd5b818901915089601f8301126119ee57600080fd5b8135818111156119fd57600080fd5b8a6020828501011115611a0f57600080fd5b6020830197508096505050506040870135611a2981611967565b9250611a3760608801611989565b9150608087013590509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611a9d57611a9d611a4a565b60405290565b600082601f830112611ab457600080fd5b813567ffffffffffffffff80821115611acf57611acf611a4a565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611b1557611b15611a4a565b81604052838152866020858801011115611b2e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b8035801515811461199457600080fd5b60006101408284031215611b7157600080fd5b611b79611a79565b905081358152602082013567ffffffffffffffff80821115611b9a57600080fd5b611ba685838601611aa3565b60208401526040840135915080821115611bbf57600080fd5b50611bcc84828501611aa3565b604083015250611bde60608301611989565b6060820152611bef60808301611989565b6080820152611c0060a08301611989565b60a082015260c082013560c082015260e082013560e0820152610100611c27818401611b4e565b90820152610120611c39838201611b4e565b9082015292915050565b600060408284031215611c5557600080fd5b50919050565b60008060008060808587031215611c7157600080fd5b843567ffffffffffffffff80821115611c8957600080fd5b611c9588838901611b5e565b95506020870135915080821115611cab57600080fd5b818701915087601f830112611cbf57600080fd5b813581811115611cce57600080fd5b8860208260051b8501011115611ce357600080fd5b602083019550809450505050611cfc8660408701611c43565b905092959194509250565b60008060608385031215611d1a57600080fd5b823567ffffffffffffffff811115611d3157600080fd5b611d3d85828601611b5e565b925050611d4d8460208501611c43565b90509250929050565b8183823760009101908152919050565b81810381811115610daa577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611e0357600080fd5b9190910192915050565b600060208284031215611e1f57600080fd5b8135611e2a81611967565b9392505050565b600060208284031215611e4357600080fd5b813567ffffffffffffffff81168114611e2a57600080fd5b600060208284031215611e6d57600080fd5b813563ffffffff81168114611e2a57600080fd5b6000815180845260005b81811015611ea757602081850181015186830182015201611e8b565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081528151602082015260006020830151610140806040850152611f0e610160850183611e81565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152611f498382611e81565b9250506060850151611f73608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120611fe68187018315159052565b90950151151593019290925250919050565b60006020828403121561200a57600080fd5b611e2a82611b4e565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261204857600080fd5b83018035915067ffffffffffffffff82111561206357600080fd5b60200191503681900382131561207857600080fd5b9250929050565b6000808585111561208f57600080fd5b8386111561209c57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156120e95780818660040360031b1b83161692505b505092915050565b60006020828403121561210357600080fd5b5051919050565b6000815160208301517fffffff0000000000000000000000000000000000000000000000000000000000808216935060038310156121525780818460030360031b1b83161693505b50505091905056fea264697066735822122048b19cc327bf02f87ad551a53821b664e62835123a741b38e8f6775d6c6f055664736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var CBridgeFacet__factory = /** @class */ (function (_super) {
    __extends(CBridgeFacet__factory, _super);
    function CBridgeFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    CBridgeFacet__factory.prototype.deploy = function (_cBridge, overrides) {
        return _super.prototype.deploy.call(this, _cBridge, overrides || {});
    };
    CBridgeFacet__factory.prototype.getDeployTransaction = function (_cBridge, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _cBridge, overrides || {});
    };
    CBridgeFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    CBridgeFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    CBridgeFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    CBridgeFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    CBridgeFacet__factory.bytecode = _bytecode;
    CBridgeFacet__factory.abi = _abi;
    return CBridgeFacet__factory;
}(ethers_1.ContractFactory));
exports.CBridgeFacet__factory = CBridgeFacet__factory;
