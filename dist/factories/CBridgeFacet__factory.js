"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CBridgeFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_cBridge",
                type: "address",
                internalType: "contract ICBridge",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "startBridgeTokensViaCBridge",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_cBridgeData",
                type: "tuple",
                internalType: "struct CBridgeFacet.CBridgeData",
                components: [
                    {
                        name: "maxSlippage",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "nonce",
                        type: "uint64",
                        internalType: "uint64",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaCBridge",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_cBridgeData",
                type: "tuple",
                internalType: "struct CBridgeFacet.CBridgeData",
                components: [
                    {
                        name: "maxSlippage",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "nonce",
                        type: "uint64",
                        internalType: "uint64",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "triggerRefund",
        inputs: [
            {
                name: "_callTo",
                type: "address",
                internalType: "address payable",
            },
            {
                name: "_callData",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "_assetAddress",
                type: "address",
                internalType: "address",
            },
            {
                name: "_to",
                type: "address",
                internalType: "address",
            },
            {
                name: "_amount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "event",
        name: "AssetSwapped",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
            {
                name: "dex",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "CBridgeRefund",
        inputs: [
            {
                name: "_assetAddress",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "_to",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "ExternalCallFailed",
        inputs: [],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InsufficientBalance",
        inputs: [
            {
                name: "required",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "balance",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NativeAssetTransferFailed",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NoTransferToNullAddress",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAnERC20Token",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
    {
        type: "error",
        name: "UnAuthorized",
        inputs: [],
    },
];
var _bytecode = "0x60a060405234801562000010575f80fd5b5060405162002a4938038062002a49833981016040819052620000339162000045565b6001600160a01b031660805262000074565b5f6020828403121562000056575f80fd5b81516001600160a01b03811681146200006d575f80fd5b9392505050565b6080516129a8620000a15f395f818160dd0152818161093901528181610a340152610a5f01526129a85ff3fe608060405260043610610033575f3560e01c80630d19e51914610037578063482c6a8514610058578063ae0b91e51461006b575b5f80fd5b348015610042575f80fd5b506100566100513660046121ec565b61007e565b005b6100566100663660046124a2565b61028f565b610056610079366004612546565b6104bc565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff1633146100c4576100c46106dc565b8573ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610149576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8673ffffffffffffffffffffffffffffffffffffffff168686604051610171929190612592565b5f604051808303815f865af19150503d805f81146101aa576040519150601f19603f3d011682016040523d82523d5f602084013e6101af565b606091505b505080915050806101ec576040517f350c20f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff84161561020f5783610211565b335b905061021e85828561077b565b8073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f9779662e766b5675e69e09303bc2f58ae30397b71b8021ab947defd27747b95f8560405161027d91815260200190565b60405180910390a35050505050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161030a576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f61031a34476125a1565b905086806101000151610359576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8780610120015115610397576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886103ba8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103f1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f0361042e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361046b576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61047f8a5f01518b60c001518b8b336107b1565b60c08b015261048e8a886108f4565b5047915050818111156104af576104af5f846104aa85856125a1565b61077b565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610537576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f61054734476125a1565b90508480610100015115610587576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101200151156105c5576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866105e88160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561061f576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f0361065c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610699576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106ab88608001518960c00151610bb5565b6106b588886108f4565b5047915050818111156106d1576106d15f846104aa85856125a1565b50505f909155505050565b5f80357fffffffff000000000000000000000000000000000000000000000000000000001681527fdf05114fe8fad5d7cd2d71c5651effc2a4c21f13ee8b4a462e2a3bd4e140c73e6020818152604080842033855290915290912054600160ff909116151514610778576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b73ffffffffffffffffffffffffffffffffffffffff8316156107a7576107a2838383610d27565b505050565b6107a28282610ea6565b5f828082036107ec576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f85856107fa6001856125a1565b818110610809576108096125d9565b905060200281019061081b9190612606565b61082c906080810190606001612642565b90505f61083882610fcc565b905073ffffffffffffffffffffffffffffffffffffffff82166108625761085f34826125a1565b90505b5f61086d8888611082565b9050610879888861118c565b6108868a898989856111f8565b5f8261089185610fcc565b61089b91906125a1565b9050898110156108e6576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b608082015173ffffffffffffffffffffffffffffffffffffffff16610a2a5760c082015160a083015160e084015173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001692633f2e5fc392909182906109746040880160208901612664565b610981602089018961268b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b16815273ffffffffffffffffffffffffffffffffffffffff9095166004860152602485019390935267ffffffffffffffff918216604485015216606483015263ffffffff16608482015260a4015f604051808303818588803b158015610a0e575f80fd5b505af1158015610a20573d5f803e3d5ffd5b5050505050610b7a565b610a5d82608001517f00000000000000000000000000000000000000000000000000000000000000008460c001516115a2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a5977fbb8360a0015184608001518560c001518660e00151866020016020810190610ac09190612664565b610acd602089018961268b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b16815273ffffffffffffffffffffffffffffffffffffffff9687166004820152959094166024860152604485019290925267ffffffffffffffff908116606485015216608483015263ffffffff1660a482015260c4015f604051808303815f87803b158015610b63575f80fd5b505af1158015610b75573d5f803e3d5ffd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f182604051610ba99190612719565b60405180910390a15050565b805f03610bee576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610c475780341015610c43576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201525f9073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610cb1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cd5919061282b565b905081811015610d1b576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016108dd565b6107a2833330856116d7565b73ffffffffffffffffffffffffffffffffffffffff8316610d74576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610dc1576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201525f9073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610e2b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e4f919061282b565b905080821115610e95576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016108dd565b610ea08484846118ec565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610ef3576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115610f36576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016108dd565b5f8273ffffffffffffffffffffffffffffffffffffffff16826040515f6040518083038185875af1925050503d805f8114610f8c576040519150601f19603f3d011682016040523d82523d5f602084013e610f91565b606091505b50509050806107a2576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff82161561107a576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611051573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611075919061282b565b61107c565b475b92915050565b6060815f8167ffffffffffffffff81111561109f5761109f612295565b6040519080825280602002602001820160405280156110c8578160200160208202803683370190505b5090505f805b83811015611181578686828181106110e8576110e86125d9565b90506020028101906110fa9190612606565b61110b906080810190606001612642565b915061111682610fcc565b838281518110611128576111286125d9565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff82166111795734838281518110611161576111616125d9565b6020026020010181815161117591906125a1565b9052505b6001016110ce565b509095945050505050565b5f5b818110156107a257368383838181106111a9576111a96125d9565b90506020028101906111bb9190612606565b90506111cd60e0820160c08301612842565b156111ef576111ef6111e56060830160408401612642565b8260800135610bb5565b5060010161118e565b8383838382600181146114be575f85856112136001856125a1565b818110611222576112226125d9565b90506020028101906112349190612606565b611245906080810190606001612642565b90505f89815b818110156113ec57368d8d83818110611266576112666125d9565b90506020028101906112789190612606565b90506112a761128d6060830160408401612642565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061130957506113096112c06040830160208401612642565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561132057506113206112c06020830183612642565b80156113a357506113a361133760a083018361285d565b611345916004915f916128c5565b61134e916128ec565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6113d9576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113e38f826119c0565b5060010161124b565b50505f5b6113fb6001856125a1565b8110156114b6575f888883818110611415576114156125d9565b90506020028101906114279190612606565b611438906080810190606001612642565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114ad5785828151811061147f5761147f6125d9565b602002602001015161149082610fcc565b61149a91906125a1565b925082156114ad576114ad81888561077b565b506001016113f0565b505050611596565b875f5b8181101561159357368b8b838181106114dc576114dc6125d9565b90506020028101906114ee9190612606565b905061150361128d6060830160408401612642565b8061151c575061151c6112c06040830160208401612642565b801561153357506115336112c06020830183612642565b801561154a575061154a61133760a083018361285d565b611580576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61158a8d826119c0565b506001016114c1565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166115c257505050565b73ffffffffffffffffffffffffffffffffffffffff821661160f576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015611682573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116a6919061282b565b10156107a2576107a283837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611c93565b73ffffffffffffffffffffffffffffffffffffffff8416611724576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611771576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285915f918316906370a0823190602401602060405180830381865afa1580156117df573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611803919061282b565b905061181182868686611d82565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa15801561187f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118a3919061282b565b6118ad91906125a1565b146118e4576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526107a29084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611de0565b6119d66119d06020830183612642565b3b151590565b611a0c576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003611a4b576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f611a5f61128d6060850160408601612642565b611a69575f611a6f565b82608001355b90505f611a8a611a856060860160408701612642565b610fcc565b90505f611aa0611a856080870160608801612642565b9050825f03611ad657611ad6611abc6060870160408801612642565b611acc6040880160208901612642565b87608001356115a2565b8460800135821015611b21576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016108dd565b5f80611b306020880188612642565b73ffffffffffffffffffffffffffffffffffffffff1685611b5460a08a018a61285d565b604051611b62929190612592565b5f6040518083038185875af1925050503d805f8114611b9c576040519150601f19603f3d011682016040523d82523d5f602084013e611ba1565b606091505b509150915081611bb457611bb481611eed565b5f611bc8611a8560808a0160608b01612642565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611bf960208b018b612642565b611c0960608c0160408d01612642565b611c1960808d0160608e01612642565b8c60800135898711611c2b5786611c35565b611c358a886125a1565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052611d1f8482611ef7565b610ea05760405173ffffffffffffffffffffffffffffffffffffffff841660248201525f6044820152611d789085907f095ea7b3000000000000000000000000000000000000000000000000000000009060640161193e565b610ea08482611de0565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610ea09085907f23b872dd000000000000000000000000000000000000000000000000000000009060840161193e565b5f611e41826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611fb29092919063ffffffff16565b905080515f1480611e61575080806020019051810190611e619190612934565b6107a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016108dd565b8051602082018181fd5b5f805f8473ffffffffffffffffffffffffffffffffffffffff1684604051611f1f919061294f565b5f604051808303815f865af19150503d805f8114611f58576040519150601f19603f3d011682016040523d82523d5f602084013e611f5d565b606091505b5091509150818015611f87575080511580611f87575080806020019051810190611f879190612934565b8015611fa9575073ffffffffffffffffffffffffffffffffffffffff85163b15155b95945050505050565b6060611fc084845f85611fc8565b949350505050565b60608247101561205a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016108dd565b5f808673ffffffffffffffffffffffffffffffffffffffff168587604051612082919061294f565b5f6040518083038185875af1925050503d805f81146120bc576040519150601f19603f3d011682016040523d82523d5f602084013e6120c1565b606091505b50915091506120d2878383876120dd565b979650505050505050565b606083156121725782515f0361216b5773ffffffffffffffffffffffffffffffffffffffff85163b61216b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108dd565b5081611fc0565b611fc083838151156121875781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd9190612960565b73ffffffffffffffffffffffffffffffffffffffff81168114610778575f80fd5b80356121e7816121bb565b919050565b5f805f805f8060a08789031215612201575f80fd5b863561220c816121bb565b9550602087013567ffffffffffffffff80821115612228575f80fd5b818901915089601f83011261223b575f80fd5b813581811115612249575f80fd5b8a602082850101111561225a575f80fd5b6020830197508096505050506040870135612274816121bb565b9250612282606088016121dc565b9150608087013590509295509295509295565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff811182821017156122e6576122e6612295565b60405290565b5f82601f8301126122fb575f80fd5b813567ffffffffffffffff8082111561231657612316612295565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561235c5761235c612295565b81604052838152866020858801011115612374575f80fd5b836020870160208301375f602085830101528094505050505092915050565b8015158114610778575f80fd5b80356121e781612393565b5f61014082840312156123bc575f80fd5b6123c46122c2565b905081358152602082013567ffffffffffffffff808211156123e4575f80fd5b6123f0858386016122ec565b60208401526040840135915080821115612408575f80fd5b50612415848285016122ec565b604083015250612427606083016121dc565b6060820152612438608083016121dc565b608082015261244960a083016121dc565b60a082015260c082013560c082015260e082013560e08201526101006124708184016123a0565b908201526101206124828382016123a0565b9082015292915050565b5f6040828403121561249c575f80fd5b50919050565b5f805f80608085870312156124b5575f80fd5b843567ffffffffffffffff808211156124cc575f80fd5b6124d8888389016123ab565b955060208701359150808211156124ed575f80fd5b818701915087601f830112612500575f80fd5b81358181111561250e575f80fd5b8860208260051b8501011115612522575f80fd5b60208301955080945050505061253b866040870161248c565b905092959194509250565b5f8060608385031215612557575f80fd5b823567ffffffffffffffff81111561256d575f80fd5b612579858286016123ab565b925050612589846020850161248c565b90509250929050565b818382375f9101908152919050565b8181038181111561107c577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612638575f80fd5b9190910192915050565b5f60208284031215612652575f80fd5b813561265d816121bb565b9392505050565b5f60208284031215612674575f80fd5b813567ffffffffffffffff8116811461265d575f80fd5b5f6020828403121561269b575f80fd5b813563ffffffff8116811461265d575f80fd5b5f5b838110156126c85781810151838201526020016126b0565b50505f910152565b5f81518084526126e78160208601602086016126ae565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152815160208201525f60208301516101408060408501526127416101608501836126d0565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe085840301606086015261277c83826126d0565b92505060608501516127a6608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206128198187018315159052565b90950151151593019290925250919050565b5f6020828403121561283b575f80fd5b5051919050565b5f60208284031215612852575f80fd5b813561265d81612393565b5f8083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612890575f80fd5b83018035915067ffffffffffffffff8211156128aa575f80fd5b6020019150368190038213156128be575f80fd5b9250929050565b5f80858511156128d3575f80fd5b838611156128df575f80fd5b5050820193919092039150565b7fffffffff00000000000000000000000000000000000000000000000000000000813581811691600485101561292c5780818660040360031b1b83161692505b505092915050565b5f60208284031215612944575f80fd5b815161265d81612393565b5f82516126388184602087016126ae565b602081525f61265d60208301846126d056fea2646970667358221220ba671aa5930b79b03236eceef534861fe0ef4da5da40525de711cda3f08ecb1464736f6c63430008160033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var CBridgeFacet__factory = /** @class */ (function (_super) {
    __extends(CBridgeFacet__factory, _super);
    function CBridgeFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    CBridgeFacet__factory.prototype.deploy = function (_cBridge, overrides) {
        return _super.prototype.deploy.call(this, _cBridge, overrides || {});
    };
    CBridgeFacet__factory.prototype.getDeployTransaction = function (_cBridge, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _cBridge, overrides || {});
    };
    CBridgeFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    CBridgeFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    CBridgeFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    CBridgeFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    CBridgeFacet__factory.bytecode = _bytecode;
    CBridgeFacet__factory.abi = _abi;
    return CBridgeFacet__factory;
}(ethers_1.ContractFactory));
exports.CBridgeFacet__factory = CBridgeFacet__factory;
