"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CBridgeFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "contract ICBridge",
                name: "_cBridge",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "CannotBridgeToSameNetwork",
        type: "error",
    },
    {
        inputs: [],
        name: "ContractCallNotAllowed",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "receivedAmount",
                type: "uint256",
            },
        ],
        name: "CumulativeSlippageTooHigh",
        type: "error",
    },
    {
        inputs: [],
        name: "InformationMismatch",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "required",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
        ],
        name: "InsufficientBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidAmount",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidContract",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidReceiver",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeAssetTransferFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapDataProvided",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapFromZeroBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "NoTransferToNullAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAValidSpender",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAnERC20Token",
        type: "error",
    },
    {
        inputs: [],
        name: "ReentrancyError",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOverflow",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferCompleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferRecovered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                name: "bridgeData",
                type: "tuple",
            },
        ],
        name: "LiFiTransferStarted",
        type: "event",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint32",
                        name: "maxSlippage",
                        type: "uint32",
                    },
                    {
                        internalType: "uint64",
                        name: "nonce",
                        type: "uint64",
                    },
                ],
                internalType: "struct CBridgeFacet.CBridgeData",
                name: "_cBridgeData",
                type: "tuple",
            },
        ],
        name: "startBridgeTokensViaCBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "_swapData",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "uint32",
                        name: "maxSlippage",
                        type: "uint32",
                    },
                    {
                        internalType: "uint64",
                        name: "nonce",
                        type: "uint64",
                    },
                ],
                internalType: "struct CBridgeFacet.CBridgeData",
                name: "_cBridgeData",
                type: "tuple",
            },
        ],
        name: "swapAndStartBridgeTokensViaCBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
var _bytecode = "0x60a06040523480156200001157600080fd5b50604051620029e3380380620029e3833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b608051612941620000a26000396000818161071901528181610786015261084101526129416000f3fe6080604052600436106100295760003560e01c8063482c6a851461002e578063ae0b91e514610043575b600080fd5b61004161003c366004612308565b610056565b005b6100416100513660046123b4565b610299565b336000610063344761245b565b9050858061010001516100a2576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86806101200151156100e0576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101038160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561013a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610178576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101b5576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610230576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155895160c08b015161024891908b8b336104e4565b60c08b01526102578a8861062c565b60009081905547935091505082821161027157600061027b565b61027b838361245b565b9050801561028f5761028f600085836108db565b5050505050505050565b3360006102a6344761245b565b905083806101000151156102e6576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8480610120015115610324576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856103478160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561037e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036103bc576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036103f9576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610474576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155608088015160c089015161048c9190610911565b6104a48861049f368a90038a018a61246e565b61062c565b6000908190554793509150508282116104be5760006104c8565b6104c8838361245b565b905080156104dc576104dc600085836108db565b505050505050565b600082808203610520576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000858561052f60018561245b565b81811061053e5761053e61248a565b905060200281019061055091906124b9565b6105619060808101906060016124f7565b9050600061056e82610a87565b905073ffffffffffffffffffffffffffffffffffffffff821661059857610595348261245b565b90505b60006105a48888610b40565b90506105b08888610c4c565b6105bd8a89898985610cad565b6000826105c985610a87565b6105d3919061245b565b90508981101561061e576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b8160e001514667ffffffffffffffff1603610673576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608082015173ffffffffffffffffffffffffffffffffffffffff1661077c5760c082015160a083015160e0840151602084015184516040517f3f2e5fc300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff94851660048201526024810186905267ffffffffffffffff938416604482015292909116606483015263ffffffff1660848201527f000000000000000000000000000000000000000000000000000000000000000090911691633f2e5fc39160a4016000604051808303818588803b15801561075e57600080fd5b505af1158015610772573d6000803e3d6000fd5b50505050506108a0565b6107af82608001517f00000000000000000000000000000000000000000000000000000000000000008460c0015161105f565b60a0820151608083015160c084015160e0850151602085015185516040517fa5977fbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff96871660048201529486166024860152604485019390935267ffffffffffffffff918216606485015216608483015263ffffffff1660a48201527f00000000000000000000000000000000000000000000000000000000000000009091169063a5977fbb9060c401600060405180830381600087803b15801561088757600080fd5b505af115801561089b573d6000803e3d6000fd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1826040516108cf9190612580565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff831615610907576109028383836111aa565b505050565b61090282826112d9565b73ffffffffffffffffffffffffffffffffffffffff821661096a5780341015610966576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b806000036109a4576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610a11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a359190612693565b905081811015610a7b576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610615565b61090283333085611403565b600073ffffffffffffffffffffffffffffffffffffffff821615610b38576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610b0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b339190612693565b610b3a565b475b92915050565b60608160008167ffffffffffffffff811115610b5e57610b5e611fff565b604051908082528060200260200182016040528015610b87578160200160208202803683370190505b5090506000805b83811015610c4157868682818110610ba857610ba861248a565b9050602002810190610bba91906124b9565b610bcb9060808101906060016124f7565b9150610bd682610a87565b838281518110610be857610be861248a565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610c395734838281518110610c2157610c2161248a565b60200260200101818151610c35919061245b565b9052505b600101610b8e565b509095945050505050565b60005b81811015610902576000838383818110610c6b57610c6b61248a565b9050602002810190610c7d91906124b9565b610c86906126ac565b90508060c0015115610ca457610ca481604001518260800151610911565b50600101610c4f565b838383838260018114610f7a5760008585610cc960018561245b565b818110610cd857610cd861248a565b9050602002810190610cea91906124b9565b610cfb9060808101906060016124f7565b9050600089815b81811015610ea657368d8d83818110610d1d57610d1d61248a565b9050602002810190610d2f91906124b9565b9050610d5e610d4460608301604084016124f7565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610dc15750610dc1610d7760408301602084016124f7565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610dd85750610dd8610d7760208301836124f7565b8015610e5d5750610e5d610def60a0830183612751565b610dfe916004916000916127bd565b610e07916127e7565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610e93576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e9d8f82611615565b50600101610d02565b505060005b610eb660018561245b565b811015610f72576000888883818110610ed157610ed161248a565b9050602002810190610ee391906124b9565b610ef49060808101906060016124f7565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f6957858281518110610f3b57610f3b61248a565b6020026020010151610f4c82610a87565b610f56919061245b565b92508215610f6957610f698188856108db565b50600101610eab565b505050611053565b8760005b8181101561105057368b8b83818110610f9957610f9961248a565b9050602002810190610fab91906124b9565b9050610fc0610d4460608301604084016124f7565b80610fd95750610fd9610d7760408301602084016124f7565b8015610ff05750610ff0610d7760208301836124f7565b80156110075750611007610def60a0830183612751565b61103d576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110478d82611615565b50600101610f7e565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661107f57505050565b73ffffffffffffffffffffffffffffffffffffffff82166110cc576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015611142573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111669190612693565b9050818110156111a4576111a4848461119f847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61245b565b61192b565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166111f7576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611264573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112889190612693565b9050808211156112ce576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610615565b6111a4848484611aa7565b73ffffffffffffffffffffffffffffffffffffffff8216611326576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611369576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610615565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146113c3576040519150601f19603f3d011682016040523d82523d6000602084013e6113c8565b606091505b5050905080610902576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416611450576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661149d576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa15801561150e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115329190612693565b905061154082868686611afd565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa1580156115b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d49190612693565b6115de919061245b565b146104dc576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61162b61162560208301836124f7565b3b151590565b611661576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036116a1576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006116b6610d4460608501604086016124f7565b6116c15760006116c7565b82608001355b905060006116e36116de60608601604087016124f7565b610a87565b905060006116fa6116de60808701606088016124f7565b9050826000036117315761173161171760608701604088016124f7565b61172760408801602089016124f7565b876080013561105f565b846080013582101561177c576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610615565b60008061178c60208801886124f7565b73ffffffffffffffffffffffffffffffffffffffff16856117b060a08a018a612751565b6040516117be92919061282f565b60006040518083038185875af1925050503d80600081146117fb576040519150601f19603f3d011682016040523d82523d6000602084013e611800565b606091505b50915091508161184b57600061181582611b5b565b9050806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610615919061283f565b60006118606116de60808a0160608b016124f7565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961189160208b018b6124f7565b6118a160608c0160408d016124f7565b6118b160808d0160608e016124f7565b8c608001358987116118c357866118cd565b6118cd8a8861245b565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156119a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c69190612693565b6119d09190612852565b60405173ffffffffffffffffffffffffffffffffffffffff85166024820152604481018290529091506111a49085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611bd9565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526109029084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611a25565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526111a49085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611a25565b6060604482511015611ba057505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611bbc6004808551611bb4919061245b565b859190611ce5565b905080806020019051810190611bd29190612865565b9392505050565b6000611c3b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611dff9092919063ffffffff16565b8051909150156109025780806020019051810190611c5991906128dc565b610902576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610615565b606081611cf381601f612852565b1015611d2b576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d358284612852565b84511015611d6f576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611d8e5760405191506000825260208201604052611df6565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611dc7578051835260209283019201611daf565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6060611e0e8484600085611e16565b949350505050565b606082471015611ea8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610615565b73ffffffffffffffffffffffffffffffffffffffff85163b611f26576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610615565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611f4f91906128f9565b60006040518083038185875af1925050503d8060008114611f8c576040519150601f19603f3d011682016040523d82523d6000602084013e611f91565b606091505b5091509150611fa1828286611fac565b979650505050505050565b60608315611fbb575081611bd2565b825115611fcb5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610615919061283f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561205257612052611fff565b60405290565b60405160e0810167ffffffffffffffff8111828210171561205257612052611fff565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156120c2576120c2611fff565b604052919050565b600067ffffffffffffffff8211156120e4576120e4611fff565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261212157600080fd5b813561213461212f826120ca565b61207b565b81815284602083860101111561214957600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461218a57600080fd5b919050565b801515811461219d57600080fd5b50565b803561218a8161218f565b600061014082840312156121be57600080fd5b6121c661202e565b905081358152602082013567ffffffffffffffff808211156121e757600080fd5b6121f385838601612110565b6020840152604084013591508082111561220c57600080fd5b5061221984828501612110565b60408301525061222b60608301612166565b606082015261223c60808301612166565b608082015261224d60a08301612166565b60a082015260c082013560c082015260e082013560e08201526101006122748184016121a0565b908201526101206122868382016121a0565b9082015292915050565b6000604082840312156122a257600080fd5b6040516040810167ffffffffffffffff82821081831117156122c6576122c6611fff565b816040528293508435915063ffffffff821682146122e357600080fd5b90825260208401359080821682146122fa57600080fd5b506020919091015292915050565b6000806000806080858703121561231e57600080fd5b843567ffffffffffffffff8082111561233657600080fd5b612342888389016121ab565b9550602087013591508082111561235857600080fd5b818701915087601f83011261236c57600080fd5b81358181111561237b57600080fd5b8860208260051b850101111561239057600080fd5b6020830195508094505050506123a98660408701612290565b905092959194509250565b60008082840360608112156123c857600080fd5b833567ffffffffffffffff8111156123df57600080fd5b6123eb868287016121ab565b93505060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561241e57600080fd5b506020830190509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610b3a57610b3a61242c565b60006040828403121561248057600080fd5b611bd28383612290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126124ed57600080fd5b9190910192915050565b60006020828403121561250957600080fd5b611bd282612166565b60005b8381101561252d578181015183820152602001612515565b50506000910152565b6000815180845261254e816020860160208601612512565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815281516020820152600060208301516101408060408501526125a9610160850183612536565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526125e48382612536565b925050606085015161260e608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206126818187018315159052565b90950151151593019290925250919050565b6000602082840312156126a557600080fd5b5051919050565b600060e082360312156126be57600080fd5b6126c6612058565b6126cf83612166565b81526126dd60208401612166565b60208201526126ee60408401612166565b60408201526126ff60608401612166565b60608201526080830135608082015260a083013567ffffffffffffffff81111561272857600080fd5b61273436828601612110565b60a08301525061274660c084016121a0565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261278657600080fd5b83018035915067ffffffffffffffff8211156127a157600080fd5b6020019150368190038213156127b657600080fd5b9250929050565b600080858511156127cd57600080fd5b838611156127da57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156128275780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b602081526000611bd26020830184612536565b80820180821115610b3a57610b3a61242c565b60006020828403121561287757600080fd5b815167ffffffffffffffff81111561288e57600080fd5b8201601f8101841361289f57600080fd5b80516128ad61212f826120ca565b8181528560208385010111156128c257600080fd5b6128d3826020830160208601612512565b95945050505050565b6000602082840312156128ee57600080fd5b8151611bd28161218f565b600082516124ed81846020870161251256fea2646970667358221220cf4604b12138d4e9dd39c24f0e08ed19b47d814781d6a53de6a4b75b4c144bdf64736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var CBridgeFacet__factory = /** @class */ (function (_super) {
    __extends(CBridgeFacet__factory, _super);
    function CBridgeFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    CBridgeFacet__factory.prototype.deploy = function (_cBridge, overrides) {
        return _super.prototype.deploy.call(this, _cBridge, overrides || {});
    };
    CBridgeFacet__factory.prototype.getDeployTransaction = function (_cBridge, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _cBridge, overrides || {});
    };
    CBridgeFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    CBridgeFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    CBridgeFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    CBridgeFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    CBridgeFacet__factory.bytecode = _bytecode;
    CBridgeFacet__factory.abi = _abi;
    return CBridgeFacet__factory;
}(ethers_1.ContractFactory));
exports.CBridgeFacet__factory = CBridgeFacet__factory;
