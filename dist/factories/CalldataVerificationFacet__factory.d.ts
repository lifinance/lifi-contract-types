import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { CalldataVerificationFacet, CalldataVerificationFacetInterface } from "../CalldataVerificationFacet";
declare type CalldataVerificationFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class CalldataVerificationFacet__factory extends ContractFactory {
    constructor(...args: CalldataVerificationFacetConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<CalldataVerificationFacet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): CalldataVerificationFacet;
    connect(signer: Signer): CalldataVerificationFacet__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50612a5d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063d4bdb6af11610076578063ee0aa3201161005b578063ee0aa320146101d3578063f58ae2ce146101f9578063fa530aee1461020c57600080fd5b8063d4bdb6af1461019d578063d53482cf146101b057600080fd5b806311da22cc116100a757806311da22cc1461010d5780637f99d7af14610122578063c318eeda1461014257600080fd5b8063070e81f1146100c3578063103c5200146100ec575b600080fd5b6100d66100d13660046114ac565b61021f565b6040516100e39190611649565b60405180910390f35b6100ff6100fa3660046114ac565b610232565b6040516100e3929190611751565b61012061011b36600461192d565b6102ad565b005b6101356101303660046114ac565b61036a565b6040516100e3919061196a565b6101556101503660046114ac565b6103c6565b6040805173ffffffffffffffffffffffffffffffffffffffff96871681526020810195909552928516928401929092529092166060820152608081019190915260a0016100e3565b6101206101ab36600461192d565b610656565b6101c36101be3660046119c6565b610672565b60405190151581526020016100e3565b6101e66101e13660046114ac565b610903565b6040516100e39796959493929190611a95565b6101c3610207366004611af3565b6109be565b61012061021a36600461192d565b610ec9565b606061022b8383610ee6565b9392505050565b604080516101408101825260008082526060602083018190529282018390528282018190526080820181905260a0820181905260c0820181905260e0820181905261010082018190526101208201529061028c8484610fc0565b9150816101000151156102a6576102a38484610ee6565b90505b9250929050565b600080828060200190518101906102c49190611b98565b5096509650505050505061030d6040518060400160405280600581526020017f743a20257300000000000000000000000000000000000000000000000000000081525082611124565b61034c6040518060400160405280601381526020017f626c6f636b2e74696d657374616d703a2025730000000000000000000000000081525042611124565b6000821161035957600080fd5b42811161036557600080fd5b505050565b604080516101408101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915261022b8383610fc0565b60008060008060006060600088888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093945061041a9250600491508390508b8d611c0d565b61042391611c37565b90507f295b43b0000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008216016104a35761047b896004818d611c0d565b810190610488919061192d565b915061049782600060046111b9565b6104a090611c7f565b90505b7fffffffff0000000000000000000000000000000000000000000000000000000081167f4630a0d8000000000000000000000000000000000000000000000000000000001461051e576040517f24d6082b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060608061053d60048087516105359190611cfe565b8791906111b9565b8060200190518101906105509190611ecc565b604051929e50909b509950929550909350915060009061057e908590859085908e908d908d90602001611f7a565b60405160208183030381529060405290506004865161059d9190611cfe565b8151146105d6576040517fe14f30c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866000815181106105e9576105e9611fe8565b6020026020010151604001519b508660008151811061060a5761060a611fe8565b6020026020010151608001519a5086600188516106279190611cfe565b8151811061063757610637611fe8565b6020026020010151606001519850505050505050509295509295909350565b8080602001905181019061066a9190612043565b505050505050565b604080516101408101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526106cd8c8c610903565b1515610120880152151561010087015260e086015260c085015273ffffffffffffffffffffffffffffffffffffffff90811660a085015216608083015260208083019190915260408051600081529182018082528251902091610734918d918d91016120a3565b6040516020818303038152906040528051906020012014806107a7575089896040516020016107649291906120a3565b60405160208183030381529060405280519060200120816020015160405160200161078f91906120b3565b60405160208183030381529060405280519060200120145b8015610801575073ffffffffffffffffffffffffffffffffffffffff808916148061080157508773ffffffffffffffffffffffffffffffffffffffff16816080015173ffffffffffffffffffffffffffffffffffffffff16145b801561085b575073ffffffffffffffffffffffffffffffffffffffff808816148061085b57508673ffffffffffffffffffffffffffffffffffffffff168160a0015173ffffffffffffffffffffffffffffffffffffffff16145b801561089357507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8614806108935750858160c00151145b80156108cb57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8514806108cb5750848160e00151145b80156108df57508315158161010001511515145b80156108f357508215158161012001511515145b9c9b505050505050505050505050565b6060600080600080600080600061091a8a8a610fc0565b90508061010001511561097d5760006109338b8b610ee6565b90508060008151811061094857610948611fe8565b60200260200101516040015197508060008151811061096957610969611fe8565b60200260200101516080015195505061098c565b806080015196508060c0015194505b602081015160a082015160e083015161010084015161012090940151929d999c50909a50959850949690955092505050565b60008087878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509394507fd6a4bc500000000000000000000000000000000000000000000000000000000093610a2a93506004925090508a8c611c0d565b610a3391611c37565b7fffffffff000000000000000000000000000000000000000000000000000000001603610a7757610a67876004818b611c0d565b810190610a74919061192d565b90505b600081806020019051810190610a8d91906120cf565b90507f72366cd3000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610b7f576000610af46004808551610aec9190611cfe565b8591906111b9565b806020019051810190610b079190612296565b9150508060000151805190602001208686604051610b269291906120a3565b6040518091039020148015610b755750602081015173ffffffffffffffffffffffffffffffffffffffff16610b5d888a018a6122fa565b73ffffffffffffffffffffffffffffffffffffffff16145b9350505050610ebf565b7f7c0ce6e9000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610c0f576000610bdc6004808551610aec9190611cfe565b806020019051810190610bef9190612317565b925050508060000151805190602001208686604051610b269291906120a3565b7f41e15319000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610cdd576000610c6c6004808551610aec9190611cfe565b806020019051810190610c7f9190612452565b9150508060e00151805190602001208686604051610c9e9291906120a3565b6040518091039020148015610b7557508060c00151805190602001208888604051610cca9291906120a3565b6040518091039020149350505050610ebf565b7f12e879e7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610d6d576000610d3a6004808551610aec9190611cfe565b806020019051810190610d4d91906124ac565b925050508060e00151805190602001208686604051610c9e9291906120a3565b7ffaf6a213000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610e28576000610dca6004808551610aec9190611cfe565b806020019051810190610ddd91906125e5565b9150508060600151805190602001208686604051610dfc9291906120a3565b6040518091039020148015610b7557508060400151805190602001208888604051610cca9291906120a3565b7f4f93ad26000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610eb8576000610e856004808551610aec9190611cfe565b806020019051810190610e98919061263f565b925050508060600151805190602001208686604051610dfc9291906120a3565b6000925050505b9695505050505050565b80806020019051810190610edd9190611ecc565b50505050505050565b60607fd6a4bc5000000000000000000000000000000000000000000000000000000000610f17600460008587611c0d565b610f2091611c37565b7fffffffff000000000000000000000000000000000000000000000000000000001603610f9c576000610f568360048187611c0d565b810190610f63919061192d565b9050610f7f6004808351610f779190611cfe565b8391906111b9565b806020019051810190610f9291906126bd565b9250610fba915050565b610fa98260048186611c0d565b810190610fb691906127f2565b9150505b92915050565b604080516101408101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101919091527fd6a4bc5000000000000000000000000000000000000000000000000000000000611041600460008587611c0d565b61104a91611c37565b7fffffffff0000000000000000000000000000000000000000000000000000000016036110c85760006110808360048187611c0d565b81019061108d919061192d565b90506110a16004808351610f779190611cfe565b90506110ac816112d3565b808060200190518101906110c09190612975565b915050610fba565b6110d58260048186611c0d565b9250925061111883838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506112d392505050565b61022b828401846129aa565b6111b5828260405160240161113a9291906129df565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9710a9d000000000000000000000000000000000000000000000000000000000179052611348565b5050565b6060816111c781601f612a01565b10156111ff576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112098284612a01565b84511015611243576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608215801561126257604051915060008252602082016040526112ca565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561129b578051835260209283019201611283565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60006112de82611369565b905060006112eb836113ec565b905060006112f88461142b565b905082806113035750815b8061130b5750805b15611342576040517fd1ee5c4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6040517f11da22cc00000000000000000000000000000000000000000000000000000000815260009030906311da22cc906113a8908590600401612a14565b600060405180830381600087803b1580156113c257600080fd5b505af19250505080156113d3575060015b6113df57506000919050565b506001919050565b919050565b6040517fd4bdb6af000000000000000000000000000000000000000000000000000000008152600090309063d4bdb6af906113a8908590600401612a14565b6040517ffa530aee000000000000000000000000000000000000000000000000000000008152600090309063fa530aee906113a8908590600401612a14565b60008083601f84011261147c57600080fd5b50813567ffffffffffffffff81111561149457600080fd5b6020830191508360208285010111156102a657600080fd5b600080602083850312156114bf57600080fd5b823567ffffffffffffffff8111156114d657600080fd5b6114e28582860161146a565b90969095509350505050565b60005b838110156115095781810151838201526020016114f1565b50506000910152565b6000815180845261152a8160208601602086016114ee565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082825180855260208086019550808260051b84010181860160005b8481101561163c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08684030189528151805173ffffffffffffffffffffffffffffffffffffffff908116855285820151811686860152604080830151821690860152606080830151909116908501526080808201519085015260a08082015160e0828701819052919061160f83880182611512565b9250505060c08083015192506116288187018415159052565b509985019993505090830190600101611579565b5090979650505050505050565b60208152600061022b602083018461155c565b600061014082518452602083015181602086015261167c82860182611512565b915050604083015184820360408601526116968282611512565b91505060608301516116c0606086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060808301516116e8608086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a083015161171060a086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c083015160c085015260e083015160e0850152610100808401516117398287018215159052565b50506101209283015115159390920192909252919050565b604081526000611764604083018561165c565b8281036020840152611776818561155c565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156117d1576117d161177f565b60405290565b604051610140810167ffffffffffffffff811182821017156117d1576117d161177f565b604051610100810167ffffffffffffffff811182821017156117d1576117d161177f565b60405160c0810167ffffffffffffffff811182821017156117d1576117d161177f565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156118895761188961177f565b604052919050565b600067ffffffffffffffff8211156118ab576118ab61177f565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126118e857600080fd5b81356118fb6118f682611891565b611842565b81815284602083860101111561191057600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561193f57600080fd5b813567ffffffffffffffff81111561195657600080fd5b611962848285016118d7565b949350505050565b60208152600061022b602083018461165c565b73ffffffffffffffffffffffffffffffffffffffff8116811461199f57600080fd5b50565b80356113e78161197d565b801515811461199f57600080fd5b80356113e7816119ad565b6000806000806000806000806000806101008b8d0312156119e657600080fd5b8a3567ffffffffffffffff808211156119fe57600080fd5b611a0a8e838f0161146a565b909c509a5060208d0135915080821115611a2357600080fd5b50611a308d828e0161146a565b90995097505060408b0135611a448161197d565b955060608b0135611a548161197d565b945060808b0135935060a08b0135925060c08b0135611a72816119ad565b915060e08b0135611a82816119ad565b809150509295989b9194979a5092959850565b60e081526000611aa860e083018a611512565b73ffffffffffffffffffffffffffffffffffffffff988916602084015296909716604082015260608101949094526080840192909252151560a0830152151560c09091015292915050565b60008060008060008060608789031215611b0c57600080fd5b863567ffffffffffffffff80821115611b2457600080fd5b611b308a838b0161146a565b90985096506020890135915080821115611b4957600080fd5b611b558a838b0161146a565b90965094506040890135915080821115611b6e57600080fd5b50611b7b89828a0161146a565b979a9699509497509295939492505050565b80516113e78161197d565b600080600080600080600080610100898b031215611bb557600080fd5b885197506020890151611bc78161197d565b8097505060408901519550606089015194506080890151935060a0890151925060c0890151915060e0890151611bfc8161197d565b809150509295985092959890939650565b60008085851115611c1d57600080fd5b83861115611c2a57600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015611c775780818660040360031b1b83161692505b505092915050565b6000815160208301517fffffffff0000000000000000000000000000000000000000000000000000000080821693506004831015611cc75780818460040360031b1b83161693505b505050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610fba57610fba611ccf565b600082601f830112611d2257600080fd5b8151611d306118f682611891565b818152846020838601011115611d4557600080fd5b6119628260208301602087016114ee565b600067ffffffffffffffff821115611d7057611d7061177f565b5060051b60200190565b80516113e7816119ad565b600082601f830112611d9657600080fd5b81516020611da66118f683611d56565b82815260059290921b84018101918181019086841115611dc557600080fd5b8286015b84811015611ec157805167ffffffffffffffff80821115611dea5760008081fd5b818901915060e0807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848d03011215611e235760008081fd5b611e2b6117ae565b611e36888501611b8d565b81526040611e45818601611b8d565b898301526060611e56818701611b8d565b8284015260809150611e69828701611b8d565b818401525060a0808601518284015260c091508186015185811115611e8e5760008081fd5b611e9c8f8c838a0101611d11565b828501525050611ead838601611d7a565b908201528652505050918301918301611dc9565b509695505050505050565b60008060008060008060c08789031215611ee557600080fd5b86519550602087015167ffffffffffffffff80821115611f0457600080fd5b611f108a838b01611d11565b96506040890151915080821115611f2657600080fd5b611f328a838b01611d11565b955060608901519150611f448261197d565b608089015160a08a0151929550935080821115611f6057600080fd5b50611f6d89828a01611d85565b9150509295509295509295565b86815260c060208201526000611f9360c0830188611512565b8281036040840152611fa58188611512565b905073ffffffffffffffffffffffffffffffffffffffff8616606084015284608084015282810360a0840152611fdb818561155c565b9998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b805167ffffffffffffffff811681146113e757600080fd5b805163ffffffff811681146113e757600080fd5b600080600080600060a0868803121561205b57600080fd5b85519450602086015161206d8161197d565b935061207b60408701612017565b925061208960608701612017565b91506120976080870161202f565b90509295509295909350565b8183823760009101908152919050565b600082516120c58184602087016114ee565b9190910192915050565b6000602082840312156120e157600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461022b57600080fd5b6000610140828403121561212457600080fd5b61212c6117d7565b905081518152602082015167ffffffffffffffff8082111561214d57600080fd5b61215985838601611d11565b6020840152604084015191508082111561217257600080fd5b5061217f84828501611d11565b60408301525061219160608301611b8d565b60608201526121a260808301611b8d565b60808201526121b360a08301611b8d565b60a082015260c082015160c082015260e082015160e08201526101006121da818401611d7a565b908201526101206121ec838201611d7a565b9082015292915050565b600060e0828403121561220857600080fd5b6122106117ae565b9050815167ffffffffffffffff81111561222957600080fd5b61223584828501611d11565b82525061224460208301611b8d565b6020820152604082015160408201526060820151606082015261226960808301611b8d565b608082015261227a60a0830161202f565b60a082015261228b60c08301611d7a565b60c082015292915050565b600080604083850312156122a957600080fd5b825167ffffffffffffffff808211156122c157600080fd5b6122cd86838701612111565b935060208501519150808211156122e357600080fd5b506122f0858286016121f6565b9150509250929050565b60006020828403121561230c57600080fd5b813561022b8161197d565b60008060006060848603121561232c57600080fd5b835167ffffffffffffffff8082111561234457600080fd5b61235087838801612111565b9450602086015191508082111561236657600080fd5b61237287838801611d85565b9350604086015191508082111561238857600080fd5b50612395868287016121f6565b9150509250925092565b600061010082840312156123b257600080fd5b6123ba6117fb565b905081518152602082015160208201526040820151604082015260608201516060820152608082015160808201526123f460a08301611b8d565b60a082015260c082015167ffffffffffffffff8082111561241457600080fd5b61242085838601611d11565b60c084015260e084015191508082111561243957600080fd5b5061244684828501611d11565b60e08301525092915050565b6000806040838503121561246557600080fd5b825167ffffffffffffffff8082111561247d57600080fd5b61248986838701612111565b9350602085015191508082111561249f57600080fd5b506122f08582860161239f565b6000806000606084860312156124c157600080fd5b835167ffffffffffffffff808211156124d957600080fd5b6124e587838801612111565b945060208601519150808211156124fb57600080fd5b61250787838801611d85565b9350604086015191508082111561251d57600080fd5b506123958682870161239f565b8051600781106113e757600080fd5b600060c0828403121561254b57600080fd5b61255361181f565b905061255e8261202f565b815261256c60208301612017565b6020820152604082015167ffffffffffffffff8082111561258c57600080fd5b61259885838601611d11565b604084015260608401519150808211156125b157600080fd5b506125be84828501611d11565b606083015250608082015160808201526125da60a0830161252a565b60a082015292915050565b600080604083850312156125f857600080fd5b825167ffffffffffffffff8082111561261057600080fd5b61261c86838701612111565b9350602085015191508082111561263257600080fd5b506122f085828601612539565b60008060006060848603121561265457600080fd5b835167ffffffffffffffff8082111561266c57600080fd5b61267887838801612111565b9450602086015191508082111561268e57600080fd5b61269a87838801611d85565b935060408601519150808211156126b057600080fd5b5061239586828701612539565b600080604083850312156126d057600080fd5b825167ffffffffffffffff808211156126e857600080fd5b6126f486838701612111565b9350602085015191508082111561270a57600080fd5b506122f085828601611d85565b6000610140828403121561272a57600080fd5b6127326117d7565b905081358152602082013567ffffffffffffffff8082111561275357600080fd5b61275f858386016118d7565b6020840152604084013591508082111561277857600080fd5b50612785848285016118d7565b604083015250612797606083016119a2565b60608201526127a8608083016119a2565b60808201526127b960a083016119a2565b60a082015260c082013560c082015260e082013560e08201526101006127e08184016119bb565b908201526101206121ec8382016119bb565b6000806040838503121561280557600080fd5b823567ffffffffffffffff8082111561281d57600080fd5b61282986838701612717565b935060209150818501358181111561284057600080fd5b8501601f8101871361285157600080fd5b803561285f6118f682611d56565b81815260059190911b8201840190848101908983111561287e57600080fd5b8584015b838110156129645780358681111561289957600080fd5b850160e0818d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00112156128cd57600080fd5b6128d56117ae565b6128e08983016119a2565b81526128ee604083016119a2565b898201526128fe606083016119a2565b604082015261290f608083016119a2565b606082015260a0820135608082015260c080830135898111156129325760008081fd5b6129408f8c838701016118d7565b60a08401525061295260e084016119bb565b90820152845250918601918601612882565b508096505050505050509250929050565b60006020828403121561298757600080fd5b815167ffffffffffffffff81111561299e57600080fd5b61196284828501612111565b6000602082840312156129bc57600080fd5b813567ffffffffffffffff8111156129d357600080fd5b61196284828501612717565b6040815260006129f26040830185611512565b90508260208301529392505050565b80820180821115610fba57610fba611ccf565b60208152600061022b602083018461151256fea2646970667358221220eefe0aea50e78fc44aca55495f455026dcb6f7f1127895c2f436030dc74d1ba664736f6c63430008110033";
    static readonly abi: readonly [{
        readonly type: "function";
        readonly name: "__attemptDecodeGenericSwapData";
        readonly inputs: readonly [{
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "__attemptDecodePackedCBridge";
        readonly inputs: readonly [{
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "__attemptDecodePackedHop";
        readonly inputs: readonly [{
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "extractBridgeData";
        readonly inputs: readonly [{
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [{
            readonly name: "bridgeData";
            readonly type: "tuple";
            readonly internalType: "struct ILiFi.BridgeData";
            readonly components: readonly [{
                readonly name: "transactionId";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "bridge";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "integrator";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "referrer";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receiver";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "minAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "destinationChainId";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
                readonly internalType: "bool";
            }, {
                readonly name: "hasDestinationCall";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "extractData";
        readonly inputs: readonly [{
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [{
            readonly name: "bridgeData";
            readonly type: "tuple";
            readonly internalType: "struct ILiFi.BridgeData";
            readonly components: readonly [{
                readonly name: "transactionId";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "bridge";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "integrator";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "referrer";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receiver";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "minAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "destinationChainId";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
                readonly internalType: "bool";
            }, {
                readonly name: "hasDestinationCall";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }, {
            readonly name: "swapData";
            readonly type: "tuple[]";
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly components: readonly [{
                readonly name: "callTo";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "approveTo";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receivingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "fromAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "callData";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }, {
                readonly name: "requiresDeposit";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "extractGenericSwapParameters";
        readonly inputs: readonly [{
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [{
            readonly name: "sendingAssetId";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "amount";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "receiver";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "receivingAssetId";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "receivingAmount";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "extractMainParameters";
        readonly inputs: readonly [{
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [{
            readonly name: "bridge";
            readonly type: "string";
            readonly internalType: "string";
        }, {
            readonly name: "sendingAssetId";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "receiver";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "amount";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "destinationChainId";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "hasSourceSwaps";
            readonly type: "bool";
            readonly internalType: "bool";
        }, {
            readonly name: "hasDestinationCall";
            readonly type: "bool";
            readonly internalType: "bool";
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "extractSwapData";
        readonly inputs: readonly [{
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [{
            readonly name: "swapData";
            readonly type: "tuple[]";
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly components: readonly [{
                readonly name: "callTo";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "approveTo";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receivingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "fromAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "callData";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }, {
                readonly name: "requiresDeposit";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "validateCalldata";
        readonly inputs: readonly [{
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "bridge";
            readonly type: "string";
            readonly internalType: "string";
        }, {
            readonly name: "sendingAssetId";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "receiver";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "amount";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "destinationChainId";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "hasSourceSwaps";
            readonly type: "bool";
            readonly internalType: "bool";
        }, {
            readonly name: "hasDestinationCall";
            readonly type: "bool";
            readonly internalType: "bool";
        }];
        readonly outputs: readonly [{
            readonly name: "isValid";
            readonly type: "bool";
            readonly internalType: "bool";
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "validateDestinationCalldata";
        readonly inputs: readonly [{
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "callTo";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "dstCalldata";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [{
            readonly name: "isValid";
            readonly type: "bool";
            readonly internalType: "bool";
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "error";
        readonly name: "CalldataCollision";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "IllegalCalldataSize";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "IllegalSelector";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "SliceOutOfBounds";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "SliceOverflow";
        readonly inputs: readonly [];
    }];
    static createInterface(): CalldataVerificationFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): CalldataVerificationFacet;
}
export {};
