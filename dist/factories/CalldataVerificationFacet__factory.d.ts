import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { CalldataVerificationFacet, CalldataVerificationFacetInterface } from "../CalldataVerificationFacet";
declare type CalldataVerificationFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class CalldataVerificationFacet__factory extends ContractFactory {
    constructor(...args: CalldataVerificationFacetConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<CalldataVerificationFacet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): CalldataVerificationFacet;
    connect(signer: Signer): CalldataVerificationFacet__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50612e02806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063d53482cf1161005b578063d53482cf14610152578063df1c3a5b14610175578063ee0aa32014610196578063f58ae2ce146101bc57600080fd5b8063070e81f11461008d578063103c5200146100b65780637f99d7af146100d7578063c318eeda146100f7575b600080fd5b6100a061009b36600461159d565b6101cf565b6040516100ad919061173a565b60405180910390f35b6100c96100c436600461159d565b6101e2565b6040516100ad929190611842565b6100ea6100e536600461159d565b61025d565b6040516100ad9190611870565b61010a61010536600461159d565b6102b9565b6040805173ffffffffffffffffffffffffffffffffffffffff96871681526020810195909552928516928401929092529092166060820152608081019190915260a0016100ad565b6101656101603660046118d1565b610665565b60405190151581526020016100ad565b61018861018336600461159d565b610864565b6040519081526020016100ad565b6101a96101a436600461159d565b61095c565b6040516100ad97969594939291906119a0565b6101656101ca3660046119fe565b610a17565b60606101db83836111e5565b9392505050565b604080516101408101825260008082526060602083018190529282018390528282018190526080820181905260a0820181905260c0820181905260e0820181905261010082018190526101208201529061023c84846112bf565b9150816101000151156102565761025384846111e5565b90505b9250929050565b604080516101408101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101919091526101db83836112bf565b6000808080806101e486116102fa576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606080600061030c6004828b8d611a98565b61031591611ac2565b90507f295b43b0000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008216016103c35761036e604860448b8d611a98565b61037791611ac2565b9050610386896044818d611a98565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509294506103fd92505050565b89898080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509294505050505b7fffffffff0000000000000000000000000000000000000000000000000000000081167f4666fc8000000000000000000000000000000000000000000000000000000000148061048e57507fffffffff0000000000000000000000000000000000000000000000000000000081167f733214a300000000000000000000000000000000000000000000000000000000145b806104da57507fffffffff0000000000000000000000000000000000000000000000000000000081167faf7060fd00000000000000000000000000000000000000000000000000000000145b156105b95760408051600180825281830190925290816020015b6040805160e0810182526000808252602080830182905292820181905260608083018290526080830182905260a083015260c082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816104f4579050509250610576600480845161056e9190611b68565b8491906113d5565b8060200190518101906105899190611dd6565b8851929550909350915086906000906105a4576105a4611e84565b602090810291909101015290965093506105e9565b6105cb600480845161056e9190611b68565b8060200190518101906105de9190611f62565b919a50975095505050505b826000815181106105fc576105fc611e84565b60200260200101516040015197508260008151811061061d5761061d611e84565b6020026020010151608001519650826001845161063a9190611b68565b8151811061064a5761064a611e84565b60200260200101516060015194505050509295509295909350565b6000806106728c8c6112bf565b905060008a8a604051602001610689929190612003565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828252805160209182012060008452908301918290529151902090915081148061070757508082602001516040516020016106ef9190612013565b60405160208183030381529060405280519060200120145b8015610761575073ffffffffffffffffffffffffffffffffffffffff808a16148061076157508873ffffffffffffffffffffffffffffffffffffffff16826080015173ffffffffffffffffffffffffffffffffffffffff16145b80156107bb575073ffffffffffffffffffffffffffffffffffffffff80891614806107bb57508773ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff16145b80156107f357507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8714806107f35750868260c00151145b801561082b57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff86148061082b5750858260e00151145b801561083f57508415158261010001511515145b801561085357508315158261012001511515145b9d9c50505050505050505050505050565b600060607fd6a4bc50000000000000000000000000000000000000000000000000000000006108966004848688611a98565b61089f91611ac2565b7fffffffff0000000000000000000000000000000000000000000000000000000016036108e7576108d38360048187611a98565b8101906108e09190612080565b9050610921565b83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b61092b84846112bf565b6101000151156109475760648101518101602401519150610955565b604481015181016024015191505b5092915050565b606060008060008060008060006109738a8a6112bf565b9050806101000151156109d657600061098c8b8b6111e5565b9050806000815181106109a1576109a1611e84565b6020026020010151604001519750806000815181106109c2576109c2611e84565b6020026020010151608001519550506109e5565b806080015196508060c0015194505b602081015160a082015160e083015161010084015161012090940151929d999c50909a50959850949690955092505050565b60008087878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509394507fd6a4bc500000000000000000000000000000000000000000000000000000000093610a8393506004925090508a8c611a98565b610a8c91611ac2565b7fffffffff000000000000000000000000000000000000000000000000000000001603610ad057610ac0876004818b611a98565b810190610acd9190612080565b90505b600081806020019051810190610ae691906120b5565b90507f72366cd3000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610bd8576000610b4d6004808551610b459190611b68565b8591906113d5565b806020019051810190610b609190612285565b9150508060000151805190602001208686604051610b7f929190612003565b6040518091039020148015610bce5750602081015173ffffffffffffffffffffffffffffffffffffffff16610bb6888a018a6122e9565b73ffffffffffffffffffffffffffffffffffffffff16145b93505050506111db565b7f7c0ce6e9000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610c68576000610c356004808551610b459190611b68565b806020019051810190610c489190612306565b925050508060000151805190602001208686604051610b7f929190612003565b7f41e15319000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610d36576000610cc56004808551610b459190611b68565b806020019051810190610cd89190612441565b9150508060e00151805190602001208686604051610cf7929190612003565b6040518091039020148015610bce57508060c00151805190602001208888604051610d23929190612003565b60405180910390201493505050506111db565b7f12e879e7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610dc6576000610d936004808551610b459190611b68565b806020019051810190610da6919061249b565b925050508060e00151805190602001208686604051610cf7929190612003565b7feb2acf89000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610e7c576000610e236004808551610b459190611b68565b806020019051810190610e369190612695565b915050806020015160a00151805190602001208686604051610e59929190612003565b6040518091039020148015610bce5750610bce88888360200151602001516114ef565b7f59fef59a000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610f10576000610ed96004808551610b459190611b68565b806020019051810190610eec91906126ef565b92505050806020015160a00151805190602001208686604051610e59929190612003565b7ffaf6a213000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610fcb576000610f6d6004808551610b459190611b68565b806020019051810190610f809190612840565b9150508060600151805190602001208686604051610f9f929190612003565b6040518091039020148015610bce57508060400151805190602001208888604051610d23929190612003565b7f4f93ad26000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000082160161105b5760006110286004808551610b459190611b68565b80602001905181019061103b919061289a565b925050508060600151805190602001208686604051610f9f929190612003565b7fb1bf918f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008216016111445760006110b86004808551610b459190611b68565b8060200190518101906110cb91906129bf565b9150508060c001518051906020012086866040516110ea929190612003565b6040518091039020148015610bce575080516040805173ffffffffffffffffffffffffffffffffffffffff909216602083015201604051602081830303815290604052805190602001208888604051610d23929190612003565b7f2183dd81000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008216016111d45760006111a16004808551610b459190611b68565b8060200190518101906111b49190612a19565b925050508060c001518051906020012086866040516110ea929190612003565b6000925050505b9695505050505050565b60607fd6a4bc5000000000000000000000000000000000000000000000000000000000611216600460008587611a98565b61121f91611ac2565b7fffffffff00000000000000000000000000000000000000000000000000000000160361129b5760006112558360048187611a98565b8101906112629190612080565b905061127e60048083516112769190611b68565b8391906113d5565b8060200190518101906112919190612a97565b92506112b9915050565b6112a88260048186611a98565b8101906112b59190612bcc565b9150505b92915050565b604080516101408101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101919091527fd6a4bc5000000000000000000000000000000000000000000000000000000000611340600460008587611a98565b61134991611ac2565b7fffffffff0000000000000000000000000000000000000000000000000000000016036113bb57600061137f8360048187611a98565b81019061138c9190612080565b90506113a060048083516112769190611b68565b8060200190518101906113b39190612d4f565b9150506112b9565b6113c88260048186611a98565b8101906101db9190612d84565b6060816113e381601f612db9565b101561141b576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114258284612db9565b8451101561145f576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608215801561147e57604051915060008252602082016040526114e6565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156114b757805183526020928301920161149f565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b600061153084848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061155492505050565b73ffffffffffffffffffffffffffffffffffffffff83811691161490509392505050565b6020015190565b60008083601f84011261156d57600080fd5b50813567ffffffffffffffff81111561158557600080fd5b60208301915083602082850101111561025657600080fd5b600080602083850312156115b057600080fd5b823567ffffffffffffffff8111156115c757600080fd5b6115d38582860161155b565b90969095509350505050565b60005b838110156115fa5781810151838201526020016115e2565b50506000910152565b6000815180845261161b8160208601602086016115df565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082825180855260208086019550808260051b84010181860160005b8481101561172d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08684030189528151805173ffffffffffffffffffffffffffffffffffffffff908116855285820151811686860152604080830151821690860152606080830151909116908501526080808201519085015260a08082015160e0828701819052919061170083880182611603565b9250505060c08083015192506117198187018415159052565b50998501999350509083019060010161166a565b5090979650505050505050565b6020815260006101db602083018461164d565b600061014082518452602083015181602086015261176d82860182611603565b915050604083015184820360408601526117878282611603565b91505060608301516117b1606086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060808301516117d9608086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a083015161180160a086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c083015160c085015260e083015160e08501526101008084015161182a8287018215159052565b50506101209283015115159390920192909252919050565b604081526000611855604083018561174d565b8281036020840152611867818561164d565b95945050505050565b6020815260006101db602083018461174d565b73ffffffffffffffffffffffffffffffffffffffff811681146118a557600080fd5b50565b80356118b381611883565b919050565b80151581146118a557600080fd5b80356118b3816118b8565b6000806000806000806000806000806101008b8d0312156118f157600080fd5b8a3567ffffffffffffffff8082111561190957600080fd5b6119158e838f0161155b565b909c509a5060208d013591508082111561192e57600080fd5b5061193b8d828e0161155b565b90995097505060408b013561194f81611883565b955060608b013561195f81611883565b945060808b0135935060a08b0135925060c08b013561197d816118b8565b915060e08b013561198d816118b8565b809150509295989b9194979a5092959850565b60e0815260006119b360e083018a611603565b73ffffffffffffffffffffffffffffffffffffffff988916602084015296909716604082015260608101949094526080840192909252151560a0830152151560c09091015292915050565b60008060008060008060608789031215611a1757600080fd5b863567ffffffffffffffff80821115611a2f57600080fd5b611a3b8a838b0161155b565b90985096506020890135915080821115611a5457600080fd5b611a608a838b0161155b565b90965094506040890135915080821115611a7957600080fd5b50611a8689828a0161155b565b979a9699509497509295939492505050565b60008085851115611aa857600080fd5b83861115611ab557600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015611b025780818660040360031b1b83161692505b505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156112b9576112b9611b39565b60405160e0810167ffffffffffffffff81118282101715611b9e57611b9e611b0a565b60405290565b604051610140810167ffffffffffffffff81118282101715611b9e57611b9e611b0a565b604051610100810167ffffffffffffffff81118282101715611b9e57611b9e611b0a565b6040516080810167ffffffffffffffff81118282101715611b9e57611b9e611b0a565b60405160c0810167ffffffffffffffff81118282101715611b9e57611b9e611b0a565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611c7957611c79611b0a565b604052919050565b600067ffffffffffffffff821115611c9b57611c9b611b0a565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112611cd857600080fd5b8151611ceb611ce682611c81565b611c32565b818152846020838601011115611d0057600080fd5b611d118260208301602087016115df565b949350505050565b80516118b381611883565b80516118b3816118b8565b600060e08284031215611d4157600080fd5b611d49611b7b565b9050611d5482611d19565b8152611d6260208301611d19565b6020820152611d7360408301611d19565b6040820152611d8460608301611d19565b60608201526080820151608082015260a082015167ffffffffffffffff811115611dad57600080fd5b611db984828501611cc7565b60a083015250611dcb60c08301611d24565b60c082015292915050565b60008060008060008060c08789031215611def57600080fd5b86519550602087015167ffffffffffffffff80821115611e0e57600080fd5b611e1a8a838b01611cc7565b96506040890151915080821115611e3057600080fd5b611e3c8a838b01611cc7565b955060608901519150611e4e82611883565b608089015160a08a0151929550935080821115611e6a57600080fd5b50611e7789828a01611d2f565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600067ffffffffffffffff821115611ecd57611ecd611b0a565b5060051b60200190565b600082601f830112611ee857600080fd5b81516020611ef8611ce683611eb3565b82815260059290921b84018101918181019086841115611f1757600080fd5b8286015b84811015611f5757805167ffffffffffffffff811115611f3b5760008081fd5b611f498986838b0101611d2f565b845250918301918301611f1b565b509695505050505050565b60008060008060008060c08789031215611f7b57600080fd5b86519550602087015167ffffffffffffffff80821115611f9a57600080fd5b611fa68a838b01611cc7565b96506040890151915080821115611fbc57600080fd5b611fc88a838b01611cc7565b955060608901519150611fda82611883565b608089015160a08a0151929550935080821115611ff657600080fd5b50611e7789828a01611ed7565b8183823760009101908152919050565b600082516120258184602087016115df565b9190910192915050565b600082601f83011261204057600080fd5b813561204e611ce682611c81565b81815284602083860101111561206357600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561209257600080fd5b813567ffffffffffffffff8111156120a957600080fd5b611d118482850161202f565b6000602082840312156120c757600080fd5b81517fffffffff00000000000000000000000000000000000000000000000000000000811681146101db57600080fd5b6000610140828403121561210a57600080fd5b612112611ba4565b905081518152602082015167ffffffffffffffff8082111561213357600080fd5b61213f85838601611cc7565b6020840152604084015191508082111561215857600080fd5b5061216584828501611cc7565b60408301525061217760608301611d19565b606082015261218860808301611d19565b608082015261219960a08301611d19565b60a082015260c082015160c082015260e082015160e08201526101006121c0818401611d24565b908201526101206121d2838201611d24565b9082015292915050565b805163ffffffff811681146118b357600080fd5b600060e0828403121561220257600080fd5b61220a611b7b565b9050815167ffffffffffffffff81111561222357600080fd5b61222f84828501611cc7565b82525061223e60208301611d19565b6020820152604082015160408201526060820151606082015261226360808301611d19565b608082015261227460a083016121dc565b60a0820152611dcb60c08301611d24565b6000806040838503121561229857600080fd5b825167ffffffffffffffff808211156122b057600080fd5b6122bc868387016120f7565b935060208501519150808211156122d257600080fd5b506122df858286016121f0565b9150509250929050565b6000602082840312156122fb57600080fd5b81356101db81611883565b60008060006060848603121561231b57600080fd5b835167ffffffffffffffff8082111561233357600080fd5b61233f878388016120f7565b9450602086015191508082111561235557600080fd5b61236187838801611ed7565b9350604086015191508082111561237757600080fd5b50612384868287016121f0565b9150509250925092565b600061010082840312156123a157600080fd5b6123a9611bc8565b905081518152602082015160208201526040820151604082015260608201516060820152608082015160808201526123e360a08301611d19565b60a082015260c082015167ffffffffffffffff8082111561240357600080fd5b61240f85838601611cc7565b60c084015260e084015191508082111561242857600080fd5b5061243584828501611cc7565b60e08301525092915050565b6000806040838503121561245457600080fd5b825167ffffffffffffffff8082111561246c57600080fd5b612478868387016120f7565b9350602085015191508082111561248e57600080fd5b506122df8582860161238e565b6000806000606084860312156124b057600080fd5b835167ffffffffffffffff808211156124c857600080fd5b6124d4878388016120f7565b945060208601519150808211156124ea57600080fd5b6124f687838801611ed7565b9350604086015191508082111561250c57600080fd5b506123848682870161238e565b60006040828403121561252b57600080fd5b6040516040810181811067ffffffffffffffff8211171561254e5761254e611b0a565b604052825181526020928301519281019290925250919050565b600060a0828403121561257a57600080fd5b612582611bec565b9050815161ffff8116811461259657600080fd5b8152602082015167ffffffffffffffff808211156125b357600080fd5b9083019060e082860312156125c757600080fd5b6125cf611b7b565b6125d8836121dc565b815260208301516020820152604083015160408201526060830151606082015260808301518281111561260a57600080fd5b61261687828601611cc7565b60808301525060a08301518281111561262e57600080fd5b61263a87828601611cc7565b60a08301525060c08301518281111561265257600080fd5b61265e87828601611cc7565b60c08301525060208401525061267990508360408401612519565b604082015261268a60808301611d19565b606082015292915050565b600080604083850312156126a857600080fd5b825167ffffffffffffffff808211156126c057600080fd5b6126cc868387016120f7565b935060208501519150808211156126e257600080fd5b506122df85828601612568565b60008060006060848603121561270457600080fd5b835167ffffffffffffffff8082111561271c57600080fd5b612728878388016120f7565b9450602086015191508082111561273e57600080fd5b61274a87838801611ed7565b9350604086015191508082111561276057600080fd5b5061238486828701612568565b805167ffffffffffffffff811681146118b357600080fd5b8051600781106118b357600080fd5b600060c082840312156127a657600080fd5b6127ae611c0f565b90506127b9826121dc565b81526127c76020830161276d565b6020820152604082015167ffffffffffffffff808211156127e757600080fd5b6127f385838601611cc7565b6040840152606084015191508082111561280c57600080fd5b5061281984828501611cc7565b6060830152506080820151608082015261283560a08301612785565b60a082015292915050565b6000806040838503121561285357600080fd5b825167ffffffffffffffff8082111561286b57600080fd5b612877868387016120f7565b9350602085015191508082111561288d57600080fd5b506122df85828601612794565b6000806000606084860312156128af57600080fd5b835167ffffffffffffffff808211156128c757600080fd5b6128d3878388016120f7565b945060208601519150808211156128e957600080fd5b6128f587838801611ed7565b9350604086015191508082111561290b57600080fd5b5061238486828701612794565b600060e0828403121561292a57600080fd5b612932611b7b565b905061293d82611d19565b815261294b60208301611d19565b602082015261295c60408301611d19565b604082015260608201516060820152612977608083016121dc565b608082015261298860a083016121dc565b60a082015260c082015167ffffffffffffffff8111156129a757600080fd5b6129b384828501611cc7565b60c08301525092915050565b600080604083850312156129d257600080fd5b825167ffffffffffffffff808211156129ea57600080fd5b6129f6868387016120f7565b93506020850151915080821115612a0c57600080fd5b506122df85828601612918565b600080600060608486031215612a2e57600080fd5b835167ffffffffffffffff80821115612a4657600080fd5b612a52878388016120f7565b94506020860151915080821115612a6857600080fd5b612a7487838801611ed7565b93506040860151915080821115612a8a57600080fd5b5061238486828701612918565b60008060408385031215612aaa57600080fd5b825167ffffffffffffffff80821115612ac257600080fd5b612ace868387016120f7565b93506020850151915080821115612ae457600080fd5b506122df85828601611ed7565b60006101408284031215612b0457600080fd5b612b0c611ba4565b905081358152602082013567ffffffffffffffff80821115612b2d57600080fd5b612b398583860161202f565b60208401526040840135915080821115612b5257600080fd5b50612b5f8482850161202f565b604083015250612b71606083016118a8565b6060820152612b82608083016118a8565b6080820152612b9360a083016118a8565b60a082015260c082013560c082015260e082013560e0820152610100612bba8184016118c6565b908201526101206121d28382016118c6565b60008060408385031215612bdf57600080fd5b823567ffffffffffffffff80821115612bf757600080fd5b612c0386838701612af1565b9350602091508185013581811115612c1a57600080fd5b8501601f81018713612c2b57600080fd5b8035612c39611ce682611eb3565b81815260059190911b82018401908481019089831115612c5857600080fd5b8584015b83811015612d3e57803586811115612c7357600080fd5b850160e0818d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0011215612ca757600080fd5b612caf611b7b565b612cba8983016118a8565b8152612cc8604083016118a8565b89820152612cd8606083016118a8565b6040820152612ce9608083016118a8565b606082015260a0820135608082015260c08083013589811115612d0c5760008081fd5b612d1a8f8c8387010161202f565b60a084015250612d2c60e084016118c6565b90820152845250918601918601612c5c565b508096505050505050509250929050565b600060208284031215612d6157600080fd5b815167ffffffffffffffff811115612d7857600080fd5b611d11848285016120f7565b600060208284031215612d9657600080fd5b813567ffffffffffffffff811115612dad57600080fd5b611d1184828501612af1565b808201808211156112b9576112b9611b3956fea2646970667358221220883be6511f1fecb31722ee4b9430a064e5938ea055de8c9074d1f962308fca8c64736f6c63430008110033";
    static readonly abi: readonly [{
        readonly type: "function";
        readonly name: "extractBridgeData";
        readonly inputs: readonly [{
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [{
            readonly name: "bridgeData";
            readonly type: "tuple";
            readonly internalType: "struct ILiFi.BridgeData";
            readonly components: readonly [{
                readonly name: "transactionId";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "bridge";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "integrator";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "referrer";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receiver";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "minAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "destinationChainId";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
                readonly internalType: "bool";
            }, {
                readonly name: "hasDestinationCall";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }];
        readonly stateMutability: "pure";
    }, {
        readonly type: "function";
        readonly name: "extractData";
        readonly inputs: readonly [{
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [{
            readonly name: "bridgeData";
            readonly type: "tuple";
            readonly internalType: "struct ILiFi.BridgeData";
            readonly components: readonly [{
                readonly name: "transactionId";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "bridge";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "integrator";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "referrer";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receiver";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "minAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "destinationChainId";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
                readonly internalType: "bool";
            }, {
                readonly name: "hasDestinationCall";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }, {
            readonly name: "swapData";
            readonly type: "tuple[]";
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly components: readonly [{
                readonly name: "callTo";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "approveTo";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receivingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "fromAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "callData";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }, {
                readonly name: "requiresDeposit";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }];
        readonly stateMutability: "pure";
    }, {
        readonly type: "function";
        readonly name: "extractGenericSwapParameters";
        readonly inputs: readonly [{
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [{
            readonly name: "sendingAssetId";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "amount";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "receiver";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "receivingAssetId";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "receivingAmount";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "pure";
    }, {
        readonly type: "function";
        readonly name: "extractMainParameters";
        readonly inputs: readonly [{
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [{
            readonly name: "bridge";
            readonly type: "string";
            readonly internalType: "string";
        }, {
            readonly name: "sendingAssetId";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "receiver";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "amount";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "destinationChainId";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "hasSourceSwaps";
            readonly type: "bool";
            readonly internalType: "bool";
        }, {
            readonly name: "hasDestinationCall";
            readonly type: "bool";
            readonly internalType: "bool";
        }];
        readonly stateMutability: "pure";
    }, {
        readonly type: "function";
        readonly name: "extractNonEVMAddress";
        readonly inputs: readonly [{
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [{
            readonly name: "nonEVMAddress";
            readonly type: "bytes32";
            readonly internalType: "bytes32";
        }];
        readonly stateMutability: "pure";
    }, {
        readonly type: "function";
        readonly name: "extractSwapData";
        readonly inputs: readonly [{
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [{
            readonly name: "swapData";
            readonly type: "tuple[]";
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly components: readonly [{
                readonly name: "callTo";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "approveTo";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sendingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "receivingAssetId";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "fromAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "callData";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }, {
                readonly name: "requiresDeposit";
                readonly type: "bool";
                readonly internalType: "bool";
            }];
        }];
        readonly stateMutability: "pure";
    }, {
        readonly type: "function";
        readonly name: "validateCalldata";
        readonly inputs: readonly [{
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "bridge";
            readonly type: "string";
            readonly internalType: "string";
        }, {
            readonly name: "sendingAssetId";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "receiver";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "amount";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "destinationChainId";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "hasSourceSwaps";
            readonly type: "bool";
            readonly internalType: "bool";
        }, {
            readonly name: "hasDestinationCall";
            readonly type: "bool";
            readonly internalType: "bool";
        }];
        readonly outputs: readonly [{
            readonly name: "isValid";
            readonly type: "bool";
            readonly internalType: "bool";
        }];
        readonly stateMutability: "pure";
    }, {
        readonly type: "function";
        readonly name: "validateDestinationCalldata";
        readonly inputs: readonly [{
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "callTo";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "dstCalldata";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }];
        readonly outputs: readonly [{
            readonly name: "isValid";
            readonly type: "bool";
            readonly internalType: "bool";
        }];
        readonly stateMutability: "pure";
    }, {
        readonly type: "error";
        readonly name: "InvalidCallData";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "SliceOutOfBounds";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "SliceOverflow";
        readonly inputs: readonly [];
    }];
    static createInterface(): CalldataVerificationFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): CalldataVerificationFacet;
}
export {};
