"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ITheCompact__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "DOMAIN_SEPARATOR",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "__registerAllocator",
        inputs: [
            {
                name: "allocator",
                type: "address",
                internalType: "address",
            },
            {
                name: "proof",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "allocatorId",
                type: "uint96",
                internalType: "uint96",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "batchDepositAndRegisterFor",
        inputs: [
            {
                name: "recipient",
                type: "address",
                internalType: "address",
            },
            {
                name: "idsAndAmounts",
                type: "uint256[2][]",
                internalType: "uint256[2][]",
            },
            {
                name: "arbiter",
                type: "address",
                internalType: "address",
            },
            {
                name: "nonce",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "expires",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "typehash",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "witness",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        outputs: [
            {
                name: "claimhash",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "registeredAmounts",
                type: "uint256[]",
                internalType: "uint256[]",
            },
        ],
        stateMutability: "payable",
    },
];
var ITheCompact__factory = /** @class */ (function () {
    function ITheCompact__factory() {
    }
    ITheCompact__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ITheCompact__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ITheCompact__factory.abi = _abi;
    return ITheCompact__factory;
}());
exports.ITheCompact__factory = ITheCompact__factory;
