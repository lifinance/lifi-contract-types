"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IOFTV2WithFee__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_from",
                type: "address",
            },
            {
                internalType: "uint16",
                name: "_dstChainId",
                type: "uint16",
            },
            {
                internalType: "bytes32",
                name: "_toAddress",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_minAmount",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "address payable",
                        name: "refundAddress",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "zroPaymentAddress",
                        type: "address",
                    },
                    {
                        internalType: "bytes",
                        name: "adapterParams",
                        type: "bytes",
                    },
                ],
                internalType: "struct IOFTV2.LzCallParams",
                name: "_callParams",
                type: "tuple",
            },
        ],
        name: "sendFrom",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
var IOFTV2WithFee__factory = /** @class */ (function () {
    function IOFTV2WithFee__factory() {
    }
    IOFTV2WithFee__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    IOFTV2WithFee__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    IOFTV2WithFee__factory.abi = _abi;
    return IOFTV2WithFee__factory;
}());
exports.IOFTV2WithFee__factory = IOFTV2WithFee__factory;
