"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CalldataVerificationFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "extractBridgeData",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "extractData",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "extractGenericSwapParameters",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "sendingAssetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "address",
                internalType: "address",
            },
            {
                name: "receivingAssetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "receivingAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "extractMainParameters",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "bridge",
                type: "string",
                internalType: "string",
            },
            {
                name: "sendingAssetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "hasSourceSwaps",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "hasDestinationCall",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "extractNonEVMAddress",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "nonEVMAddress",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "extractSwapData",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "validateCalldata",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "bridge",
                type: "string",
                internalType: "string",
            },
            {
                name: "sendingAssetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "hasSourceSwaps",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "hasDestinationCall",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [
            {
                name: "isValid",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "validateDestinationCalldata",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "callTo",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "dstCalldata",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "isValid",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "error",
        name: "InvalidCallData",
        inputs: [],
    },
    {
        type: "error",
        name: "SliceOutOfBounds",
        inputs: [],
    },
    {
        type: "error",
        name: "SliceOverflow",
        inputs: [],
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b50612ba9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063d53482cf1161005b578063d53482cf14610152578063df1c3a5b14610175578063ee0aa32014610196578063f58ae2ce146101bc57600080fd5b8063070e81f11461008d578063103c5200146100b65780637f99d7af146100d7578063c318eeda146100f7575b600080fd5b6100a061009b3660046113d9565b6101cf565b6040516100ad9190611576565b60405180910390f35b6100c96100c43660046113d9565b6101e2565b6040516100ad92919061167e565b6100ea6100e53660046113d9565b61025d565b6040516100ad91906116ac565b61010a6101053660046113d9565b6102b9565b6040805173ffffffffffffffffffffffffffffffffffffffff96871681526020810195909552928516928401929092529092166060820152608081019190915260a0016100ad565b61016561016036600461170d565b6105b9565b60405190151581526020016100ad565b6101886101833660046113d9565b6107b8565b6040519081526020016100ad565b6101a96101a43660046113d9565b610832565b6040516100ad97969594939291906117dc565b6101656101ca36600461183a565b6108ed565b60606101db838361112d565b9392505050565b604080516101408101825260008082526060602083018190529282018390528282018190526080820181905260a0820181905260c0820181905260e0820181905261010082018190526101208201529061023c8484611151565b91508161010001511561025657610253848461112d565b90505b9250929050565b604080516101408101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101919091526101db8383611151565b6000808080806101e486116102fa576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060600088888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509394506103469250600491508390508b8d6118d4565b61034f916118fe565b90507fffffffff0000000000000000000000000000000000000000000000000000000081167f4666fc800000000000000000000000000000000000000000000000000000000014806103e257507fffffffff0000000000000000000000000000000000000000000000000000000081167f733214a300000000000000000000000000000000000000000000000000000000145b8061042e57507fffffffff0000000000000000000000000000000000000000000000000000000081167faf7060fd00000000000000000000000000000000000000000000000000000000145b1561050d5760408051600180825281830190925290816020015b6040805160e0810182526000808252602080830182905292820181905260608083018290526080830182905260a083015260c082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816104485790505092506104ca60048084516104c291906119a4565b8491906111bd565b8060200190518101906104dd9190611c0a565b8851929550909350915086906000906104f8576104f8611cb8565b6020908102919091010152909650935061053d565b61051f60048084516104c291906119a4565b8060200190518101906105329190611d96565b919a50975095505050505b8260008151811061055057610550611cb8565b60200260200101516040015197508260008151811061057157610571611cb8565b6020026020010151608001519650826001845161058e91906119a4565b8151811061059e5761059e611cb8565b60200260200101516060015194505050509295509295909350565b6000806105c68c8c611151565b905060008a8a6040516020016105dd929190611e37565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828252805160209182012060008452908301918290529151902090915081148061065b57508082602001516040516020016106439190611e47565b60405160208183030381529060405280519060200120145b80156106b5575073ffffffffffffffffffffffffffffffffffffffff808a1614806106b557508873ffffffffffffffffffffffffffffffffffffffff16826080015173ffffffffffffffffffffffffffffffffffffffff16145b801561070f575073ffffffffffffffffffffffffffffffffffffffff808916148061070f57508773ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff16145b801561074757507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8714806107475750868260c00151145b801561077f57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff86148061077f5750858260e00151145b801561079357508415158261010001511515145b80156107a757508315158261012001511515145b9d9c50505050505050505050505050565b60008083838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293506108019250869150859050611151565b61010001511561081d576064810151810160240151915061082b565b604481015181016024015191505b5092915050565b606060008060008060008060006108498a8a611151565b9050806101000151156108ac5760006108628b8b61112d565b90508060008151811061087757610877611cb8565b60200260200101516040015197508060008151811061089857610898611cb8565b6020026020010151608001519550506108bb565b806080015196508060c0015194505b602081015160a082015160e083015161010084015161012090940151929d999c50909a50959850949690955092505050565b60008087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509361093f935085016020908101925085019050611e63565b90507f72366cd3000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610a315760006109a6600480855161099e91906119a4565b8591906111bd565b8060200190518101906109b99190612033565b91505080600001518051906020012086866040516109d8929190611e37565b6040518091039020148015610a275750602081015173ffffffffffffffffffffffffffffffffffffffff16610a0f888a018a612097565b73ffffffffffffffffffffffffffffffffffffffff16145b9350505050611123565b7f7c0ce6e9000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610ac1576000610a8e600480855161099e91906119a4565b806020019051810190610aa191906120b4565b9250505080600001518051906020012086866040516109d8929190611e37565b7f41e15319000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610b8f576000610b1e600480855161099e91906119a4565b806020019051810190610b3191906121ef565b9150508060e00151805190602001208686604051610b50929190611e37565b6040518091039020148015610a2757508060c00151805190602001208888604051610b7c929190611e37565b6040518091039020149350505050611123565b7f12e879e7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610c1f576000610bec600480855161099e91906119a4565b806020019051810190610bff9190612249565b925050508060e00151805190602001208686604051610b50929190611e37565b7feb2acf89000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610d08576000610c7c600480855161099e91906119a4565b806020019051810190610c8f9190612443565b915050806020015160a00151805190602001208686604051610cb2929190611e37565b6040518091039020148015610a275750610a2788888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050505060208381015101516112d7565b7f59fef59a000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610d9c576000610d65600480855161099e91906119a4565b806020019051810190610d78919061249d565b92505050806020015160a00151805190602001208686604051610cb2929190611e37565b7ffaf6a213000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610e57576000610df9600480855161099e91906119a4565b806020019051810190610e0c91906125ee565b9150508060600151805190602001208686604051610e2b929190611e37565b6040518091039020148015610a2757508060400151805190602001208888604051610b7c929190611e37565b7f4f93ad26000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610ee7576000610eb4600480855161099e91906119a4565b806020019051810190610ec79190612648565b925050508060600151805190602001208686604051610e2b929190611e37565b7fd733bcea000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610fd1576000610f44600480855161099e91906119a4565b806020019051810190610f5791906127a4565b915050806101200151805190602001208686604051610f77929190611e37565b6040518091039020148015610a27575080516040805173ffffffffffffffffffffffffffffffffffffffff909216602083015201604051602081830303815290604052805190602001208888604051610b7c929190611e37565b7fd77cd343000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000082160161106257600061102e600480855161099e91906119a4565b80602001905181019061104191906127fe565b92505050806101200151805190602001208686604051610f77929190611e37565b7fd733bcea000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008216016110bf576000610f44600480855161099e91906119a4565b7fd77cd343000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000082160161111c57600061102e600480855161099e91906119a4565b6000925050505b9695505050505050565b606061113c82600481866118d4565b81019061114991906129a8565b949350505050565b604080516101408101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101919091526111b082600481866118d4565b8101906101db9190612b2b565b6060816111cb81601f612b60565b1015611203576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61120d8284612b60565b84511015611247576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608215801561126657604051915060008252602082016040526112ce565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561129f578051835260209283019201611287565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b600060148351101561136f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f496e76616c69642063616c6c546f206c656e6774683b2065787065637465642060448201527f6174206c65617374203230206279746573000000000000000000000000000000606482015260840160405180910390fd5b50602082015173ffffffffffffffffffffffffffffffffffffffff8281169116145b92915050565b60008083601f8401126113a957600080fd5b50813567ffffffffffffffff8111156113c157600080fd5b60208301915083602082850101111561025657600080fd5b600080602083850312156113ec57600080fd5b823567ffffffffffffffff81111561140357600080fd5b61140f85828601611397565b90969095509350505050565b60005b8381101561143657818101518382015260200161141e565b50506000910152565b6000815180845261145781602086016020860161141b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082825180855260208086019550808260051b84010181860160005b84811015611569577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08684030189528151805173ffffffffffffffffffffffffffffffffffffffff908116855285820151811686860152604080830151821690860152606080830151909116908501526080808201519085015260a08082015160e0828701819052919061153c8388018261143f565b9250505060c08083015192506115558187018415159052565b5099850199935050908301906001016114a6565b5090979650505050505050565b6020815260006101db6020830184611489565b60006101408251845260208301518160208601526115a98286018261143f565b915050604083015184820360408601526115c3828261143f565b91505060608301516115ed606086018273ffffffffffffffffffffffffffffffffffffffff169052565b506080830151611615608086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a083015161163d60a086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c083015160c085015260e083015160e0850152610100808401516116668287018215159052565b50506101209283015115159390920192909252919050565b6040815260006116916040830185611589565b82810360208401526116a38185611489565b95945050505050565b6020815260006101db6020830184611589565b73ffffffffffffffffffffffffffffffffffffffff811681146116e157600080fd5b50565b80356116ef816116bf565b919050565b80151581146116e157600080fd5b80356116ef816116f4565b6000806000806000806000806000806101008b8d03121561172d57600080fd5b8a3567ffffffffffffffff8082111561174557600080fd5b6117518e838f01611397565b909c509a5060208d013591508082111561176a57600080fd5b506117778d828e01611397565b90995097505060408b013561178b816116bf565b955060608b013561179b816116bf565b945060808b0135935060a08b0135925060c08b01356117b9816116f4565b915060e08b01356117c9816116f4565b809150509295989b9194979a5092959850565b60e0815260006117ef60e083018a61143f565b73ffffffffffffffffffffffffffffffffffffffff988916602084015296909716604082015260608101949094526080840192909252151560a0830152151560c09091015292915050565b6000806000806000806060878903121561185357600080fd5b863567ffffffffffffffff8082111561186b57600080fd5b6118778a838b01611397565b9098509650602089013591508082111561189057600080fd5b61189c8a838b01611397565b909650945060408901359150808211156118b557600080fd5b506118c289828a01611397565b979a9699509497509295939492505050565b600080858511156118e457600080fd5b838611156118f157600080fd5b5050820193919092039150565b7fffffffff00000000000000000000000000000000000000000000000000000000813581811691600485101561193e5780818660040360031b1b83161692505b505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561139157611391611975565b60405160e0810167ffffffffffffffff811182821017156119da576119da611946565b60405290565b604051610140810167ffffffffffffffff811182821017156119da576119da611946565b604051610100810167ffffffffffffffff811182821017156119da576119da611946565b6040516080810167ffffffffffffffff811182821017156119da576119da611946565b60405160c0810167ffffffffffffffff811182821017156119da576119da611946565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611ab557611ab5611946565b604052919050565b600067ffffffffffffffff821115611ad757611ad7611946565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112611b1457600080fd5b8151611b27611b2282611abd565b611a6e565b818152846020838601011115611b3c57600080fd5b61114982602083016020870161141b565b80516116ef816116bf565b80516116ef816116f4565b600060e08284031215611b7557600080fd5b611b7d6119b7565b9050611b8882611b4d565b8152611b9660208301611b4d565b6020820152611ba760408301611b4d565b6040820152611bb860608301611b4d565b60608201526080820151608082015260a082015167ffffffffffffffff811115611be157600080fd5b611bed84828501611b03565b60a083015250611bff60c08301611b58565b60c082015292915050565b60008060008060008060c08789031215611c2357600080fd5b86519550602087015167ffffffffffffffff80821115611c4257600080fd5b611c4e8a838b01611b03565b96506040890151915080821115611c6457600080fd5b611c708a838b01611b03565b955060608901519150611c82826116bf565b608089015160a08a0151929550935080821115611c9e57600080fd5b50611cab89828a01611b63565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600067ffffffffffffffff821115611d0157611d01611946565b5060051b60200190565b600082601f830112611d1c57600080fd5b81516020611d2c611b2283611ce7565b82815260059290921b84018101918181019086841115611d4b57600080fd5b8286015b84811015611d8b57805167ffffffffffffffff811115611d6f5760008081fd5b611d7d8986838b0101611b63565b845250918301918301611d4f565b509695505050505050565b60008060008060008060c08789031215611daf57600080fd5b86519550602087015167ffffffffffffffff80821115611dce57600080fd5b611dda8a838b01611b03565b96506040890151915080821115611df057600080fd5b611dfc8a838b01611b03565b955060608901519150611e0e826116bf565b608089015160a08a0151929550935080821115611e2a57600080fd5b50611cab89828a01611d0b565b8183823760009101908152919050565b60008251611e5981846020870161141b565b9190910192915050565b600060208284031215611e7557600080fd5b81517fffffffff00000000000000000000000000000000000000000000000000000000811681146101db57600080fd5b60006101408284031215611eb857600080fd5b611ec06119e0565b905081518152602082015167ffffffffffffffff80821115611ee157600080fd5b611eed85838601611b03565b60208401526040840151915080821115611f0657600080fd5b50611f1384828501611b03565b604083015250611f2560608301611b4d565b6060820152611f3660808301611b4d565b6080820152611f4760a08301611b4d565b60a082015260c082015160c082015260e082015160e0820152610100611f6e818401611b58565b90820152610120611f80838201611b58565b9082015292915050565b805163ffffffff811681146116ef57600080fd5b600060e08284031215611fb057600080fd5b611fb86119b7565b9050815167ffffffffffffffff811115611fd157600080fd5b611fdd84828501611b03565b825250611fec60208301611b4d565b6020820152604082015160408201526060820151606082015261201160808301611b4d565b608082015261202260a08301611f8a565b60a0820152611bff60c08301611b58565b6000806040838503121561204657600080fd5b825167ffffffffffffffff8082111561205e57600080fd5b61206a86838701611ea5565b9350602085015191508082111561208057600080fd5b5061208d85828601611f9e565b9150509250929050565b6000602082840312156120a957600080fd5b81356101db816116bf565b6000806000606084860312156120c957600080fd5b835167ffffffffffffffff808211156120e157600080fd5b6120ed87838801611ea5565b9450602086015191508082111561210357600080fd5b61210f87838801611d0b565b9350604086015191508082111561212557600080fd5b5061213286828701611f9e565b9150509250925092565b6000610100828403121561214f57600080fd5b612157611a04565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015261219160a08301611b4d565b60a082015260c082015167ffffffffffffffff808211156121b157600080fd5b6121bd85838601611b03565b60c084015260e08401519150808211156121d657600080fd5b506121e384828501611b03565b60e08301525092915050565b6000806040838503121561220257600080fd5b825167ffffffffffffffff8082111561221a57600080fd5b61222686838701611ea5565b9350602085015191508082111561223c57600080fd5b5061208d8582860161213c565b60008060006060848603121561225e57600080fd5b835167ffffffffffffffff8082111561227657600080fd5b61228287838801611ea5565b9450602086015191508082111561229857600080fd5b6122a487838801611d0b565b935060408601519150808211156122ba57600080fd5b506121328682870161213c565b6000604082840312156122d957600080fd5b6040516040810181811067ffffffffffffffff821117156122fc576122fc611946565b604052825181526020928301519281019290925250919050565b600060a0828403121561232857600080fd5b612330611a28565b9050815161ffff8116811461234457600080fd5b8152602082015167ffffffffffffffff8082111561236157600080fd5b9083019060e0828603121561237557600080fd5b61237d6119b7565b61238683611f8a565b81526020830151602082015260408301516040820152606083015160608201526080830151828111156123b857600080fd5b6123c487828601611b03565b60808301525060a0830151828111156123dc57600080fd5b6123e887828601611b03565b60a08301525060c08301518281111561240057600080fd5b61240c87828601611b03565b60c083015250602084015250612427905083604084016122c7565b604082015261243860808301611b4d565b606082015292915050565b6000806040838503121561245657600080fd5b825167ffffffffffffffff8082111561246e57600080fd5b61247a86838701611ea5565b9350602085015191508082111561249057600080fd5b5061208d85828601612316565b6000806000606084860312156124b257600080fd5b835167ffffffffffffffff808211156124ca57600080fd5b6124d687838801611ea5565b945060208601519150808211156124ec57600080fd5b6124f887838801611d0b565b9350604086015191508082111561250e57600080fd5b5061213286828701612316565b805167ffffffffffffffff811681146116ef57600080fd5b8051600781106116ef57600080fd5b600060c0828403121561255457600080fd5b61255c611a4b565b905061256782611f8a565b81526125756020830161251b565b6020820152604082015167ffffffffffffffff8082111561259557600080fd5b6125a185838601611b03565b604084015260608401519150808211156125ba57600080fd5b506125c784828501611b03565b606083015250608082015160808201526125e360a08301612533565b60a082015292915050565b6000806040838503121561260157600080fd5b825167ffffffffffffffff8082111561261957600080fd5b61262586838701611ea5565b9350602085015191508082111561263b57600080fd5b5061208d85828601612542565b60008060006060848603121561265d57600080fd5b835167ffffffffffffffff8082111561267557600080fd5b61268187838801611ea5565b9450602086015191508082111561269757600080fd5b6126a387838801611d0b565b935060408601519150808211156126b957600080fd5b5061213286828701612542565b600061014082840312156126d957600080fd5b6126e16119e0565b90506126ec82611b4d565b81526126fa60208301611b4d565b602082015261270b60408301611b4d565b6040820152606082015160608201526127266080830161251b565b608082015261273760a08301611b4d565b60a082015261274860c08301611f8a565b60c082015261275960e08301611f8a565b60e082015261010061276c818401611f8a565b908201526101208281015167ffffffffffffffff81111561278c57600080fd5b61279885828601611b03565b82840152505092915050565b600080604083850312156127b757600080fd5b825167ffffffffffffffff808211156127cf57600080fd5b6127db86838701611ea5565b935060208501519150808211156127f157600080fd5b5061208d858286016126c6565b60008060006060848603121561281357600080fd5b835167ffffffffffffffff8082111561282b57600080fd5b61283787838801611ea5565b9450602086015191508082111561284d57600080fd5b61285987838801611d0b565b9350604086015191508082111561286f57600080fd5b50612132868287016126c6565b600082601f83011261288d57600080fd5b813561289b611b2282611abd565b8181528460208386010111156128b057600080fd5b816020850160208301376000918101602001919091529392505050565b600061014082840312156128e057600080fd5b6128e86119e0565b905081358152602082013567ffffffffffffffff8082111561290957600080fd5b6129158583860161287c565b6020840152604084013591508082111561292e57600080fd5b5061293b8482850161287c565b60408301525061294d606083016116e4565b606082015261295e608083016116e4565b608082015261296f60a083016116e4565b60a082015260c082013560c082015260e082013560e0820152610100612996818401611702565b90820152610120611f80838201611702565b600080604083850312156129bb57600080fd5b823567ffffffffffffffff808211156129d357600080fd5b6129df868387016128cd565b93506020915081850135818111156129f657600080fd5b8501601f81018713612a0757600080fd5b8035612a15611b2282611ce7565b81815260059190911b82018401908481019089831115612a3457600080fd5b8584015b83811015612b1a57803586811115612a4f57600080fd5b850160e0818d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0011215612a8357600080fd5b612a8b6119b7565b612a968983016116e4565b8152612aa4604083016116e4565b89820152612ab4606083016116e4565b6040820152612ac5608083016116e4565b606082015260a0820135608082015260c08083013589811115612ae85760008081fd5b612af68f8c8387010161287c565b60a084015250612b0860e08401611702565b90820152845250918601918601612a38565b508096505050505050509250929050565b600060208284031215612b3d57600080fd5b813567ffffffffffffffff811115612b5457600080fd5b611149848285016128cd565b808201808211156113915761139161197556fea26469706673582212200581e9a52814bc439e83fde675bb5b27f073e680259617c5c4d4cd3aa593cd4f64736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var CalldataVerificationFacet__factory = /** @class */ (function (_super) {
    __extends(CalldataVerificationFacet__factory, _super);
    function CalldataVerificationFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    CalldataVerificationFacet__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    CalldataVerificationFacet__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    CalldataVerificationFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    CalldataVerificationFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    CalldataVerificationFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    CalldataVerificationFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    CalldataVerificationFacet__factory.bytecode = _bytecode;
    CalldataVerificationFacet__factory.abi = _abi;
    return CalldataVerificationFacet__factory;
}(ethers_1.ContractFactory));
exports.CalldataVerificationFacet__factory = CalldataVerificationFacet__factory;
