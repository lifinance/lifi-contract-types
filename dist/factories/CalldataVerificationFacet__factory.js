"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CalldataVerificationFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        name: "SliceOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOverflow",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "extractBridgeData",
        outputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "bridgeData",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "extractData",
        outputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "swapData",
                type: "tuple[]",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "extractGenericSwapParameters",
        outputs: [
            {
                internalType: "address",
                name: "sendingAssetId",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "receivingAmount",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "extractMainParameters",
        outputs: [
            {
                internalType: "string",
                name: "bridge",
                type: "string",
            },
            {
                internalType: "address",
                name: "sendingAssetId",
                type: "address",
            },
            {
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "destinationChainId",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "hasSourceSwaps",
                type: "bool",
            },
            {
                internalType: "bool",
                name: "hasDestinationCall",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "extractSwapData",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "swapData",
                type: "tuple[]",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
            {
                internalType: "string",
                name: "bridge",
                type: "string",
            },
            {
                internalType: "address",
                name: "sendingAssetId",
                type: "address",
            },
            {
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "destinationChainId",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "hasSourceSwaps",
                type: "bool",
            },
            {
                internalType: "bool",
                name: "hasDestinationCall",
                type: "bool",
            },
        ],
        name: "validateCalldata",
        outputs: [
            {
                internalType: "bool",
                name: "isValid",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "callTo",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "dstCalldata",
                type: "bytes",
            },
        ],
        name: "validateDestinationCalldata",
        outputs: [
            {
                internalType: "bool",
                name: "isValid",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b506123e0806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c318eeda1161005b578063c318eeda146100ec578063d53482cf14610147578063ee0aa3201461016a578063f58ae2ce1461019057600080fd5b8063070e81f114610082578063103c5200146100ab5780637f99d7af146100cc575b600080fd5b610095610090366004610f5f565b6101a3565b6040516100a291906110fc565b60405180910390f35b6100be6100b9366004610f5f565b6101b6565b6040516100a2929190611204565b6100df6100da366004610f5f565b610231565b6040516100a29190611232565b6100ff6100fa366004610f5f565b61028d565b6040805173ffffffffffffffffffffffffffffffffffffffff96871681526020810195909552928516928401929092529092166060820152608081019190915260a0016100a2565b61015a610155366004611293565b6103e4565b60405190151581526020016100a2565b61017d610178366004610f5f565b610675565b6040516100a29796959493929190611362565b61015a61019e3660046113c0565b610730565b60606101af8383610c31565b9392505050565b604080516101408101825260008082526060602083018190529282018390528282018190526080820181905260a0820181905260c0820181905260e082018190526101008201819052610120820152906102108484610cf8565b91508161010001511561022a576102278484610c31565b90505b9250929050565b604080516101408101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101919091526101af8383610cf8565b60008080808060607fd6a4bc50000000000000000000000000000000000000000000000000000000006102c2888a018a611488565b7fffffffff0000000000000000000000000000000000000000000000000000000016036103455760006102f8886004818c6114a5565b810190610305919061167d565b9050610321600480835161031991906116e9565b839190610e03565b80602001905181019061033491906118c2565b9199509650945061036a9350505050565b610352876004818b6114a5565b81019061035f9190611aac565b919850955093505050505b8060008151811061037d5761037d611b4e565b60200260200101516040015195508060008151811061039e5761039e611b4e565b602002602001015160800151945080600182516103bb91906116e9565b815181106103cb576103cb611b4e565b6020026020010151606001519250509295509295909350565b604080516101408101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261043f8c8c610675565b1515610120880152151561010087015260e086015260c085015273ffffffffffffffffffffffffffffffffffffffff90811660a0850152166080830152602080830191909152604080516000815291820180825282519020916104a6918d918d9101611b7d565b604051602081830303815290604052805190602001201480610519575089896040516020016104d6929190611b7d565b6040516020818303038152906040528051906020012081602001516040516020016105019190611b8d565b60405160208183030381529060405280519060200120145b8015610573575073ffffffffffffffffffffffffffffffffffffffff808916148061057357508773ffffffffffffffffffffffffffffffffffffffff16816080015173ffffffffffffffffffffffffffffffffffffffff16145b80156105cd575073ffffffffffffffffffffffffffffffffffffffff80881614806105cd57508673ffffffffffffffffffffffffffffffffffffffff168160a0015173ffffffffffffffffffffffffffffffffffffffff16145b801561060557507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8614806106055750858160c00151145b801561063d57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85148061063d5750848160e00151145b801561065157508315158161010001511515145b801561066557508215158161012001511515145b9c9b505050505050505050505050565b6060600080600080600080600061068c8a8a610cf8565b9050806101000151156106ef5760006106a58b8b610c31565b9050806000815181106106ba576106ba611b4e565b6020026020010151604001519750806000815181106106db576106db611b4e565b6020026020010151608001519550506106fe565b806080015196508060c0015194505b602081015160a082015160e083015161010084015161012090940151929d999c50909a50959850949690955092505050565b60008087878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293507fd6a4bc5000000000000000000000000000000000000000000000000000000000925061079b915050888a018a611488565b7fffffffff0000000000000000000000000000000000000000000000000000000016036107df576107cf876004818b6114a5565b8101906107dc919061167d565b90505b6000818060200190518101906107f59190611ba9565b90507f72366cd3000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008216016108e757600061085c600480855161085491906116e9565b859190610e03565b80602001905181019061086f9190611d5f565b915050806000015180519060200120868660405161088e929190611b7d565b60405180910390201480156108dd5750602081015173ffffffffffffffffffffffffffffffffffffffff166108c5888a018a611dc3565b73ffffffffffffffffffffffffffffffffffffffff16145b9350505050610c27565b7f7c0ce6e9000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610977576000610944600480855161085491906116e9565b8060200190518101906109579190611de0565b92505050806000015180519060200120868660405161088e929190611b7d565b7f41e15319000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610a455760006109d4600480855161085491906116e9565b8060200190518101906109e79190611f1b565b9150508060e00151805190602001208686604051610a06929190611b7d565b60405180910390201480156108dd57508060c00151805190602001208888604051610a32929190611b7d565b6040518091039020149350505050610c27565b7f12e879e7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610ad5576000610aa2600480855161085491906116e9565b806020019051810190610ab59190611f75565b925050508060e00151805190602001208686604051610a06929190611b7d565b7ffaf6a213000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610b90576000610b32600480855161085491906116e9565b806020019051810190610b4591906120c6565b9150508060600151805190602001208686604051610b64929190611b7d565b60405180910390201480156108dd57508060400151805190602001208888604051610a32929190611b7d565b7f4f93ad26000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610c20576000610bed600480855161085491906116e9565b806020019051810190610c009190612120565b925050508060600151805190602001208686604051610b64929190611b7d565b6000925050505b9695505050505050565b60607fd6a4bc5000000000000000000000000000000000000000000000000000000000610c6083850185611488565b7fffffffff000000000000000000000000000000000000000000000000000000001603610cd4576000610c9683600481876114a5565b810190610ca3919061167d565b9050610cb7600480835161031991906116e9565b806020019051810190610cca919061219e565b9250610cf2915050565b610ce182600481866114a5565b810190610cee91906122d3565b9150505b92915050565b604080516101408101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101919091527fd6a4bc5000000000000000000000000000000000000000000000000000000000610d7783850185611488565b7fffffffff000000000000000000000000000000000000000000000000000000001603610de9576000610dad83600481876114a5565b810190610dba919061167d565b9050610dce600480835161031991906116e9565b806020019051810190610de1919061232d565b915050610cf2565b610df682600481866114a5565b8101906101af9190612362565b606081610e1181601f612397565b1015610e49576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e538284612397565b84511015610e8d576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015610eac5760405191506000825260208201604052610f14565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015610ee5578051835260209283019201610ecd565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60008083601f840112610f2f57600080fd5b50813567ffffffffffffffff811115610f4757600080fd5b60208301915083602082850101111561022a57600080fd5b60008060208385031215610f7257600080fd5b823567ffffffffffffffff811115610f8957600080fd5b610f9585828601610f1d565b90969095509350505050565b60005b83811015610fbc578181015183820152602001610fa4565b50506000910152565b60008151808452610fdd816020860160208601610fa1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082825180855260208086019550808260051b84010181860160005b848110156110ef577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08684030189528151805173ffffffffffffffffffffffffffffffffffffffff908116855285820151811686860152604080830151821690860152606080830151909116908501526080808201519085015260a08082015160e082870181905291906110c283880182610fc5565b9250505060c08083015192506110db8187018415159052565b50998501999350509083019060010161102c565b5090979650505050505050565b6020815260006101af602083018461100f565b600061014082518452602083015181602086015261112f82860182610fc5565b915050604083015184820360408601526111498282610fc5565b9150506060830151611173606086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608083015161119b608086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a08301516111c360a086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c083015160c085015260e083015160e0850152610100808401516111ec8287018215159052565b50506101209283015115159390920192909252919050565b604081526000611217604083018561110f565b8281036020840152611229818561100f565b95945050505050565b6020815260006101af602083018461110f565b73ffffffffffffffffffffffffffffffffffffffff8116811461126757600080fd5b50565b803561127581611245565b919050565b801515811461126757600080fd5b80356112758161127a565b6000806000806000806000806000806101008b8d0312156112b357600080fd5b8a3567ffffffffffffffff808211156112cb57600080fd5b6112d78e838f01610f1d565b909c509a5060208d01359150808211156112f057600080fd5b506112fd8d828e01610f1d565b90995097505060408b013561131181611245565b955060608b013561132181611245565b945060808b0135935060a08b0135925060c08b013561133f8161127a565b915060e08b013561134f8161127a565b809150509295989b9194979a5092959850565b60e08152600061137560e083018a610fc5565b73ffffffffffffffffffffffffffffffffffffffff988916602084015296909716604082015260608101949094526080840192909252151560a0830152151560c09091015292915050565b600080600080600080606087890312156113d957600080fd5b863567ffffffffffffffff808211156113f157600080fd5b6113fd8a838b01610f1d565b9098509650602089013591508082111561141657600080fd5b6114228a838b01610f1d565b9096509450604089013591508082111561143b57600080fd5b5061144889828a01610f1d565b979a9699509497509295939492505050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461126757600080fd5b60006020828403121561149a57600080fd5b81356101af8161145a565b600080858511156114b557600080fd5b838611156114c257600080fd5b5050820193919092039150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715611521576115216114cf565b60405290565b604051610140810167ffffffffffffffff81118282101715611521576115216114cf565b604051610100810167ffffffffffffffff81118282101715611521576115216114cf565b60405160c0810167ffffffffffffffff81118282101715611521576115216114cf565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156115d9576115d96114cf565b604052919050565b600067ffffffffffffffff8211156115fb576115fb6114cf565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261163857600080fd5b813561164b611646826115e1565b611592565b81815284602083860101111561166057600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561168f57600080fd5b813567ffffffffffffffff8111156116a657600080fd5b6116b284828501611627565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610cf257610cf26116ba565b600082601f83011261170d57600080fd5b815161171b611646826115e1565b81815284602083860101111561173057600080fd5b6116b2826020830160208701610fa1565b805161127581611245565b600067ffffffffffffffff821115611766576117666114cf565b5060051b60200190565b80516112758161127a565b600082601f83011261178c57600080fd5b8151602061179c6116468361174c565b82815260059290921b840181019181810190868411156117bb57600080fd5b8286015b848110156118b757805167ffffffffffffffff808211156117e05760008081fd5b818901915060e0807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848d030112156118195760008081fd5b6118216114fe565b61182c888501611741565b8152604061183b818601611741565b89830152606061184c818701611741565b828401526080915061185f828701611741565b818401525060a0808601518284015260c0915081860151858111156118845760008081fd5b6118928f8c838a01016116fc565b8285015250506118a3838601611770565b9082015286525050509183019183016117bf565b509695505050505050565b60008060008060008060c087890312156118db57600080fd5b86519550602087015167ffffffffffffffff808211156118fa57600080fd5b6119068a838b016116fc565b9650604089015191508082111561191c57600080fd5b6119288a838b016116fc565b95506060890151915061193a82611245565b608089015160a08a015192955093508082111561195657600080fd5b5061196389828a0161177b565b9150509295509295509295565b600082601f83011261198157600080fd5b813560206119916116468361174c565b82815260059290921b840181019181810190868411156119b057600080fd5b8286015b848110156118b757803567ffffffffffffffff808211156119d55760008081fd5b818901915060e0807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848d03011215611a0e5760008081fd5b611a166114fe565b611a2188850161126a565b81526040611a3081860161126a565b898301526060611a4181870161126a565b8284015260809150611a5482870161126a565b818401525060a0808601358284015260c091508186013585811115611a795760008081fd5b611a878f8c838a0101611627565b828501525050611a98838601611288565b9082015286525050509183019183016119b4565b60008060008060008060c08789031215611ac557600080fd5b86359550602087013567ffffffffffffffff80821115611ae457600080fd5b611af08a838b01611627565b96506040890135915080821115611b0657600080fd5b611b128a838b01611627565b955060608901359150611b2482611245565b9093506080880135925060a08801359080821115611b4157600080fd5b5061196389828a01611970565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8183823760009101908152919050565b60008251611b9f818460208701610fa1565b9190910192915050565b600060208284031215611bbb57600080fd5b81516101af8161145a565b60006101408284031215611bd957600080fd5b611be1611527565b905081518152602082015167ffffffffffffffff80821115611c0257600080fd5b611c0e858386016116fc565b60208401526040840151915080821115611c2757600080fd5b50611c34848285016116fc565b604083015250611c4660608301611741565b6060820152611c5760808301611741565b6080820152611c6860a08301611741565b60a082015260c082015160c082015260e082015160e0820152610100611c8f818401611770565b90820152610120611ca1838201611770565b9082015292915050565b805163ffffffff8116811461127557600080fd5b600060e08284031215611cd157600080fd5b611cd96114fe565b9050815167ffffffffffffffff811115611cf257600080fd5b611cfe848285016116fc565b825250611d0d60208301611741565b60208201526040820151604082015260608201516060820152611d3260808301611741565b6080820152611d4360a08301611cab565b60a0820152611d5460c08301611770565b60c082015292915050565b60008060408385031215611d7257600080fd5b825167ffffffffffffffff80821115611d8a57600080fd5b611d9686838701611bc6565b93506020850151915080821115611dac57600080fd5b50611db985828601611cbf565b9150509250929050565b600060208284031215611dd557600080fd5b81356101af81611245565b600080600060608486031215611df557600080fd5b835167ffffffffffffffff80821115611e0d57600080fd5b611e1987838801611bc6565b94506020860151915080821115611e2f57600080fd5b611e3b8783880161177b565b93506040860151915080821115611e5157600080fd5b50611e5e86828701611cbf565b9150509250925092565b60006101008284031215611e7b57600080fd5b611e8361154b565b90508151815260208201516020820152604082015160408201526060820151606082015260808201516080820152611ebd60a08301611741565b60a082015260c082015167ffffffffffffffff80821115611edd57600080fd5b611ee9858386016116fc565b60c084015260e0840151915080821115611f0257600080fd5b50611f0f848285016116fc565b60e08301525092915050565b60008060408385031215611f2e57600080fd5b825167ffffffffffffffff80821115611f4657600080fd5b611f5286838701611bc6565b93506020850151915080821115611f6857600080fd5b50611db985828601611e68565b600080600060608486031215611f8a57600080fd5b835167ffffffffffffffff80821115611fa257600080fd5b611fae87838801611bc6565b94506020860151915080821115611fc457600080fd5b611fd08783880161177b565b93506040860151915080821115611fe657600080fd5b50611e5e86828701611e68565b805167ffffffffffffffff8116811461127557600080fd5b80516007811061127557600080fd5b600060c0828403121561202c57600080fd5b61203461156f565b905061203f82611cab565b815261204d60208301611ff3565b6020820152604082015167ffffffffffffffff8082111561206d57600080fd5b612079858386016116fc565b6040840152606084015191508082111561209257600080fd5b5061209f848285016116fc565b606083015250608082015160808201526120bb60a0830161200b565b60a082015292915050565b600080604083850312156120d957600080fd5b825167ffffffffffffffff808211156120f157600080fd5b6120fd86838701611bc6565b9350602085015191508082111561211357600080fd5b50611db98582860161201a565b60008060006060848603121561213557600080fd5b835167ffffffffffffffff8082111561214d57600080fd5b61215987838801611bc6565b9450602086015191508082111561216f57600080fd5b61217b8783880161177b565b9350604086015191508082111561219157600080fd5b50611e5e8682870161201a565b600080604083850312156121b157600080fd5b825167ffffffffffffffff808211156121c957600080fd5b6121d586838701611bc6565b935060208501519150808211156121eb57600080fd5b50611db98582860161177b565b6000610140828403121561220b57600080fd5b612213611527565b905081358152602082013567ffffffffffffffff8082111561223457600080fd5b61224085838601611627565b6020840152604084013591508082111561225957600080fd5b5061226684828501611627565b6040830152506122786060830161126a565b60608201526122896080830161126a565b608082015261229a60a0830161126a565b60a082015260c082013560c082015260e082013560e08201526101006122c1818401611288565b90820152610120611ca1838201611288565b600080604083850312156122e657600080fd5b823567ffffffffffffffff808211156122fe57600080fd5b61230a868387016121f8565b9350602085013591508082111561232057600080fd5b50611db985828601611970565b60006020828403121561233f57600080fd5b815167ffffffffffffffff81111561235657600080fd5b6116b284828501611bc6565b60006020828403121561237457600080fd5b813567ffffffffffffffff81111561238b57600080fd5b6116b2848285016121f8565b80820180821115610cf257610cf26116ba56fea26469706673582212203adff70f817e3057c3f7584db2ad60c006aea75f33dde158a8f1a806dd41578564736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var CalldataVerificationFacet__factory = /** @class */ (function (_super) {
    __extends(CalldataVerificationFacet__factory, _super);
    function CalldataVerificationFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    CalldataVerificationFacet__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    CalldataVerificationFacet__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    CalldataVerificationFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    CalldataVerificationFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    CalldataVerificationFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    CalldataVerificationFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    CalldataVerificationFacet__factory.bytecode = _bytecode;
    CalldataVerificationFacet__factory.abi = _abi;
    return CalldataVerificationFacet__factory;
}(ethers_1.ContractFactory));
exports.CalldataVerificationFacet__factory = CalldataVerificationFacet__factory;
