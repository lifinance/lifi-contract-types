"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CalldataVerificationFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "extractBridgeData",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "extractData",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "extractGenericSwapParameters",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "sendingAssetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "address",
                internalType: "address",
            },
            {
                name: "receivingAssetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "receivingAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "extractMainParameters",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "bridge",
                type: "string",
                internalType: "string",
            },
            {
                name: "sendingAssetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "hasSourceSwaps",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "hasDestinationCall",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "extractNonEVMAddress",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "nonEVMAddress",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "extractSwapData",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "validateCalldata",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "bridge",
                type: "string",
                internalType: "string",
            },
            {
                name: "sendingAssetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "hasSourceSwaps",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "hasDestinationCall",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [
            {
                name: "isValid",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "validateDestinationCalldata",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "callTo",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "dstCalldata",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "isValid",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "error",
        name: "InvalidCallData",
        inputs: [],
    },
    {
        type: "error",
        name: "SliceOutOfBounds",
        inputs: [],
    },
    {
        type: "error",
        name: "SliceOverflow",
        inputs: [],
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b50612988806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063d53482cf1161005b578063d53482cf14610152578063df1c3a5b14610175578063ee0aa32014610196578063f58ae2ce146101bc57600080fd5b8063070e81f11461008d578063103c5200146100b65780637f99d7af146100d7578063c318eeda146100f7575b600080fd5b6100a061009b366004611425565b6101cf565b6040516100ad91906115c2565b60405180910390f35b6100c96100c4366004611425565b6101e2565b6040516100ad9291906116ca565b6100ea6100e5366004611425565b61025d565b6040516100ad91906116f8565b61010a610105366004611425565b6102b9565b6040805173ffffffffffffffffffffffffffffffffffffffff96871681526020810195909552928516928401929092529092166060820152608081019190915260a0016100ad565b610165610160366004611759565b610665565b60405190151581526020016100ad565b610188610183366004611425565b610864565b6040519081526020016100ad565b6101a96101a4366004611425565b61095c565b6040516100ad9796959493929190611828565b6101656101ca366004611886565b610a17565b60606101db838361101b565b9392505050565b604080516101408101825260008082526060602083018190529282018390528282018190526080820181905260a0820181905260c0820181905260e0820181905261010082018190526101208201529061023c84846110f5565b91508161010001511561025657610253848461101b565b90505b9250929050565b604080516101408101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101919091526101db83836110f5565b6000808080806101e486116102fa576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606080600061030c6004828b8d611920565b6103159161194a565b90507f295b43b0000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008216016103c35761036e604860448b8d611920565b6103779161194a565b9050610386896044818d611920565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509294506103fd92505050565b89898080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509294505050505b7fffffffff0000000000000000000000000000000000000000000000000000000081167f4666fc8000000000000000000000000000000000000000000000000000000000148061048e57507fffffffff0000000000000000000000000000000000000000000000000000000081167f733214a300000000000000000000000000000000000000000000000000000000145b806104da57507fffffffff0000000000000000000000000000000000000000000000000000000081167faf7060fd00000000000000000000000000000000000000000000000000000000145b156105b95760408051600180825281830190925290816020015b6040805160e0810182526000808252602080830182905292820181905260608083018290526080830182905260a083015260c082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816104f4579050509250610576600480845161056e91906119f0565b84919061120b565b8060200190518101906105899190611c3a565b8851929550909350915086906000906105a4576105a4611ce8565b602090810291909101015290965093506105e9565b6105cb600480845161056e91906119f0565b8060200190518101906105de9190611dc6565b919a50975095505050505b826000815181106105fc576105fc611ce8565b60200260200101516040015197508260008151811061061d5761061d611ce8565b6020026020010151608001519650826001845161063a91906119f0565b8151811061064a5761064a611ce8565b60200260200101516060015194505050509295509295909350565b6000806106728c8c6110f5565b905060008a8a604051602001610689929190611e67565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828252805160209182012060008452908301918290529151902090915081148061070757508082602001516040516020016106ef9190611e77565b60405160208183030381529060405280519060200120145b8015610761575073ffffffffffffffffffffffffffffffffffffffff808a16148061076157508873ffffffffffffffffffffffffffffffffffffffff16826080015173ffffffffffffffffffffffffffffffffffffffff16145b80156107bb575073ffffffffffffffffffffffffffffffffffffffff80891614806107bb57508773ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff16145b80156107f357507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8714806107f35750868260c00151145b801561082b57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff86148061082b5750858260e00151145b801561083f57508415158261010001511515145b801561085357508315158261012001511515145b9d9c50505050505050505050505050565b600060607fd6a4bc50000000000000000000000000000000000000000000000000000000006108966004848688611920565b61089f9161194a565b7fffffffff0000000000000000000000000000000000000000000000000000000016036108e7576108d38360048187611920565b8101906108e09190611ee4565b9050610921565b83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b61092b84846110f5565b6101000151156109475760648101518101602401519150610955565b604481015181016024015191505b5092915050565b606060008060008060008060006109738a8a6110f5565b9050806101000151156109d657600061098c8b8b61101b565b9050806000815181106109a1576109a1611ce8565b6020026020010151604001519750806000815181106109c2576109c2611ce8565b6020026020010151608001519550506109e5565b806080015196508060c0015194505b602081015160a082015160e083015161010084015161012090940151929d999c50909a50959850949690955092505050565b60008087878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509394507fd6a4bc500000000000000000000000000000000000000000000000000000000093610a8393506004925090508a8c611920565b610a8c9161194a565b7fffffffff000000000000000000000000000000000000000000000000000000001603610ad057610ac0876004818b611920565b810190610acd9190611ee4565b90505b600081806020019051810190610ae69190611f19565b90507feb2acf89000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610be3576000610b4d6004808551610b4591906119f0565b85919061120b565b806020019051810190610b6091906121d0565b915050806020015160a00151805190602001208686604051610b83929190611e67565b6040518091039020148015610bd95750610bd988888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050506020838101510151611325565b9350505050611011565b7f59fef59a000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610c77576000610c406004808551610b4591906119f0565b806020019051810190610c539190612234565b92505050806020015160a00151805190602001208686604051610b83929190611e67565b7ffaf6a213000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610d45576000610cd46004808551610b4591906119f0565b806020019051810190610ce7919061238f565b9150508060600151805190602001208686604051610d06929190611e67565b6040518091039020148015610bd957508060400151805190602001208888604051610d32929190611e67565b6040518091039020149350505050611011565b7f4f93ad26000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610dd5576000610da26004808551610b4591906119f0565b806020019051810190610db591906123e9565b925050508060600151805190602001208686604051610d06929190611e67565b7fd733bcea000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610ebf576000610e326004808551610b4591906119f0565b806020019051810190610e459190612545565b915050806101200151805190602001208686604051610e65929190611e67565b6040518091039020148015610bd9575080516040805173ffffffffffffffffffffffffffffffffffffffff909216602083015201604051602081830303815290604052805190602001208888604051610d32929190611e67565b7fd77cd343000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610f50576000610f1c6004808551610b4591906119f0565b806020019051810190610f2f919061259f565b92505050806101200151805190602001208686604051610e65929190611e67565b7fd733bcea000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610fad576000610e326004808551610b4591906119f0565b7fd77cd343000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000082160161100a576000610f1c6004808551610b4591906119f0565b6000925050505b9695505050505050565b60607fd6a4bc500000000000000000000000000000000000000000000000000000000061104c600460008587611920565b6110559161194a565b7fffffffff0000000000000000000000000000000000000000000000000000000016036110d157600061108b8360048187611920565b8101906110989190611ee4565b90506110b460048083516110ac91906119f0565b83919061120b565b8060200190518101906110c7919061261d565b92506110ef915050565b6110de8260048186611920565b8101906110eb9190612752565b9150505b92915050565b604080516101408101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101919091527fd6a4bc5000000000000000000000000000000000000000000000000000000000611176600460008587611920565b61117f9161194a565b7fffffffff0000000000000000000000000000000000000000000000000000000016036111f15760006111b58360048187611920565b8101906111c29190611ee4565b90506111d660048083516110ac91906119f0565b8060200190518101906111e991906128d5565b9150506110ef565b6111fe8260048186611920565b8101906101db919061290a565b60608161121981601f61293f565b1015611251576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61125b828461293f565b84511015611295576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060821580156112b4576040519150600082526020820160405261131c565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156112ed5780518352602092830192016112d5565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60006014835110156113bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f496e76616c69642063616c6c546f206c656e6774683b2065787065637465642060448201527f6174206c65617374203230206279746573000000000000000000000000000000606482015260840160405180910390fd5b506020919091015173ffffffffffffffffffffffffffffffffffffffff91821691161490565b60008083601f8401126113f557600080fd5b50813567ffffffffffffffff81111561140d57600080fd5b60208301915083602082850101111561025657600080fd5b6000806020838503121561143857600080fd5b823567ffffffffffffffff81111561144f57600080fd5b61145b858286016113e3565b90969095509350505050565b60005b8381101561148257818101518382015260200161146a565b50506000910152565b600081518084526114a3816020860160208601611467565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082825180855260208086019550808260051b84010181860160005b848110156115b5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08684030189528151805173ffffffffffffffffffffffffffffffffffffffff908116855285820151811686860152604080830151821690860152606080830151909116908501526080808201519085015260a08082015160e082870181905291906115888388018261148b565b9250505060c08083015192506115a18187018415159052565b5099850199935050908301906001016114f2565b5090979650505050505050565b6020815260006101db60208301846114d5565b60006101408251845260208301518160208601526115f58286018261148b565b9150506040830151848203604086015261160f828261148b565b9150506060830151611639606086018273ffffffffffffffffffffffffffffffffffffffff169052565b506080830151611661608086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a083015161168960a086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c083015160c085015260e083015160e0850152610100808401516116b28287018215159052565b50506101209283015115159390920192909252919050565b6040815260006116dd60408301856115d5565b82810360208401526116ef81856114d5565b95945050505050565b6020815260006101db60208301846115d5565b73ffffffffffffffffffffffffffffffffffffffff8116811461172d57600080fd5b50565b803561173b8161170b565b919050565b801515811461172d57600080fd5b803561173b81611740565b6000806000806000806000806000806101008b8d03121561177957600080fd5b8a3567ffffffffffffffff8082111561179157600080fd5b61179d8e838f016113e3565b909c509a5060208d01359150808211156117b657600080fd5b506117c38d828e016113e3565b90995097505060408b01356117d78161170b565b955060608b01356117e78161170b565b945060808b0135935060a08b0135925060c08b013561180581611740565b915060e08b013561181581611740565b809150509295989b9194979a5092959850565b60e08152600061183b60e083018a61148b565b73ffffffffffffffffffffffffffffffffffffffff988916602084015296909716604082015260608101949094526080840192909252151560a0830152151560c09091015292915050565b6000806000806000806060878903121561189f57600080fd5b863567ffffffffffffffff808211156118b757600080fd5b6118c38a838b016113e3565b909850965060208901359150808211156118dc57600080fd5b6118e88a838b016113e3565b9096509450604089013591508082111561190157600080fd5b5061190e89828a016113e3565b979a9699509497509295939492505050565b6000808585111561193057600080fd5b8386111561193d57600080fd5b5050820193919092039150565b7fffffffff00000000000000000000000000000000000000000000000000000000813581811691600485101561198a5780818660040360031b1b83161692505b505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156110ef576110ef6119c1565b60405160e0810167ffffffffffffffff81118282101715611a2657611a26611992565b60405290565b604051610140810167ffffffffffffffff81118282101715611a2657611a26611992565b6040516080810167ffffffffffffffff81118282101715611a2657611a26611992565b60405160c0810167ffffffffffffffff81118282101715611a2657611a26611992565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611add57611add611992565b604052919050565b600067ffffffffffffffff821115611aff57611aff611992565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112611b3c57600080fd5b8151611b4f611b4a82611ae5565b611a96565b818152846020838601011115611b6457600080fd5b611b75826020830160208701611467565b949350505050565b805161173b8161170b565b805161173b81611740565b600060e08284031215611ba557600080fd5b611bad611a03565b9050611bb882611b7d565b8152611bc660208301611b7d565b6020820152611bd760408301611b7d565b6040820152611be860608301611b7d565b60608201526080820151608082015260a082015167ffffffffffffffff811115611c1157600080fd5b611c1d84828501611b2b565b60a083015250611c2f60c08301611b88565b60c082015292915050565b60008060008060008060c08789031215611c5357600080fd5b86519550602087015167ffffffffffffffff80821115611c7257600080fd5b611c7e8a838b01611b2b565b96506040890151915080821115611c9457600080fd5b611ca08a838b01611b2b565b955060608901519150611cb28261170b565b608089015160a08a0151929550935080821115611cce57600080fd5b50611cdb89828a01611b93565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600067ffffffffffffffff821115611d3157611d31611992565b5060051b60200190565b600082601f830112611d4c57600080fd5b81516020611d5c611b4a83611d17565b82815260059290921b84018101918181019086841115611d7b57600080fd5b8286015b84811015611dbb57805167ffffffffffffffff811115611d9f5760008081fd5b611dad8986838b0101611b93565b845250918301918301611d7f565b509695505050505050565b60008060008060008060c08789031215611ddf57600080fd5b86519550602087015167ffffffffffffffff80821115611dfe57600080fd5b611e0a8a838b01611b2b565b96506040890151915080821115611e2057600080fd5b611e2c8a838b01611b2b565b955060608901519150611e3e8261170b565b608089015160a08a0151929550935080821115611e5a57600080fd5b50611cdb89828a01611d3b565b8183823760009101908152919050565b60008251611e89818460208701611467565b9190910192915050565b600082601f830112611ea457600080fd5b8135611eb2611b4a82611ae5565b818152846020838601011115611ec757600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611ef657600080fd5b813567ffffffffffffffff811115611f0d57600080fd5b611b7584828501611e93565b600060208284031215611f2b57600080fd5b81517fffffffff00000000000000000000000000000000000000000000000000000000811681146101db57600080fd5b60006101408284031215611f6e57600080fd5b611f76611a2c565b905081518152602082015167ffffffffffffffff80821115611f9757600080fd5b611fa385838601611b2b565b60208401526040840151915080821115611fbc57600080fd5b50611fc984828501611b2b565b604083015250611fdb60608301611b7d565b6060820152611fec60808301611b7d565b6080820152611ffd60a08301611b7d565b60a082015260c082015160c082015260e082015160e0820152610100612024818401611b88565b90820152610120612036838201611b88565b9082015292915050565b805163ffffffff8116811461173b57600080fd5b60006040828403121561206657600080fd5b6040516040810181811067ffffffffffffffff8211171561208957612089611992565b604052825181526020928301519281019290925250919050565b600060a082840312156120b557600080fd5b6120bd611a50565b9050815161ffff811681146120d157600080fd5b8152602082015167ffffffffffffffff808211156120ee57600080fd5b9083019060e0828603121561210257600080fd5b61210a611a03565b61211383612040565b815260208301516020820152604083015160408201526060830151606082015260808301518281111561214557600080fd5b61215187828601611b2b565b60808301525060a08301518281111561216957600080fd5b61217587828601611b2b565b60a08301525060c08301518281111561218d57600080fd5b61219987828601611b2b565b60c0830152506020840152506121b490508360408401612054565b60408201526121c560808301611b7d565b606082015292915050565b600080604083850312156121e357600080fd5b825167ffffffffffffffff808211156121fb57600080fd5b61220786838701611f5b565b9350602085015191508082111561221d57600080fd5b5061222a858286016120a3565b9150509250929050565b60008060006060848603121561224957600080fd5b835167ffffffffffffffff8082111561226157600080fd5b61226d87838801611f5b565b9450602086015191508082111561228357600080fd5b61228f87838801611d3b565b935060408601519150808211156122a557600080fd5b506122b2868287016120a3565b9150509250925092565b805167ffffffffffffffff8116811461173b57600080fd5b80516007811061173b57600080fd5b600060c082840312156122f557600080fd5b6122fd611a73565b905061230882612040565b8152612316602083016122bc565b6020820152604082015167ffffffffffffffff8082111561233657600080fd5b61234285838601611b2b565b6040840152606084015191508082111561235b57600080fd5b5061236884828501611b2b565b6060830152506080820151608082015261238460a083016122d4565b60a082015292915050565b600080604083850312156123a257600080fd5b825167ffffffffffffffff808211156123ba57600080fd5b6123c686838701611f5b565b935060208501519150808211156123dc57600080fd5b5061222a858286016122e3565b6000806000606084860312156123fe57600080fd5b835167ffffffffffffffff8082111561241657600080fd5b61242287838801611f5b565b9450602086015191508082111561243857600080fd5b61244487838801611d3b565b9350604086015191508082111561245a57600080fd5b506122b2868287016122e3565b6000610140828403121561247a57600080fd5b612482611a2c565b905061248d82611b7d565b815261249b60208301611b7d565b60208201526124ac60408301611b7d565b6040820152606082015160608201526124c7608083016122bc565b60808201526124d860a08301611b7d565b60a08201526124e960c08301612040565b60c08201526124fa60e08301612040565b60e082015261010061250d818401612040565b908201526101208281015167ffffffffffffffff81111561252d57600080fd5b61253985828601611b2b565b82840152505092915050565b6000806040838503121561255857600080fd5b825167ffffffffffffffff8082111561257057600080fd5b61257c86838701611f5b565b9350602085015191508082111561259257600080fd5b5061222a85828601612467565b6000806000606084860312156125b457600080fd5b835167ffffffffffffffff808211156125cc57600080fd5b6125d887838801611f5b565b945060208601519150808211156125ee57600080fd5b6125fa87838801611d3b565b9350604086015191508082111561261057600080fd5b506122b286828701612467565b6000806040838503121561263057600080fd5b825167ffffffffffffffff8082111561264857600080fd5b61265486838701611f5b565b9350602085015191508082111561266a57600080fd5b5061222a85828601611d3b565b6000610140828403121561268a57600080fd5b612692611a2c565b905081358152602082013567ffffffffffffffff808211156126b357600080fd5b6126bf85838601611e93565b602084015260408401359150808211156126d857600080fd5b506126e584828501611e93565b6040830152506126f760608301611730565b606082015261270860808301611730565b608082015261271960a08301611730565b60a082015260c082013560c082015260e082013560e082015261010061274081840161174e565b9082015261012061203683820161174e565b6000806040838503121561276557600080fd5b823567ffffffffffffffff8082111561277d57600080fd5b61278986838701612677565b93506020915081850135818111156127a057600080fd5b8501601f810187136127b157600080fd5b80356127bf611b4a82611d17565b81815260059190911b820184019084810190898311156127de57600080fd5b8584015b838110156128c4578035868111156127f957600080fd5b850160e0818d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001121561282d57600080fd5b612835611a03565b612840898301611730565b815261284e60408301611730565b8982015261285e60608301611730565b604082015261286f60808301611730565b606082015260a0820135608082015260c080830135898111156128925760008081fd5b6128a08f8c83870101611e93565b60a0840152506128b260e0840161174e565b908201528452509186019186016127e2565b508096505050505050509250929050565b6000602082840312156128e757600080fd5b815167ffffffffffffffff8111156128fe57600080fd5b611b7584828501611f5b565b60006020828403121561291c57600080fd5b813567ffffffffffffffff81111561293357600080fd5b611b7584828501612677565b808201808211156110ef576110ef6119c156fea2646970667358221220b64c46c304e2e3e5a16f4f59e099f92e64ce886ec7636e241ce006d7e7a7eedc64736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var CalldataVerificationFacet__factory = /** @class */ (function (_super) {
    __extends(CalldataVerificationFacet__factory, _super);
    function CalldataVerificationFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    CalldataVerificationFacet__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    CalldataVerificationFacet__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    CalldataVerificationFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    CalldataVerificationFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    CalldataVerificationFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    CalldataVerificationFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    CalldataVerificationFacet__factory.bytecode = _bytecode;
    CalldataVerificationFacet__factory.abi = _abi;
    return CalldataVerificationFacet__factory;
}(ethers_1.ContractFactory));
exports.CalldataVerificationFacet__factory = CalldataVerificationFacet__factory;
