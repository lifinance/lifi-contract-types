"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CalldataVerificationFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "extractBridgeData",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "extractData",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "extractGenericSwapParameters",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "sendingAssetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "address",
                internalType: "address",
            },
            {
                name: "receivingAssetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "receivingAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "extractMainParameters",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "bridge",
                type: "string",
                internalType: "string",
            },
            {
                name: "sendingAssetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "hasSourceSwaps",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "hasDestinationCall",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "extractNonEVMAddress",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "nonEVMAddress",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "extractSwapData",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "validateCalldata",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "bridge",
                type: "string",
                internalType: "string",
            },
            {
                name: "sendingAssetId",
                type: "address",
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "hasSourceSwaps",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "hasDestinationCall",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [
            {
                name: "isValid",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "validateDestinationCalldata",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "callTo",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "dstCalldata",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "isValid",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "error",
        name: "InvalidCallData",
        inputs: [],
    },
    {
        type: "error",
        name: "SliceOutOfBounds",
        inputs: [],
    },
    {
        type: "error",
        name: "SliceOverflow",
        inputs: [],
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b506125b7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063d53482cf1161005b578063d53482cf14610152578063df1c3a5b14610175578063ee0aa32014610196578063f58ae2ce146101bc57600080fd5b8063070e81f11461008d578063103c5200146100b65780637f99d7af146100d7578063c318eeda146100f7575b600080fd5b6100a061009b366004611120565b6101cf565b6040516100ad91906112bd565b60405180910390f35b6100c96100c4366004611120565b6101e2565b6040516100ad9291906113c5565b6100ea6100e5366004611120565b61025d565b6040516100ad91906113f3565b61010a610105366004611120565b6102b9565b6040805173ffffffffffffffffffffffffffffffffffffffff96871681526020810195909552928516928401929092529092166060820152608081019190915260a0016100ad565b610165610160366004611454565b6105b9565b60405190151581526020016100ad565b610188610183366004611120565b6107b8565b6040519081526020016100ad565b6101a96101a4366004611120565b610832565b6040516100ad9796959493929190611523565b6101656101ca366004611581565b6108ed565b60606101db8383610e74565b9392505050565b604080516101408101825260008082526060602083018190529282018390528282018190526080820181905260a0820181905260c0820181905260e0820181905261010082018190526101208201529061023c8484610e98565b915081610100015115610256576102538484610e74565b90505b9250929050565b604080516101408101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101919091526101db8383610e98565b6000808080806101e486116102fa576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060600088888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509394506103469250600491508390508b8d61161b565b61034f91611645565b90507fffffffff0000000000000000000000000000000000000000000000000000000081167f4666fc800000000000000000000000000000000000000000000000000000000014806103e257507fffffffff0000000000000000000000000000000000000000000000000000000081167f733214a300000000000000000000000000000000000000000000000000000000145b8061042e57507fffffffff0000000000000000000000000000000000000000000000000000000081167faf7060fd00000000000000000000000000000000000000000000000000000000145b1561050d5760408051600180825281830190925290816020015b6040805160e0810182526000808252602080830182905292820181905260608083018290526080830182905260a083015260c082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816104485790505092506104ca60048084516104c291906116eb565b849190610f04565b8060200190518101906104dd919061192d565b8851929550909350915086906000906104f8576104f86119db565b6020908102919091010152909650935061053d565b61051f60048084516104c291906116eb565b8060200190518101906105329190611ab9565b919a50975095505050505b82600081518110610550576105506119db565b602002602001015160400151975082600081518110610571576105716119db565b6020026020010151608001519650826001845161058e91906116eb565b8151811061059e5761059e6119db565b60200260200101516060015194505050509295509295909350565b6000806105c68c8c610e98565b905060008a8a6040516020016105dd929190611b5a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828252805160209182012060008452908301918290529151902090915081148061065b57508082602001516040516020016106439190611b6a565b60405160208183030381529060405280519060200120145b80156106b5575073ffffffffffffffffffffffffffffffffffffffff808a1614806106b557508873ffffffffffffffffffffffffffffffffffffffff16826080015173ffffffffffffffffffffffffffffffffffffffff16145b801561070f575073ffffffffffffffffffffffffffffffffffffffff808916148061070f57508773ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff16145b801561074757507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8714806107475750868260c00151145b801561077f57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff86148061077f5750858260e00151145b801561079357508415158261010001511515145b80156107a757508315158261012001511515145b9d9c50505050505050505050505050565b60008083838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293506108019250869150859050610e98565b61010001511561081d576064810151810160240151915061082b565b604481015181016024015191505b5092915050565b606060008060008060008060006108498a8a610e98565b9050806101000151156108ac5760006108628b8b610e74565b905080600081518110610877576108776119db565b602002602001015160400151975080600081518110610898576108986119db565b6020026020010151608001519550506108bb565b806080015196508060c0015194505b602081015160a082015160e083015161010084015161012090940151929d999c50909a50959850949690955092505050565b60008087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509361093f935085016020908101925085019050611b86565b90507feb2acf89000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610a3c5760006109a6600480855161099e91906116eb565b859190610f04565b8060200190518101906109b99190611e3d565b915050806020015160a001518051906020012086866040516109dc929190611b5a565b6040518091039020148015610a325750610a3288888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505050602083810151015161101e565b9350505050610e6a565b7f59fef59a000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610ad0576000610a99600480855161099e91906116eb565b806020019051810190610aac9190611ea1565b92505050806020015160a001518051906020012086866040516109dc929190611b5a565b7ffaf6a213000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610b9e576000610b2d600480855161099e91906116eb565b806020019051810190610b409190611ffc565b9150508060600151805190602001208686604051610b5f929190611b5a565b6040518091039020148015610a3257508060400151805190602001208888604051610b8b929190611b5a565b6040518091039020149350505050610e6a565b7f4f93ad26000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610c2e576000610bfb600480855161099e91906116eb565b806020019051810190610c0e9190612056565b925050508060600151805190602001208686604051610b5f929190611b5a565b7fd733bcea000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610d18576000610c8b600480855161099e91906116eb565b806020019051810190610c9e91906121b2565b915050806101200151805190602001208686604051610cbe929190611b5a565b6040518091039020148015610a32575080516040805173ffffffffffffffffffffffffffffffffffffffff909216602083015201604051602081830303815290604052805190602001208888604051610b8b929190611b5a565b7fd77cd343000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610da9576000610d75600480855161099e91906116eb565b806020019051810190610d88919061220c565b92505050806101200151805190602001208686604051610cbe929190611b5a565b7fd733bcea000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610e06576000610c8b600480855161099e91906116eb565b7fd77cd343000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610e63576000610d75600480855161099e91906116eb565b6000925050505b9695505050505050565b6060610e83826004818661161b565b810190610e9091906123b6565b949350505050565b604080516101408101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810191909152610ef7826004818661161b565b8101906101db9190612539565b606081610f1281601f61256e565b1015610f4a576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f54828461256e565b84511015610f8e576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015610fad5760405191506000825260208201604052611015565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015610fe6578051835260209283019201610fce565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60006014835110156110b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f496e76616c69642063616c6c546f206c656e6774683b2065787065637465642060448201527f6174206c65617374203230206279746573000000000000000000000000000000606482015260840160405180910390fd5b50602082015173ffffffffffffffffffffffffffffffffffffffff8281169116145b92915050565b60008083601f8401126110f057600080fd5b50813567ffffffffffffffff81111561110857600080fd5b60208301915083602082850101111561025657600080fd5b6000806020838503121561113357600080fd5b823567ffffffffffffffff81111561114a57600080fd5b611156858286016110de565b90969095509350505050565b60005b8381101561117d578181015183820152602001611165565b50506000910152565b6000815180845261119e816020860160208601611162565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082825180855260208086019550808260051b84010181860160005b848110156112b0577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08684030189528151805173ffffffffffffffffffffffffffffffffffffffff908116855285820151811686860152604080830151821690860152606080830151909116908501526080808201519085015260a08082015160e0828701819052919061128383880182611186565b9250505060c080830151925061129c8187018415159052565b5099850199935050908301906001016111ed565b5090979650505050505050565b6020815260006101db60208301846111d0565b60006101408251845260208301518160208601526112f082860182611186565b9150506040830151848203604086015261130a8282611186565b9150506060830151611334606086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608083015161135c608086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a083015161138460a086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c083015160c085015260e083015160e0850152610100808401516113ad8287018215159052565b50506101209283015115159390920192909252919050565b6040815260006113d860408301856112d0565b82810360208401526113ea81856111d0565b95945050505050565b6020815260006101db60208301846112d0565b73ffffffffffffffffffffffffffffffffffffffff8116811461142857600080fd5b50565b803561143681611406565b919050565b801515811461142857600080fd5b80356114368161143b565b6000806000806000806000806000806101008b8d03121561147457600080fd5b8a3567ffffffffffffffff8082111561148c57600080fd5b6114988e838f016110de565b909c509a5060208d01359150808211156114b157600080fd5b506114be8d828e016110de565b90995097505060408b01356114d281611406565b955060608b01356114e281611406565b945060808b0135935060a08b0135925060c08b01356115008161143b565b915060e08b01356115108161143b565b809150509295989b9194979a5092959850565b60e08152600061153660e083018a611186565b73ffffffffffffffffffffffffffffffffffffffff988916602084015296909716604082015260608101949094526080840192909252151560a0830152151560c09091015292915050565b6000806000806000806060878903121561159a57600080fd5b863567ffffffffffffffff808211156115b257600080fd5b6115be8a838b016110de565b909850965060208901359150808211156115d757600080fd5b6115e38a838b016110de565b909650945060408901359150808211156115fc57600080fd5b5061160989828a016110de565b979a9699509497509295939492505050565b6000808585111561162b57600080fd5b8386111561163857600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156116855780818660040360031b1b83161692505b505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156110d8576110d86116bc565b60405160e0810167ffffffffffffffff811182821017156117215761172161168d565b60405290565b604051610140810167ffffffffffffffff811182821017156117215761172161168d565b6040516080810167ffffffffffffffff811182821017156117215761172161168d565b60405160c0810167ffffffffffffffff811182821017156117215761172161168d565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156117d8576117d861168d565b604052919050565b600067ffffffffffffffff8211156117fa576117fa61168d565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261183757600080fd5b815161184a611845826117e0565b611791565b81815284602083860101111561185f57600080fd5b610e90826020830160208701611162565b805161143681611406565b80516114368161143b565b600060e0828403121561189857600080fd5b6118a06116fe565b90506118ab82611870565b81526118b960208301611870565b60208201526118ca60408301611870565b60408201526118db60608301611870565b60608201526080820151608082015260a082015167ffffffffffffffff81111561190457600080fd5b61191084828501611826565b60a08301525061192260c0830161187b565b60c082015292915050565b60008060008060008060c0878903121561194657600080fd5b86519550602087015167ffffffffffffffff8082111561196557600080fd5b6119718a838b01611826565b9650604089015191508082111561198757600080fd5b6119938a838b01611826565b9550606089015191506119a582611406565b608089015160a08a01519295509350808211156119c157600080fd5b506119ce89828a01611886565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600067ffffffffffffffff821115611a2457611a2461168d565b5060051b60200190565b600082601f830112611a3f57600080fd5b81516020611a4f61184583611a0a565b82815260059290921b84018101918181019086841115611a6e57600080fd5b8286015b84811015611aae57805167ffffffffffffffff811115611a925760008081fd5b611aa08986838b0101611886565b845250918301918301611a72565b509695505050505050565b60008060008060008060c08789031215611ad257600080fd5b86519550602087015167ffffffffffffffff80821115611af157600080fd5b611afd8a838b01611826565b96506040890151915080821115611b1357600080fd5b611b1f8a838b01611826565b955060608901519150611b3182611406565b608089015160a08a0151929550935080821115611b4d57600080fd5b506119ce89828a01611a2e565b8183823760009101908152919050565b60008251611b7c818460208701611162565b9190910192915050565b600060208284031215611b9857600080fd5b81517fffffffff00000000000000000000000000000000000000000000000000000000811681146101db57600080fd5b60006101408284031215611bdb57600080fd5b611be3611727565b905081518152602082015167ffffffffffffffff80821115611c0457600080fd5b611c1085838601611826565b60208401526040840151915080821115611c2957600080fd5b50611c3684828501611826565b604083015250611c4860608301611870565b6060820152611c5960808301611870565b6080820152611c6a60a08301611870565b60a082015260c082015160c082015260e082015160e0820152610100611c9181840161187b565b90820152610120611ca383820161187b565b9082015292915050565b805163ffffffff8116811461143657600080fd5b600060408284031215611cd357600080fd5b6040516040810181811067ffffffffffffffff82111715611cf657611cf661168d565b604052825181526020928301519281019290925250919050565b600060a08284031215611d2257600080fd5b611d2a61174b565b9050815161ffff81168114611d3e57600080fd5b8152602082015167ffffffffffffffff80821115611d5b57600080fd5b9083019060e08286031215611d6f57600080fd5b611d776116fe565b611d8083611cad565b8152602083015160208201526040830151604082015260608301516060820152608083015182811115611db257600080fd5b611dbe87828601611826565b60808301525060a083015182811115611dd657600080fd5b611de287828601611826565b60a08301525060c083015182811115611dfa57600080fd5b611e0687828601611826565b60c083015250602084015250611e2190508360408401611cc1565b6040820152611e3260808301611870565b606082015292915050565b60008060408385031215611e5057600080fd5b825167ffffffffffffffff80821115611e6857600080fd5b611e7486838701611bc8565b93506020850151915080821115611e8a57600080fd5b50611e9785828601611d10565b9150509250929050565b600080600060608486031215611eb657600080fd5b835167ffffffffffffffff80821115611ece57600080fd5b611eda87838801611bc8565b94506020860151915080821115611ef057600080fd5b611efc87838801611a2e565b93506040860151915080821115611f1257600080fd5b50611f1f86828701611d10565b9150509250925092565b805167ffffffffffffffff8116811461143657600080fd5b80516007811061143657600080fd5b600060c08284031215611f6257600080fd5b611f6a61176e565b9050611f7582611cad565b8152611f8360208301611f29565b6020820152604082015167ffffffffffffffff80821115611fa357600080fd5b611faf85838601611826565b60408401526060840151915080821115611fc857600080fd5b50611fd584828501611826565b60608301525060808201516080820152611ff160a08301611f41565b60a082015292915050565b6000806040838503121561200f57600080fd5b825167ffffffffffffffff8082111561202757600080fd5b61203386838701611bc8565b9350602085015191508082111561204957600080fd5b50611e9785828601611f50565b60008060006060848603121561206b57600080fd5b835167ffffffffffffffff8082111561208357600080fd5b61208f87838801611bc8565b945060208601519150808211156120a557600080fd5b6120b187838801611a2e565b935060408601519150808211156120c757600080fd5b50611f1f86828701611f50565b600061014082840312156120e757600080fd5b6120ef611727565b90506120fa82611870565b815261210860208301611870565b602082015261211960408301611870565b60408201526060820151606082015261213460808301611f29565b608082015261214560a08301611870565b60a082015261215660c08301611cad565b60c082015261216760e08301611cad565b60e082015261010061217a818401611cad565b908201526101208281015167ffffffffffffffff81111561219a57600080fd5b6121a685828601611826565b82840152505092915050565b600080604083850312156121c557600080fd5b825167ffffffffffffffff808211156121dd57600080fd5b6121e986838701611bc8565b935060208501519150808211156121ff57600080fd5b50611e97858286016120d4565b60008060006060848603121561222157600080fd5b835167ffffffffffffffff8082111561223957600080fd5b61224587838801611bc8565b9450602086015191508082111561225b57600080fd5b61226787838801611a2e565b9350604086015191508082111561227d57600080fd5b50611f1f868287016120d4565b600082601f83011261229b57600080fd5b81356122a9611845826117e0565b8181528460208386010111156122be57600080fd5b816020850160208301376000918101602001919091529392505050565b600061014082840312156122ee57600080fd5b6122f6611727565b905081358152602082013567ffffffffffffffff8082111561231757600080fd5b6123238583860161228a565b6020840152604084013591508082111561233c57600080fd5b506123498482850161228a565b60408301525061235b6060830161142b565b606082015261236c6080830161142b565b608082015261237d60a0830161142b565b60a082015260c082013560c082015260e082013560e08201526101006123a4818401611449565b90820152610120611ca3838201611449565b600080604083850312156123c957600080fd5b823567ffffffffffffffff808211156123e157600080fd5b6123ed868387016122db565b935060209150818501358181111561240457600080fd5b8501601f8101871361241557600080fd5b803561242361184582611a0a565b81815260059190911b8201840190848101908983111561244257600080fd5b8584015b838110156125285780358681111561245d57600080fd5b850160e0818d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001121561249157600080fd5b6124996116fe565b6124a489830161142b565b81526124b26040830161142b565b898201526124c26060830161142b565b60408201526124d36080830161142b565b606082015260a0820135608082015260c080830135898111156124f65760008081fd5b6125048f8c8387010161228a565b60a08401525061251660e08401611449565b90820152845250918601918601612446565b508096505050505050509250929050565b60006020828403121561254b57600080fd5b813567ffffffffffffffff81111561256257600080fd5b610e90848285016122db565b808201808211156110d8576110d86116bc56fea26469706673582212207f35781d7e41b1b058109d63f0b88a910ec5e02b3f38818f543cd00f2945025064736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var CalldataVerificationFacet__factory = /** @class */ (function (_super) {
    __extends(CalldataVerificationFacet__factory, _super);
    function CalldataVerificationFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    CalldataVerificationFacet__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    CalldataVerificationFacet__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    CalldataVerificationFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    CalldataVerificationFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    CalldataVerificationFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    CalldataVerificationFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    CalldataVerificationFacet__factory.bytecode = _bytecode;
    CalldataVerificationFacet__factory.abi = _abi;
    return CalldataVerificationFacet__factory;
}(ethers_1.ContractFactory));
exports.CalldataVerificationFacet__factory = CalldataVerificationFacet__factory;
