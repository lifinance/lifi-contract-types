import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { CurveFacet, CurveFacetInterface } from "../CurveFacet";
type CurveFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class CurveFacet__factory extends ContractFactory {
    constructor(...args: CurveFacetConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<CurveFacet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): CurveFacet;
    connect(signer: Signer): CurveFacet__factory;
    static readonly bytecode = "0x6080604052348015600e575f5ffd5b50610b0b8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c80633d24b4881461002d575b5f5ffd5b61004061003b366004610968565b610042565b005b835160408051602080880182529287018301928101929092528181019052805180516014820180845251601583018085525160168401808652516017850180875251602b860180885251603f9096018752606094851c955f94851a9593851a850b9492831a90920b9290811c91901c8515806100d2575073ffffffffffffffffffffffffffffffffffffffff8216155b15610109576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff8a166101d5576040517f3df02124000000000000000000000000000000000000000000000000000000008152600f86810b600483015285900b6024820152604481018a90525f606482015273ffffffffffffffffffffffffffffffffffffffff881690633df02124908b9060840160206040518083038185885af11580156101a9573d5f5f3e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906101ce9190610a80565b905061047c565b3373ffffffffffffffffffffffffffffffffffffffff8c16036101fe576101fe8a33308c6104b2565b6102098a888b610574565b8560ff165f036102b9576040517f3df02124000000000000000000000000000000000000000000000000000000008152600f86810b600483015285900b6024820152604481018a90525f606482015273ffffffffffffffffffffffffffffffffffffffff881690633df02124906084016020604051808303815f875af1158015610295573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101ce9190610a80565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201525f9073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610323573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103479190610a80565b6040517f3df02124000000000000000000000000000000000000000000000000000000008152600f88810b600483015287900b6024820152604481018c90525f606482015290915073ffffffffffffffffffffffffffffffffffffffff891690633df02124906084015f604051808303815f87803b1580156103c7575f5ffd5b505af11580156103d9573d5f5f3e3d5ffd5b50506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201525f925073ffffffffffffffffffffffffffffffffffffffff861691506370a0823190602401602060405180830381865afa158015610447573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061046b9190610a80565b90506104778282610a97565b925050505b73ffffffffffffffffffffffffffffffffffffffff831630146104a4576104a48284836105a5565b505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff84166104ff576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661054c576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61056e73ffffffffffffffffffffffffffffffffffffffff85168484846105d5565b50505050565b6105a08383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61062d565b505050565b73ffffffffffffffffffffffffffffffffffffffff83166105ca576105a08282610754565b6105a08383836107c5565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f5114171661062057637939f4245f526004601cfd5b5f60605260405250505050565b73ffffffffffffffffffffffffffffffffffffffff84161561056e5773ffffffffffffffffffffffffffffffffffffffff8316610696576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015610709573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061072d9190610a80565b101561056e5761056e73ffffffffffffffffffffffffffffffffffffffff85168483610833565b73ffffffffffffffffffffffffffffffffffffffff82166107a1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107c173ffffffffffffffffffffffffffffffffffffffff8316826108ba565b5050565b73ffffffffffffffffffffffffffffffffffffffff8216610812576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105a073ffffffffffffffffffffffffffffffffffffffff841683836108d3565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f511417166108b1575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f511417166108b157633e3f8f735f526004601cfd5b5f603452505050565b5f385f3884865af16107c15763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166108b1576390b8ec185f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b803573ffffffffffffffffffffffffffffffffffffffff81168114610963575f5ffd5b919050565b5f5f5f5f6080858703121561097b575f5ffd5b843567ffffffffffffffff811115610991575f5ffd5b8501601f810187136109a1575f5ffd5b803567ffffffffffffffff8111156109bb576109bb610913565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160116810181811067ffffffffffffffff82111715610a2757610a27610913565b604052818152828201602001891015610a3e575f5ffd5b816020840160208301375f60208383010152809650505050610a6260208601610940565b9250610a7060408601610940565b9396929550929360600135925050565b5f60208284031215610a90575f5ffd5b5051919050565b81810381811115610acf577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b9291505056fea2646970667358221220423af2d725f4d720feffdd8d8ca3d9a37ccc126e4c66ec1eb3b0dc4a5aaab53d64736f6c634300081d0033";
    static readonly abi: readonly [{
        readonly type: "function";
        readonly name: "swapCurve";
        readonly inputs: readonly [{
            readonly name: "swapData";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "from";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "tokenIn";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "amountIn";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "error";
        readonly name: "InvalidCallData";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidReceiver";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NullAddrIsNotAValidSpender";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly inputs: readonly [];
    }];
    static createInterface(): CurveFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): CurveFacet;
}
export {};
