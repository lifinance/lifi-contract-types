import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { CBridgeFacet, CBridgeFacetInterface } from "../../CBridgeFacet.sol/CBridgeFacet";
declare type CBridgeFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class CBridgeFacet__factory extends ContractFactory {
    constructor(...args: CBridgeFacetConstructorParams);
    deploy(_messageBus: PromiseOrValue<string>, _relayer: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<CBridgeFacet>;
    getDeployTransaction(_messageBus: PromiseOrValue<string>, _relayer: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): CBridgeFacet;
    connect(signer: Signer): CBridgeFacet__factory;
    static readonly bytecode = "0x60c06040523480156200001157600080fd5b5060405162002d7a38038062002d7a833981016040819052620000349162000065565b6001600160a01b039182166080521660a052620000a4565b6001600160a01b03811681146200006257600080fd5b50565b600080604083850312156200007957600080fd5b825162000086816200004c565b602084015190925062000099816200004c565b809150509250929050565b60805160a051612c82620000f86000396000818161038e0152818161040e0152818161046c01528181610776015281816107f50152818161085301528181610a8a0152610b2a015260005050612c826000f3fe6080604052600436106100285760003560e01c8062105d591461002d578063babc902b14610042575b600080fd5b61004061003b366004612470565b610055565b005b6100406100503660046125c2565b610577565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d0576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e134476126b0565b90508480610100015115610121576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856101378160a001516001600160a01b03161590565b1561016e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101ac576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101e9576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101fb876101f6886126c3565b610958565b60808701516001600160a01b031615610526576040517f636655534443000000000000000000000000000000000000000000000000000060208201526000906026016040516020818303038152906040528051906020012088608001516001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610295573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102bd91908101906126f3565b6040516020016102cd919061276a565b60405160208183030381529060405280519060200120036103575787608001516001600160a01b03166326afaadd6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561032c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103509190612786565b905061035e565b5060808701515b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600091908316906370a0823190602401602060405180830381865afa1580156103e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040591906127a3565b905061043782337f00000000000000000000000000000000000000000000000000000000000000008c60c001516109a4565b60c08901516040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301528391908516906370a0823190602401602060405180830381865afa1580156104be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e291906127a3565b6104ec91906126b0565b14610523576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505b61053887610533886126c3565b610a5b565b50479050600082821161054c576000610556565b61055683836126b0565b9050801561056a5761056a60008583610bfe565b5050600090925550505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016105f2576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061060334476126b0565b905086806101000151610642576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876106588160a001516001600160a01b03161590565b1561068f576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036106cd576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361070a576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107148987610958565b61072989600001518a60c001518a8a33610c27565b60c08a015260808901516001600160a01b03161561090d5760808901516040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600091908316906370a0823190602401602060405180830381865afa1580156107c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ed91906127a3565b905061081e827f00000000000000000000000000000000000000000000000000000000000000008d60c00151610d62565b60c08b01516040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301528391908516906370a0823190602401602060405180830381865afa1580156108a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c991906127a3565b6108d391906126b0565b1461090a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505b6109178987610a5b565b50479050600082821161092b576000610935565b61093583836126b0565b905080156109495761094960008583610bfe565b50506000909255505050505050565b6101208201516060820151511515901515146109a0576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040516001600160a01b0380851660248301528316604482015260648101829052610a559085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610dab565b50505050565b6000610a7283608001516001600160a01b03161590565b610a7d576000610a83565b8260c001515b90506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166375b4c0058487876040518463ffffffff1660e01b8152600401610ad79291906128b6565b604080518083038185885af1158015610af4573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b19919061297c565b9150915084610120015115610bc0577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c2aad68f85608001518760a001518860e0015185878a606001516040518763ffffffff1660e01b8152600401610b8d9594939291906129a1565b6000604051808303818588803b158015610ba657600080fd5b505af1158015610bba573d6000803e3d6000fd5b50505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f185604051610bef91906129e3565b60405180910390a15050505050565b6001600160a01b03831615610c1d57610c18838383610eaa565b505050565b610c188282610fbf565b600082808203610c63576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610c726001856126b0565b818110610c8157610c816129f6565b9050602002810190610c939190612a25565b610ca4906080810190606001612a59565b90506000610cb1826110cf565b90506001600160a01b038216610cce57610ccb34826126b0565b90505b6000610cda888861116e565b9050610ce6888861126d565b610cf38a898989856112ce565b600082610cff856110cf565b610d0991906126b0565b905089811015610d54576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b6040516001600160a01b038316602482015260448101829052610c189084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016109f1565b6000610e00826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661164c9092919063ffffffff16565b805190915015610c185780806020019051810190610e1e9190612a76565b610c18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610d4b565b6001600160a01b038316610eea576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa158015610f4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6e91906127a3565b905080821115610fb4576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610d4b565b610a55848484610d62565b6001600160a01b038216610fff576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611042576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610d4b565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461108f576040519150601f19603f3d011682016040523d82523d6000602084013e611094565b606091505b5050905080610c18576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001600160a01b03821615611166576040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa15801561113d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116191906127a3565b611168565b475b92915050565b60608160008167ffffffffffffffff81111561118c5761118c6121fc565b6040519080825280602002602001820160405280156111b5578160200160208202803683370190505b5090506000805b83811015611262578686828181106111d6576111d66129f6565b90506020028101906111e89190612a25565b6111f9906080810190606001612a59565b9150611204826110cf565b838281518110611216576112166129f6565b60209081029190910101526001600160a01b03821661125a5734838281518110611242576112426129f6565b6020026020010181815161125691906126b0565b9052505b6001016111bc565b509095945050505050565b60005b81811015610c1857600083838381811061128c5761128c6129f6565b905060200281019061129e9190612a25565b6112a790612a93565b90508060c00151156112c5576112c581604001518260800151611663565b50600101611270565b83838383826001811461156757600085856112ea6001856126b0565b8181106112f9576112f96129f6565b905060200281019061130b9190612a25565b61131c906080810190606001612a59565b9050600089815b818110156114ad57368d8d8381811061133e5761133e6129f6565b90506020028101906113509190612a25565b90506113726113656060830160408401612a59565b6001600160a01b03161590565b806113c857506113c861138b6040830160208401612a59565b6001600160a01b031660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156113df57506113df61138b6020830183612a59565b801561146457506114646113f660a0830183612b38565b61140591600491600091612ba4565b61140e91612bce565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61149a576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114a48f826117bb565b50600101611323565b505060005b6114bd6001856126b0565b81101561155f5760008888838181106114d8576114d86129f6565b90506020028101906114ea9190612a25565b6114fb906080810190606001612a59565b9050836001600160a01b0316816001600160a01b03161461155657858281518110611528576115286129f6565b6020026020010151611539826110cf565b61154391906126b0565b9250821561155657611556818885610bfe565b506001016114b2565b505050611640565b8760005b8181101561163d57368b8b83818110611586576115866129f6565b90506020028101906115989190612a25565b90506115ad6113656060830160408401612a59565b806115c657506115c661138b6040830160208401612a59565b80156115dd57506115dd61138b6020830183612a59565b80156115f457506115f46113f660a0830183612b38565b61162a576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116348d826117bb565b5060010161156b565b50505b50505050505050505050565b606061165b8484600085611ab7565b949350505050565b6001600160a01b0382166116ab57803410156109a0576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000036116e5576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015611745573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176991906127a3565b9050818110156117af576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610d4b565b610c1883333085611bc3565b6117d16117cb6020830183612a59565b3b151590565b611807576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611847576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061185c6113656060850160408601612a59565b61186757600061186d565b82608001355b905060006118896118846060860160408701612a59565b6110cf565b905060006118a06118846080870160608801612a59565b9050826000036118d7576118d76118bd6060870160408801612a59565b6118cd6040880160208901612a59565b8760800135611da9565b8460800135821015611922576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610d4b565b6000806119326020880188612a59565b6001600160a01b03168561194960a08a018a612b38565b604051611957929190612c16565b60006040518083038185875af1925050503d8060008114611994576040519150601f19603f3d011682016040523d82523d6000602084013e611999565b606091505b5091509150816119e45760006119ae82611ec7565b9050806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4b9190612c26565b60006119f961188460808a0160608b01612a59565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611a2a60208b018b612a59565b611a3a60608c0160408d01612a59565b611a4a60808d0160608e01612a59565b8c60800135898711611a5c5786611a66565b611a668a886126b0565b604080519687526001600160a01b0395861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b606082471015611b49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610d4b565b600080866001600160a01b03168587604051611b65919061276a565b60006040518083038185875af1925050503d8060008114611ba2576040519150601f19603f3d011682016040523d82523d6000602084013e611ba7565b606091505b5091509150611bb887838387611f45565b979650505050505050565b6001600160a01b038416611c03576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038216611c43576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015285916000918316906370a0823190602401602060405180830381865afa158015611ca7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ccb91906127a3565b9050611cd9828686866109a4565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152849183918516906370a0823190602401602060405180830381865afa158015611d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6091906127a3565b611d6a91906126b0565b14611da1576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b6001600160a01b038316611dbc57505050565b6001600160a01b038216611dfc576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015611e65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e8991906127a3565b905081811015610a5557610a558484611ec2847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6126b0565b611fd8565b6060604482511015611f0c57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611f286004808551611f2091906126b0565b8591906120bc565b905080806020019051810190611f3e91906126f3565b9392505050565b60608315611fce578251600003611fc7576001600160a01b0385163b611fc7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d4b565b508161165b565b61165b83836121b8565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015612042573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061206691906127a3565b6120709190612c39565b6040516001600160a01b038516602482015260448101829052909150610a559085907f095ea7b300000000000000000000000000000000000000000000000000000000906064016109f1565b6060816120ca81601f612c39565b1015612102576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61210c8284612c39565b84511015612146576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608215801561216557604051915060008252602082016040526121af565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561219e578051835260209283019201612186565b5050858452601f01601f1916604052505b50949350505050565b8151156121c85781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4b9190612c26565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561224f5761224f6121fc565b60405290565b60405160c0810167ffffffffffffffff8111828210171561224f5761224f6121fc565b60405160e0810167ffffffffffffffff8111828210171561224f5761224f6121fc565b604051601f8201601f1916810167ffffffffffffffff811182821017156122c4576122c46121fc565b604052919050565b600067ffffffffffffffff8211156122e6576122e66121fc565b50601f01601f191660200190565b600082601f83011261230557600080fd5b8135612318612313826122cc565b61229b565b81815284602083860101111561232d57600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b038116811461235f57600080fd5b50565b803561236d8161234a565b919050565b801515811461235f57600080fd5b803561236d81612372565b6000610140828403121561239e57600080fd5b6123a661222b565b905081358152602082013567ffffffffffffffff808211156123c757600080fd5b6123d3858386016122f4565b602084015260408401359150808211156123ec57600080fd5b506123f9848285016122f4565b60408301525061240b60608301612362565b606082015261241c60808301612362565b608082015261242d60a08301612362565b60a082015260c082013560c082015260e082013560e0820152610100612454818401612380565b90820152610120612466838201612380565b9082015292915050565b6000806040838503121561248357600080fd5b823567ffffffffffffffff8082111561249b57600080fd5b6124a78683870161238b565b935060208501359150808211156124bd57600080fd5b50830160c081860312156124d057600080fd5b809150509250929050565b803563ffffffff8116811461236d57600080fd5b803567ffffffffffffffff8116811461236d57600080fd5b80356007811061236d57600080fd5b600060c0828403121561252857600080fd5b612530612255565b905061253b826124db565b8152612549602083016124ef565b6020820152604082013567ffffffffffffffff8082111561256957600080fd5b612575858386016122f4565b6040840152606084013591508082111561258e57600080fd5b5061259b848285016122f4565b606083015250608082013560808201526125b760a08301612507565b60a082015292915050565b600080600080606085870312156125d857600080fd5b843567ffffffffffffffff808211156125f057600080fd5b6125fc8883890161238b565b9550602087013591508082111561261257600080fd5b818701915087601f83011261262657600080fd5b81358181111561263557600080fd5b8860208260051b850101111561264a57600080fd5b60208301955080945050604087013591508082111561266857600080fd5b5061267587828801612516565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561116857611168612681565b60006111683683612516565b60005b838110156126ea5781810151838201526020016126d2565b50506000910152565b60006020828403121561270557600080fd5b815167ffffffffffffffff81111561271c57600080fd5b8201601f8101841361272d57600080fd5b805161273b612313826122cc565b81815285602083850101111561275057600080fd5b6127618260208301602086016126cf565b95945050505050565b6000825161277c8184602087016126cf565b9190910192915050565b60006020828403121561279857600080fd5b8151611f3e8161234a565b6000602082840312156127b557600080fd5b5051919050565b600081518084526127d48160208601602086016126cf565b601f01601f19169290920160200192915050565b6000610140825184526020830151816020860152612808828601826127bc565b9150506040830151848203604086015261282282826127bc565b915050606083015161283f60608601826001600160a01b03169052565b50608083015161285a60808601826001600160a01b03169052565b5060a083015161287560a08601826001600160a01b03169052565b5060c083015160c085015260e083015160e08501526101008084015161289e8287018215159052565b50506101209283015115159390920192909252919050565b6040815260006128c960408301856127e8565b828103602084015263ffffffff845116815267ffffffffffffffff6020850151166020820152604084015160c0604083015261290860c08301826127bc565b90506060850151828203606084015261292182826127bc565b9150506080850151608083015260a08501516007811061296a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60a09290920191909152949350505050565b6000806040838503121561298f57600080fd5b8251915060208301516124d08161234a565b60006001600160a01b03808816835267ffffffffffffffff8716602084015280861660408401525083606083015260a06080830152611bb860a08301846127bc565b602081526000611f3e60208301846127e8565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261277c57600080fd5b600060208284031215612a6b57600080fd5b8135611f3e8161234a565b600060208284031215612a8857600080fd5b8151611f3e81612372565b600060e08236031215612aa557600080fd5b612aad612278565b612ab683612362565b8152612ac460208401612362565b6020820152612ad560408401612362565b6040820152612ae660608401612362565b60608201526080830135608082015260a083013567ffffffffffffffff811115612b0f57600080fd5b612b1b368286016122f4565b60a083015250612b2d60c08401612380565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612b6d57600080fd5b83018035915067ffffffffffffffff821115612b8857600080fd5b602001915036819003821315612b9d57600080fd5b9250929050565b60008085851115612bb457600080fd5b83861115612bc157600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612c0e5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b602081526000611f3e60208301846127bc565b808201808211156111685761116861268156fea2646970667358221220eff02a89747c4eca126003c9125b1a2c90897c89b1c43352d30b0e9d339b803c64736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IMessageBus";
            readonly name: "_messageBus";
            readonly type: "address";
        }, {
            readonly internalType: "contract RelayerCBridge";
            readonly name: "_relayer";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "CannotBridgeToSameNetwork";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ContractCallNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "minAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "receivedAmount";
            readonly type: "uint256";
        }];
        readonly name: "CumulativeSlippageTooHigh";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InformationMismatch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "required";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidContract";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidReceiver";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeAssetTransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapDataProvided";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoSwapFromZeroBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoTransferToNullAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAValidSpender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ReentrancyError";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOutOfBounds";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SliceOverflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "transactionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receivingAssetId";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "LiFiTransferRecovered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly indexed: false;
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "bridgeData";
            readonly type: "tuple";
        }];
        readonly name: "LiFiTransferStarted";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "maxSlippage";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint64";
                readonly name: "nonce";
                readonly type: "uint64";
            }, {
                readonly internalType: "bytes";
                readonly name: "callTo";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint256";
                readonly name: "messageBusFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "enum MsgDataTypes.BridgeSendType";
                readonly name: "bridgeType";
                readonly type: "uint8";
            }];
            readonly internalType: "struct CBridgeFacet.CBridgeData";
            readonly name: "_cBridgeData";
            readonly type: "tuple";
        }];
        readonly name: "startBridgeTokensViaCBridge";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "transactionId";
                readonly type: "bytes32";
            }, {
                readonly internalType: "string";
                readonly name: "bridge";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "integrator";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "referrer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "hasSourceSwaps";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "hasDestinationCall";
                readonly type: "bool";
            }];
            readonly internalType: "struct ILiFi.BridgeData";
            readonly name: "_bridgeData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "callTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "approveTo";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sendingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receivingAssetId";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fromAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "requiresDeposit";
                readonly type: "bool";
            }];
            readonly internalType: "struct LibSwap.SwapData[]";
            readonly name: "_swapData";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "maxSlippage";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint64";
                readonly name: "nonce";
                readonly type: "uint64";
            }, {
                readonly internalType: "bytes";
                readonly name: "callTo";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint256";
                readonly name: "messageBusFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "enum MsgDataTypes.BridgeSendType";
                readonly name: "bridgeType";
                readonly type: "uint8";
            }];
            readonly internalType: "struct CBridgeFacet.CBridgeData";
            readonly name: "_cBridgeData";
            readonly type: "tuple";
        }];
        readonly name: "swapAndStartBridgeTokensViaCBridge";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): CBridgeFacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): CBridgeFacet;
}
export {};
