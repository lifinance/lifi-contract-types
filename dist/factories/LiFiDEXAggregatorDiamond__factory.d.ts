import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { LiFiDEXAggregatorDiamond, LiFiDEXAggregatorDiamondInterface } from "../LiFiDEXAggregatorDiamond";
type LiFiDEXAggregatorDiamondConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class LiFiDEXAggregatorDiamond__factory extends ContractFactory {
    constructor(...args: LiFiDEXAggregatorDiamondConstructorParams);
    deploy(_contractOwner: PromiseOrValue<string>, _diamondCutFacet: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<LiFiDEXAggregatorDiamond>;
    getDeployTransaction(_contractOwner: PromiseOrValue<string>, _diamondCutFacet: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): LiFiDEXAggregatorDiamond;
    connect(signer: Signer): LiFiDEXAggregatorDiamond__factory;
    static readonly bytecode = "0x608060405234801561000f575f5ffd5b50604051610fa9380380610fa983398101604081905261002e91610c86565b818161003982610166565b6040805160018082528183019092525f91816020015b60408051606080820183525f80835260208301529181019190915281526020019060019003908161004f5750506040805160018082528183019092529192505f919060208083019080368337019050509050631f931c1c60e01b815f815181106100bb576100bb610cb7565b6001600160e01b031990921660209283029190910182015260408051606081019091526001600160a01b03851681529081015f815260200182815250825f8151811061010957610109610cb7565b6020026020010181905250610133825f60405180602001604052805f8152506101e760201b60201c565b5050506001600160a01b038316905061015f576040516306b7c75960e31b815260040160405180910390fd5b5050610e7f565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b038481169182179093556040515f516020610f895f395f51905f52939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f5b8351811015610370575f84828151811061020557610205610cb7565b60200260200101516020015190505f600281111561022557610225610ccb565b81600281111561023757610237610ccb565b0361028a5761028585838151811061025157610251610cb7565b60200260200101515f015186848151811061026e5761026e610cb7565b6020026020010151604001516103bb60201b60201c565b610367565b600181600281111561029e5761029e610ccb565b036102ec576102858583815181106102b8576102b8610cb7565b60200260200101515f01518684815181106102d5576102d5610cb7565b60200260200101516040015161056060201b60201c565b600281600281111561030057610300610ccb565b0361034e5761028585838151811061031a5761031a610cb7565b60200260200101515f015186848151811061033757610337610cb7565b60200260200101516040015161070e60201b60201c565b60405163e548e6b560e01b815260040160405180910390fd5b506001016101e9565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516103a493929190610d0d565b60405180910390a16103b682826107cf565b505050565b80515f036103dc576040516307bc559560e41b815260040160405180910390fd5b5f516020610f895f395f51905f526001600160a01b03831661041157604051636347641d60e11b815260040160405180910390fd5b6001600160a01b0383165f908152600182016020526040812054906001600160601b03821690036104465761044682856108df565b5f5b8351811015610559575f84828151811061046457610464610cb7565b6020908102919091018101516001600160e01b031981165f908152918690526040909120549091506001600160a01b031680156104b45760405163a023275d60e01b815260040160405180910390fd5b6001600160e01b031982165f8181526020878152604080832080546001600160a01b03908116600160a01b6001600160601b038c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281546001600160a01b031916179055505060019182019101610448565b5050505050565b80515f03610581576040516307bc559560e41b815260040160405180910390fd5b5f516020610f895f395f51905f526001600160a01b0383166105b657604051636347641d60e11b815260040160405180910390fd5b6001600160a01b0383165f908152600182016020526040812054906001600160601b03821690036105eb576105eb82856108df565b5f5b8351811015610559575f84828151811061060957610609610cb7565b6020908102919091018101516001600160e01b031981165f908152918690526040909120549091506001600160a01b03908116908716810361065e5760405163a023275d60e01b815260040160405180910390fd5b61066985828461092f565b6001600160e01b031982165f8181526020878152604080832080546001600160a01b03908116600160a01b6001600160601b038c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281546001600160a01b0319161790555050600191820191016105ed565b80515f0361072f576040516307bc559560e41b815260040160405180910390fd5b5f516020610f895f395f51905f526001600160a01b0383161561076557604051633ce4ef9160e11b815260040160405180910390fd5b5f5b82518110156107c9575f83828151811061078357610783610cb7565b6020908102919091018101516001600160e01b031981165f908152918590526040909120549091506001600160a01b03166107bf84828461092f565b5050600101610767565b50505050565b6001600160a01b038216610801578051156107fd576040516304c08b4360e51b815260040160405180910390fd5b5050565b80515f036108225760405163211002b360e11b815260040160405180910390fd5b6001600160a01b038216301461083b5761083b82610c49565b5f5f836001600160a01b0316836040516108559190610e17565b5f60405180830381855af49150503d805f811461088d576040519150601f19603f3d011682016040523d82523d5f602084013e610892565b606091505b5091509150816107c9578051156108c6578060405162461bcd60e51b81526004016108bd9190610e2d565b60405180910390fd5b60405163c53ebed560e01b815260040160405180910390fd5b6108e881610c49565b6002820180546001600160a01b039092165f8181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160a01b03821661095657604051631535ac5f60e31b815260040160405180910390fd5b306001600160a01b0383160361097f5760405163c3c5ec3760e01b815260040160405180910390fd5b6001600160e01b031981165f90815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b031692916109cd91610e46565b9050808214610abc576001600160a01b0384165f9081526001860160205260408120805483908110610a0157610a01610cb7565b5f91825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610a5157610a51610cb7565b5f91825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b0384165f9081526001860160205260409020805480610ae457610ae4610e6b565b5f828152602080822060085f1990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b031985168252869052604081208190558190036105595760028501545f90610b4490600190610e46565b6001600160a01b0386165f908152600180890160205260409091200154909150808214610bef575f876002018381548110610b8157610b81610cb7565b5f918252602090912001546002890180546001600160a01b039092169250829184908110610bb157610bb1610cb7565b5f91825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610c0257610c02610e6b565b5f828152602080822083015f1990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b803b5f8190036107fd576040516271a80360e91b815260040160405180910390fd5b80516001600160a01b0381168114610c81575f5ffd5b919050565b5f5f60408385031215610c97575f5ffd5b610ca083610c6b565b9150610cae60208401610c6b565b90509250929050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b5f606082016060835280865180835260808501915060808160051b8601019250602088015f5b82811015610de857868503607f19018452815180516001600160a01b031686526020810151606087019060038110610d7957634e487b7160e01b5f52602160045260245ffd5b8060208901525060408201519150606060408801528082518083526080890191506020840193505f92505b80831015610dd05783516001600160e01b03191682526020938401936001939093019290910190610da4565b50965050506020938401939190910190600101610d33565b5050506001600160a01b0386166020850152508281036040840152610e0d8185610cdf565b9695505050505050565b5f82518060208501845e5f920191825250919050565b602081525f610e3f6020830184610cdf565b9392505050565b81810381811115610e6557634e487b7160e01b5f52601160045260245ffd5b92915050565b634e487b7160e01b5f52603160045260245ffd5b60fe80610e8b5f395ff3fe608060405236600a57005b5f80357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff168060ab576040517fa9ad62f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b365f5f375f5f365f845af43d5f5f3e80801560c4573d5ff35b3d5ffdfea26469706673582212204c538a44c18d42ce315ce8126d7be014e19bac93992e659d9093bb8688063a0464736f6c634300081d0033c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c";
    static readonly abi: readonly [{
        readonly type: "constructor";
        readonly inputs: readonly [{
            readonly name: "_contractOwner";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "_diamondCutFacet";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "fallback";
        readonly stateMutability: "payable";
    }, {
        readonly type: "receive";
        readonly stateMutability: "payable";
    }, {
        readonly type: "event";
        readonly name: "DiamondCut";
        readonly inputs: readonly [{
            readonly name: "_diamondCut";
            readonly type: "tuple[]";
            readonly indexed: false;
            readonly internalType: "struct LibDiamond.FacetCut[]";
            readonly components: readonly [{
                readonly name: "facetAddress";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "action";
                readonly type: "uint8";
                readonly internalType: "enum LibDiamond.FacetCutAction";
            }, {
                readonly name: "functionSelectors";
                readonly type: "bytes4[]";
                readonly internalType: "bytes4[]";
            }];
        }, {
            readonly name: "_init";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "_calldata";
            readonly type: "bytes";
            readonly indexed: false;
            readonly internalType: "bytes";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "OwnershipTransferred";
        readonly inputs: readonly [{
            readonly name: "previousOwner";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }, {
            readonly name: "newOwner";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "error";
        readonly name: "CalldataEmptyButInitNotZero";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "FacetAddressIsNotZero";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "FacetAddressIsZero";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "FacetContainsNoCode";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "FunctionAlreadyExists";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "FunctionDoesNotExist";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "FunctionIsImmutable";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "IncorrectFacetCutAction";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InitReverted";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InitZeroButCalldataNotEmpty";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidConfig";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NoSelectorsInFace";
        readonly inputs: readonly [];
    }];
    static createInterface(): LiFiDEXAggregatorDiamondInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): LiFiDEXAggregatorDiamond;
}
export {};
