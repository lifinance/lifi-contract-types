"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SyncSwapFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "swapSyncSwap",
        inputs: [
            {
                name: "stream",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "from",
                type: "address",
                internalType: "address",
            },
            {
                name: "tokenIn",
                type: "address",
                internalType: "address",
            },
            {
                name: "amountIn",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "error",
        name: "InvalidCallData",
        inputs: [],
    },
];
var _bytecode = "0x6080604052348015600e575f5ffd5b506109ca8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c806389ec6a471461002d575b5f5ffd5b61004061003b3660046107c5565b610052565b60405190815260200160405180910390f35b5f5f6100648680516014018051915290565b90505f6100778780516014018051915290565b905073ffffffffffffffffffffffffffffffffffffffff821615806100b0575073ffffffffffffffffffffffffffffffffffffffff8116155b156100e7576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6100f88880516001018051915290565b905060028160ff161115610138576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6101498980516001018051915290565b60ff1660011490505f8161015d5784610168565b89516014018051908b525b905081801561018b575073ffffffffffffffffffffffffffffffffffffffff8116155b156101c2576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff8a16036102065761020173ffffffffffffffffffffffffffffffffffffffff891633838a6103e7565b610244565b3073ffffffffffffffffffffffffffffffffffffffff8a16036102445761024473ffffffffffffffffffffffffffffffffffffffff891682896104c9565b81156102e3576040517ff9609f0800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8981166004830152868116602483015282169063f9609f08906044016020604051808303815f875af11580156102bd573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102e1919061080a565b505b6040805173ffffffffffffffffffffffffffffffffffffffff808b16602083015286169181019190915260ff841660608201525f90608001604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181525f80845260208401909252925073ffffffffffffffffffffffffffffffffffffffff881691637132bb7f9184918e91906040518563ffffffff1660e01b8152600401610395949392919061086d565b60408051808303815f875af11580156103b0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103d491906108c9565b505f96505050505050505b949350505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526104c39085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610524565b50505050565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261051f9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401610441565b505050565b5f610585826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166106369092919063ffffffff16565b905080515f14806105a55750808060200190518101906105a59190610946565b61051f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60606103df84845f85855f5f8673ffffffffffffffffffffffffffffffffffffffff168587604051610668919061096c565b5f6040518083038185875af1925050503d805f81146106a2576040519150601f19603f3d011682016040523d82523d5f602084013e6106a7565b606091505b50915091506106b8878383876106c3565b979650505050505050565b606083156107585782515f036107515773ffffffffffffffffffffffffffffffffffffffff85163b610751576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161062d565b50816103df565b6103df838381511561076d5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062d9190610982565b73ffffffffffffffffffffffffffffffffffffffff811681146107c2575f5ffd5b50565b5f5f5f5f608085870312156107d8575f5ffd5b8435935060208501356107ea816107a1565b925060408501356107fa816107a1565b9396929550929360600135925050565b5f6020828403121561081a575f5ffd5b5051919050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b608081525f61087f6080830187610821565b73ffffffffffffffffffffffffffffffffffffffff8616602084015273ffffffffffffffffffffffffffffffffffffffff8516604084015282810360608401526106b88185610821565b5f60408284031280156108da575f5ffd5b506040805190810167ffffffffffffffff81118282101715610923577f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040528251610931816107a1565b81526020928301519281019290925250919050565b5f60208284031215610956575f5ffd5b81518015158114610965575f5ffd5b9392505050565b5f82518060208501845e5f920191825250919050565b602081525f610965602083018461082156fea26469706673582212204bb26a97dca0ee54a61afebd5dff6e9fbe930d94699c47057a0bb0d4aadb2f6664736f6c634300081d0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var SyncSwapFacet__factory = /** @class */ (function (_super) {
    __extends(SyncSwapFacet__factory, _super);
    function SyncSwapFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    SyncSwapFacet__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    SyncSwapFacet__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    SyncSwapFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    SyncSwapFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    SyncSwapFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    SyncSwapFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    SyncSwapFacet__factory.bytecode = _bytecode;
    SyncSwapFacet__factory.abi = _abi;
    return SyncSwapFacet__factory;
}(ethers_1.ContractFactory));
exports.SyncSwapFacet__factory = SyncSwapFacet__factory;
