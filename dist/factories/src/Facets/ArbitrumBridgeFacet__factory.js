"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArbitrumBridgeFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "contract IGatewayRouter",
                name: "_gatewayRouter",
                type: "address",
            },
            {
                internalType: "contract IGatewayRouter",
                name: "_inbox",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "ContractCallNotAllowed",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "receivedAmount",
                type: "uint256",
            },
        ],
        name: "CumulativeSlippageTooHigh",
        type: "error",
    },
    {
        inputs: [],
        name: "InformationMismatch",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "required",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
        ],
        name: "InsufficientBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidAmount",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidContract",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidReceiver",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeAssetTransferFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapDataProvided",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapFromZeroBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "NoTransferToNullAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAValidSpender",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAnERC20Token",
        type: "error",
    },
    {
        inputs: [],
        name: "ReentrancyError",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOverflow",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferCompleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                name: "bridgeData",
                type: "tuple",
            },
        ],
        name: "LiFiTransferStarted",
        type: "event",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "maxSubmissionCost",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxGas",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxGasPrice",
                        type: "uint256",
                    },
                ],
                internalType: "struct ArbitrumBridgeFacet.ArbitrumData",
                name: "_arbitrumData",
                type: "tuple",
            },
        ],
        name: "startBridgeTokensViaArbitrumBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "_swapData",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "maxSubmissionCost",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxGas",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxGasPrice",
                        type: "uint256",
                    },
                ],
                internalType: "struct ArbitrumBridgeFacet.ArbitrumData",
                name: "_arbitrumData",
                type: "tuple",
            },
        ],
        name: "swapAndStartBridgeTokensViaArbitrumBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
var _bytecode = "0x60c06040523480156200001157600080fd5b5060405162002acf38038062002acf833981016040819052620000349162000069565b6001600160a01b039182166080521660a052620000a1565b80516001600160a01b03811681146200006457600080fd5b919050565b600080604083850312156200007d57600080fd5b62000088836200004c565b915062000098602084016200004c565b90509250929050565b60805160a051612a01620000ce6000396000610f0001526000818161107c01526110f50152612a016000f3fe6080604052600436106100295760003560e01c80633cc9517b1461002e578063c9851d0b14610043575b600080fd5b61004161003c3660046123ba565b610056565b005b610041610051366004612466565b610299565b33600061006334476124e4565b9050858061010001516100a2576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86806101200151156100e0576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101038160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561013a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610178576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016101f3576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155600061020334476124e4565b905061021a8b600001518c60c001518c8c336104bb565b60c08c0152600061023360408a013560208b01356124f7565b61023e908a3561250e565b90506102558c8a8361025086476124e4565b610603565b505060009081905547935091505082821161027157600061027b565b61027b83836124e4565b9050801561028f5761028f6000858361077a565b5050505050505050565b3360006102a634476124e4565b905083806101000151156102e6576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8480610120015115610324576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856103478160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561037e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036103bc576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610437576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155600061044f604089013560208a01356124f7565b61045a90893561250e565b905061046e89608001518a60c001516107b0565b61047a89898334610603565b5060009081905547935091505082821161049557600061049f565b61049f83836124e4565b905080156104b3576104b36000858361077a565b505050505050565b6000828082036104f7576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856105066001856124e4565b81811061051557610515612521565b90506020028101906105279190612550565b61053890608081019060600161258e565b9050600061054582610926565b905073ffffffffffffffffffffffffffffffffffffffff821661056f5761056c34826124e4565b90505b600061057b88886109df565b90506105878888610aeb565b6105948a89898985610b4c565b6000826105a085610926565b6105aa91906124e4565b9050898110156105f5576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b836106268160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561065d576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361069b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006106bf866080015173ffffffffffffffffffffffffffffffffffffffff161590565b90506000816106ce57846106dd565b60c08701516106dd908661250e565b905080841015610719576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b811561072f5761072a878787610efe565b61073a565b61073a87878761102d565b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18760405161076991906125fb565b60405180910390a150505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316156107a6576107a18383836111e6565b505050565b6107a18282611315565b73ffffffffffffffffffffffffffffffffffffffff82166108095780341015610805576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610843576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156108b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d491906126f0565b90508181101561091a576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016105ec565b6107a18333308561143f565b600073ffffffffffffffffffffffffffffffffffffffff8216156109d7576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156109ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d291906126f0565b6109d9565b475b92915050565b60608160008167ffffffffffffffff8111156109fd576109fd612144565b604051908082528060200260200182016040528015610a26578160200160208202803683370190505b5090506000805b83811015610ae057868682818110610a4757610a47612521565b9050602002810190610a599190612550565b610a6a90608081019060600161258e565b9150610a7582610926565b838281518110610a8757610a87612521565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610ad85734838281518110610ac057610ac0612521565b60200260200101818151610ad491906124e4565b9052505b600101610a2d565b509095945050505050565b60005b818110156107a1576000838383818110610b0a57610b0a612521565b9050602002810190610b1c9190612550565b610b2590612709565b90508060c0015115610b4357610b43816040015182608001516107b0565b50600101610aee565b838383838260018114610e195760008585610b686001856124e4565b818110610b7757610b77612521565b9050602002810190610b899190612550565b610b9a90608081019060600161258e565b9050600089815b81811015610d4557368d8d83818110610bbc57610bbc612521565b9050602002810190610bce9190612550565b9050610bfd610be3606083016040840161258e565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610c605750610c60610c16604083016020840161258e565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610c775750610c77610c16602083018361258e565b8015610cfc5750610cfc610c8e60a08301836127ae565b610c9d9160049160009161281a565b610ca691612844565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610d32576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d3c8f82611651565b50600101610ba1565b505060005b610d556001856124e4565b811015610e11576000888883818110610d7057610d70612521565b9050602002810190610d829190612550565b610d9390608081019060600161258e565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e0857858281518110610dda57610dda612521565b6020026020010151610deb82610926565b610df591906124e4565b92508215610e0857610e0881888561077a565b50600101610d4a565b505050610ef2565b8760005b81811015610eef57368b8b83818110610e3857610e38612521565b9050602002810190610e4a9190612550565b9050610e5f610be3606083016040840161258e565b80610e785750610e78610c16604083016020840161258e565b8015610e8f5750610e8f610c16602083018361258e565b8015610ea65750610ea6610c8e60a08301836127ae565b610edc576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ee68d82611651565b50600101610e1d565b50505b50505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636e6e8a6a828560c00151610f4a919061250e565b60a086015160c08701516040805160e086901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff90931660048401819052602484019290925287356044840152606483018290526084830191909152602087013560a483015286013560c482015261010060e482015260006101048201526101240160206040518083038185885af1158015611002573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061102791906126f0565b50505050565b60808301516040517fbda009fe00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301526110f392917f00000000000000000000000000000000000000000000000000000000000000009091169063bda009fe90602401602060405180830381865afa1580156110c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e9919061288c565b8560c00151611967565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d2ce7d658285608001518660a001518760c0015187602001358860400135896000013560405160200161116f91815260406020820181905260009082015260600190565b6040516020818303038152906040526040518863ffffffff1660e01b815260040161119f969594939291906128a9565b60006040518083038185885af11580156111bd573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526110279190810190612930565b73ffffffffffffffffffffffffffffffffffffffff8316611233576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa1580156112a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c491906126f0565b90508082111561130a576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016105ec565b611027848484611aac565b73ffffffffffffffffffffffffffffffffffffffff8216611362576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156113a5576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016105ec565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146113ff576040519150601f19603f3d011682016040523d82523d6000602084013e611404565b606091505b50509050806107a1576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841661148c576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166114d9576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa15801561154a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156e91906126f0565b905061157c82868686611b62565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa1580156115ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161091906126f0565b61161a91906124e4565b146104b3576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611667611661602083018361258e565b3b151590565b61169d576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036116dd576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006116f2610be3606085016040860161258e565b6116fd576000611703565b82608001355b9050600061171f61171a606086016040870161258e565b610926565b9050600061173661171a608087016060880161258e565b90508260000361176d5761176d611753606087016040880161258e565b611763604088016020890161258e565b8760800135611967565b84608001358210156117b8576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016105ec565b6000806117c8602088018861258e565b73ffffffffffffffffffffffffffffffffffffffff16856117ec60a08a018a6127ae565b6040516117fa929190612979565b60006040518083038185875af1925050503d8060008114611837576040519150601f19603f3d011682016040523d82523d6000602084013e61183c565b606091505b50915091508161188757600061185182611bc0565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ec9190612989565b600061189c61171a60808a0160608b0161258e565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896118cd60208b018b61258e565b6118dd60608c0160408d0161258e565b6118ed60808d0160608e0161258e565b8c608001358987116118ff5786611909565b6119098a886124e4565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661198757505050565b73ffffffffffffffffffffffffffffffffffffffff82166119d4576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015611a4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6e91906126f0565b905081811015611027576110278484611aa7847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6124e4565b611c3e565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526107a19084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611d3c565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526110279085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611afe565b6060604482511015611c0557505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611c216004808551611c1991906124e4565b859190611e48565b905080806020019051810190611c379190612930565b9392505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611cb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cd991906126f0565b611ce3919061250e565b60405173ffffffffffffffffffffffffffffffffffffffff85166024820152604481018290529091506110279085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611afe565b6000611d9e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611f449092919063ffffffff16565b8051909150156107a15780806020019051810190611dbc919061299c565b6107a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105ec565b606081611e5681601f61250e565b1015611e8e576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611e98828461250e565b84511015611ed2576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611ef15760405191506000825260208201604052611f3b565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611f2a578051835260209283019201611f12565b5050858452601f01601f1916604052505b50949350505050565b6060611f538484600085611f5b565b949350505050565b606082471015611fed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105ec565b73ffffffffffffffffffffffffffffffffffffffff85163b61206b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105ec565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161209491906129b9565b60006040518083038185875af1925050503d80600081146120d1576040519150601f19603f3d011682016040523d82523d6000602084013e6120d6565b606091505b50915091506120e68282866120f1565b979650505050505050565b60608315612100575081611c37565b8251156121105782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ec9190612989565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561219757612197612144565b60405290565b60405160e0810167ffffffffffffffff8111828210171561219757612197612144565b604051601f8201601f1916810167ffffffffffffffff811182821017156121e9576121e9612144565b604052919050565b600067ffffffffffffffff82111561220b5761220b612144565b50601f01601f191660200190565b600082601f83011261222a57600080fd5b813561223d612238826121f1565b6121c0565b81815284602083860101111561225257600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461229157600080fd5b50565b803561229f8161226f565b919050565b801515811461229157600080fd5b803561229f816122a4565b600061014082840312156122d057600080fd5b6122d8612173565b905081358152602082013567ffffffffffffffff808211156122f957600080fd5b61230585838601612219565b6020840152604084013591508082111561231e57600080fd5b5061232b84828501612219565b60408301525061233d60608301612294565b606082015261234e60808301612294565b608082015261235f60a08301612294565b60a082015260c082013560c082015260e082013560e08201526101006123868184016122b2565b908201526101206123988382016122b2565b9082015292915050565b6000606082840312156123b457600080fd5b50919050565b60008060008060a085870312156123d057600080fd5b843567ffffffffffffffff808211156123e857600080fd5b6123f4888389016122bd565b9550602087013591508082111561240a57600080fd5b818701915087601f83011261241e57600080fd5b81358181111561242d57600080fd5b8860208260051b850101111561244257600080fd5b60208301955080945050505061245b86604087016123a2565b905092959194509250565b6000806080838503121561247957600080fd5b823567ffffffffffffffff81111561249057600080fd5b61249c858286016122bd565b9250506124ac84602085016123a2565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156109d9576109d96124b5565b80820281158282048414176109d9576109d96124b5565b808201808211156109d9576109d96124b5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261258457600080fd5b9190910192915050565b6000602082840312156125a057600080fd5b8135611c378161226f565b60005b838110156125c65781810151838201526020016125ae565b50506000910152565b600081518084526125e78160208601602086016125ab565b601f01601f19169290920160200192915050565b6020815281516020820152600060208301516101408060408501526126246101608501836125cf565b91506040850151601f1985840301606086015261264183826125cf565b925050606085015161266b608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206126de8187018315159052565b90950151151593019290925250919050565b60006020828403121561270257600080fd5b5051919050565b600060e0823603121561271b57600080fd5b61272361219d565b61272c83612294565b815261273a60208401612294565b602082015261274b60408401612294565b604082015261275c60608401612294565b60608201526080830135608082015260a083013567ffffffffffffffff81111561278557600080fd5b61279136828601612219565b60a0830152506127a360c084016122b2565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126127e357600080fd5b83018035915067ffffffffffffffff8211156127fe57600080fd5b60200191503681900382131561281357600080fd5b9250929050565b6000808585111561282a57600080fd5b8386111561283757600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156128845780818660040360031b1b83161692505b505092915050565b60006020828403121561289e57600080fd5b8151611c378161226f565b600073ffffffffffffffffffffffffffffffffffffffff808916835280881660208401525085604083015284606083015283608083015260c060a08301526128f460c08301846125cf565b98975050505050505050565b600061290e612238846121f1565b905082815283838301111561292257600080fd5b611c378360208301846125ab565b60006020828403121561294257600080fd5b815167ffffffffffffffff81111561295957600080fd5b8201601f8101841361296a57600080fd5b611f5384825160208401612900565b8183823760009101908152919050565b602081526000611c3760208301846125cf565b6000602082840312156129ae57600080fd5b8151611c37816122a4565b600082516125848184602087016125ab56fea2646970667358221220456ca661c67292f3fa767d061837c2fb39aa28f227962937897c01dace70ec0b64736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var ArbitrumBridgeFacet__factory = /** @class */ (function (_super) {
    __extends(ArbitrumBridgeFacet__factory, _super);
    function ArbitrumBridgeFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    ArbitrumBridgeFacet__factory.prototype.deploy = function (_gatewayRouter, _inbox, overrides) {
        return _super.prototype.deploy.call(this, _gatewayRouter, _inbox, overrides || {});
    };
    ArbitrumBridgeFacet__factory.prototype.getDeployTransaction = function (_gatewayRouter, _inbox, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _gatewayRouter, _inbox, overrides || {});
    };
    ArbitrumBridgeFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ArbitrumBridgeFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ArbitrumBridgeFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ArbitrumBridgeFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ArbitrumBridgeFacet__factory.bytecode = _bytecode;
    ArbitrumBridgeFacet__factory.abi = _abi;
    return ArbitrumBridgeFacet__factory;
}(ethers_1.ContractFactory));
exports.ArbitrumBridgeFacet__factory = ArbitrumBridgeFacet__factory;
