"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.OmniBridgeFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "contract IOmniBridge",
                name: "_foreignOmniBridge",
                type: "address",
            },
            {
                internalType: "contract IOmniBridge",
                name: "_wethOmniBridge",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "ContractCallNotAllowed",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "receivedAmount",
                type: "uint256",
            },
        ],
        name: "CumulativeSlippageTooHigh",
        type: "error",
    },
    {
        inputs: [],
        name: "InformationMismatch",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "required",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
        ],
        name: "InsufficientBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidAmount",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidContract",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidReceiver",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeAssetTransferFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapDataProvided",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapFromZeroBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "NoTransferToNullAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAValidSpender",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAnERC20Token",
        type: "error",
    },
    {
        inputs: [],
        name: "ReentrancyError",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOverflow",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferCompleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                indexed: true,
                internalType: "struct ILiFi.BridgeData",
                name: "bridgeData",
                type: "tuple",
            },
        ],
        name: "LiFiTransferStarted",
        type: "event",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
        ],
        name: "startBridgeTokensViaOmniBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "_swapData",
                type: "tuple[]",
            },
        ],
        name: "swapAndStartBridgeTokensViaOmniBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
var _bytecode = "0x60c06040523480156200001157600080fd5b50604051620026b5380380620026b5833981016040819052620000349162000069565b6001600160a01b039182166080521660a052620000a1565b80516001600160a01b03811681146200006457600080fd5b919050565b600080604083850312156200007d57600080fd5b62000088836200004c565b915062000098602084016200004c565b90509250929050565b60805160a0516125e7620000ce60003960006105c801526000818161063501526106bf01526125e76000f3fe6080604052600436106100295760003560e01c8063782621d81461002e5780639572678214610043575b600080fd5b61004161003c366004612049565b610056565b005b61004161005136600461207e565b610215565b3360006100633447612147565b905082806101000151156100a3576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b836100c68160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156100fd576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361013b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016101b6576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155608086015160c08701516101ce91906103da565b6101d78661055a565b60009081905547925090508282116101f05760006101fa565b6101fa8383612147565b9050801561020e5761020e6000858361075f565b5050505050565b3360006102223447612147565b905084806101000151610261576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856102848160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156102bb576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036102f9576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610374576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155875160c089015161038c9190898933610790565b60c089015261039a8861055a565b60009081905547925090508282116103b35760006103bd565b6103bd8383612147565b905080156103d1576103d16000858361075f565b50505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216610433578034101561042f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b8060000361046d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156104da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fe919061215a565b905081811015610549576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b610555833330856108ce565b505050565b608081015173ffffffffffffffffffffffffffffffffffffffff1661062b5760c081015160a08201516040517ff52cbf0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201527f00000000000000000000000000000000000000000000000000000000000000009091169163f52cbf0e916024016000604051808303818588803b15801561060d57600080fd5b505af1158015610621573d6000803e3d6000fd5b505050505061071e565b61065e81608001517f00000000000000000000000000000000000000000000000000000000000000008360c00151610ae8565b608081015160a082015160c08301516040517fad58bdd100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152918316602483015260448201527f00000000000000000000000000000000000000000000000000000000000000009091169063ad58bdd190606401600060405180830381600087803b15801561070557600080fd5b505af1158015610719573d6000803e3d6000fd5b505050505b8060405161072c91906121ba565b604051908190038120907fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f190600090a250565b73ffffffffffffffffffffffffffffffffffffffff83161561078657610555838383610c33565b6105558282610d62565b60008281036107cb576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600084846107da600182612147565b8181106107e9576107e96122b3565b90506020028101906107fb91906122e2565b61080c906080810190606001612320565b9050600073ffffffffffffffffffffffffffffffffffffffff821615610833576000610835565b345b905060008161084384610e8c565b61084d9190612147565b90506108598787610f45565b61086589888888610fa6565b60008161087185610e8c565b61087b9190612147565b9050888110156108c1576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018a905260248101829052604401610540565b9998505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff841661091b576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610968576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa1580156109d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fd919061215a565b9050610a0b8286868661138c565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610a7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9f919061215a565b610aa99190612147565b14610ae0576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610b0857505050565b73ffffffffffffffffffffffffffffffffffffffff8216610b55576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610bcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bef919061215a565b905081811015610c2d57610c2d8484610c28847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612147565b61144a565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610c80576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610ced573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d11919061215a565b905080821115610d57576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610540565b610c2d848484611548565b73ffffffffffffffffffffffffffffffffffffffff8216610daf576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115610df2576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610540565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610e4c576040519150601f19603f3d011682016040523d82523d6000602084013e610e51565b606091505b5050905080610555576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff821615610f3d576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610f14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f38919061215a565b610f3f565b475b92915050565b60005b81811015610555576000838383818110610f6457610f646122b3565b9050602002810190610f7691906122e2565b610f7f9061233b565b90508060c0015115610f9d57610f9d816040015182608001516103da565b50600101610f48565b82828281600181146112ab576000610fbe858561159e565b905060008585610fcf600186612147565b818110610fde57610fde6122b3565b9050602002810190610ff091906122e2565b611001906080810190606001612320565b905060008060005b8a8110156111ad57368c8c83818110611024576110246122b3565b905060200281019061103691906122e2565b905061106561104b6060830160408401612320565b73ffffffffffffffffffffffffffffffffffffffff161590565b806110c857506110c861107e6040830160208401612320565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156110df57506110df61107e6020830183612320565b801561116457506111646110f660a08301836123e0565b6111059160049160009161244c565b61110e91612476565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61119a576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111a48e8261165e565b50600101611009565b5060005b6111bc600187612147565b8110156112a15760008989838181106111d7576111d76122b3565b90506020028101906111e991906122e2565b6111fa906080810190606001612320565b90508473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112985761123881610e8c565b925085828151811061124c5761124c6122b3565b602002602001015183116112605782611285565b858281518110611272576112726122b3565b6020026020010151836112859190612147565b935083156112985761129881898661075f565b506001016111b1565b5050505050611382565b60005b8681101561138057368888838181106112c9576112c96122b3565b90506020028101906112db91906122e2565b90506112f061104b6060830160408401612320565b80611309575061130961107e6040830160208401612320565b8015611320575061132061107e6020830183612320565b801561133757506113376110f660a08301836123e0565b61136d576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113778a8261165e565b506001016112ae565b505b5050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610c2d9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261196f565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156114c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e5919061215a565b6114ef91906124be565b60405173ffffffffffffffffffffffffffffffffffffffff8516602482015260448101829052909150610c2d9085907f095ea7b300000000000000000000000000000000000000000000000000000000906064016113e6565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526105559084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016113e6565b60608160008167ffffffffffffffff8111156115bc576115bc611df4565b6040519080825280602002602001820160405280156115e5578160200160208202803683370190505b50905060005b8281101561165557611630868683818110611608576116086122b3565b905060200281019061161a91906122e2565b61162b906080810190606001612320565b610e8c565b828281518110611642576116426122b3565b60209081029190910101526001016115eb565b50949350505050565b61167461166e6020830183612320565b3b151590565b6116aa576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036116ea576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006116ff61104b6060850160408601612320565b61170a576000611710565b82608001355b9050600061172761162b6060860160408701612320565b9050600061173e61162b6080870160608801612320565b9050826000036117755761177561175b6060870160408801612320565b61176b6040880160208901612320565b8760800135610ae8565b84608001358210156117c0576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610540565b6000806117d06020880188612320565b73ffffffffffffffffffffffffffffffffffffffff16856117f460a08a018a6123e0565b6040516118029291906124d1565b60006040518083038185875af1925050503d806000811461183f576040519150601f19603f3d011682016040523d82523d6000602084013e611844565b606091505b50915091508161188f57600061185982611a7b565b9050806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054091906124e1565b60006118a461162b60808a0160608b01612320565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896118d560208b018b612320565b6118e560608c0160408d01612320565b6118f560808d0160608e01612320565b8c608001358987116119075786611911565b6119118a88612147565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b60006119d1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611af99092919063ffffffff16565b80519091501561055557808060200190518101906119ef9190612514565b610555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610540565b6060604482511015611ac057505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611adc6004808551611ad49190612147565b859190611b10565b905080806020019051810190611af29190612531565b9392505050565b6060611b088484600085611c0b565b949350505050565b606081611b1e81601f6124be565b1015611b56576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b6082846124be565b84511015611b9a576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611bb95760405191506000825260208201604052611655565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611bf2578051835260209283019201611bda565b5050858452601f01601f19166040525050949350505050565b606082471015611c9d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610540565b73ffffffffffffffffffffffffffffffffffffffff85163b611d1b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610540565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611d44919061259f565b60006040518083038185875af1925050503d8060008114611d81576040519150601f19603f3d011682016040523d82523d6000602084013e611d86565b606091505b5091509150611d96828286611da1565b979650505050505050565b60608315611db0575081611af2565b825115611dc05782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054091906124e1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611e4757611e47611df4565b60405290565b60405160e0810167ffffffffffffffff81118282101715611e4757611e47611df4565b604051601f8201601f1916810167ffffffffffffffff81118282101715611e9957611e99611df4565b604052919050565b600067ffffffffffffffff821115611ebb57611ebb611df4565b50601f01601f191660200190565b600082601f830112611eda57600080fd5b8135611eed611ee882611ea1565b611e70565b818152846020838601011115611f0257600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611f4357600080fd5b919050565b8015158114611f5657600080fd5b50565b8035611f4381611f48565b60006101408284031215611f7757600080fd5b611f7f611e23565b905081358152602082013567ffffffffffffffff80821115611fa057600080fd5b611fac85838601611ec9565b60208401526040840135915080821115611fc557600080fd5b50611fd284828501611ec9565b604083015250611fe460608301611f1f565b6060820152611ff560808301611f1f565b608082015261200660a08301611f1f565b60a082015260c082013560c082015260e082013560e082015261010061202d818401611f59565b9082015261012061203f838201611f59565b9082015292915050565b60006020828403121561205b57600080fd5b813567ffffffffffffffff81111561207257600080fd5b611b0884828501611f64565b60008060006040848603121561209357600080fd5b833567ffffffffffffffff808211156120ab57600080fd5b6120b787838801611f64565b945060208601359150808211156120cd57600080fd5b818601915086601f8301126120e157600080fd5b8135818111156120f057600080fd5b8760208260051b850101111561210557600080fd5b6020830194508093505050509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610f3f57610f3f612118565b60006020828403121561216c57600080fd5b5051919050565b60005b8381101561218e578181015183820152602001612176565b50506000910152565b600081516121a9818560208601612173565b601f01601f19169290920192915050565b815181526000602083015180516121d8816020860160208501612173565b6122aa61229a61228a61227d61227061224d61222a6122076020601f19601f8b01168d010160408e0151612197565b60608d015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60808c015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60a08b015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60c08a0151815260200190565b60e0890151815260200190565b6101008801511515815260200190565b6101208701511515815260200190565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261231657600080fd5b9190910192915050565b60006020828403121561233257600080fd5b611af282611f1f565b600060e0823603121561234d57600080fd5b612355611e4d565b61235e83611f1f565b815261236c60208401611f1f565b602082015261237d60408401611f1f565b604082015261238e60608401611f1f565b60608201526080830135608082015260a083013567ffffffffffffffff8111156123b757600080fd5b6123c336828601611ec9565b60a0830152506123d560c08401611f59565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261241557600080fd5b83018035915067ffffffffffffffff82111561243057600080fd5b60200191503681900382131561244557600080fd5b9250929050565b6000808585111561245c57600080fd5b8386111561246957600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156124b65780818660040360031b1b83161692505b505092915050565b80820180821115610f3f57610f3f612118565b8183823760009101908152919050565b6020815260008251806020840152612500816040850160208701612173565b601f01601f19169190910160400192915050565b60006020828403121561252657600080fd5b8151611af281611f48565b60006020828403121561254357600080fd5b815167ffffffffffffffff81111561255a57600080fd5b8201601f8101841361256b57600080fd5b8051612579611ee882611ea1565b81815285602083850101111561258e57600080fd5b6122aa826020830160208601612173565b6000825161231681846020870161217356fea2646970667358221220239562500feb718474db130d02a9e5b716adff37ff36819e03c0957f27a8861264736f6c63430008100033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var OmniBridgeFacet__factory = /** @class */ (function (_super) {
    __extends(OmniBridgeFacet__factory, _super);
    function OmniBridgeFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    OmniBridgeFacet__factory.prototype.deploy = function (_foreignOmniBridge, _wethOmniBridge, overrides) {
        return _super.prototype.deploy.call(this, _foreignOmniBridge, _wethOmniBridge, overrides || {});
    };
    OmniBridgeFacet__factory.prototype.getDeployTransaction = function (_foreignOmniBridge, _wethOmniBridge, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _foreignOmniBridge, _wethOmniBridge, overrides || {});
    };
    OmniBridgeFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    OmniBridgeFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    OmniBridgeFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    OmniBridgeFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    OmniBridgeFacet__factory.bytecode = _bytecode;
    OmniBridgeFacet__factory.abi = _abi;
    return OmniBridgeFacet__factory;
}(ethers_1.ContractFactory));
exports.OmniBridgeFacet__factory = OmniBridgeFacet__factory;
