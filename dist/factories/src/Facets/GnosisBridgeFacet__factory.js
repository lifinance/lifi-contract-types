"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.GnosisBridgeFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "contract IXDaiBridge",
                name: "_xDaiBridge",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "ContractCallNotAllowed",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "receivedAmount",
                type: "uint256",
            },
        ],
        name: "CumulativeSlippageTooHigh",
        type: "error",
    },
    {
        inputs: [],
        name: "InformationMismatch",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "required",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
        ],
        name: "InsufficientBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidAmount",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidContract",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidDestinationChain",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidReceiver",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidSendingToken",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeAssetTransferFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapDataProvided",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapFromZeroBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "NoTransferToNullAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAValidSpender",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAnERC20Token",
        type: "error",
    },
    {
        inputs: [],
        name: "ReentrancyError",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOverflow",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferCompleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                indexed: true,
                internalType: "struct ILiFi.BridgeData",
                name: "bridgeData",
                type: "tuple",
            },
        ],
        name: "LiFiTransferStarted",
        type: "event",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
        ],
        name: "startBridgeTokensViaXDaiBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "_swapData",
                type: "tuple[]",
            },
        ],
        name: "swapAndStartBridgeTokensViaXDaiBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
var _bytecode = "0x60a06040523480156200001157600080fd5b506040516200287c3803806200287c833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b6080516127e16200009b600039600081816107ff015261086f01526127e16000f3fe6080604052600436106100295760003560e01c806302cba4a31461002e578063a9d0550f14610043575b600080fd5b61004161003c366004612243565b610056565b005b610041610051366004612278565b610333565b3360006100633447612341565b905082806101000151156100a3576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83806101200151156100e1576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846101048160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561013b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610179576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85606467ffffffffffffffff16808260e00151146101c3576040517fb86ac1ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87736b175474e89094c44da98b954eedeac495271d0f8073ffffffffffffffffffffffffffffffffffffffff16826080015173ffffffffffffffffffffffffffffffffffffffff1614610242576040517f7d6f201300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102bd576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815560c08b01516102e590736b175474e89094c44da98b954eedeac495271d0f90610665565b6102ee8b6107e5565b60009081905547975095505050858511925061030e915050576000610318565b6103188383612341565b9050801561032c5761032c60008583610936565b5050505050565b82806101000151610370576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83806101200151156103ae576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846103d18160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610408576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610446576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85606467ffffffffffffffff16808260e0015114610490576040517fb86ac1ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87736b175474e89094c44da98b954eedeac495271d0f8073ffffffffffffffffffffffffffffffffffffffff16826080015173ffffffffffffffffffffffffffffffffffffffff161461050f576040517f7d6f201300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161058a576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001808255736b175474e89094c44da98b954eedeac495271d0f908b908b906105b39082612341565b8181106105c2576105c2612354565b90506020028101906105d49190612383565b6105e59060808101906060016123c1565b73ffffffffffffffffffffffffffffffffffffffff1614610632576040517f7d6f201300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106478b600001518c60c001518c8c33610967565b60c08c01526106558b6107e5565b6000905550505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff82166106be57803410156106ba576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b806000036106f8576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610765573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078991906123dc565b9050818110156107d4576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b6107e083333085610aaa565b505050565b610828736b175474e89094c44da98b954eedeac495271d0f7f00000000000000000000000000000000000000000000000000000000000000008360c00151610cc4565b60a081015160c08201516040517f01e4f53a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016926301e4f53a926108c39260040173ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b600060405180830381600087803b1580156108dd57600080fd5b505af11580156108f1573d6000803e3d6000fd5b5050505080604051610903919061243c565b604051908190038120907fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f190600090a250565b73ffffffffffffffffffffffffffffffffffffffff83161561095d576107e0838383610e0f565b6107e08282610f3e565b6000828082036109a3576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856109b2600185612341565b8181106109c1576109c1612354565b90506020028101906109d39190612383565b6109e49060808101906060016123c1565b905060006109f182611068565b905073ffffffffffffffffffffffffffffffffffffffff8216610a1b57610a183482612341565b90505b6000610a278888611121565b9050610a33888861122d565b610a408a8989898561128e565b600082610a4c85611068565b610a569190612341565b905089811015610a9c576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044016107cb565b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416610af7576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610b44576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610bb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd991906123dc565b9050610be782868686611640565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610c57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7b91906123dc565b610c859190612341565b14610cbc576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610ce457505050565b73ffffffffffffffffffffffffffffffffffffffff8216610d31576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610da7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcb91906123dc565b905081811015610e0957610e098484610e04847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612341565b6116fe565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610e5c576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610ec9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eed91906123dc565b905080821115610f33576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016107cb565b610e098484846117fc565b73ffffffffffffffffffffffffffffffffffffffff8216610f8b576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115610fce576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016107cb565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611028576040519150601f19603f3d011682016040523d82523d6000602084013e61102d565b606091505b50509050806107e0576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff821615611119576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156110f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111491906123dc565b61111b565b475b92915050565b60608160008167ffffffffffffffff81111561113f5761113f611fee565b604051908082528060200260200182016040528015611168578160200160208202803683370190505b5090506000805b838110156112225786868281811061118957611189612354565b905060200281019061119b9190612383565b6111ac9060808101906060016123c1565b91506111b782611068565b8382815181106111c9576111c9612354565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff821661121a573483828151811061120257611202612354565b602002602001018181516112169190612341565b9052505b60010161116f565b509095945050505050565b60005b818110156107e057600083838381811061124c5761124c612354565b905060200281019061125e9190612383565b61126790612535565b90508060c00151156112855761128581604001518260800151610665565b50600101611230565b83838383826001811461155b57600085856112aa600185612341565b8181106112b9576112b9612354565b90506020028101906112cb9190612383565b6112dc9060808101906060016123c1565b9050600089815b8181101561148757368d8d838181106112fe576112fe612354565b90506020028101906113109190612383565b905061133f61132560608301604084016123c1565b73ffffffffffffffffffffffffffffffffffffffff161590565b806113a257506113a261135860408301602084016123c1565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156113b957506113b961135860208301836123c1565b801561143e575061143e6113d060a08301836125da565b6113df91600491600091612646565b6113e891612670565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611474576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61147e8f82611852565b506001016112e3565b505060005b611497600185612341565b8110156115535760008888838181106114b2576114b2612354565b90506020028101906114c49190612383565b6114d59060808101906060016123c1565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461154a5785828151811061151c5761151c612354565b602002602001015161152d82611068565b6115379190612341565b9250821561154a5761154a818885610936565b5060010161148c565b505050611634565b8760005b8181101561163157368b8b8381811061157a5761157a612354565b905060200281019061158c9190612383565b90506115a161132560608301604084016123c1565b806115ba57506115ba61135860408301602084016123c1565b80156115d157506115d161135860208301836123c1565b80156115e857506115e86113d060a08301836125da565b61161e576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116288d82611852565b5060010161155f565b50505b50505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610e099085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611b68565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611775573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179991906123dc565b6117a391906126b8565b60405173ffffffffffffffffffffffffffffffffffffffff8516602482015260448101829052909150610e099085907f095ea7b3000000000000000000000000000000000000000000000000000000009060640161169a565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526107e09084907fa9059cbb000000000000000000000000000000000000000000000000000000009060640161169a565b61186861186260208301836123c1565b3b151590565b61189e576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036118de576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006118f361132560608501604086016123c1565b6118fe576000611904565b82608001355b9050600061192061191b60608601604087016123c1565b611068565b9050600061193761191b60808701606088016123c1565b90508260000361196e5761196e61195460608701604088016123c1565b61196460408801602089016123c1565b8760800135610cc4565b84608001358210156119b9576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016107cb565b6000806119c960208801886123c1565b73ffffffffffffffffffffffffffffffffffffffff16856119ed60a08a018a6125da565b6040516119fb9291906126cb565b60006040518083038185875af1925050503d8060008114611a38576040519150601f19603f3d011682016040523d82523d6000602084013e611a3d565b606091505b509150915081611a88576000611a5282611c74565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cb91906126db565b6000611a9d61191b60808a0160608b016123c1565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611ace60208b018b6123c1565b611ade60608c0160408d016123c1565b611aee60808d0160608e016123c1565b8c60800135898711611b005786611b0a565b611b0a8a88612341565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6000611bca826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611cf29092919063ffffffff16565b8051909150156107e05780806020019051810190611be8919061270e565b6107e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016107cb565b6060604482511015611cb957505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611cd56004808551611ccd9190612341565b859190611d09565b905080806020019051810190611ceb919061272b565b9392505050565b6060611d018484600085611e05565b949350505050565b606081611d1781601f6126b8565b1015611d4f576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d5982846126b8565b84511015611d93576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611db25760405191506000825260208201604052611dfc565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611deb578051835260209283019201611dd3565b5050858452601f01601f1916604052505b50949350505050565b606082471015611e97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016107cb565b73ffffffffffffffffffffffffffffffffffffffff85163b611f15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107cb565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611f3e9190612799565b60006040518083038185875af1925050503d8060008114611f7b576040519150601f19603f3d011682016040523d82523d6000602084013e611f80565b606091505b5091509150611f90828286611f9b565b979650505050505050565b60608315611faa575081611ceb565b825115611fba5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cb91906126db565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561204157612041611fee565b60405290565b60405160e0810167ffffffffffffffff8111828210171561204157612041611fee565b604051601f8201601f1916810167ffffffffffffffff8111828210171561209357612093611fee565b604052919050565b600067ffffffffffffffff8211156120b5576120b5611fee565b50601f01601f191660200190565b600082601f8301126120d457600080fd5b81356120e76120e28261209b565b61206a565b8181528460208386010111156120fc57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461213d57600080fd5b919050565b801515811461215057600080fd5b50565b803561213d81612142565b6000610140828403121561217157600080fd5b61217961201d565b905081358152602082013567ffffffffffffffff8082111561219a57600080fd5b6121a6858386016120c3565b602084015260408401359150808211156121bf57600080fd5b506121cc848285016120c3565b6040830152506121de60608301612119565b60608201526121ef60808301612119565b608082015261220060a08301612119565b60a082015260c082013560c082015260e082013560e0820152610100612227818401612153565b90820152610120612239838201612153565b9082015292915050565b60006020828403121561225557600080fd5b813567ffffffffffffffff81111561226c57600080fd5b611d018482850161215e565b60008060006040848603121561228d57600080fd5b833567ffffffffffffffff808211156122a557600080fd5b6122b18783880161215e565b945060208601359150808211156122c757600080fd5b818601915086601f8301126122db57600080fd5b8135818111156122ea57600080fd5b8760208260051b85010111156122ff57600080fd5b6020830194508093505050509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561111b5761111b612312565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126123b757600080fd5b9190910192915050565b6000602082840312156123d357600080fd5b611ceb82612119565b6000602082840312156123ee57600080fd5b5051919050565b60005b838110156124105781810151838201526020016123f8565b50506000910152565b6000815161242b8185602086016123f5565b601f01601f19169290920192915050565b8151815260006020830151805161245a8160208601602085016123f5565b61252c61251c61250c6124ff6124f26124cf6124ac6124896020601f19601f8b01168d010160408e0151612419565b60608d015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60808c015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60a08b015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60c08a0151815260200190565b60e0890151815260200190565b6101008801511515815260200190565b6101208701511515815260200190565b95945050505050565b600060e0823603121561254757600080fd5b61254f612047565b61255883612119565b815261256660208401612119565b602082015261257760408401612119565b604082015261258860608401612119565b60608201526080830135608082015260a083013567ffffffffffffffff8111156125b157600080fd5b6125bd368286016120c3565b60a0830152506125cf60c08401612153565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261260f57600080fd5b83018035915067ffffffffffffffff82111561262a57600080fd5b60200191503681900382131561263f57600080fd5b9250929050565b6000808585111561265657600080fd5b8386111561266357600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156126b05780818660040360031b1b83161692505b505092915050565b8082018082111561111b5761111b612312565b8183823760009101908152919050565b60208152600082518060208401526126fa8160408501602087016123f5565b601f01601f19169190910160400192915050565b60006020828403121561272057600080fd5b8151611ceb81612142565b60006020828403121561273d57600080fd5b815167ffffffffffffffff81111561275457600080fd5b8201601f8101841361276557600080fd5b80516127736120e28261209b565b81815285602083850101111561278857600080fd5b61252c8260208301602086016123f5565b600082516123b78184602087016123f556fea26469706673582212206fa400c5a3bf4b041d15552ae41778e6b3591678206e362882ed494fd8b4a25764736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var GnosisBridgeFacet__factory = /** @class */ (function (_super) {
    __extends(GnosisBridgeFacet__factory, _super);
    function GnosisBridgeFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    GnosisBridgeFacet__factory.prototype.deploy = function (_xDaiBridge, overrides) {
        return _super.prototype.deploy.call(this, _xDaiBridge, overrides || {});
    };
    GnosisBridgeFacet__factory.prototype.getDeployTransaction = function (_xDaiBridge, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _xDaiBridge, overrides || {});
    };
    GnosisBridgeFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    GnosisBridgeFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    GnosisBridgeFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    GnosisBridgeFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    GnosisBridgeFacet__factory.bytecode = _bytecode;
    GnosisBridgeFacet__factory.abi = _abi;
    return GnosisBridgeFacet__factory;
}(ethers_1.ContractFactory));
exports.GnosisBridgeFacet__factory = GnosisBridgeFacet__factory;
