"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.AcrossFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "contract IAcrossSpokePool",
                name: "_spokePool",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "ContractCallNotAllowed",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "receivedAmount",
                type: "uint256",
            },
        ],
        name: "CumulativeSlippageTooHigh",
        type: "error",
    },
    {
        inputs: [],
        name: "InformationMismatch",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "required",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
        ],
        name: "InsufficientBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidAmount",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidContract",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidReceiver",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeAssetTransferFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapDataProvided",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapFromZeroBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "NoTransferToNullAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAValidSpender",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAnERC20Token",
        type: "error",
    },
    {
        inputs: [],
        name: "QuoteTimeout",
        type: "error",
    },
    {
        inputs: [],
        name: "ReentrancyError",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOverflow",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferCompleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                indexed: true,
                internalType: "struct ILiFi.BridgeData",
                name: "bridgeData",
                type: "tuple",
            },
        ],
        name: "LiFiTransferStarted",
        type: "event",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "weth",
                        type: "address",
                    },
                    {
                        internalType: "uint64",
                        name: "relayerFeePct",
                        type: "uint64",
                    },
                    {
                        internalType: "uint32",
                        name: "quoteTimestamp",
                        type: "uint32",
                    },
                ],
                internalType: "struct AcrossFacet.AcrossData",
                name: "_acrossData",
                type: "tuple",
            },
        ],
        name: "startBridgeTokensViaAcross",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "_swapData",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "weth",
                        type: "address",
                    },
                    {
                        internalType: "uint64",
                        name: "relayerFeePct",
                        type: "uint64",
                    },
                    {
                        internalType: "uint32",
                        name: "quoteTimestamp",
                        type: "uint32",
                    },
                ],
                internalType: "struct AcrossFacet.AcrossData",
                name: "_acrossData",
                type: "tuple",
            },
        ],
        name: "swapAndStartBridgeTokensViaAcross",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
var _bytecode = "0x60a06040523480156200001157600080fd5b506040516200277638038062002776833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b6080516126db6200009b600039600081816105cc01526105f701526126db6000f3fe6080604052600436106100295760003560e01c8063c47599d21461002e578063e29f4f5714610043575b600080fd5b61004161003c3660046120ea565b610056565b005b610041610051366004612196565b61021d565b336000610063344761221f565b9050858061010001516100a2576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866100c58160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156100fc576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361013a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016101b5576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155885160c08a01516101cd91908a8a336103ec565b60c08a01526101dc898761052f565b60009081905547925090508282116101f55760006101ff565b6101ff838361221f565b905080156102135761021360008583610745565b5050505050505050565b33600061022a344761221f565b90508361024f8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610286576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036102c4576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8480610100015115610302576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161037d576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155608087015160c0880151610395919061077b565b6103ad876103a836899003890189612232565b61052f565b60009081905547925090508282116103c65760006103d0565b6103d0838361221f565b905080156103e4576103e460008583610745565b505050505050565b6000828103610427576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000848461043660018261221f565b8181106104455761044561224e565b9050602002810190610457919061227d565b6104689060808101906060016122bb565b9050600073ffffffffffffffffffffffffffffffffffffffff82161561048f576000610491565b345b905060008161049f846108f1565b6104a9919061221f565b90506104b587876109aa565b6104c189888888610a0b565b6000816104cd856108f1565b6104d7919061221f565b905088811015610522576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018a9052602481018290526044015b60405180910390fd5b9998505050505050505050565b61053b426102586122d6565b816040015163ffffffff16111561057e576040517fb41405ad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608082015173ffffffffffffffffffffffffffffffffffffffff161580156105c257815173ffffffffffffffffffffffffffffffffffffffff1660808401526105f5565b6105f583608001517f00000000000000000000000000000000000000000000000000000000000000008560c00151610df0565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663492289788261063d576000610643565b8460c001515b8560a0015186608001518760c001518860e00151886020015189604001516040518863ffffffff1660e01b81526004016106d09695949392919073ffffffffffffffffffffffffffffffffffffffff96871681529490951660208501526040840192909252606083015267ffffffffffffffff16608082015263ffffffff9190911660a082015260c00190565b6000604051808303818588803b1580156106e957600080fd5b505af11580156106fd573d6000803e3d6000fd5b5050505050826040516107109190612330565b604051908190038120907fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f190600090a2505050565b73ffffffffffffffffffffffffffffffffffffffff8316156107715761076c838383610f3b565b505050565b61076c828261106a565b73ffffffffffffffffffffffffffffffffffffffff82166107d457803410156107d0576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b8060000361080e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa15801561087b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089f9190612429565b9050818110156108e5576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610519565b61076c83333085611194565b600073ffffffffffffffffffffffffffffffffffffffff8216156109a2576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099d9190612429565b6109a4565b475b92915050565b60005b8181101561076c5760008383838181106109c9576109c961224e565b90506020028101906109db919061227d565b6109e490612442565b90508060c0015115610a0257610a028160400151826080015161077b565b506001016109ad565b8282828160018114610d10576000610a2385856113a6565b905060008585610a3460018661221f565b818110610a4357610a4361224e565b9050602002810190610a55919061227d565b610a669060808101906060016122bb565b905060008060005b8a811015610c1257368c8c83818110610a8957610a8961224e565b9050602002810190610a9b919061227d565b9050610aca610ab060608301604084016122bb565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610b2d5750610b2d610ae360408301602084016122bb565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610b445750610b44610ae360208301836122bb565b8015610bc95750610bc9610b5b60a08301836124e7565b610b6a91600491600091612553565b610b739161257d565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610bff576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c098e82611466565b50600101610a6e565b5060005b610c2160018761221f565b811015610d06576000898983818110610c3c57610c3c61224e565b9050602002810190610c4e919061227d565b610c5f9060808101906060016122bb565b90508473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cfd57610c9d816108f1565b9250858281518110610cb157610cb161224e565b60200260200101518311610cc55782610cea565b858281518110610cd757610cd761224e565b602002602001015183610cea919061221f565b93508315610cfd57610cfd818986610745565b50600101610c16565b5050505050610213565b60005b86811015610de55736888883818110610d2e57610d2e61224e565b9050602002810190610d40919061227d565b9050610d55610ab060608301604084016122bb565b80610d6e5750610d6e610ae360408301602084016122bb565b8015610d855750610d85610ae360208301836122bb565b8015610d9c5750610d9c610b5b60a08301836124e7565b610dd2576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ddc8a82611466565b50600101610d13565b505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610e1057505050565b73ffffffffffffffffffffffffffffffffffffffff8216610e5d576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610ed3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef79190612429565b905081811015610f3557610f358484610f30847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61221f565b611777565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610f88576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610ff5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110199190612429565b90508082111561105f576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610519565b610f358484846118d5565b73ffffffffffffffffffffffffffffffffffffffff82166110b7576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156110fa576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610519565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611154576040519150601f19603f3d011682016040523d82523d6000602084013e611159565b606091505b505090508061076c576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff84166111e1576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661122e576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa15801561129f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c39190612429565b90506112d18286868661192b565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611341573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113659190612429565b61136f919061221f565b146103e4576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608160008167ffffffffffffffff8111156113c4576113c4611e0e565b6040519080825280602002602001820160405280156113ed578160200160208202803683370190505b50905060005b8281101561145d576114388686838181106114105761141061224e565b9050602002810190611422919061227d565b6114339060808101906060016122bb565b6108f1565b82828151811061144a5761144a61224e565b60209081029190910101526001016113f3565b50949350505050565b61147c61147660208301836122bb565b3b151590565b6114b2576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036114f2576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611507610ab060608501604086016122bb565b611512576000611518565b82608001355b9050600061152f61143360608601604087016122bb565b9050600061154661143360808701606088016122bb565b90508260000361157d5761157d61156360608701604088016122bb565b61157360408801602089016122bb565b8760800135610df0565b84608001358210156115c8576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610519565b6000806115d860208801886122bb565b73ffffffffffffffffffffffffffffffffffffffff16856115fc60a08a018a6124e7565b60405161160a9291906125c5565b60006040518083038185875af1925050503d8060008114611647576040519150601f19603f3d011682016040523d82523d6000602084013e61164c565b606091505b50915091508161169757600061166182611989565b9050806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051991906125d5565b60006116ac61143360808a0160608b016122bb565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896116dd60208b018b6122bb565b6116ed60608c0160408d016122bb565b6116fd60808d0160608e016122bb565b8c6080013589871161170f5786611719565b6117198a8861221f565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156117ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118129190612429565b61181c91906122d6565b60405173ffffffffffffffffffffffffffffffffffffffff8516602482015260448101829052909150610f359085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611a07565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261076c9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611871565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610f359085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611871565b60606044825110156119ce57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b60006119ea60048085516119e2919061221f565b859190611b13565b905080806020019051810190611a009190612608565b9392505050565b6000611a69826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611c0e9092919063ffffffff16565b80519091501561076c5780806020019051810190611a879190612676565b61076c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610519565b606081611b2181601f6122d6565b1015611b59576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b6382846122d6565b84511015611b9d576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611bbc576040519150600082526020820160405261145d565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611bf5578051835260209283019201611bdd565b5050858452601f01601f19166040525050949350505050565b6060611c1d8484600085611c25565b949350505050565b606082471015611cb7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610519565b73ffffffffffffffffffffffffffffffffffffffff85163b611d35576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610519565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611d5e9190612693565b60006040518083038185875af1925050503d8060008114611d9b576040519150601f19603f3d011682016040523d82523d6000602084013e611da0565b606091505b5091509150611db0828286611dbb565b979650505050505050565b60608315611dca575081611a00565b825115611dda5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051991906125d5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611e6157611e61611e0e565b60405290565b60405160e0810167ffffffffffffffff81118282101715611e6157611e61611e0e565b604051601f8201601f1916810167ffffffffffffffff81118282101715611eb357611eb3611e0e565b604052919050565b600067ffffffffffffffff821115611ed557611ed5611e0e565b50601f01601f191660200190565b600082601f830112611ef457600080fd5b8135611f07611f0282611ebb565b611e8a565b818152846020838601011115611f1c57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611f5d57600080fd5b919050565b8015158114611f7057600080fd5b50565b8035611f5d81611f62565b60006101408284031215611f9157600080fd5b611f99611e3d565b905081358152602082013567ffffffffffffffff80821115611fba57600080fd5b611fc685838601611ee3565b60208401526040840135915080821115611fdf57600080fd5b50611fec84828501611ee3565b604083015250611ffe60608301611f39565b606082015261200f60808301611f39565b608082015261202060a08301611f39565b60a082015260c082013560c082015260e082013560e0820152610100612047818401611f73565b90820152610120612059838201611f73565b9082015292915050565b60006060828403121561207557600080fd5b6040516060810167ffffffffffffffff828210818311171561209957612099611e0e565b816040528293506120a985611f39565b83526020850135915080821682146120c057600080fd5b506020820152604083013563ffffffff811681146120dd57600080fd5b6040919091015292915050565b60008060008060a0858703121561210057600080fd5b843567ffffffffffffffff8082111561211857600080fd5b61212488838901611f7e565b9550602087013591508082111561213a57600080fd5b818701915087601f83011261214e57600080fd5b81358181111561215d57600080fd5b8860208260051b850101111561217257600080fd5b60208301955080945050505061218b8660408701612063565b905092959194509250565b60008082840360808112156121aa57600080fd5b833567ffffffffffffffff8111156121c157600080fd5b6121cd86828701611f7e565b9350506060601f19820112156121e257600080fd5b506020830190509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156109a4576109a46121f0565b60006060828403121561224457600080fd5b611a008383612063565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126122b157600080fd5b9190910192915050565b6000602082840312156122cd57600080fd5b611a0082611f39565b808201808211156109a4576109a46121f0565b60005b838110156123045781810151838201526020016122ec565b50506000910152565b6000815161231f8185602086016122e9565b601f01601f19169290920192915050565b8151815260006020830151805161234e8160208601602085016122e9565b6124206124106124006123f36123e66123c36123a061237d6020601f19601f8b01168d010160408e015161230d565b60608d015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60808c015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60a08b015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60c08a0151815260200190565b60e0890151815260200190565b6101008801511515815260200190565b6101208701511515815260200190565b95945050505050565b60006020828403121561243b57600080fd5b5051919050565b600060e0823603121561245457600080fd5b61245c611e67565b61246583611f39565b815261247360208401611f39565b602082015261248460408401611f39565b604082015261249560608401611f39565b60608201526080830135608082015260a083013567ffffffffffffffff8111156124be57600080fd5b6124ca36828601611ee3565b60a0830152506124dc60c08401611f73565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261251c57600080fd5b83018035915067ffffffffffffffff82111561253757600080fd5b60200191503681900382131561254c57600080fd5b9250929050565b6000808585111561256357600080fd5b8386111561257057600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156125bd5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b60208152600082518060208401526125f48160408501602087016122e9565b601f01601f19169190910160400192915050565b60006020828403121561261a57600080fd5b815167ffffffffffffffff81111561263157600080fd5b8201601f8101841361264257600080fd5b8051612650611f0282611ebb565b81815285602083850101111561266557600080fd5b6124208260208301602086016122e9565b60006020828403121561268857600080fd5b8151611a0081611f62565b600082516122b18184602087016122e956fea26469706673582212207d431de5047a7f8475cc19dda911189864fa3e9c2bbcc2a3931b4c6f800e5dae64736f6c63430008100033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var AcrossFacet__factory = /** @class */ (function (_super) {
    __extends(AcrossFacet__factory, _super);
    function AcrossFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    AcrossFacet__factory.prototype.deploy = function (_spokePool, overrides) {
        return _super.prototype.deploy.call(this, _spokePool, overrides || {});
    };
    AcrossFacet__factory.prototype.getDeployTransaction = function (_spokePool, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _spokePool, overrides || {});
    };
    AcrossFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    AcrossFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    AcrossFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    AcrossFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    AcrossFacet__factory.bytecode = _bytecode;
    AcrossFacet__factory.abi = _abi;
    return AcrossFacet__factory;
}(ethers_1.ContractFactory));
exports.AcrossFacet__factory = AcrossFacet__factory;
