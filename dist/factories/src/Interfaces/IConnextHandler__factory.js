"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IConnextHandler__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "to",
                                type: "address",
                            },
                            {
                                internalType: "bytes",
                                name: "callData",
                                type: "bytes",
                            },
                            {
                                internalType: "uint32",
                                name: "originDomain",
                                type: "uint32",
                            },
                            {
                                internalType: "uint32",
                                name: "destinationDomain",
                                type: "uint32",
                            },
                            {
                                internalType: "address",
                                name: "agent",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "recovery",
                                type: "address",
                            },
                            {
                                internalType: "bool",
                                name: "forceSlow",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "receiveLocal",
                                type: "bool",
                            },
                            {
                                internalType: "address",
                                name: "callback",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "callbackFee",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "relayerFee",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "slippageTol",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct IConnextHandler.CallParams",
                        name: "params",
                        type: "tuple",
                    },
                    {
                        internalType: "address",
                        name: "transactingAsset",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "transactingAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "originMinOut",
                        type: "uint256",
                    },
                ],
                internalType: "struct IConnextHandler.XCallArgs",
                name: "_args",
                type: "tuple",
            },
        ],
        name: "xcall",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
];
var IConnextHandler__factory = /** @class */ (function () {
    function IConnextHandler__factory() {
    }
    IConnextHandler__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    IConnextHandler__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    IConnextHandler__factory.abi = _abi;
    return IConnextHandler__factory;
}());
exports.IConnextHandler__factory = IConnextHandler__factory;
