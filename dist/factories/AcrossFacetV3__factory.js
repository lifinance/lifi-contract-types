"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.AcrossFacetV3__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_spokePool",
                type: "address",
                internalType: "contract IAcrossSpokePool",
            },
            {
                name: "_wrappedNative",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "spokePool",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract IAcrossSpokePool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "startBridgeTokensViaAcrossV3",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_acrossData",
                type: "tuple",
                internalType: "struct AcrossFacetV3.AcrossV3Data",
                components: [
                    {
                        name: "receiverAddress",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "refundAddress",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "outputAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "outputAmountPercent",
                        type: "uint64",
                        internalType: "uint64",
                    },
                    {
                        name: "exclusiveRelayer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "quoteTimestamp",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "fillDeadline",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "exclusivityDeadline",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "message",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaAcrossV3",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_acrossData",
                type: "tuple",
                internalType: "struct AcrossFacetV3.AcrossV3Data",
                components: [
                    {
                        name: "receiverAddress",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "refundAddress",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "outputAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "outputAmountPercent",
                        type: "uint64",
                        internalType: "uint64",
                    },
                    {
                        name: "exclusiveRelayer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "quoteTimestamp",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "fillDeadline",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "exclusivityDeadline",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "message",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "wrappedNative",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InsufficientBalance",
        inputs: [
            {
                name: "required",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "balance",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
];
var _bytecode = "0x60c06040523480156200001157600080fd5b506040516200219f3803806200219f833981016040819052620000349162000065565b6001600160a01b039182166080521660a052620000a4565b6001600160a01b03811681146200006257600080fd5b50565b600080604083850312156200007957600080fd5b825162000086816200004c565b602084015190925062000099816200004c565b809150509250929050565b60805160a0516120bb620000e46000396000818160db01526107a9015260008181607e0152818161075e0152818161085f015261088a01526120bb6000f3fe60806040526004361061003f5760003560e01c806328832cbd1461004457806328cc431614610059578063afdac3d61461006c578063eb6d3a11146100c9575b600080fd5b610057610052366004611999565b6100fd565b005b610057610067366004611a58565b61033f565b34801561007857600080fd5b506100a07f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100d557600080fd5b506100a07f000000000000000000000000000000000000000000000000000000000000000081565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610178576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006101893447611aeb565b9050868061010001516101c8576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101eb8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610222576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610260576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361029d576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102b289600001518a60c001518a8a3361052c565b60c08a015260006102c287611b2a565b9050670de0b6b3a76400006102dd60a0890160808a01611c08565b67ffffffffffffffff168b60c001516102f69190611c2a565b6103009190611c41565b606082015261030f8a82610674565b5047915050818111156103315761033160008461032c8585611aeb565b610997565b505060009091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016103ba576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006103cb3447611aeb565b9050846103f08160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610427576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610465576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104a2576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156104e0576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104f287608001518860c001516109cc565b610504876104ff88611b2a565b610674565b50479050818111156105205761052060008461032c8585611aeb565b50506000909155505050565b600082808203610568576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610577600185611aeb565b81811061058657610586611c7c565b90506020028101906105989190611cab565b6105a9906080810190606001611ce9565b905060006105b682610a81565b905073ffffffffffffffffffffffffffffffffffffffff82166105e0576105dd3482611aeb565b90505b60006105ec8888610acc565b90506105f88888610bd8565b6106058a89898985610c45565b60008261061185610a81565b61061b9190611aeb565b905089811015610666576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b8161012001511515600082610120015151111515146106bf576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8161012001511580156107065750806000015173ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff1614155b1561073d576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608082015173ffffffffffffffffffffffffffffffffffffffff16610855577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637b9392328360c00151836020015184600001517f000000000000000000000000000000000000000000000000000000000000000086604001518860c0015188606001518a60e001518a60a001518b60c001518c60e001518d61010001518e61012001516040518e63ffffffff1660e01b815260040161081e9c9b9a99989796959493929190611d68565b6000604051808303818588803b15801561083757600080fd5b505af115801561084b573d6000803e3d6000fd5b505050505061095c565b61088882608001517f00000000000000000000000000000000000000000000000000000000000000008460c00151610ff7565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637b93923282602001518360000151856080015185604001518760c0015187606001518960e001518960a001518a60c001518b60e001518c61010001518d61012001516040518d63ffffffff1660e01b81526004016109299c9b9a99989796959493929190611d68565b600060405180830381600087803b15801561094357600080fd5b505af1158015610957573d6000803e3d6000fd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161098b9190611e00565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff83166109c1576109bc8282611023565b505050565b6109bc838383611090565b80600003610a06576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610a5f5780341015610a5b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610a5b73ffffffffffffffffffffffffffffffffffffffff83163330846110fe565b600073ffffffffffffffffffffffffffffffffffffffff821615610ac457610abf73ffffffffffffffffffffffffffffffffffffffff83163061115b565b610ac6565b475b92915050565b60608160008167ffffffffffffffff811115610aea57610aea61175e565b604051908082528060200260200182016040528015610b13578160200160208202803683370190505b5090506000805b83811015610bcd57868682818110610b3457610b34611c7c565b9050602002810190610b469190611cab565b610b57906080810190606001611ce9565b9150610b6282610a81565b838281518110610b7457610b74611c7c565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610bc55734838281518110610bad57610bad611c7c565b60200260200101818151610bc19190611aeb565b9052505b600101610b1a565b509095945050505050565b60005b818110156109bc5736838383818110610bf657610bf6611c7c565b9050602002810190610c089190611cab565b9050610c1a60e0820160c08301611f13565b15610c3c57610c3c610c326060830160408401611ce9565b82608001356109cc565b50600101610bdb565b838383838260018114610f125760008585610c61600185611aeb565b818110610c7057610c70611c7c565b9050602002810190610c829190611cab565b610c93906080810190606001611ce9565b9050600089815b81811015610e3e57368d8d83818110610cb557610cb5611c7c565b9050602002810190610cc79190611cab565b9050610cf6610cdc6060830160408401611ce9565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610d595750610d59610d0f6040830160208401611ce9565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610d705750610d70610d0f6020830183611ce9565b8015610df55750610df5610d8760a0830183611f2e565b610d9691600491600091611f9a565b610d9f91611fc4565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610e2b576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e358f82611190565b50600101610c9a565b505060005b610e4e600185611aeb565b811015610f0a576000888883818110610e6957610e69611c7c565b9050602002810190610e7b9190611cab565b610e8c906080810190606001611ce9565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f0157858281518110610ed357610ed3611c7c565b6020026020010151610ee482610a81565b610eee9190611aeb565b92508215610f0157610f01818885610997565b50600101610e43565b505050610feb565b8760005b81811015610fe857368b8b83818110610f3157610f31611c7c565b9050602002810190610f439190611cab565b9050610f58610cdc6060830160408401611ce9565b80610f715750610f71610d0f6040830160208401611ce9565b8015610f885750610f88610d0f6020830183611ce9565b8015610f9f5750610f9f610d8760a0830183611f2e565b610fd5576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610fdf8d82611190565b50600101610f16565b50505b50505050505050505050565b6109bc8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61146d565b73ffffffffffffffffffffffffffffffffffffffff8216611070576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a5b73ffffffffffffffffffffffffffffffffffffffff831682611580565b73ffffffffffffffffffffffffffffffffffffffff82166110dd576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109bc73ffffffffffffffffffffffffffffffffffffffff8416838361159c565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d15600160005114171661114d57637939f4246000526004601cfd5b600060605260405250505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b6111a56111a06020830183611ce9565b6115eb565b6111db576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080810135600081900361121b576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611230610cdc6060850160408601611ce9565b61123b576000611241565b82608001355b9050600061125d6112586060860160408701611ce9565b610a81565b905060006112746112586080870160608801611ce9565b9050826000036112ab576112ab6112916060870160408801611ce9565b6112a16040880160208901611ce9565b8760800135610ff7565b84608001358210156112f6576040517fcf479181000000000000000000000000000000000000000000000000000000008152608086013560048201526024810183905260440161065d565b6000806113066020880188611ce9565b73ffffffffffffffffffffffffffffffffffffffff168561132a60a08a018a611f2e565b60405161133892919061200c565b60006040518083038185875af1925050503d8060008114611375576040519150601f19603f3d011682016040523d82523d6000602084013e61137a565b606091505b50915091508161138d5761138d816116ca565b60006113a261125860808a0160608b01611ce9565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896113d360208b018b611ce9565b6113e360608c0160408d01611ce9565b6113f360808d0160608e01611ce9565b8c60800135898711611405578661140f565b61140f8a88611aeb565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166114ba576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa15801561152f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611553919061201c565b101561157a5761157a73ffffffffffffffffffffffffffffffffffffffff851684836116d4565b50505050565b60003860003884865af1610a5b5763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d1560016000511417166115e1576390b8ec186000526004601cfd5b6000603452505050565b604080516003808252818301909252600091829182917fef0100000000000000000000000000000000000000000000000000000000000091839160208201818036833701905050863b945090507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4706003600060208401893c863f9350600061167283612035565b90507fffffff0000000000000000000000000000000000000000000000000000000000808516908216036116ae57506001979650505050505050565b6000861180156116be5750818514155b98975050505050505050565b8051602082018181fd5b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d1560016000511417166115e15760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d1560016000511417166115e157633e3f8f736000526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156117b1576117b161175e565b60405290565b600082601f8301126117c857600080fd5b813567ffffffffffffffff808211156117e3576117e361175e565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156118295761182961175e565b8160405283815286602085880101111561184257600080fd5b836020870160208301376000602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461188657600080fd5b919050565b8035801515811461188657600080fd5b600061014082840312156118ae57600080fd5b6118b661178d565b905081358152602082013567ffffffffffffffff808211156118d757600080fd5b6118e3858386016117b7565b602084015260408401359150808211156118fc57600080fd5b50611909848285016117b7565b60408301525061191b60608301611862565b606082015261192c60808301611862565b608082015261193d60a08301611862565b60a082015260c082013560c082015260e082013560e082015261010061196481840161188b565b9082015261012061197683820161188b565b9082015292915050565b6000610140828403121561199357600080fd5b50919050565b600080600080606085870312156119af57600080fd5b843567ffffffffffffffff808211156119c757600080fd5b6119d38883890161189b565b955060208701359150808211156119e957600080fd5b818701915087601f8301126119fd57600080fd5b813581811115611a0c57600080fd5b8860208260051b8501011115611a2157600080fd5b602083019550809450506040870135915080821115611a3f57600080fd5b50611a4c87828801611980565b91505092959194509250565b60008060408385031215611a6b57600080fd5b823567ffffffffffffffff80821115611a8357600080fd5b611a8f8683870161189b565b93506020850135915080821115611aa557600080fd5b50611ab285828601611980565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610ac657610ac6611abc565b803567ffffffffffffffff8116811461188657600080fd5b803563ffffffff8116811461188657600080fd5b60006101408236031215611b3d57600080fd5b611b4561178d565b611b4e83611862565b8152611b5c60208401611862565b6020820152611b6d60408401611862565b604082015260608301356060820152611b8860808401611afe565b6080820152611b9960a08401611862565b60a0820152611baa60c08401611b16565b60c0820152611bbb60e08401611b16565b60e0820152610100611bce818501611b16565b908201526101208381013567ffffffffffffffff811115611bee57600080fd5b611bfa368287016117b7565b918301919091525092915050565b600060208284031215611c1a57600080fd5b611c2382611afe565b9392505050565b8082028115828204841417610ac657610ac6611abc565b600082611c77577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611cdf57600080fd5b9190910192915050565b600060208284031215611cfb57600080fd5b611c2382611862565b6000815180845260005b81811015611d2a57602081850181015186830182015201611d0e565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b73ffffffffffffffffffffffffffffffffffffffff8d811682528c811660208301528b811660408301528a81166060830152608082018a905260a0820189905260c08201889052861660e082015263ffffffff85811661010083015284811661012083015283166101408201526000610180610160830152611dee610180830184611d04565b9e9d5050505050505050505050505050565b602081528151602082015260006020830151610140806040850152611e29610160850183611d04565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152611e648382611d04565b9250506060850151611e8e608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120611f018187018315159052565b90950151151593019290925250919050565b600060208284031215611f2557600080fd5b611c238261188b565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611f6357600080fd5b83018035915067ffffffffffffffff821115611f7e57600080fd5b602001915036819003821315611f9357600080fd5b9250929050565b60008085851115611faa57600080fd5b83861115611fb757600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156120045780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b60006020828403121561202e57600080fd5b5051919050565b6000815160208301517fffffff00000000000000000000000000000000000000000000000000000000008082169350600383101561207d5780818460030360031b1b83161693505b50505091905056fea26469706673582212205ac2177d44ba5fb4594e508a68fed70e48de7b3f9652afca0ac069e5320ca58864736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var AcrossFacetV3__factory = /** @class */ (function (_super) {
    __extends(AcrossFacetV3__factory, _super);
    function AcrossFacetV3__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    AcrossFacetV3__factory.prototype.deploy = function (_spokePool, _wrappedNative, overrides) {
        return _super.prototype.deploy.call(this, _spokePool, _wrappedNative, overrides || {});
    };
    AcrossFacetV3__factory.prototype.getDeployTransaction = function (_spokePool, _wrappedNative, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _spokePool, _wrappedNative, overrides || {});
    };
    AcrossFacetV3__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    AcrossFacetV3__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    AcrossFacetV3__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    AcrossFacetV3__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    AcrossFacetV3__factory.bytecode = _bytecode;
    AcrossFacetV3__factory.abi = _abi;
    return AcrossFacetV3__factory;
}(ethers_1.ContractFactory));
exports.AcrossFacetV3__factory = AcrossFacetV3__factory;
