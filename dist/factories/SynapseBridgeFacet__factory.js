"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SynapseBridgeFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "contract ISynapseRouter",
                name: "_synapseRouter",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "CannotBridgeToSameNetwork",
        type: "error",
    },
    {
        inputs: [],
        name: "ContractCallNotAllowed",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "receivedAmount",
                type: "uint256",
            },
        ],
        name: "CumulativeSlippageTooHigh",
        type: "error",
    },
    {
        inputs: [],
        name: "InformationMismatch",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "required",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
        ],
        name: "InsufficientBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidAmount",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidContract",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidReceiver",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeAssetTransferFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapDataProvided",
        type: "error",
    },
    {
        inputs: [],
        name: "NoSwapFromZeroBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "NoTransferToNullAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAValidSpender",
        type: "error",
    },
    {
        inputs: [],
        name: "NullAddrIsNotAnERC20Token",
        type: "error",
    },
    {
        inputs: [],
        name: "ReentrancyError",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "SliceOverflow",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "string",
                name: "integrator",
                type: "string",
            },
            {
                indexed: false,
                internalType: "string",
                name: "referrer",
                type: "string",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "fromAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "toAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "fromAmount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "toAmount",
                type: "uint256",
            },
        ],
        name: "LiFiGenericSwapCompleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "string",
                name: "integrator",
                type: "string",
            },
            {
                indexed: false,
                internalType: "string",
                name: "referrer",
                type: "string",
            },
            {
                indexed: false,
                internalType: "address",
                name: "fromAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "toAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "fromAmount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "toAmount",
                type: "uint256",
            },
        ],
        name: "LiFiSwappedGeneric",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferCompleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "LiFiTransferRecovered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                name: "bridgeData",
                type: "tuple",
            },
        ],
        name: "LiFiTransferStarted",
        type: "event",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "swapAdapter",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "tokenOut",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "minAmountOut",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "deadline",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "rawParams",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ISynapseRouter.SwapQuery",
                        name: "originQuery",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "swapAdapter",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "tokenOut",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "minAmountOut",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "deadline",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "rawParams",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ISynapseRouter.SwapQuery",
                        name: "destQuery",
                        type: "tuple",
                    },
                ],
                internalType: "struct SynapseBridgeFacet.SynapseData",
                name: "_synapseData",
                type: "tuple",
            },
        ],
        name: "startBridgeTokensViaSynapseBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "transactionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "bridge",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "integrator",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "referrer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "destinationChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "hasSourceSwaps",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "hasDestinationCall",
                        type: "bool",
                    },
                ],
                internalType: "struct ILiFi.BridgeData",
                name: "_bridgeData",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "callTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "sendingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "receivingAssetId",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "fromAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "callData",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "requiresDeposit",
                        type: "bool",
                    },
                ],
                internalType: "struct LibSwap.SwapData[]",
                name: "_swapData",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "swapAdapter",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "tokenOut",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "minAmountOut",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "deadline",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "rawParams",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ISynapseRouter.SwapQuery",
                        name: "originQuery",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "swapAdapter",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "tokenOut",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "minAmountOut",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "deadline",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "rawParams",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ISynapseRouter.SwapQuery",
                        name: "destQuery",
                        type: "tuple",
                    },
                ],
                internalType: "struct SynapseBridgeFacet.SynapseData",
                name: "_synapseData",
                type: "tuple",
            },
        ],
        name: "swapAndStartBridgeTokensViaSynapseBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
var _bytecode = "0x60a06040523480156200001157600080fd5b5060405162002a0938038062002a09833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b60805161296e6200009b6000396000818161066501526106b4015261296e6000f3fe6080604052600436106100295760003560e01c80637d9dd78b1461002e5780639700ad7514610043575b600080fd5b61004161003c366004612222565b610056565b005b6100416100513660046122e1565b610288565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e2344761237d565b905086806101000151610121576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561015f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886101828160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101b9576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101f7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610234576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102498a600001518b60c001518b8b336104cf565b60c08b01526102588a88610617565b50479150508181111561027a5761027a600084610275858561237d565b610786565b505060009091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610303576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155336000610314344761237d565b905061031f85612390565b60a081015173ffffffffffffffffffffffffffffffffffffffff16610370576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036103ae576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036103eb576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103f486612390565b80610100015115610431576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043a87612390565b80610120015115610477576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61049461048a60a08a0160808b0161239c565b8960c001356107bc565b6104a66104a089612390565b88610617565b5047915050818111156104c3576104c3600084610275858561237d565b50506000909155505050565b60008280820361050b576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000858561051a60018561237d565b818110610529576105296123b7565b905060200281019061053b91906123e6565b61054c90608081019060600161239c565b9050600061055982610932565b905073ffffffffffffffffffffffffffffffffffffffff821661058357610580348261237d565b90505b600061058f88886109eb565b905061059b8888610af7565b6105a88a89898985610b64565b6000826105b485610932565b6105be919061237d565b905089811015610609576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b608082015160009073ffffffffffffffffffffffffffffffffffffffff811661065b57505060c082015173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee61068e565b61068e84608001517f00000000000000000000000000000000000000000000000000000000000000008660c00151610f16565b60a084015160e085015160c086015173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169263c228814792869286906106e98a80612424565b6106f660208c018c612424565b6040518863ffffffff1660e01b81526004016107179695949392919061256c565b6000604051808303818588803b15801561073057600080fd5b505af1158015610744573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f184604051610778919061263e565b60405180910390a150505050565b73ffffffffffffffffffffffffffffffffffffffff8316156107b2576107ad838383611059565b505050565b6107ad82826111db565b806000036107f6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661084f578034101561084b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156108bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e09190612751565b905081811015610926576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610600565b6107ad83333085611305565b600073ffffffffffffffffffffffffffffffffffffffff8216156109e3576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156109ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109de9190612751565b6109e5565b475b92915050565b60608160008167ffffffffffffffff811115610a0957610a09611f9c565b604051908082528060200260200182016040528015610a32578160200160208202803683370190505b5090506000805b83811015610aec57868682818110610a5357610a536123b7565b9050602002810190610a6591906123e6565b610a7690608081019060600161239c565b9150610a8182610932565b838281518110610a9357610a936123b7565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610ae45734838281518110610acc57610acc6123b7565b60200260200101818151610ae0919061237d565b9052505b600101610a39565b509095945050505050565b60005b818110156107ad5736838383818110610b1557610b156123b7565b9050602002810190610b2791906123e6565b9050610b3960e0820160c0830161276a565b15610b5b57610b5b610b51606083016040840161239c565b82608001356107bc565b50600101610afa565b838383838260018114610e315760008585610b8060018561237d565b818110610b8f57610b8f6123b7565b9050602002810190610ba191906123e6565b610bb290608081019060600161239c565b9050600089815b81811015610d5d57368d8d83818110610bd457610bd46123b7565b9050602002810190610be691906123e6565b9050610c15610bfb606083016040840161239c565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610c785750610c78610c2e604083016020840161239c565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610c8f5750610c8f610c2e602083018361239c565b8015610d145750610d14610ca660a0830183612787565b610cb5916004916000916127f3565b610cbe9161281d565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610d4a576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d548f8261151f565b50600101610bb9565b505060005b610d6d60018561237d565b811015610e29576000888883818110610d8857610d886123b7565b9050602002810190610d9a91906123e6565b610dab90608081019060600161239c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e2057858281518110610df257610df26123b7565b6020026020010151610e0382610932565b610e0d919061237d565b92508215610e2057610e20818885610786565b50600101610d62565b505050610f0a565b8760005b81811015610f0757368b8b83818110610e5057610e506123b7565b9050602002810190610e6291906123e6565b9050610e77610bfb606083016040840161239c565b80610e905750610e90610c2e604083016020840161239c565b8015610ea75750610ea7610c2e602083018361239c565b8015610ebe5750610ebe610ca660a0830183612787565b610ef4576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610efe8d8261151f565b50600101610e35565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610f3657505050565b73ffffffffffffffffffffffffffffffffffffffff8216610f83576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015610ff8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101c9190612751565b10156107ad5761102e83836000611835565b6107ad83837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611835565b73ffffffffffffffffffffffffffffffffffffffff83166110a6576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166110f3576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611160573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111849190612751565b9050808211156111ca576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610600565b6111d5848484611a35565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216611228576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4781111561126b576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610600565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146112c5576040519150601f19603f3d011682016040523d82523d6000602084013e6112ca565b606091505b50509050806107ad576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416611352576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661139f576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015611410573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114349190612751565b905061144282868686611a8b565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa1580156114b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d69190612751565b6114e0919061237d565b14611517576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b61153561152f602083018361239c565b3b151590565b61156b576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036115ab576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006115c0610bfb606085016040860161239c565b6115cb5760006115d1565b82608001355b905060006115ed6115e8606086016040870161239c565b610932565b905060006116046115e8608087016060880161239c565b90508260000361163b5761163b611621606087016040880161239c565b611631604088016020890161239c565b8760800135610f16565b8460800135821015611686576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610600565b600080611696602088018861239c565b73ffffffffffffffffffffffffffffffffffffffff16856116ba60a08a018a612787565b6040516116c8929190612865565b60006040518083038185875af1925050503d8060008114611705576040519150601f19603f3d011682016040523d82523d6000602084013e61170a565b606091505b50915091508161175557600061171f82611ae9565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106009190612875565b600061176a6115e860808a0160608b0161239c565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961179b60208b018b61239c565b6117ab60608c0160408d0161239c565b6117bb60808d0160608e0161239c565b8c608001358987116117cd57866117d7565b6117d78a8861237d565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b8015806118d557506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156118af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d39190612751565b155b611961576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610600565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526107ad9084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611b67565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526107ad9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016119b3565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526111d59085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016119b3565b6060604482511015611b2e57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611b4a6004808551611b42919061237d565b859190611c73565b905080806020019051810190611b609190612888565b9392505050565b6000611bc9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611d8d9092919063ffffffff16565b8051909150156107ad5780806020019051810190611be791906128f6565b6107ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610600565b606081611c8181601f612913565b1015611cb9576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611cc38284612913565b84511015611cfd576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611d1c5760405191506000825260208201604052611d84565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611d55578051835260209283019201611d3d565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6060611d9c8484600085611da4565b949350505050565b606082471015611e36576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610600565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611e5f9190612926565b60006040518083038185875af1925050503d8060008114611e9c576040519150601f19603f3d011682016040523d82523d6000602084013e611ea1565b606091505b5091509150611eb287838387611ebd565b979650505050505050565b60608315611f53578251600003611f4c5773ffffffffffffffffffffffffffffffffffffffff85163b611f4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610600565b5081611d9c565b611d9c8383815115611f685781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106009190612875565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611fef57611fef611f9c565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561203c5761203c611f9c565b604052919050565b600067ffffffffffffffff82111561205e5761205e611f9c565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261209b57600080fd5b81356120ae6120a982612044565b611ff5565b8181528460208386010111156120c357600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461210457600080fd5b919050565b801515811461211757600080fd5b50565b803561210481612109565b6000610140828403121561213857600080fd5b612140611fcb565b905081358152602082013567ffffffffffffffff8082111561216157600080fd5b61216d8583860161208a565b6020840152604084013591508082111561218657600080fd5b506121938482850161208a565b6040830152506121a5606083016120e0565b60608201526121b6608083016120e0565b60808201526121c760a083016120e0565b60a082015260c082013560c082015260e082013560e08201526101006121ee81840161211a565b9082015261012061220083820161211a565b9082015292915050565b60006040828403121561221c57600080fd5b50919050565b6000806000806060858703121561223857600080fd5b843567ffffffffffffffff8082111561225057600080fd5b61225c88838901612125565b9550602087013591508082111561227257600080fd5b818701915087601f83011261228657600080fd5b81358181111561229557600080fd5b8860208260051b85010111156122aa57600080fd5b6020830195508094505060408701359150808211156122c857600080fd5b506122d58782880161220a565b91505092959194509250565b600080604083850312156122f457600080fd5b823567ffffffffffffffff8082111561230c57600080fd5b90840190610140828703121561232157600080fd5b9092506020840135908082111561233757600080fd5b506123448582860161220a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156109e5576109e561234e565b60006109e53683612125565b6000602082840312156123ae57600080fd5b611b60826120e0565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261241a57600080fd5b9190910192915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6183360301811261241a57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600073ffffffffffffffffffffffffffffffffffffffff806124c2846120e0565b168452806124d2602085016120e0565b16602085015250604082013560408401526060820135606084015260808201357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe183360301811261252257600080fd5b820160208101903567ffffffffffffffff81111561253f57600080fd5b80360382131561254e57600080fd5b60a0608086015261256360a086018284612458565b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff808916835287602084015280871660408401525084606083015260c060808301526125b160c08301856124a1565b82810360a08401526125c381856124a1565b9998505050505050505050565b60005b838110156125eb5781810151838201526020016125d3565b50506000910152565b6000815180845261260c8160208601602086016125d0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815281516020820152600060208301516101408060408501526126676101608501836125f4565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526126a283826125f4565b92505060608501516126cc608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e085015161010081818701528087015191505061012061273f8187018315159052565b90950151151593019290925250919050565b60006020828403121561276357600080fd5b5051919050565b60006020828403121561277c57600080fd5b8135611b6081612109565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126127bc57600080fd5b83018035915067ffffffffffffffff8211156127d757600080fd5b6020019150368190038213156127ec57600080fd5b9250929050565b6000808585111561280357600080fd5b8386111561281057600080fd5b5050820193919092039150565b7fffffffff00000000000000000000000000000000000000000000000000000000813581811691600485101561285d5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b602081526000611b6060208301846125f4565b60006020828403121561289a57600080fd5b815167ffffffffffffffff8111156128b157600080fd5b8201601f810184136128c257600080fd5b80516128d06120a982612044565b8181528560208385010111156128e557600080fd5b6125638260208301602086016125d0565b60006020828403121561290857600080fd5b8151611b6081612109565b808201808211156109e5576109e561234e565b6000825161241a8184602087016125d056fea2646970667358221220095a06cbe17d801efb3155f2246e21f4aa52c82709591b2333eb0519fb14e30164736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var SynapseBridgeFacet__factory = /** @class */ (function (_super) {
    __extends(SynapseBridgeFacet__factory, _super);
    function SynapseBridgeFacet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    SynapseBridgeFacet__factory.prototype.deploy = function (_synapseRouter, overrides) {
        return _super.prototype.deploy.call(this, _synapseRouter, overrides || {});
    };
    SynapseBridgeFacet__factory.prototype.getDeployTransaction = function (_synapseRouter, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _synapseRouter, overrides || {});
    };
    SynapseBridgeFacet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    SynapseBridgeFacet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    SynapseBridgeFacet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    SynapseBridgeFacet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    SynapseBridgeFacet__factory.bytecode = _bytecode;
    SynapseBridgeFacet__factory.abi = _abi;
    return SynapseBridgeFacet__factory;
}(ethers_1.ContractFactory));
exports.SynapseBridgeFacet__factory = SynapseBridgeFacet__factory;
