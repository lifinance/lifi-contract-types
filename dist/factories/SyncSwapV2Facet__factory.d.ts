import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { SyncSwapV2Facet, SyncSwapV2FacetInterface } from "../SyncSwapV2Facet";
type SyncSwapV2FacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class SyncSwapV2Facet__factory extends ContractFactory {
    constructor(...args: SyncSwapV2FacetConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<SyncSwapV2Facet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): SyncSwapV2Facet;
    connect(signer: Signer): SyncSwapV2Facet__factory;
    static readonly bytecode = "0x6080604052348015600e575f5ffd5b506108288061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063da78917b1461002d575b5f5ffd5b61004061003b3660046105f6565b610042565b005b83516040805160208088018252928701830192810192909252818101905280518051601482018084525160289092018352606090811c91901c81158061009c575073ffffffffffffffffffffffffffffffffffffffff8116155b156100d3576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82518051600190910184525f1a600281111561011b576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83518051600191820186525f90811a90911490816101395784610148565b855180516014909101875260601c5b905081801561016b575073ffffffffffffffffffffffffffffffffffffffff8116155b156101a2576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff8a16036101d0576101cb8833838a610370565b6101f8565b3073ffffffffffffffffffffffffffffffffffffffff8a16036101f8576101f8888289610432565b8115610297576040517ff9609f0800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8981166004830152868116602483015282169063f9609f08906044016020604051808303815f875af1158015610271573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061029591906106d0565b505b6040805173ffffffffffffffffffffffffffffffffffffffff8a811660208301528681168284015260ff8616606080840191909152835180840390910181525f6080840181815260a08501958690527f7132bb7f0000000000000000000000000000000000000000000000000000000090955291891693637132bb7f93610324938f92909160a401610733565b60408051808303815f875af115801561033f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610363919061079a565b5050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff84166103bd576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661040a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61042c73ffffffffffffffffffffffffffffffffffffffff85168484846104a5565b50505050565b73ffffffffffffffffffffffffffffffffffffffff821661047f576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104a073ffffffffffffffffffffffffffffffffffffffff841683836104fd565b505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f511417166104f057637939f4245f526004601cfd5b5f60605260405250505050565b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f5114171661053d576390b8ec185f526004601cfd5b5f603452505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156105ba576105ba610546565b604052919050565b73ffffffffffffffffffffffffffffffffffffffff811681146105e3575f5ffd5b50565b80356105f1816105c2565b919050565b5f5f5f5f60808587031215610609575f5ffd5b843567ffffffffffffffff81111561061f575f5ffd5b8501601f8101871361062f575f5ffd5b803567ffffffffffffffff81111561064957610649610546565b61067a60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610573565b81815288602083850101111561068e575f5ffd5b816020840160208301375f602083830101528096505050506106b2602086016105e6565b92506106c0604086016105e6565b9396929550929360600135925050565b5f602082840312156106e0575f5ffd5b5051919050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b608081525f61074560808301876106e7565b73ffffffffffffffffffffffffffffffffffffffff8616602084015273ffffffffffffffffffffffffffffffffffffffff85166040840152828103606084015261078f81856106e7565b979650505050505050565b5f60408284031280156107ab575f5ffd5b506040805190810167ffffffffffffffff811182821017156107cf576107cf610546565b60405282516107dd816105c2565b8152602092830151928101929092525091905056fea26469706673582212202d9fec09ad9f17d8aa86d397a3e211e20c581f3c970af7ad3275173bb1b71a3164736f6c634300081d0033";
    static readonly abi: readonly [{
        readonly type: "function";
        readonly name: "swapSyncSwapV2";
        readonly inputs: readonly [{
            readonly name: "swapData";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "from";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "tokenIn";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "amountIn";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "error";
        readonly name: "InvalidCallData";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidReceiver";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "NullAddrIsNotAnERC20Token";
        readonly inputs: readonly [];
    }];
    static createInterface(): SyncSwapV2FacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): SyncSwapV2Facet;
}
export {};
