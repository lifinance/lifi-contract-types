import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { SyncSwapV2Facet, SyncSwapV2FacetInterface } from "../SyncSwapV2Facet";
type SyncSwapV2FacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class SyncSwapV2Facet__factory extends ContractFactory {
    constructor(...args: SyncSwapV2FacetConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<SyncSwapV2Facet>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): SyncSwapV2Facet;
    connect(signer: Signer): SyncSwapV2Facet__factory;
    static readonly bytecode = "0x6080604052348015600e575f5ffd5b50610ab78061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063da78917b1461002d575b5f5ffd5b61004061003b366004610842565b610052565b60405190815260200160405180910390f35b604080518082019091526020858101808352865187018201918301919091525160348601808352516048870183525f9291606090811c91901c8115806100ac575073ffffffffffffffffffffffffffffffffffffffff8116155b156100e3576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82518051600190910184525f1a600281111561012b576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83518051600191820186525f90811a90911490816101495784610158565b855180516014909101875260601c5b905081801561017b575073ffffffffffffffffffffffffffffffffffffffff8116155b156101b2576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff8b16036101f6576101f173ffffffffffffffffffffffffffffffffffffffff8a1633838b6103d8565b610234565b3073ffffffffffffffffffffffffffffffffffffffff8b16036102345761023473ffffffffffffffffffffffffffffffffffffffff8a16828a6104ba565b81156102d3576040517ff9609f0800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a81166004830152868116602483015282169063f9609f08906044016020604051808303815f875af11580156102ad573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102d1919061091c565b505b6040805173ffffffffffffffffffffffffffffffffffffffff808c16602083015286169181019190915260ff841660608201525f90608001604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181525f80845260208401909252925073ffffffffffffffffffffffffffffffffffffffff881691637132bb7f9184918f91906040518563ffffffff1660e01b8152600401610385949392919061097f565b60408051808303815f875af11580156103a0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103c491906109db565b505f9750505050505050505b949350505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526104b49085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610515565b50505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526105109084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401610432565b505050565b5f610576826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166106279092919063ffffffff16565b905080515f14806105965750808060200190518101906105969190610a33565b610510576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60606103d084845f85855f5f8673ffffffffffffffffffffffffffffffffffffffff1685876040516106599190610a59565b5f6040518083038185875af1925050503d805f8114610693576040519150601f19603f3d011682016040523d82523d5f602084013e610698565b606091505b50915091506106a9878383876106b4565b979650505050505050565b606083156107495782515f036107425773ffffffffffffffffffffffffffffffffffffffff85163b610742576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161061e565b50816103d0565b6103d0838381511561075e5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061e9190610a6f565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561080657610806610792565b604052919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461082f575f5ffd5b50565b803561083d8161080e565b919050565b5f5f5f5f60808587031215610855575f5ffd5b843567ffffffffffffffff81111561086b575f5ffd5b8501601f8101871361087b575f5ffd5b803567ffffffffffffffff81111561089557610895610792565b6108c660207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016107bf565b8181528860208385010111156108da575f5ffd5b816020840160208301375f602083830101528096505050506108fe60208601610832565b925061090c60408601610832565b9396929550929360600135925050565b5f6020828403121561092c575f5ffd5b5051919050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b608081525f6109916080830187610933565b73ffffffffffffffffffffffffffffffffffffffff8616602084015273ffffffffffffffffffffffffffffffffffffffff8516604084015282810360608401526106a98185610933565b5f60408284031280156109ec575f5ffd5b506040805190810167ffffffffffffffff81118282101715610a1057610a10610792565b6040528251610a1e8161080e565b81526020928301519281019290925250919050565b5f60208284031215610a43575f5ffd5b81518015158114610a52575f5ffd5b9392505050565b5f82518060208501845e5f920191825250919050565b602081525f610a52602083018461093356fea2646970667358221220678b308dcf2c4e86088bb172068341a33a4b3a0a4e8ddd7e692e58d1296fdd1664736f6c634300081d0033";
    static readonly abi: readonly [{
        readonly type: "function";
        readonly name: "swapSyncSwapV2";
        readonly inputs: readonly [{
            readonly name: "swapData";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "from";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "tokenIn";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "amountIn";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "error";
        readonly name: "InvalidCallData";
        readonly inputs: readonly [];
    }];
    static createInterface(): SyncSwapV2FacetInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): SyncSwapV2Facet;
}
export {};
