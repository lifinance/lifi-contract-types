/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        type: "function",
        name: "swapIzumiV3",
        inputs: [
            {
                name: "stream",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "from",
                type: "address",
                internalType: "address",
            },
            {
                name: "tokenIn",
                type: "address",
                internalType: "address",
            },
            {
                name: "amountIn",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "swapX2YCallback",
        inputs: [
            {
                name: "amountX",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "swapY2XCallback",
        inputs: [
            {
                name: "amountY",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "error",
        name: "InvalidCallData",
        inputs: [],
    },
    {
        type: "error",
        name: "IzumiV3SwapCallbackNotPositiveAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "IzumiV3SwapCallbackUnknownSource",
        inputs: [],
    },
    {
        type: "error",
        name: "IzumiV3SwapUnexpected",
        inputs: [],
    },
    {
        type: "error",
        name: "UnexpectedCallbackSender",
        inputs: [
            {
                name: "actual",
                type: "address",
                internalType: "address",
            },
            {
                name: "expected",
                type: "address",
                internalType: "address",
            },
        ],
    },
];
const _bytecode = "0x6080604052348015600e575f5ffd5b50610c2c8061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061003f575f3560e01c806346dc561d146100435780638ebe5cd614610058578063a7a655c114610043575b5f5ffd5b610056610051366004610934565b61007d565b005b61006b6100663660046109cc565b61008d565b60405190815260200160405180910390f35b610088838383610430565b505050565b5f5f61009f8680516014018051915290565b90505f6100b28780516001018051915290565b90505f6100c58880516014018051915290565b905073ffffffffffffffffffffffffffffffffffffffff831615806100fe575073ffffffffffffffffffffffffffffffffffffffff8116155b8061011857506fffffffffffffffffffffffffffffffff85115b1561014f576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff88160361018e5761018e73ffffffffffffffffffffffffffffffffffffffff87163330886104f3565b7f12d110a66e0c5763793e5d1e64ab8a58a55eab5b86fb83d032af88fce80e258480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff8316016102f55773ffffffffffffffffffffffffffffffffffffffff831663857f812f82876102607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3cb006001610a3e565b6040805173ffffffffffffffffffffffffffffffffffffffff8d166020820152016040516020818303038152906040526040518563ffffffff1660e01b81526004016102af9493929190610ad1565b60408051808303815f875af11580156102ca573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102ee9190610b2a565b50506103b2565b73ffffffffffffffffffffffffffffffffffffffff8316632c48125282876103216001620c3500610b4c565b6040805173ffffffffffffffffffffffffffffffffffffffff8d166020820152016040516020818303038152906040526040518563ffffffff1660e01b81526004016103709493929190610ad1565b60408051808303815f875af115801561038b573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103af9190610b2a565b50505b7f12d110a66e0c5763793e5d1e64ab8a58a55eab5b86fb83d032af88fce80e25845473ffffffffffffffffffffffffffffffffffffffff1615610421576040517fc2284f3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f93505050505b949350505050565b6104386105cf565b825f03610471576040517f28ecba3200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61047e82840184610b8d565b90506104a173ffffffffffffffffffffffffffffffffffffffff82163386610666565b6104ed7f12d110a66e0c5763793e5d1e64ab8a58a55eab5b86fb83d032af88fce80e258480547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b50505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526104ed9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526106bc565b7f12d110a66e0c5763793e5d1e64ab8a58a55eab5b86fb83d032af88fce80e25845473ffffffffffffffffffffffffffffffffffffffff16338114610663576040517f48f89ac500000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff821660248201526044015b60405180910390fd5b50565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526100889084907fa9059cbb000000000000000000000000000000000000000000000000000000009060640161054d565b5f61071d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166107c99092919063ffffffff16565b905080515f148061073d57508080602001905181019061073d9190610baf565b610088576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161065a565b606061042884845f85855f5f8673ffffffffffffffffffffffffffffffffffffffff1685876040516107fb9190610bce565b5f6040518083038185875af1925050503d805f8114610835576040519150601f19603f3d011682016040523d82523d5f602084013e61083a565b606091505b509150915061084b87838387610856565b979650505050505050565b606083156108eb5782515f036108e45773ffffffffffffffffffffffffffffffffffffffff85163b6108e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161065a565b5081610428565b61042883838151156109005781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065a9190610be4565b5f5f5f60408486031215610946575f5ffd5b83359250602084013567ffffffffffffffff811115610963575f5ffd5b8401601f81018613610973575f5ffd5b803567ffffffffffffffff811115610989575f5ffd5b86602082840101111561099a575f5ffd5b939660209190910195509293505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610663575f5ffd5b5f5f5f5f608085870312156109df575f5ffd5b8435935060208501356109f1816109ab565b92506040850135610a01816109ab565b9396929550929360600135925050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b600281810b9083900b01627fffff81137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000082121715610a7f57610a7f610a11565b92915050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b73ffffffffffffffffffffffffffffffffffffffff851681526fffffffffffffffffffffffffffffffff841660208201528260020b6040820152608060608201525f610b206080830184610a85565b9695505050505050565b5f5f60408385031215610b3b575f5ffd5b505080516020909101519092909150565b600282810b9082900b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000008112627fffff82131715610a7f57610a7f610a11565b5f60208284031215610b9d575f5ffd5b8135610ba8816109ab565b9392505050565b5f60208284031215610bbf575f5ffd5b81518015158114610ba8575f5ffd5b5f82518060208501845e5f920191825250919050565b602081525f610ba86020830184610a8556fea2646970667358221220b3f0670809def46000ab1d15b569e1190b034be1fcfe9150e53369f062f181f764736f6c634300081d0033";
const isSuperArgs = (xs) => xs.length > 1;
export class IzumiV3Facet__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
