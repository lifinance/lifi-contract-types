"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.EverclearV2Facet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_feeAdapterV2",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "FEE_ADAPTER_V2",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract IEverclearFeeAdapterV2",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "startBridgeTokensViaEverclear",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_everclearData",
                type: "tuple",
                internalType: "struct EverclearV2Facet.EverclearData",
                components: [
                    {
                        name: "receiverAddress",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "nativeFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "outputAsset",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "amountOutMin",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "ttl",
                        type: "uint48",
                        internalType: "uint48",
                    },
                    {
                        name: "data",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "fee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "sig",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swapAndStartBridgeTokensViaEverclear",
        inputs: [
            {
                name: "_bridgeData",
                type: "tuple",
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_swapData",
                type: "tuple[]",
                internalType: "struct LibSwap.SwapData[]",
                components: [
                    {
                        name: "callTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "approveTo",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receivingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fromAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "requiresDeposit",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
            {
                name: "_everclearData",
                type: "tuple",
                internalType: "struct EverclearV2Facet.EverclearData",
                components: [
                    {
                        name: "receiverAddress",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "nativeFee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "outputAsset",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "amountOutMin",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "ttl",
                        type: "uint48",
                        internalType: "uint48",
                    },
                    {
                        name: "data",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "fee",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "sig",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "event",
        name: "AssetSwapped",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
            {
                name: "dex",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "BridgeToNonEVMChain",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes",
                indexed: false,
                internalType: "bytes",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "BridgeToNonEVMChainBytes32",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "destinationChainId",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "receiver",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiGenericSwapCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiSwappedGeneric",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "integrator",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "referrer",
                type: "string",
                indexed: false,
                internalType: "string",
            },
            {
                name: "fromAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "toAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "fromAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "toAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferCompleted",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferRecovered",
        inputs: [
            {
                name: "transactionId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "receivingAssetId",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "receiver",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "timestamp",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LiFiTransferStarted",
        inputs: [
            {
                name: "bridgeData",
                type: "tuple",
                indexed: false,
                internalType: "struct ILiFi.BridgeData",
                components: [
                    {
                        name: "transactionId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "bridge",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "integrator",
                        type: "string",
                        internalType: "string",
                    },
                    {
                        name: "referrer",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "sendingAssetId",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "receiver",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "minAmount",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "destinationChainId",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "hasSourceSwaps",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "hasDestinationCall",
                        type: "bool",
                        internalType: "bool",
                    },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "CannotBridgeToSameNetwork",
        inputs: [],
    },
    {
        type: "error",
        name: "ContractCallNotAllowed",
        inputs: [],
    },
    {
        type: "error",
        name: "CumulativeSlippageTooHigh",
        inputs: [
            {
                name: "minAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "receivedAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "InformationMismatch",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidCallData",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidConfig",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidContract",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidNonEVMReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidReceiver",
        inputs: [],
    },
    {
        type: "error",
        name: "NativeAssetNotSupported",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapDataProvided",
        inputs: [],
    },
    {
        type: "error",
        name: "NoSwapFromZeroBalance",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAddrIsNotAValidSpender",
        inputs: [],
    },
    {
        type: "error",
        name: "ReentrancyError",
        inputs: [],
    },
    {
        type: "error",
        name: "UnsupportedEverclearChainId",
        inputs: [],
    },
];
var _bytecode = "0x60a060405234801561000f575f5ffd5b506040516125bd3803806125bd83398101604081905261002e91610066565b6001600160a01b038116610055576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b0316608052610093565b5f60208284031215610076575f5ffd5b81516001600160a01b038116811461008c575f5ffd5b9392505050565b6080516124fe6100bf5f395f8181605d015281816107450152818161088e0152610b0501526124fe5ff3fe608060405260043610610033575f3560e01c8063268090db146100375780634a14dde01461004c57806375b063c7146100a8575b5f5ffd5b61004a610045366004611c08565b6100bb565b005b348015610057575f5ffd5b5061007f7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61004a6100b6366004611cce565b610343565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610136576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6101463447611d33565b905086806101000151610185576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101200151156101c3576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886101e68160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561021d576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f0361025a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610297576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b896102ba816080015173ffffffffffffffffffffffffffffffffffffffff161590565b156102f1576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103058b5f01518c60c001518c8c336105be565b60c08c01526103148b89610700565b50479250505081811115610336576103365f846103318585611d33565b610cd3565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016103be576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6103ce3447611d33565b9050846103f38160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561042a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610467576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104a4576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156104e2576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610520576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87610543816080015173ffffffffffffffffffffffffffffffffffffffff161590565b1561057a576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61058c89608001518a60c00151610d08565b6105968989610700565b504792505050818111156105b3576105b35f846103318585611d33565b50505f909155505050565b5f828082036105f9576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8585610607600185611d33565b81811061061657610616611d6b565b90506020028101906106289190611d98565b610639906080810190606001611dd4565b90505f61064582610dbc565b905073ffffffffffffffffffffffffffffffffffffffff821661066f5761066c3482611d33565b90505b5f61067a8888610e06565b90506106868888610f10565b6106938a89898985610f7c565b5f8261069e85610dbc565b6106a89190611d33565b9050898110156106f2576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b604081013561073b576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61076e82608001517f00000000000000000000000000000000000000000000000000000000000000008460c0015161113e565b7311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff1603610a5d5780356107f1576040517f58b0510000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805160018082528183019092525f9160208083019080368337019050509050660416edef1601be8360e001510361085a5763536f6c4d815f8151811061083b5761083b611d6b565b602002602001019063ffffffff16908163ffffffff168152505061088c565b6040517f3ea0d59500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ae9b2bad836020013583855f0135876080015187604001358860c001358a60c001516108f09190611d33565b60608a013561090560a08c0160808d01611e0a565b61091260a08d018d611e25565b60405180606001604052808f60c0013581526020018f60e0013581526020018f8061010001906109429190611e25565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050509152506040517fffffffff0000000000000000000000000000000000000000000000000000000060e08e901b1681526109b99a99989796959493929190600401611f90565b5f6040518083038185885af11580156109d4573d5f5f3e3d5ffd5b50505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a1a9190810190612128565b505060e08301518351604051843581527f815cd8dc72093a13fe3577112c391b6279303956526382ab98772d0239dbf78c9060200160405180910390a350610c98565b60a082015173ffffffffffffffffffffffffffffffffffffffff16813514610ab1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805160018082528183019092525f91602080830190803683370190505090508260e00151815f81518110610ae957610ae9611d6b565b602002602001019063ffffffff16908163ffffffff16815250507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ceb6341c8360200135838660a00151876080015187604001355f1c8860c001358a60c00151610b6a9190611d33565b60608a0135610b7f60a08c0160808d01611e0a565b610b8c60a08d018d611e25565b60405180606001604052808f60c0013581526020018f60e0013581526020018f806101000190610bbc9190611e25565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050509152506040517fffffffff0000000000000000000000000000000000000000000000000000000060e08e901b168152610c339a99989796959493929190600401612254565b5f6040518083038185885af1158015610c4e573d5f5f3e3d5ffd5b50505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610c949190810190612128565b5050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f182604051610cc791906122e9565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff8316610cfd57610cf8828261116a565b505050565b610cf88383836111d7565b805f03610d41576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610d9a5780341015610d96576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610d9673ffffffffffffffffffffffffffffffffffffffff8316333084611245565b5f73ffffffffffffffffffffffffffffffffffffffff821615610dfe57610df973ffffffffffffffffffffffffffffffffffffffff83163061129d565b610e00565b475b92915050565b6060815f8167ffffffffffffffff811115610e2357610e23611971565b604051908082528060200260200182016040528015610e4c578160200160208202803683370190505b5090505f5f5b83811015610f0557868682818110610e6c57610e6c611d6b565b9050602002810190610e7e9190611d98565b610e8f906080810190606001611dd4565b9150610e9a82610dbc565b838281518110610eac57610eac611d6b565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610efd5734838281518110610ee557610ee5611d6b565b60200260200101818151610ef99190611d33565b9052505b600101610e52565b509095945050505050565b5f5b81811015610cf85736838383818110610f2d57610f2d611d6b565b9050602002810190610f3f9190611d98565b9050610f5160e0820160c083016123fc565b15610f7357610f73610f696060830160408401611dd4565b8260800135610d08565b50600101610f12565b83838383825f5b8181101561112457368a8a83818110610f9e57610f9e611d6b565b9050602002810190610fb09190611d98565b9050610fdf610fc56060830160408401611dd4565b73ffffffffffffffffffffffffffffffffffffffff161590565b806110415750611041610ff86040830160208401611dd4565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156110585750611058610ff86020830183611dd4565b80156110db57506110db61106f60a0830183611e25565b61107d916004915f91612415565b6110869161243c565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611111576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61111b8c826112d0565b50600101610f83565b5050611133848484845f611543565b505050505050505050565b610cf88383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61175a565b73ffffffffffffffffffffffffffffffffffffffff82166111b7576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d9673ffffffffffffffffffffffffffffffffffffffff831682611887565b73ffffffffffffffffffffffffffffffffffffffff8216611224576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cf873ffffffffffffffffffffffffffffffffffffffff841683836118a0565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f5114171661129057637939f4245f526004601cfd5b5f60605260405250505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b6112e86112e06020830183611dd4565b6017903b1190565b61131e576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f81900361135d576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f611371610fc56060850160408601611dd4565b61137b575f611381565b82608001355b90505f61139c6113976080860160608701611dd4565b610dbc565b9050815f036113d2576113d26113b86060860160408701611dd4565b6113c86040870160208801611dd4565b866080013561113e565b5f806113e16020870187611dd4565b73ffffffffffffffffffffffffffffffffffffffff168461140560a0890189611e25565b6040516114139291906124a2565b5f6040518083038185875af1925050503d805f811461144d576040519150601f19603f3d011682016040523d82523d5f602084013e611452565b606091505b50915091508161146557611465816118e9565b5f6114796113976080890160608a01611dd4565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38886114aa60208a018a611dd4565b6114ba60608b0160408c01611dd4565b6114ca60808c0160608d01611dd4565b8b608001358987116114dc57866114e6565b6114e68a88611d33565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f8682611552600182611d33565b81811061156157611561611d6b565b90506020028101906115739190611d98565b611584906080810190606001611dd4565b90505f5f5f5f5f5f5f5b8881101561174a576115a160018a611d33565b811080156115b0575088600114155b1561168b578d8d828181106115c7576115c7611d6b565b90506020028101906115d99190611d98565b6115ea906080810190606001611dd4565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161461168b578a818151811061163157611631611d6b565b602002602001015161164287610dbc565b61164c9190611d33565b965073ffffffffffffffffffffffffffffffffffffffff861615611670575f611672565b895b93508387111561168b5761168b868d610331878b611d33565b8d8d8281811061169d5761169d611d6b565b90506020028101906116af9190611d98565b6116c0906060810190604001611dd4565b94506116cb85610dbc565b925073ffffffffffffffffffffffffffffffffffffffff8516156116ef575f6116f1565b895b9150818311801561172e57508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b1561174257611742858d6103318587611d33565b60010161158e565b5050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156118815773ffffffffffffffffffffffffffffffffffffffff83166117c3576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611836573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061185a91906124b1565b10156118815761188173ffffffffffffffffffffffffffffffffffffffff851684836118f3565b50505050565b5f385f3884865af1610d965763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166118e0576390b8ec185f526004601cfd5b5f603452505050565b8051602082018181fd5b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f511417166118e0575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f511417166118e057633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff811182821017156119c2576119c2611971565b60405290565b604051610180810167ffffffffffffffff811182821017156119c2576119c2611971565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611a3357611a33611971565b604052919050565b5f67ffffffffffffffff821115611a5457611a54611971565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b5f82601f830112611a8f575f5ffd5b8135611aa2611a9d82611a3b565b6119ec565b818152846020838601011115611ab6575f5ffd5b816020850160208301375f918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611af5575f5ffd5b919050565b80358015158114611af5575f5ffd5b5f6101408284031215611b1a575f5ffd5b611b2261199e565b823581529050602082013567ffffffffffffffff811115611b41575f5ffd5b611b4d84828501611a80565b602083015250604082013567ffffffffffffffff811115611b6c575f5ffd5b611b7884828501611a80565b604083015250611b8a60608301611ad2565b6060820152611b9b60808301611ad2565b6080820152611bac60a08301611ad2565b60a082015260c0828101359082015260e08083013590820152611bd26101008301611afa565b610100820152611be56101208301611afa565b61012082015292915050565b5f6101208284031215611c02575f5ffd5b50919050565b5f5f5f5f60608587031215611c1b575f5ffd5b843567ffffffffffffffff811115611c31575f5ffd5b611c3d87828801611b09565b945050602085013567ffffffffffffffff811115611c59575f5ffd5b8501601f81018713611c69575f5ffd5b803567ffffffffffffffff811115611c7f575f5ffd5b8760208260051b8401011115611c93575f5ffd5b60209190910193509150604085013567ffffffffffffffff811115611cb6575f5ffd5b611cc287828801611bf1565b91505092959194509250565b5f5f60408385031215611cdf575f5ffd5b823567ffffffffffffffff811115611cf5575f5ffd5b611d0185828601611b09565b925050602083013567ffffffffffffffff811115611d1d575f5ffd5b611d2985828601611bf1565b9150509250929050565b81810381811115610e00577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611dca575f5ffd5b9190910192915050565b5f60208284031215611de4575f5ffd5b611ded82611ad2565b9392505050565b65ffffffffffff81168114611e07575f5ffd5b50565b5f60208284031215611e1a575f5ffd5b8135611ded81611df4565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611e58575f5ffd5b83018035915067ffffffffffffffff821115611e72575f5ffd5b602001915036819003821315611e86575f5ffd5b9250929050565b5f8151808452602084019350602083015f5b82811015611ec357815163ffffffff16865260209586019590910190600101611e9f565b5093949350505050565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b80518252602081015160208301525f604082015160606040850152611f886060850182611f14565b949350505050565b61012081525f611fa461012083018d611e8d565b8b602084015273ffffffffffffffffffffffffffffffffffffffff8b1660408401528960608401528860808401528760a084015265ffffffffffff871660c084015282810360e0840152611ff9818688611ecd565b905082810361010084015261200e8185611f60565b9d9c50505050505050505050505050565b805163ffffffff81168114611af5575f5ffd5b805167ffffffffffffffff81168114611af5575f5ffd5b8051611af581611df4565b5f82601f830112612063575f5ffd5b815167ffffffffffffffff81111561207d5761207d611971565b8060051b61208d602082016119ec565b918252602081850181019290810190868411156120a8575f5ffd5b6020860192505b838310156120d1576120c08361201f565b8252602092830192909101906120af565b9695505050505050565b5f82601f8301126120ea575f5ffd5b81516120f8611a9d82611a3b565b81815284602083860101111561210c575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f60408385031215612139575f5ffd5b8251602084015190925067ffffffffffffffff811115612157575f5ffd5b83016101808186031215612169575f5ffd5b6121716119c8565b81518152602080830151908201526040808301519082015260608083015190820152608080830151908201526121a960a0830161201f565b60a08201526121ba60c08301612032565b60c08201526121cb60e08301612049565b60e08201526121dd6101008301612049565b610100820152610120828101519082015261014082015167ffffffffffffffff811115612208575f5ffd5b61221487828501612054565b6101408301525061016082015167ffffffffffffffff811115612235575f5ffd5b612241878285016120db565b6101608301525080925050509250929050565b61012081525f61226861012083018d611e8d565b73ffffffffffffffffffffffffffffffffffffffff8c16602084015273ffffffffffffffffffffffffffffffffffffffff8b16604084015273ffffffffffffffffffffffffffffffffffffffff8a1660608401528860808401528760a084015265ffffffffffff871660c084015282810360e0840152611ff9818688611ecd565b60208152815160208201525f60208301516101406040840152612310610160840182611f14565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084830301606085015261234b8282611f14565b9150506060840151612375608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e08401516101008401526101008401516123e461012085018215159052565b50610120840151801515610140850152509392505050565b5f6020828403121561240c575f5ffd5b611ded82611afa565b5f5f85851115612423575f5ffd5b8386111561242f575f5ffd5b5050820193919092039150565b80357fffffffff00000000000000000000000000000000000000000000000000000000811690600484101561249b577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b5f602082840312156124c1575f5ffd5b505191905056fea2646970667358221220bed7e86b4157a8bc8e3113b1e430448a7d4ccd873fef7c1c5971fe7f8f3a0b8664736f6c634300081d0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var EverclearV2Facet__factory = /** @class */ (function (_super) {
    __extends(EverclearV2Facet__factory, _super);
    function EverclearV2Facet__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    EverclearV2Facet__factory.prototype.deploy = function (_feeAdapterV2, overrides) {
        return _super.prototype.deploy.call(this, _feeAdapterV2, overrides || {});
    };
    EverclearV2Facet__factory.prototype.getDeployTransaction = function (_feeAdapterV2, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _feeAdapterV2, overrides || {});
    };
    EverclearV2Facet__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    EverclearV2Facet__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    EverclearV2Facet__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    EverclearV2Facet__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    EverclearV2Facet__factory.bytecode = _bytecode;
    EverclearV2Facet__factory.abi = _abi;
    return EverclearV2Facet__factory;
}(ethers_1.ContractFactory));
exports.EverclearV2Facet__factory = EverclearV2Facet__factory;
