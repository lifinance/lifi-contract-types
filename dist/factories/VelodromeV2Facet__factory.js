/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        type: "function",
        name: "swapVelodromeV2",
        inputs: [
            {
                name: "swapData",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "from",
                type: "address",
                internalType: "address",
            },
            {
                name: "tokenIn",
                type: "address",
                internalType: "address",
            },
            {
                name: "amountIn",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "error",
        name: "InvalidCallData",
        inputs: [],
    },
    {
        type: "error",
        name: "WrongPoolReserves",
        inputs: [],
    },
];
const _bytecode = "0x6080604052348015600e575f5ffd5b50610b618061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c80636be9fa091461002d575b5f5ffd5b61004061003b3660046108b5565b610052565b60405190815260200160405180910390f35b6040805180820190915260208581018083528651870182019183019190915251603486018083525160358701808452516049880184525f9392606090811c92851a91901c8215806100b7575073ffffffffffffffffffffffffffffffffffffffff8116155b156100ee576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83518051600191820186525f1a1473ffffffffffffffffffffffffffffffffffffffff8916610289575f5f8573ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610162573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061018691906109cd565b5091509150815f1480610197575080155b156101ce576040517fdf683a9800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60ff86166001146101e057816101e2565b825b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff898116600483015291925082918d16906370a0823190602401602060405180830381865afa158015610251573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061027591906109f8565b61027f9190610a0f565b995050505061030b565b3073ffffffffffffffffffffffffffffffffffffffff8a16036102cc576102c773ffffffffffffffffffffffffffffffffffffffff891685896104a6565b61030b565b3373ffffffffffffffffffffffffffffffffffffffff8a160361030b5761030b73ffffffffffffffffffffffffffffffffffffffff891633868a61057f565b6040517ff140a35a0000000000000000000000000000000000000000000000000000000081526004810188905273ffffffffffffffffffffffffffffffffffffffff89811660248301525f919086169063f140a35a90604401602060405180830381865afa15801561037f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103a391906109f8565b90505f60ff85166001146103b757816103b9565b5f5b90505f60ff86166001146103cd575f6103cf565b825b90508673ffffffffffffffffffffffffffffffffffffffff1663022c0d9f838388886104095760405180602001604052805f815250610446565b8f604051602001610436919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b6040516020818303038152906040525b6040518563ffffffff1660e01b81526004016104659493929190610a99565b5f604051808303815f87803b15801561047c575f5ffd5b505af115801561048e573d5f5f3e3d5ffd5b505050505f985050505050505050505b949350505050565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261057a9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526105e3565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526105dd9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016104f8565b50505050565b5f610644826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166106f59092919063ffffffff16565b905080515f14806106645750808060200190518101906106649190610add565b61057a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b606061049e84845f85855f5f8673ffffffffffffffffffffffffffffffffffffffff1685876040516107279190610b03565b5f6040518083038185875af1925050503d805f8114610761576040519150601f19603f3d011682016040523d82523d5f602084013e610766565b606091505b509150915061077787838387610782565b979650505050505050565b606083156108175782515f036108105773ffffffffffffffffffffffffffffffffffffffff85163b610810576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106ec565b508161049e565b61049e838381511561082c5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ec9190610b19565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b803573ffffffffffffffffffffffffffffffffffffffff811681146108b0575f5ffd5b919050565b5f5f5f5f608085870312156108c8575f5ffd5b843567ffffffffffffffff8111156108de575f5ffd5b8501601f810187136108ee575f5ffd5b803567ffffffffffffffff81111561090857610908610860565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160116810181811067ffffffffffffffff8211171561097457610974610860565b60405281815282820160200189101561098b575f5ffd5b816020840160208301375f602083830101528096505050506109af6020860161088d565b92506109bd6040860161088d565b9396929550929360600135925050565b5f5f5f606084860312156109df575f5ffd5b5050815160208301516040909301519094929350919050565b5f60208284031215610a08575f5ffd5b5051919050565b81810381811115610a47577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b92915050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b84815283602082015273ffffffffffffffffffffffffffffffffffffffff83166040820152608060608201525f610ad36080830184610a4d565b9695505050505050565b5f60208284031215610aed575f5ffd5b81518015158114610afc575f5ffd5b9392505050565b5f82518060208501845e5f920191825250919050565b602081525f610afc6020830184610a4d56fea264697066735822122070c905d2349a15dd80ff434503f93b1ec4143fe6678d0842c1ee3970c6fbd1d264736f6c634300081d0033";
const isSuperArgs = (xs) => xs.length > 1;
export class VelodromeV2Facet__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
