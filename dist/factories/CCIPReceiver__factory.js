"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CCIPReceiver__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "ccipReceive",
        inputs: [
            {
                name: "message",
                type: "tuple",
                internalType: "struct Client.Any2EVMMessage",
                components: [
                    {
                        name: "messageId",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "sourceChainSelector",
                        type: "uint64",
                        internalType: "uint64",
                    },
                    {
                        name: "sender",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "data",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "destTokenAmounts",
                        type: "tuple[]",
                        internalType: "struct Client.EVMTokenAmount[]",
                        components: [
                            {
                                name: "token",
                                type: "address",
                                internalType: "address",
                            },
                            {
                                name: "amount",
                                type: "uint256",
                                internalType: "uint256",
                            },
                        ],
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "getRouter",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "supportsInterface",
        inputs: [
            {
                name: "interfaceId",
                type: "bytes4",
                internalType: "bytes4",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "error",
        name: "InvalidRouter",
        inputs: [
            {
                name: "router",
                type: "address",
                internalType: "address",
            },
        ],
    },
];
var CCIPReceiver__factory = /** @class */ (function () {
    function CCIPReceiver__factory() {
    }
    CCIPReceiver__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    CCIPReceiver__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    CCIPReceiver__factory.abi = _abi;
    return CCIPReceiver__factory;
}());
exports.CCIPReceiver__factory = CCIPReceiver__factory;
