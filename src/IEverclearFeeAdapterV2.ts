/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export declare namespace IEverclearFeeAdapterV2 {
  export type FeeParamsStruct = {
    fee: PromiseOrValue<BigNumberish>;
    deadline: PromiseOrValue<BigNumberish>;
    sig: PromiseOrValue<BytesLike>;
  };

  export type FeeParamsStructOutput = [BigNumber, BigNumber, string] & {
    fee: BigNumber;
    deadline: BigNumber;
    sig: string;
  };

  export type IntentStruct = {
    initiator: PromiseOrValue<BytesLike>;
    receiver: PromiseOrValue<BytesLike>;
    inputAsset: PromiseOrValue<BytesLike>;
    outputAsset: PromiseOrValue<BytesLike>;
    amountOutMin: PromiseOrValue<BigNumberish>;
    origin: PromiseOrValue<BigNumberish>;
    nonce: PromiseOrValue<BigNumberish>;
    timestamp: PromiseOrValue<BigNumberish>;
    ttl: PromiseOrValue<BigNumberish>;
    amount: PromiseOrValue<BigNumberish>;
    destinations: PromiseOrValue<BigNumberish>[];
    data: PromiseOrValue<BytesLike>;
  };

  export type IntentStructOutput = [
    string,
    string,
    string,
    string,
    BigNumber,
    number,
    BigNumber,
    number,
    number,
    BigNumber,
    number[],
    string
  ] & {
    initiator: string;
    receiver: string;
    inputAsset: string;
    outputAsset: string;
    amountOutMin: BigNumber;
    origin: number;
    nonce: BigNumber;
    timestamp: number;
    ttl: number;
    amount: BigNumber;
    destinations: number[];
    data: string;
  };
}

export interface IEverclearFeeAdapterV2Interface extends utils.Interface {
  functions: {
    "newIntent(uint32[],bytes32,address,bytes32,uint256,uint256,uint48,bytes,(uint256,uint256,bytes))": FunctionFragment;
    "newIntent(uint32[],address,address,address,uint256,uint256,uint48,bytes,(uint256,uint256,bytes))": FunctionFragment;
    "owner()": FunctionFragment;
    "updateFeeSigner(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "newIntent(uint32[],bytes32,address,bytes32,uint256,uint256,uint48,bytes,(uint256,uint256,bytes))"
      | "newIntent(uint32[],address,address,address,uint256,uint256,uint48,bytes,(uint256,uint256,bytes))"
      | "owner"
      | "updateFeeSigner"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "newIntent(uint32[],bytes32,address,bytes32,uint256,uint256,uint48,bytes,(uint256,uint256,bytes))",
    values: [
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BytesLike>,
      PromiseOrValue<string>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>,
      IEverclearFeeAdapterV2.FeeParamsStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "newIntent(uint32[],address,address,address,uint256,uint256,uint48,bytes,(uint256,uint256,bytes))",
    values: [
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>,
      IEverclearFeeAdapterV2.FeeParamsStruct
    ]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "updateFeeSigner",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "newIntent(uint32[],bytes32,address,bytes32,uint256,uint256,uint48,bytes,(uint256,uint256,bytes))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "newIntent(uint32[],address,address,address,uint256,uint256,uint48,bytes,(uint256,uint256,bytes))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "updateFeeSigner",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IEverclearFeeAdapterV2 extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IEverclearFeeAdapterV2Interface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    "newIntent(uint32[],bytes32,address,bytes32,uint256,uint256,uint48,bytes,(uint256,uint256,bytes))"(
      _destinations: PromiseOrValue<BigNumberish>[],
      _receiver: PromiseOrValue<BytesLike>,
      _inputAsset: PromiseOrValue<string>,
      _outputAsset: PromiseOrValue<BytesLike>,
      _amount: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _ttl: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _feeParams: IEverclearFeeAdapterV2.FeeParamsStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "newIntent(uint32[],address,address,address,uint256,uint256,uint48,bytes,(uint256,uint256,bytes))"(
      _destinations: PromiseOrValue<BigNumberish>[],
      _receiver: PromiseOrValue<string>,
      _inputAsset: PromiseOrValue<string>,
      _outputAsset: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _ttl: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _feeParams: IEverclearFeeAdapterV2.FeeParamsStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    updateFeeSigner(
      _feeSigner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  "newIntent(uint32[],bytes32,address,bytes32,uint256,uint256,uint48,bytes,(uint256,uint256,bytes))"(
    _destinations: PromiseOrValue<BigNumberish>[],
    _receiver: PromiseOrValue<BytesLike>,
    _inputAsset: PromiseOrValue<string>,
    _outputAsset: PromiseOrValue<BytesLike>,
    _amount: PromiseOrValue<BigNumberish>,
    _amountOutMin: PromiseOrValue<BigNumberish>,
    _ttl: PromiseOrValue<BigNumberish>,
    _data: PromiseOrValue<BytesLike>,
    _feeParams: IEverclearFeeAdapterV2.FeeParamsStruct,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "newIntent(uint32[],address,address,address,uint256,uint256,uint48,bytes,(uint256,uint256,bytes))"(
    _destinations: PromiseOrValue<BigNumberish>[],
    _receiver: PromiseOrValue<string>,
    _inputAsset: PromiseOrValue<string>,
    _outputAsset: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    _amountOutMin: PromiseOrValue<BigNumberish>,
    _ttl: PromiseOrValue<BigNumberish>,
    _data: PromiseOrValue<BytesLike>,
    _feeParams: IEverclearFeeAdapterV2.FeeParamsStruct,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  updateFeeSigner(
    _feeSigner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    "newIntent(uint32[],bytes32,address,bytes32,uint256,uint256,uint48,bytes,(uint256,uint256,bytes))"(
      _destinations: PromiseOrValue<BigNumberish>[],
      _receiver: PromiseOrValue<BytesLike>,
      _inputAsset: PromiseOrValue<string>,
      _outputAsset: PromiseOrValue<BytesLike>,
      _amount: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _ttl: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _feeParams: IEverclearFeeAdapterV2.FeeParamsStruct,
      overrides?: CallOverrides
    ): Promise<
      [string, IEverclearFeeAdapterV2.IntentStructOutput] & {
        _intentId: string;
        _intent: IEverclearFeeAdapterV2.IntentStructOutput;
      }
    >;

    "newIntent(uint32[],address,address,address,uint256,uint256,uint48,bytes,(uint256,uint256,bytes))"(
      _destinations: PromiseOrValue<BigNumberish>[],
      _receiver: PromiseOrValue<string>,
      _inputAsset: PromiseOrValue<string>,
      _outputAsset: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _ttl: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _feeParams: IEverclearFeeAdapterV2.FeeParamsStruct,
      overrides?: CallOverrides
    ): Promise<
      [string, IEverclearFeeAdapterV2.IntentStructOutput] & {
        _intentId: string;
        _intent: IEverclearFeeAdapterV2.IntentStructOutput;
      }
    >;

    owner(overrides?: CallOverrides): Promise<string>;

    updateFeeSigner(
      _feeSigner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    "newIntent(uint32[],bytes32,address,bytes32,uint256,uint256,uint48,bytes,(uint256,uint256,bytes))"(
      _destinations: PromiseOrValue<BigNumberish>[],
      _receiver: PromiseOrValue<BytesLike>,
      _inputAsset: PromiseOrValue<string>,
      _outputAsset: PromiseOrValue<BytesLike>,
      _amount: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _ttl: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _feeParams: IEverclearFeeAdapterV2.FeeParamsStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "newIntent(uint32[],address,address,address,uint256,uint256,uint48,bytes,(uint256,uint256,bytes))"(
      _destinations: PromiseOrValue<BigNumberish>[],
      _receiver: PromiseOrValue<string>,
      _inputAsset: PromiseOrValue<string>,
      _outputAsset: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _ttl: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _feeParams: IEverclearFeeAdapterV2.FeeParamsStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    updateFeeSigner(
      _feeSigner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    "newIntent(uint32[],bytes32,address,bytes32,uint256,uint256,uint48,bytes,(uint256,uint256,bytes))"(
      _destinations: PromiseOrValue<BigNumberish>[],
      _receiver: PromiseOrValue<BytesLike>,
      _inputAsset: PromiseOrValue<string>,
      _outputAsset: PromiseOrValue<BytesLike>,
      _amount: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _ttl: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _feeParams: IEverclearFeeAdapterV2.FeeParamsStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "newIntent(uint32[],address,address,address,uint256,uint256,uint48,bytes,(uint256,uint256,bytes))"(
      _destinations: PromiseOrValue<BigNumberish>[],
      _receiver: PromiseOrValue<string>,
      _inputAsset: PromiseOrValue<string>,
      _outputAsset: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _ttl: PromiseOrValue<BigNumberish>,
      _data: PromiseOrValue<BytesLike>,
      _feeParams: IEverclearFeeAdapterV2.FeeParamsStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    updateFeeSigner(
      _feeSigner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
