/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ArbitrumBridgeFacet,
  ArbitrumBridgeFacetInterface,
} from "../ArbitrumBridgeFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_gatewayRouter",
        type: "address",
        internalType: "contract IGatewayRouter",
      },
      {
        name: "_inbox",
        type: "address",
        internalType: "contract IGatewayRouter",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaArbitrumBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_arbitrumData",
        type: "tuple",
        internalType: "struct ArbitrumBridgeFacet.ArbitrumData",
        components: [
          {
            name: "maxSubmissionCost",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxGasPrice",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaArbitrumBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_arbitrumData",
        type: "tuple",
        internalType: "struct ArbitrumBridgeFacet.ArbitrumData",
        components: [
          {
            name: "maxSubmissionCost",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxGasPrice",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChainBytes32",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c060405234801561000f575f5ffd5b50604051611f68380380611f6883398101604081905261002e91610060565b6001600160a01b039182166080521660a052610091565b80516001600160a01b038116811461005b575f5ffd5b919050565b5f5f60408385031215610071575f5ffd5b61007a83610045565b915061008860208401610045565b90509250929050565b60805160a051611eaf6100b95f395f6106a101525f818161081a01526108910152611eaf5ff3fe608060405260043610610028575f3560e01c80633cc9517b1461002c578063c9851d0b14610041575b5f5ffd5b61003f61003a366004611900565b610054565b005b61003f61004f3660046119ad565b6102a4565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100cf576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6100df3447611a26565b90508680610100015161011e576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561015c576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8861017f8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101b6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036101f3576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610230576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610243604089013560208a0135611a39565b61024e908935611a50565b90506102658b5f01518c60c001518c8c33866104e6565b60c08c01526102758b8983610680565b50479250505081811115610297576102975f846102928585611a26565b6109d8565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161031f576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f61032f3447611a26565b9050848061010001511561036f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101200151156103ad576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866103d08160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610407576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610444576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610481576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610494604089013560208a0135611a39565b61049f908935611a50565b90506104b389608001518a60c00151610a0d565b6104be898983610680565b504792505050818111156104db576104db5f846102928585611a26565b50505f909155505050565b5f83808203610521576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f868661052f600185611a26565b81811061053e5761053e611a63565b90506020028101906105509190611a90565b610561906080810190606001611acc565b90505f61056d82610ac1565b905073ffffffffffffffffffffffffffffffffffffffff8216610597576105943482611a26565b90505b5f6105a28989610b0b565b90506105ae8989610c15565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff891660208201529081018790526105e9818b8b85610c81565b5f836105f486610ac1565b6105fe9190611a26565b905073ffffffffffffffffffffffffffffffffffffffff8516610628576106258882611a26565b90505b8b811015610670576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d90526024810182905260440160405180910390fd5b9c9b505050505050505050505050565b608083015173ffffffffffffffffffffffffffffffffffffffff166107cb577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636e6e8a6a828560c001516106eb9190611a50565b60a086015160c08701516040805160e086901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff90931660048401819052602484019290925287356044840152606483018290526084830191909152602087013560a483015286013560c482015261010060e48201525f6101048201526101240160206040518083038185885af11580156107a0573d5f5f3e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906107c59190611aee565b5061099c565b60808301516040517fbda009fe00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808316600483015261088f92917f00000000000000000000000000000000000000000000000000000000000000009091169063bda009fe90602401602060405180830381865afa158015610861573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108859190611b05565b8560c00151610e4f565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d2ce7d658285608001518660a001518760c0015187602001358860400135895f01356040516020016109099181526040602082018190525f9082015260600190565b6040516020818303038152906040526040518863ffffffff1660e01b815260040161093996959493929190611b6c565b5f6040518083038185885af1158015610954573d5f5f3e3d5ffd5b50505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261099a9190810190611bd4565b505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1836040516109cb9190611c49565b60405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff8316610a02576109fd8282610e7b565b505050565b6109fd838383610ee8565b805f03610a46576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610a9f5780341015610a9b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610a9b73ffffffffffffffffffffffffffffffffffffffff8316333084610f56565b5f73ffffffffffffffffffffffffffffffffffffffff821615610b0357610afe73ffffffffffffffffffffffffffffffffffffffff831630610fae565b610b05565b475b92915050565b6060815f8167ffffffffffffffff811115610b2857610b28611682565b604051908082528060200260200182016040528015610b51578160200160208202803683370190505b5090505f5f5b83811015610c0a57868682818110610b7157610b71611a63565b9050602002810190610b839190611a90565b610b94906080810190606001611acc565b9150610b9f82610ac1565b838281518110610bb157610bb1611a63565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610c025734838281518110610bea57610bea611a63565b60200260200101818151610bfe9190611a26565b9052505b600101610b57565b509095945050505050565b5f5b818110156109fd5736838383818110610c3257610c32611a63565b9050602002810190610c449190611a90565b9050610c5660e0820160c08301611d5c565b15610c7857610c78610c6e6060830160408401611acc565b8260800135610a0d565b50600101610c17565b60208401516040850151849184918490835f5b81811015610e3557368a8a83818110610caf57610caf611a63565b9050602002810190610cc19190611a90565b9050610cf0610cd66060830160408401611acc565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610d515750610d51610d096040830160208401611acc565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f216020526040902054151590565b8015610d685750610d68610d096020830183611acc565b8015610dea5750610dea610d7f60a0830183611d75565b610d8d916004915f91611ddd565b610d9691611e04565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f226020526040902054151590565b610e20576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b51610e2c9082610fe1565b50600101610c94565b5050610e448585858585611254565b505050505050505050565b6109fd8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61146b565b73ffffffffffffffffffffffffffffffffffffffff8216610ec8576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a9b73ffffffffffffffffffffffffffffffffffffffff831682611598565b73ffffffffffffffffffffffffffffffffffffffff8216610f35576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109fd73ffffffffffffffffffffffffffffffffffffffff841683836115b1565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f51141716610fa157637939f4245f526004601cfd5b5f60605260405250505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b610ff9610ff16020830183611acc565b6017903b1190565b61102f576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f81900361106e576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f611082610cd66060850160408601611acc565b61108c575f611092565b82608001355b90505f6110ad6110a86080860160608701611acc565b610ac1565b9050815f036110e3576110e36110c96060860160408701611acc565b6110d96040870160208801611acc565b8660800135610e4f565b5f806110f26020870187611acc565b73ffffffffffffffffffffffffffffffffffffffff168461111660a0890189611d75565b604051611124929190611e6a565b5f6040518083038185875af1925050503d805f811461115e576040519150601f19603f3d011682016040523d82523d5f602084013e611163565b606091505b50915091508161117657611176816115fa565b5f61118a6110a86080890160608a01611acc565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38886111bb60208a018a611acc565b6111cb60608b0160408c01611acc565b6111db60808c0160608d01611acc565b8b608001358987116111ed57866111f7565b6111f78a88611a26565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f8682611263600182611a26565b81811061127257611272611a63565b90506020028101906112849190611a90565b611295906080810190606001611acc565b90505f5f5f5f5f5f5f5b8881101561145b576112b260018a611a26565b811080156112c1575088600114155b1561139c578d8d828181106112d8576112d8611a63565b90506020028101906112ea9190611a90565b6112fb906080810190606001611acc565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161461139c578a818151811061134257611342611a63565b602002602001015161135387610ac1565b61135d9190611a26565b965073ffffffffffffffffffffffffffffffffffffffff861615611381575f611383565b895b93508387111561139c5761139c868d610292878b611a26565b8d8d828181106113ae576113ae611a63565b90506020028101906113c09190611a90565b6113d1906060810190604001611acc565b94506113dc85610ac1565b925073ffffffffffffffffffffffffffffffffffffffff851615611400575f611402565b895b9150818311801561143f57508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b1561145357611453858d6102928587611a26565b60010161129f565b5050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156115925773ffffffffffffffffffffffffffffffffffffffff83166114d4576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611547573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061156b9190611aee565b10156115925761159273ffffffffffffffffffffffffffffffffffffffff85168483611604565b50505050565b5f385f3884865af1610a9b5763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166115f1576390b8ec185f526004601cfd5b5f603452505050565b8051602082018181fd5b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f511417166115f1575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f511417166115f157633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff811182821017156116d3576116d3611682565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561172057611720611682565b604052919050565b5f67ffffffffffffffff82111561174157611741611682565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b5f82601f83011261177c575f5ffd5b813561178f61178a82611728565b6116d9565b8181528460208386010111156117a3575f5ffd5b816020850160208301375f918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146117e0575f5ffd5b50565b80356117ee816117bf565b919050565b803580151581146117ee575f5ffd5b5f6101408284031215611813575f5ffd5b61181b6116af565b823581529050602082013567ffffffffffffffff81111561183a575f5ffd5b6118468482850161176d565b602083015250604082013567ffffffffffffffff811115611865575f5ffd5b6118718482850161176d565b604083015250611883606083016117e3565b6060820152611894608083016117e3565b60808201526118a560a083016117e3565b60a082015260c0828101359082015260e080830135908201526118cb61010083016117f3565b6101008201526118de61012083016117f3565b61012082015292915050565b5f606082840312156118fa575f5ffd5b50919050565b5f5f5f5f60a08587031215611913575f5ffd5b843567ffffffffffffffff811115611929575f5ffd5b61193587828801611802565b945050602085013567ffffffffffffffff811115611951575f5ffd5b8501601f81018713611961575f5ffd5b803567ffffffffffffffff811115611977575f5ffd5b8760208260051b840101111561198b575f5ffd5b602091909101935091506119a286604087016118ea565b905092959194509250565b5f5f608083850312156119be575f5ffd5b823567ffffffffffffffff8111156119d4575f5ffd5b6119e085828601611802565b9250506119f084602085016118ea565b90509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b81810381811115610b0557610b056119f9565b8082028115828204841417610b0557610b056119f9565b80820180821115610b0557610b056119f9565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611ac2575f5ffd5b9190910192915050565b5f60208284031215611adc575f5ffd5b8135611ae7816117bf565b9392505050565b5f60208284031215611afe575f5ffd5b5051919050565b5f60208284031215611b15575f5ffd5b8151611ae7816117bf565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b73ffffffffffffffffffffffffffffffffffffffff8716815273ffffffffffffffffffffffffffffffffffffffff8616602082015284604082015283606082015282608082015260c060a08201525f611bc860c0830184611b20565b98975050505050505050565b5f60208284031215611be4575f5ffd5b815167ffffffffffffffff811115611bfa575f5ffd5b8201601f81018413611c0a575f5ffd5b8051611c1861178a82611728565b818152856020838501011115611c2c575f5ffd5b8160208401602083015e5f91810160200191909152949350505050565b60208152815160208201525f60208301516101406040840152611c70610160840182611b20565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611cab8282611b20565b9150506060840151611cd5608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e0840151610100840152610100840151611d4461012085018215159052565b50610120840151801515610140850152509392505050565b5f60208284031215611d6c575f5ffd5b611ae7826117f3565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611da8575f5ffd5b83018035915067ffffffffffffffff821115611dc2575f5ffd5b602001915036819003821315611dd6575f5ffd5b9250929050565b5f5f85851115611deb575f5ffd5b83861115611df7575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015611e63577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f910190815291905056fea2646970667358221220cbb831a4c6c6bf140942ad68f76195eca7e215d58d5cb67870084115bdfd1e9f64736f6c634300081d0033";

type ArbitrumBridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumBridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumBridgeFacet__factory extends ContractFactory {
  constructor(...args: ArbitrumBridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gatewayRouter: PromiseOrValue<string>,
    _inbox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumBridgeFacet> {
    return super.deploy(
      _gatewayRouter,
      _inbox,
      overrides || {}
    ) as Promise<ArbitrumBridgeFacet>;
  }
  override getDeployTransaction(
    _gatewayRouter: PromiseOrValue<string>,
    _inbox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gatewayRouter, _inbox, overrides || {});
  }
  override attach(address: string): ArbitrumBridgeFacet {
    return super.attach(address) as ArbitrumBridgeFacet;
  }
  override connect(signer: Signer): ArbitrumBridgeFacet__factory {
    return super.connect(signer) as ArbitrumBridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumBridgeFacetInterface {
    return new utils.Interface(_abi) as ArbitrumBridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumBridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as ArbitrumBridgeFacet;
  }
}
