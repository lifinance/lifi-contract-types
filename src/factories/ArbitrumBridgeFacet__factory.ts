/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ArbitrumBridgeFacet,
  ArbitrumBridgeFacetInterface,
} from "../ArbitrumBridgeFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_gatewayRouter",
        type: "address",
        internalType: "contract IGatewayRouter",
      },
      {
        name: "_inbox",
        type: "address",
        internalType: "contract IGatewayRouter",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaArbitrumBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_arbitrumData",
        type: "tuple",
        internalType: "struct ArbitrumBridgeFacet.ArbitrumData",
        components: [
          {
            name: "maxSubmissionCost",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxGasPrice",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaArbitrumBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_arbitrumData",
        type: "tuple",
        internalType: "struct ArbitrumBridgeFacet.ArbitrumData",
        components: [
          {
            name: "maxSubmissionCost",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxGasPrice",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NativeAssetTransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NoTransferToNullAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAnERC20Token",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c060405234801561000f575f5ffd5b5060405161292538038061292583398101604081905261002e91610060565b6001600160a01b039182166080521660a052610091565b80516001600160a01b038116811461005b575f5ffd5b919050565b5f5f60408385031215610071575f5ffd5b61007a83610045565b915061008860208401610045565b90509250929050565b60805160a05161286c6100b95f395f6106a201525f818161081b0152610892015261286c5ff3fe608060405260043610610028575f3560e01c80633cc9517b1461002c578063c9851d0b14610041575b5f5ffd5b61003f61003a366004612278565b610054565b005b61003f61004f366004612325565b6102a4565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100cf576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6100df344761239e565b90508680610100015161011e576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561015c576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8861017f8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101b6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036101f3576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610230576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610243604089013560208a01356123b1565b61024e9089356123c8565b90506102658b5f01518c60c001518c8c33866104e6565b60c08c01526102758b8983610681565b50479250505081811115610297576102975f84610292858561239e565b6109d9565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161031f576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f61032f344761239e565b9050848061010001511561036f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101200151156103ad576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866103d08160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610407576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610444576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610481576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610494604089013560208a01356123b1565b61049f9089356123c8565b90506104b389608001518a60c00151610a0f565b6104be898983610681565b504792505050818111156104db576104db5f84610292858561239e565b50505f909155505050565b5f83808203610521576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f868661052f60018561239e565b81811061053e5761053e6123db565b90506020028101906105509190612408565b610561906080810190606001612444565b90505f61056d82610b81565b905073ffffffffffffffffffffffffffffffffffffffff821661059757610594348261239e565b90505b5f6105a28989610c37565b90506105ae8989610d41565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff891660208201529081018790526105e9818b8b85610dad565b5f836105f486610b81565b6105fe919061239e565b905073ffffffffffffffffffffffffffffffffffffffff851661062857610625888261239e565b90505b8b811015610671576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d9052602481018290526044015b60405180910390fd5b9c9b505050505050505050505050565b608083015173ffffffffffffffffffffffffffffffffffffffff166107cc577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636e6e8a6a828560c001516106ec91906123c8565b60a086015160c08701516040805160e086901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff90931660048401819052602484019290925287356044840152606483018290526084830191909152602087013560a483015286013560c482015261010060e48201525f6101048201526101240160206040518083038185885af11580156107a1573d5f5f3e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906107c69190612466565b5061099d565b60808301516040517fbda009fe00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808316600483015261089092917f00000000000000000000000000000000000000000000000000000000000000009091169063bda009fe90602401602060405180830381865afa158015610862573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610886919061247d565b8560c00151611195565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d2ce7d658285608001518660a001518760c0015187602001358860400135895f013560405160200161090a9181526040602082018190525f9082015260600190565b6040516020818303038152906040526040518863ffffffff1660e01b815260040161093a969594939291906124e4565b5f6040518083038185885af1158015610955573d5f5f3e3d5ffd5b50505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261099b919081019061254c565b505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1836040516109cc91906125c1565b60405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff831615610a0557610a008383836112ca565b505050565b610a008282611449565b805f03610a48576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610aa15780341015610a9d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201525f9073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610b0b573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b2f9190612466565b905081811015610b75576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610668565b610a008333308561156f565b5f73ffffffffffffffffffffffffffffffffffffffff821615610c2f576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610c06573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c2a9190612466565b610c31565b475b92915050565b6060815f8167ffffffffffffffff811115610c5457610c54611ff1565b604051908082528060200260200182016040528015610c7d578160200160208202803683370190505b5090505f805b83811015610d3657868682818110610c9d57610c9d6123db565b9050602002810190610caf9190612408565b610cc0906080810190606001612444565b9150610ccb82610b81565b838281518110610cdd57610cdd6123db565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610d2e5734838281518110610d1657610d166123db565b60200260200101818151610d2a919061239e565b9052505b600101610c83565b509095945050505050565b5f5b81811015610a005736838383818110610d5e57610d5e6123db565b9050602002810190610d709190612408565b9050610d8260e0820160c083016126d4565b15610da457610da4610d9a6060830160408401612444565b8260800135610a0f565b50600101610d43565b6020840151604085015184918491849083600181146110af575f8686610dd460018561239e565b818110610de357610de36123db565b9050602002810190610df59190612408565b610e06906080810190606001612444565b90505f89815b81811015610faf57368d8d83818110610e2757610e276123db565b9050602002810190610e399190612408565b9050610e68610e4e6060830160408401612444565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610eca5750610eca610e816040830160208401612444565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610ee15750610ee1610e816020830183612444565b8015610f645750610f64610ef860a08301836126ef565b610f06916004915f91612757565b610f0f9161277e565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610f9a576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e51610fa69082611784565b50600101610e0c565b505f90505b610fbf60018561239e565b8110156110a7575f898983818110610fd957610fd96123db565b9050602002810190610feb9190612408565b610ffc906080810190606001612444565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461109e57868281518110611043576110436123db565b602002602001015161105482610b81565b61105e919061239e565b92505f73ffffffffffffffffffffffffffffffffffffffff821615611083575f611085565b865b9050831561109c5761109c828a610292848861239e565b505b50600101610fb4565b505050611189565b875f5b8181101561118657368b8b838181106110cd576110cd6123db565b90506020028101906110df9190612408565b90506110f4610e4e6060830160408401612444565b8061110d575061110d610e816040830160208401612444565b80156111245750611124610e816020830183612444565b801561113b575061113b610ef860a08301836126ef565b611171576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c5161117d9082611784565b506001016110b2565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166111b557505050565b73ffffffffffffffffffffffffffffffffffffffff8216611202576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015611275573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112999190612466565b1015610a0057610a0083837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6119f5565b73ffffffffffffffffffffffffffffffffffffffff8316611317576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611364576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201525f9073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa1580156113ce573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113f29190612466565b905080821115611438576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610668565b611443848484611b62565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216611496576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156114d9576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610668565b5f8273ffffffffffffffffffffffffffffffffffffffff16826040515f6040518083038185875af1925050503d805f811461152f576040519150601f19603f3d011682016040523d82523d5f602084013e611534565b606091505b5050905080610a00576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff84166115bc576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611609576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285915f918316906370a0823190602401602060405180830381865afa158015611677573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061169b9190612466565b90506116a982868686611bb8565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611717573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061173b9190612466565b611745919061239e565b1461177c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b61179a6117946020830183612444565b3b151590565b6117d0576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f81900361180f576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f611823610e4e6060850160408601612444565b61182d575f611833565b82608001355b90505f61184e6118496080860160608701612444565b610b81565b9050815f036118845761188461186a6060860160408701612444565b61187a6040870160208801612444565b8660800135611195565b5f806118936020870187612444565b73ffffffffffffffffffffffffffffffffffffffff16846118b760a08901896126ef565b6040516118c59291906127e4565b5f6040518083038185875af1925050503d805f81146118ff576040519150601f19603f3d011682016040523d82523d5f602084013e611904565b606091505b5091509150816119175761191781611c16565b5f61192b6118496080890160608a01612444565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861195c60208a018a612444565b61196c60608b0160408c01612444565b61197c60808c0160608d01612444565b8b6080013589871161198e5786611998565b6119988a8861239e565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052611a818482611c20565b6114435760405173ffffffffffffffffffffffffffffffffffffffff841660248201525f6044820152611b589085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611cdb565b6114438482611cdb565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610a009084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611ad6565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526114439085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611ad6565b8051602082018181fd5b5f5f5f8473ffffffffffffffffffffffffffffffffffffffff1684604051611c4891906127f3565b5f604051808303815f865af19150503d805f8114611c81576040519150601f19603f3d011682016040523d82523d5f602084013e611c86565b606091505b5091509150818015611cb0575080511580611cb0575080806020019051810190611cb09190612809565b8015611cd2575073ffffffffffffffffffffffffffffffffffffffff85163b15155b95945050505050565b5f611d3c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611de89092919063ffffffff16565b905080515f1480611d5c575080806020019051810190611d5c9190612809565b610a00576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610668565b6060611df684845f85611dfe565b949350505050565b606082471015611e90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610668565b5f5f8673ffffffffffffffffffffffffffffffffffffffff168587604051611eb891906127f3565b5f6040518083038185875af1925050503d805f8114611ef2576040519150601f19603f3d011682016040523d82523d5f602084013e611ef7565b606091505b5091509150611f0887838387611f13565b979650505050505050565b60608315611fa85782515f03611fa15773ffffffffffffffffffffffffffffffffffffffff85163b611fa1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610668565b5081611df6565b611df68383815115611fbd5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106689190612824565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff8111828210171561204257612042611ff1565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561208f5761208f611ff1565b604052919050565b5f67ffffffffffffffff8211156120b0576120b0611ff1565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b5f82601f8301126120eb575f5ffd5b81356120fe6120f982612097565b612048565b818152846020838601011115612112575f5ffd5b816020850160208301375f918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461214f575f5ffd5b50565b803561215d8161212e565b919050565b801515811461214f575f5ffd5b803561215d81612162565b5f610140828403121561218b575f5ffd5b61219361201e565b823581529050602082013567ffffffffffffffff8111156121b2575f5ffd5b6121be848285016120dc565b602083015250604082013567ffffffffffffffff8111156121dd575f5ffd5b6121e9848285016120dc565b6040830152506121fb60608301612152565b606082015261220c60808301612152565b608082015261221d60a08301612152565b60a082015260c0828101359082015260e08083013590820152612243610100830161216f565b610100820152612256610120830161216f565b61012082015292915050565b5f60608284031215612272575f5ffd5b50919050565b5f5f5f5f60a0858703121561228b575f5ffd5b843567ffffffffffffffff8111156122a1575f5ffd5b6122ad8782880161217a565b945050602085013567ffffffffffffffff8111156122c9575f5ffd5b8501601f810187136122d9575f5ffd5b803567ffffffffffffffff8111156122ef575f5ffd5b8760208260051b8401011115612303575f5ffd5b6020919091019350915061231a8660408701612262565b905092959194509250565b5f5f60808385031215612336575f5ffd5b823567ffffffffffffffff81111561234c575f5ffd5b6123588582860161217a565b9250506123688460208501612262565b90509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b81810381811115610c3157610c31612371565b8082028115828204841417610c3157610c31612371565b80820180821115610c3157610c31612371565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261243a575f5ffd5b9190910192915050565b5f60208284031215612454575f5ffd5b813561245f8161212e565b9392505050565b5f60208284031215612476575f5ffd5b5051919050565b5f6020828403121561248d575f5ffd5b815161245f8161212e565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b73ffffffffffffffffffffffffffffffffffffffff8716815273ffffffffffffffffffffffffffffffffffffffff8616602082015284604082015283606082015282608082015260c060a08201525f61254060c0830184612498565b98975050505050505050565b5f6020828403121561255c575f5ffd5b815167ffffffffffffffff811115612572575f5ffd5b8201601f81018413612582575f5ffd5b80516125906120f982612097565b8181528560208385010111156125a4575f5ffd5b8160208401602083015e5f91810160200191909152949350505050565b60208152815160208201525f602083015161014060408401526125e8610160840182612498565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160608501526126238282612498565b915050606084015161264d608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e08401516101008401526101008401516126bc61012085018215159052565b50610120840151801515610140850152509392505050565b5f602082840312156126e4575f5ffd5b813561245f81612162565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612722575f5ffd5b83018035915067ffffffffffffffff82111561273c575f5ffd5b602001915036819003821315612750575f5ffd5b9250929050565b5f5f85851115612765575f5ffd5b83861115612771575f5ffd5b5050820193919092039150565b80357fffffffff0000000000000000000000000000000000000000000000000000000081169060048410156127dd577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b5f82518060208501845e5f920191825250919050565b5f60208284031215612819575f5ffd5b815161245f81612162565b602081525f61245f602083018461249856fea2646970667358221220fba84c992cb5c3e43f2f5db45d77bf0dc69a3936ecf766cf9a9fa5c4baf5886d64736f6c634300081d0033";

type ArbitrumBridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumBridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumBridgeFacet__factory extends ContractFactory {
  constructor(...args: ArbitrumBridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gatewayRouter: PromiseOrValue<string>,
    _inbox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumBridgeFacet> {
    return super.deploy(
      _gatewayRouter,
      _inbox,
      overrides || {}
    ) as Promise<ArbitrumBridgeFacet>;
  }
  override getDeployTransaction(
    _gatewayRouter: PromiseOrValue<string>,
    _inbox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gatewayRouter, _inbox, overrides || {});
  }
  override attach(address: string): ArbitrumBridgeFacet {
    return super.attach(address) as ArbitrumBridgeFacet;
  }
  override connect(signer: Signer): ArbitrumBridgeFacet__factory {
    return super.connect(signer) as ArbitrumBridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumBridgeFacetInterface {
    return new utils.Interface(_abi) as ArbitrumBridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumBridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as ArbitrumBridgeFacet;
  }
}
