/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ArbitrumBridgeFacet,
  ArbitrumBridgeFacetInterface,
} from "../ArbitrumBridgeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IGatewayRouter",
        name: "_gatewayRouter",
        type: "address",
      },
      {
        internalType: "contract IGatewayRouter",
        name: "_inbox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotBridgeToSameNetwork",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxSubmissionCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxGasPrice",
            type: "uint256",
          },
        ],
        internalType: "struct ArbitrumBridgeFacet.ArbitrumData",
        name: "_arbitrumData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaArbitrumBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxSubmissionCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxGasPrice",
            type: "uint256",
          },
        ],
        internalType: "struct ArbitrumBridgeFacet.ArbitrumData",
        name: "_arbitrumData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaArbitrumBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002d1b38038062002d1b833981016040819052620000349162000069565b6001600160a01b039182166080521660a052620000a1565b80516001600160a01b03811681146200006457600080fd5b919050565b600080604083850312156200007d57600080fd5b62000088836200004c565b915062000098602084016200004c565b90509250929050565b60805160a051612c4d620000ce60003960006110630152600081816111df01526112580152612c4d6000f3fe6080604052600436106100295760003560e01c80633cc9517b1461002e578063c9851d0b14610043575b600080fd5b61004161003c3660046125ca565b610056565b005b610041610051366004612676565b61030d565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e234476126f4565b905086806101000151610121576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561015f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886101828160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101b9576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101f7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610234576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610248604089013560208a0135612707565b61025390893561271e565b9050600061026134476126f4565b90506102798c600001518d60c001518d8d338761056d565b60c08d015260808c015173ffffffffffffffffffffffffffffffffffffffff166102b357818c60c0018181516102af91906126f4565b9052505b6102c88c8a846102c385476126f4565b6106e5565b504793506000925050508282116102e05760006102ea565b6102ea83836126f4565b905080156102fe576102fe60008583610899565b50506000909255505050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610388576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061039934476126f4565b905084806101000151156103d9576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8580610120015115610417576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8661043a8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610471576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036104af576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104ec576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610500604089013560208a0135612707565b61050b90893561271e565b905061051f89608001518a60c001516108cf565b61052b898983346106e5565b50479250600091505082821161054257600061054c565b61054c83836126f4565b905080156105605761056060008583610899565b5050600090925550505050565b6000838082036105a9576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600086866105b86001856126f4565b8181106105c7576105c7612731565b90506020028101906105d99190612760565b6105ea90608081019060600161279e565b905060006105f782610a45565b905073ffffffffffffffffffffffffffffffffffffffff82166106215761061e34826126f4565b90505b600061062d8989610afe565b90506106398989610c0a565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff89166020820152908101879052610674818b8b85610c6b565b60008361068086610a45565b61068a91906126f4565b90508b8110156106d5576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d9052602481018290526044015b60405180910390fd5b9c9b505050505050505050505050565b836107088160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561073f576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361077d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036107ba576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006107de866080015173ffffffffffffffffffffffffffffffffffffffff161590565b90506000816107ed57846107fc565b60c08701516107fc908661271e565b905080841015610838576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b811561084e57610849878787611061565b610859565b610859878787611190565b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1876040516108889190612829565b60405180910390a150505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316156108c5576108c0838383611367565b505050565b6108c08282611496565b73ffffffffffffffffffffffffffffffffffffffff82166109285780341015610924576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610962576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156109cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f3919061293c565b905081811015610a39576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016106cc565b6108c0833330856115c0565b600073ffffffffffffffffffffffffffffffffffffffff821615610af6576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610acd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af1919061293c565b610af8565b475b92915050565b60608160008167ffffffffffffffff811115610b1c57610b1c612318565b604051908082528060200260200182016040528015610b45578160200160208202803683370190505b5090506000805b83811015610bff57868682818110610b6657610b66612731565b9050602002810190610b789190612760565b610b8990608081019060600161279e565b9150610b9482610a45565b838281518110610ba657610ba6612731565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610bf75734838281518110610bdf57610bdf612731565b60200260200101818151610bf391906126f4565b9052505b600101610b4c565b509095945050505050565b60005b818110156108c0576000838383818110610c2957610c29612731565b9050602002810190610c3b9190612760565b610c4490612955565b90508060c0015115610c6257610c62816040015182608001516108cf565b50600101610c0d565b602084015160408501518491849184908360018114610f7a5760008686610c936001856126f4565b818110610ca257610ca2612731565b9050602002810190610cb49190612760565b610cc590608081019060600161279e565b9050600089815b81811015610e7257368d8d83818110610ce757610ce7612731565b9050602002810190610cf99190612760565b9050610d28610d0e606083016040840161279e565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610d8b5750610d8b610d41604083016020840161279e565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610da25750610da2610d41602083018361279e565b8015610e275750610e27610db960a08301836129fa565b610dc891600491600091612a66565b610dd191612a90565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610e5d576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e51610e6990826117da565b50600101610ccc565b505060005b610e826001856126f4565b811015610f72576000898983818110610e9d57610e9d612731565b9050602002810190610eaf9190612760565b610ec090608081019060600161279e565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f6957868281518110610f0757610f07612731565b6020026020010151610f1882610a45565b610f2291906126f4565b9250600073ffffffffffffffffffffffffffffffffffffffff821615610f49576000610f4b565b865b90508315610f6757610f67828a610f6284886126f4565b610899565b505b50600101610e77565b505050611055565b8760005b8181101561105257368b8b83818110610f9957610f99612731565b9050602002810190610fab9190612760565b9050610fc0610d0e606083016040840161279e565b80610fd95750610fd9610d41604083016020840161279e565b8015610ff05750610ff0610d41602083018361279e565b80156110075750611007610db960a08301836129fa565b61103d576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c5161104990826117da565b50600101610f7e565b50505b50505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636e6e8a6a828560c001516110ad919061271e565b60a086015160c08701516040805160e086901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff90931660048401819052602484019290925287356044840152606483018290526084830191909152602087013560a483015286013560c482015261010060e482015260006101048201526101240160206040518083038185885af1158015611165573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061118a919061293c565b50505050565b60808301516040517fbda009fe00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808316600483015261125692917f00000000000000000000000000000000000000000000000000000000000000009091169063bda009fe90602401602060405180830381865afa158015611228573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124c9190612ad8565b8560c00151611af0565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d2ce7d658285608001518660a001518760c001518760200135886040013589600001356040516020016112d291815260406020820181905260009082015260600190565b6040516020818303038152906040526040518863ffffffff1660e01b815260040161130296959493929190612af5565b60006040518083038185885af1158015611320573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261118a9190810190612b7c565b73ffffffffffffffffffffffffffffffffffffffff83166113b4576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611421573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611445919061293c565b90508082111561148b576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016106cc565b61118a848484611c35565b73ffffffffffffffffffffffffffffffffffffffff82166114e3576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611526576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016106cc565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611580576040519150601f19603f3d011682016040523d82523d6000602084013e611585565b606091505b50509050806108c0576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841661160d576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661165a576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa1580156116cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ef919061293c565b90506116fd82868686611d09565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa15801561176d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611791919061293c565b61179b91906126f4565b146117d2576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b6117f06117ea602083018361279e565b3b151590565b611826576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611866576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061187b610d0e606085016040860161279e565b61188657600061188c565b82608001355b905060006118a86118a3606086016040870161279e565b610a45565b905060006118bf6118a3608087016060880161279e565b9050826000036118f6576118f66118dc606087016040880161279e565b6118ec604088016020890161279e565b8760800135611af0565b8460800135821015611941576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016106cc565b600080611951602088018861279e565b73ffffffffffffffffffffffffffffffffffffffff168561197560a08a018a6129fa565b604051611983929190612bc5565b60006040518083038185875af1925050503d80600081146119c0576040519150601f19603f3d011682016040523d82523d6000602084013e6119c5565b606091505b509150915081611a105760006119da82611d67565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cc9190612bd5565b6000611a256118a360808a0160608b0161279e565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611a5660208b018b61279e565b611a6660608c0160408d0161279e565b611a7660808d0160608e0161279e565b8c60800135898711611a885786611a92565b611a928a886126f4565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316611b1057505050565b73ffffffffffffffffffffffffffffffffffffffff8216611b5d576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015611bd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf7919061293c565b90508181101561118a5761118a8484611c30847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6126f4565b611de5565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526108c09084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611ee3565b60405173ffffffffffffffffffffffffffffffffffffffff8085166024830152831660448201526064810182905261118a9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611c87565b6060604482511015611dac57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611dc86004808551611dc091906126f4565b859190611fef565b905080806020019051810190611dde9190612b7c565b9392505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e80919061293c565b611e8a919061271e565b60405173ffffffffffffffffffffffffffffffffffffffff851660248201526044810182905290915061118a9085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611c87565b6000611f45826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166121099092919063ffffffff16565b8051909150156108c05780806020019051810190611f639190612be8565b6108c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016106cc565b606081611ffd81601f61271e565b1015612035576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61203f828461271e565b84511015612079576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060821580156120985760405191506000825260208201604052612100565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156120d15780518352602092830192016120b9565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60606121188484600085612120565b949350505050565b6060824710156121b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016106cc565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516121db9190612c05565b60006040518083038185875af1925050503d8060008114612218576040519150601f19603f3d011682016040523d82523d6000602084013e61221d565b606091505b509150915061222e87838387612239565b979650505050505050565b606083156122cf5782516000036122c85773ffffffffffffffffffffffffffffffffffffffff85163b6122c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106cc565b5081612118565b61211883838151156122e45781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cc9190612bd5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561236b5761236b612318565b60405290565b60405160e0810167ffffffffffffffff8111828210171561236b5761236b612318565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156123db576123db612318565b604052919050565b600067ffffffffffffffff8211156123fd576123fd612318565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261243a57600080fd5b813561244d612448826123e3565b612394565b81815284602083860101111561246257600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146124a157600080fd5b50565b80356124af8161247f565b919050565b80151581146124a157600080fd5b80356124af816124b4565b600061014082840312156124e057600080fd5b6124e8612347565b905081358152602082013567ffffffffffffffff8082111561250957600080fd5b61251585838601612429565b6020840152604084013591508082111561252e57600080fd5b5061253b84828501612429565b60408301525061254d606083016124a4565b606082015261255e608083016124a4565b608082015261256f60a083016124a4565b60a082015260c082013560c082015260e082013560e08201526101006125968184016124c2565b908201526101206125a88382016124c2565b9082015292915050565b6000606082840312156125c457600080fd5b50919050565b60008060008060a085870312156125e057600080fd5b843567ffffffffffffffff808211156125f857600080fd5b612604888389016124cd565b9550602087013591508082111561261a57600080fd5b818701915087601f83011261262e57600080fd5b81358181111561263d57600080fd5b8860208260051b850101111561265257600080fd5b60208301955080945050505061266b86604087016125b2565b905092959194509250565b6000806080838503121561268957600080fd5b823567ffffffffffffffff8111156126a057600080fd5b6126ac858286016124cd565b9250506126bc84602085016125b2565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610af857610af86126c5565b8082028115828204841417610af857610af86126c5565b80820180821115610af857610af86126c5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261279457600080fd5b9190910192915050565b6000602082840312156127b057600080fd5b8135611dde8161247f565b60005b838110156127d65781810151838201526020016127be565b50506000910152565b600081518084526127f78160208601602086016127bb565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815281516020820152600060208301516101408060408501526128526101608501836127df565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe085840301606086015261288d83826127df565b92505060608501516128b7608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e085015161010081818701528087015191505061012061292a8187018315159052565b90950151151593019290925250919050565b60006020828403121561294e57600080fd5b5051919050565b600060e0823603121561296757600080fd5b61296f612371565b612978836124a4565b8152612986602084016124a4565b6020820152612997604084016124a4565b60408201526129a8606084016124a4565b60608201526080830135608082015260a083013567ffffffffffffffff8111156129d157600080fd5b6129dd36828601612429565b60a0830152506129ef60c084016124c2565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612a2f57600080fd5b83018035915067ffffffffffffffff821115612a4a57600080fd5b602001915036819003821315612a5f57600080fd5b9250929050565b60008085851115612a7657600080fd5b83861115612a8357600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612ad05780818660040360031b1b83161692505b505092915050565b600060208284031215612aea57600080fd5b8151611dde8161247f565b600073ffffffffffffffffffffffffffffffffffffffff808916835280881660208401525085604083015284606083015283608083015260c060a0830152612b4060c08301846127df565b98975050505050505050565b6000612b5a612448846123e3565b9050828152838383011115612b6e57600080fd5b611dde8360208301846127bb565b600060208284031215612b8e57600080fd5b815167ffffffffffffffff811115612ba557600080fd5b8201601f81018413612bb657600080fd5b61211884825160208401612b4c565b8183823760009101908152919050565b602081526000611dde60208301846127df565b600060208284031215612bfa57600080fd5b8151611dde816124b4565b600082516127948184602087016127bb56fea264697066735822122052cc16de5146ecbcf9d9e6b54d8dd4a2bc5add9f9ee7d32b2b8a982754335e7b64736f6c63430008110033";

type ArbitrumBridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumBridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumBridgeFacet__factory extends ContractFactory {
  constructor(...args: ArbitrumBridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gatewayRouter: PromiseOrValue<string>,
    _inbox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumBridgeFacet> {
    return super.deploy(
      _gatewayRouter,
      _inbox,
      overrides || {}
    ) as Promise<ArbitrumBridgeFacet>;
  }
  override getDeployTransaction(
    _gatewayRouter: PromiseOrValue<string>,
    _inbox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gatewayRouter, _inbox, overrides || {});
  }
  override attach(address: string): ArbitrumBridgeFacet {
    return super.attach(address) as ArbitrumBridgeFacet;
  }
  override connect(signer: Signer): ArbitrumBridgeFacet__factory {
    return super.connect(signer) as ArbitrumBridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumBridgeFacetInterface {
    return new utils.Interface(_abi) as ArbitrumBridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumBridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as ArbitrumBridgeFacet;
  }
}
