/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  SyncSwapV2Facet,
  SyncSwapV2FacetInterface,
} from "../SyncSwapV2Facet";

const _abi = [
  {
    type: "function",
    name: "swapSyncSwapV2",
    inputs: [
      {
        name: "swapData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenIn",
        type: "address",
        internalType: "address",
      },
      {
        name: "amountIn",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "error",
    name: "InvalidCallData",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAnERC20Token",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b506108648061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063da78917b1461002d575b5f5ffd5b61004061003b366004610632565b610052565b60405190815260200160405180910390f35b835160408051602080880182529287018301928101929092528181019052805180516014820180845251602890920183525f9291606091821c911c8115806100ae575073ffffffffffffffffffffffffffffffffffffffff8116155b156100e5576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82518051600190910184525f1a600281111561012d576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83518051600191820186525f90811a909114908161014b578461015a565b855180516014909101875260601c5b905081801561017d575073ffffffffffffffffffffffffffffffffffffffff8116155b156101b4576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff8b16036101e2576101dd8933838b6103ac565b61020a565b3073ffffffffffffffffffffffffffffffffffffffff8b160361020a5761020a89828a61046e565b81156102a9576040517ff9609f0800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a81166004830152868116602483015282169063f9609f08906044016020604051808303815f875af1158015610283573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102a7919061070c565b505b6040805173ffffffffffffffffffffffffffffffffffffffff808c16602083015286169181019190915260ff841660608201525f90608001604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181525f80845260208401909252925073ffffffffffffffffffffffffffffffffffffffff881691637132bb7f9184918f91906040518563ffffffff1660e01b815260040161035b949392919061076f565b60408051808303815f875af1158015610376573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061039a91906107d6565b505f9c9b505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff84166103f9576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610446576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61046873ffffffffffffffffffffffffffffffffffffffff85168484846104e1565b50505050565b73ffffffffffffffffffffffffffffffffffffffff82166104bb576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104dc73ffffffffffffffffffffffffffffffffffffffff84168383610539565b505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f5114171661052c57637939f4245f526004601cfd5b5f60605260405250505050565b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716610579576390b8ec185f526004601cfd5b5f603452505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156105f6576105f6610582565b604052919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461061f575f5ffd5b50565b803561062d816105fe565b919050565b5f5f5f5f60808587031215610645575f5ffd5b843567ffffffffffffffff81111561065b575f5ffd5b8501601f8101871361066b575f5ffd5b803567ffffffffffffffff81111561068557610685610582565b6106b660207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016105af565b8181528860208385010111156106ca575f5ffd5b816020840160208301375f602083830101528096505050506106ee60208601610622565b92506106fc60408601610622565b9396929550929360600135925050565b5f6020828403121561071c575f5ffd5b5051919050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b608081525f6107816080830187610723565b73ffffffffffffffffffffffffffffffffffffffff8616602084015273ffffffffffffffffffffffffffffffffffffffff8516604084015282810360608401526107cb8185610723565b979650505050505050565b5f60408284031280156107e7575f5ffd5b506040805190810167ffffffffffffffff8111828210171561080b5761080b610582565b6040528251610819816105fe565b8152602092830151928101929092525091905056fea2646970667358221220e87abba894373212909e7633e5ad89dcdf42d902eea17e118b6f338a88768f7a64736f6c634300081d0033";

type SyncSwapV2FacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SyncSwapV2FacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SyncSwapV2Facet__factory extends ContractFactory {
  constructor(...args: SyncSwapV2FacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SyncSwapV2Facet> {
    return super.deploy(overrides || {}) as Promise<SyncSwapV2Facet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SyncSwapV2Facet {
    return super.attach(address) as SyncSwapV2Facet;
  }
  override connect(signer: Signer): SyncSwapV2Facet__factory {
    return super.connect(signer) as SyncSwapV2Facet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SyncSwapV2FacetInterface {
    return new utils.Interface(_abi) as SyncSwapV2FacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SyncSwapV2Facet {
    return new Contract(address, _abi, signerOrProvider) as SyncSwapV2Facet;
  }
}
