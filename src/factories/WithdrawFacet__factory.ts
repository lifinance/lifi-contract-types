/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { WithdrawFacet, WithdrawFacetInterface } from "../WithdrawFacet";

const _abi = [
  {
    type: "function",
    name: "executeCallAndWithdraw",
    inputs: [
      {
        name: "_callTo",
        type: "address",
        internalType: "address payable",
      },
      {
        name: "_callData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "_assetAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_to",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "_assetAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_to",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "LogWithdraw",
    inputs: [
      {
        name: "_assetAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_to",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NotAContract",
    inputs: [],
  },
  {
    type: "error",
    name: "UnAuthorized",
    inputs: [],
  },
  {
    type: "error",
    name: "WithdrawFailed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b506105ee8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c80631458d7ad14610038578063d9caed121461004d575b5f5ffd5b61004b6100463660046104c0565b610060565b005b61004b61005b36600461056b565b61019e565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff1633146100a6576100a66101f4565b5f863b1515806100e2576040517f09ee12d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff1687876040516101099291906105a9565b5f604051808303815f865af19150503d805f8114610142576040519150601f19603f3d011682016040523d82523d5f602084013e610147565b606091505b509092505081156101625761015d858585610293565b610194565b6040517f750b219c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff1633146101e4576101e46101f4565b6101ef838383610293565b505050565b5f80357fffffffff000000000000000000000000000000000000000000000000000000001681527fdf05114fe8fad5d7cd2d71c5651effc2a4c21f13ee8b4a462e2a3bd4e140c73e6020818152604080842033855290915290912054600160ff909116151514610290576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b5f73ffffffffffffffffffffffffffffffffffffffff8316156102b657826102b8565b335b90506102c584828461031e565b6040805173ffffffffffffffffffffffffffffffffffffffff8381168252602082018590528616917f9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099910160405180910390a250505050565b73ffffffffffffffffffffffffffffffffffffffff8316610343576101ef828261034e565b6101ef8383836103bf565b73ffffffffffffffffffffffffffffffffffffffff821661039b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103bb73ffffffffffffffffffffffffffffffffffffffff83168261042d565b5050565b73ffffffffffffffffffffffffffffffffffffffff821661040c576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101ef73ffffffffffffffffffffffffffffffffffffffff84168383610446565b5f385f3884865af16103bb5763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716610486576390b8ec185f526004601cfd5b5f603452505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610290575f5ffd5b80356104bb8161048f565b919050565b5f5f5f5f5f5f60a087890312156104d5575f5ffd5b86356104e08161048f565b9550602087013567ffffffffffffffff8111156104fb575f5ffd5b8701601f8101891361050b575f5ffd5b803567ffffffffffffffff811115610521575f5ffd5b896020828401011115610532575f5ffd5b60209190910195509350610548604088016104b0565b9250610556606088016104b0565b95989497509295919493608090920135925050565b5f5f5f6060848603121561057d575f5ffd5b83356105888161048f565b925060208401356105988161048f565b929592945050506040919091013590565b818382375f910190815291905056fea264697066735822122078f0a1d57e4a22811c09901af101bcdba18cdc0191d462958603a5d0926ad1fe64736f6c634300081d0033";

type WithdrawFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WithdrawFacet__factory extends ContractFactory {
  constructor(...args: WithdrawFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WithdrawFacet> {
    return super.deploy(overrides || {}) as Promise<WithdrawFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WithdrawFacet {
    return super.attach(address) as WithdrawFacet;
  }
  override connect(signer: Signer): WithdrawFacet__factory {
    return super.connect(signer) as WithdrawFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawFacetInterface {
    return new utils.Interface(_abi) as WithdrawFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WithdrawFacet {
    return new Contract(address, _abi, signerOrProvider) as WithdrawFacet;
  }
}
