/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  WhitelistManagerFacet,
  WhitelistManagerFacetInterface,
} from "../WhitelistManagerFacet";

const _abi = [
  {
    type: "function",
    name: "addToWhitelist",
    inputs: [
      {
        name: "_contractAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "batchAddToWhitelist",
    inputs: [
      {
        name: "_addresses",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "batchRemoveFromWhitelist",
    inputs: [
      {
        name: "_addresses",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "batchSetFunctionApprovalBySelector",
    inputs: [
      {
        name: "_selectors",
        type: "bytes4[]",
        internalType: "bytes4[]",
      },
      {
        name: "_approval",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getApprovedFunctionSelectors",
    inputs: [],
    outputs: [
      {
        name: "selectors",
        type: "bytes4[]",
        internalType: "bytes4[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWhitelistedAddresses",
    inputs: [],
    outputs: [
      {
        name: "addresses",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isAddressWhitelisted",
    inputs: [
      {
        name: "_address",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isFunctionApproved",
    inputs: [
      {
        name: "_selector",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isMigrated",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "migrate",
    inputs: [
      {
        name: "_contracts",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_selectors",
        type: "bytes4[]",
        internalType: "bytes4[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeFromWhitelist",
    inputs: [
      {
        name: "_address",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setFunctionApprovalBySelector",
    inputs: [
      {
        name: "_selector",
        type: "bytes4",
        internalType: "bytes4",
      },
      {
        name: "_approval",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AddressRemoved",
    inputs: [
      {
        name: "removedAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "AddressWhitelisted",
    inputs: [
      {
        name: "whitelistedAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "FunctionSelectorApprovalChanged",
    inputs: [
      {
        name: "functionSelector",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
      {
        name: "approved",
        type: "bool",
        indexed: true,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotAuthoriseSelf",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "UnAuthorized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b506116e58061001c5f395ff3fe608060405234801561000f575f5ffd5b50600436106100cf575f3560e01c80638ab1d6811161007d578063e43252d711610058578063e43252d7146101b0578063ebc1b39a146101c3578063ecd18517146101d6575f5ffd5b80638ab1d68114610160578063b06faf6214610173578063bcde4c451461019d575f5ffd5b80632d2506a9116100ad5780632d2506a9146101255780632db6fa36146101385780636d0280271461014b575f5ffd5b8063045fb888146100d357806313f44d10146100e857806314a931f214610110575b5f5ffd5b6100e66100e13660046113aa565b6101e9565b005b6100fb6100f63660046113e9565b610277565b60405190151581526020015b60405180910390f35b6101186102c5565b6040516101079190611423565b6100fb6101333660046114bb565b6102d4565b6100e66101463660046113aa565b61032c565b6101536103b4565b60405161010791906114d4565b6100e661016e3660046113e9565b6103be565b7f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f245460ff166100fb565b6100e66101ab366004611530565b610410565b6100e66101be3660046113e9565b610464565b6100e66101d1366004611561565b6104b3565b6100e66101e43660046115cd565b610725565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff16331461022f5761022f6107b5565b805f5b818110156102715761026984848381811061024f5761024f61161d565b905060200201602081019061026491906113e9565b610851565b600101610232565b50505050565b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604081205460ff165b92915050565b60606102cf6108eb565b905090565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604081205460ff166102bf565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff163314610372576103726107b5565b805f5b81811015610271576103ac8484838181106103925761039261161d565b90506020020160208101906103a791906113e9565b6109a4565b600101610375565b60606102cf610a8e565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff163314610404576104046107b5565b61040d81610851565b50565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff163314610456576104566107b5565b6104608282610b1c565b5050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff1633146104aa576104aa6107b5565b61040d816109a4565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff1633146104f9576104f96107b5565b7f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f24547f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e9060ff161561054b5750610271565b5f5b60028201548110156105ca575f82600201828154811061056f5761056f61161d565b5f91825260208083209091015473ffffffffffffffffffffffffffffffffffffffff1682528490526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555060010161054d565b505f5b82811015610661575f8484838181106105e8576105e861161d565b90506020020160208101906105fd91906114bb565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081526001808501602052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690559190910190506105cd565b5061066f600282015f611334565b5f5b848110156106b0576106a886868381811061068e5761068e61161d565b90506020020160208101906106a391906113e9565b610bed565b600101610671565b505f5b828110156106f2576106ea8484838181106106d0576106d061161d565b90506020020160208101906106e591906114bb565b610d68565b6001016106b3565b5060060180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905550505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff16331461076b5761076b6107b5565b815f5b818110156107ae576107a685858381811061078b5761078b61161d565b90506020020160208101906107a091906114bb565b84610b1c565b60010161076e565b5050505050565b5f80357fffffffff000000000000000000000000000000000000000000000000000000001681527fdf05114fe8fad5d7cd2d71c5651effc2a4c21f13ee8b4a462e2a3bd4e140c73e6020818152604080842033855290915290912054600160ff90911615151461040d576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1661089f5750565b6108a881610e95565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f24a12366c02e13fe4a9e03d86a8952e85bb74a456c16e4a18b6d8295700b74bb905f90a250565b60607f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e60050180548060200260200160405190810160405280929190818152602001828054801561099a57602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116109475790505b5050505050905090565b3073ffffffffffffffffffffffffffffffffffffffff8216036109f3576040517fa9cefcae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1615610a425750565b610a4b81610bed565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f4f783c179409b4127238bc9c990bc99b9a651666a0d20b51d6c42849eb88466d905f90a250565b60607f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e60020180548060200260200160405190810160405280929190818152602001828054801561099a57602002820191905f5260205f20905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610ae8575050505050905090565b7fffffffff0000000000000000000000000000000000000000000000000000000082165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1681151581151514610be8578115610b8e57610b8983610d68565b610b97565b610b97836110c2565b604051821515907fffffffff000000000000000000000000000000000000000000000000000000008516907fcf13ae361f956ffe6b34a2c8e46f4e87d8671c9352d2a8c3474774d61422cab4905f90a35b505050565b73ffffffffffffffffffffffffffffffffffffffff8116610c3a576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6017813b11610c75576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602081905260409091205460ff1615610cc8575050565b73ffffffffffffffffffffffffffffffffffffffff9091165f8181526020838152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600286018054918201815580855283852090910180547fffffffffffffffffffffffff0000000000000000000000000000000000000000168617905554938352600390940190529190912055565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f60205260409020547f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e9060ff1615610de6575050565b7fffffffff0000000000000000000000000000000000000000000000000000000082165f81815260018381016020908152604080842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168417905560058601805493840181558085528285206008850401805460e09990991c6004600790961686026101000a90810263ffffffff90910219909916989098179097559554938352930190925291902055565b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602081905260409091205460ff16610ee7575050565b73ffffffffffffffffffffffffffffffffffffffff82165f90815260038201602052604081205490819003610f1b57505050565b5f610f2760018361164a565b60028401549091505f90610f3d9060019061164a565b9050808214610ffa575f846002018281548110610f5c57610f5c61161d565b5f9182526020909120015460028601805473ffffffffffffffffffffffffffffffffffffffff9092169250829185908110610f9957610f9961161d565b5f91825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff94851617905592909116815260038601909152604090208390555b8360020180548061100d5761100d611682565b5f828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff969096168152600385018652604080822082905594909552505050902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f60205260409020547f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e9060ff1661113f575050565b7fffffffff0000000000000000000000000000000000000000000000000000000082165f9081526004820160205260408120549081900361117f57505050565b5f61118b60018361164a565b60058401549091505f906111a19060019061164a565b9050808214611265575f8460050182815481106111c0576111c061161d565b905f5260205f2090600891828204019190066004029054906101000a900460e01b9050808560050184815481106111f9576111f961161d565b5f91825260208083206008830401805460e09590951c6004600790941684026101000a90810263ffffffff90910219909516949094179093557fffffffff0000000000000000000000000000000000000000000000000000000090931681529186019052604090208390555b8360050180548061127857611278611682565b5f828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff60046007871681026101000a9190910219909116909155929093557fffffffff0000000000000000000000000000000000000000000000000000000090971687528501815260408087208790556001959095019052505050902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b5080545f8255905f5260205f209081019061040d91905b8082111561135e575f815560010161134b565b5090565b5f5f83601f840112611372575f5ffd5b50813567ffffffffffffffff811115611389575f5ffd5b6020830191508360208260051b85010111156113a3575f5ffd5b9250929050565b5f5f602083850312156113bb575f5ffd5b823567ffffffffffffffff8111156113d1575f5ffd5b6113dd85828601611362565b90969095509350505050565b5f602082840312156113f9575f5ffd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461141c575f5ffd5b9392505050565b602080825282518282018190525f918401906040840190835b8181101561147c5783517fffffffff000000000000000000000000000000000000000000000000000000001683526020938401939092019160010161143c565b509095945050505050565b80357fffffffff00000000000000000000000000000000000000000000000000000000811681146114b6575f5ffd5b919050565b5f602082840312156114cb575f5ffd5b61141c82611487565b602080825282518282018190525f918401906040840190835b8181101561147c57835173ffffffffffffffffffffffffffffffffffffffff168352602093840193909201916001016114ed565b803580151581146114b6575f5ffd5b5f5f60408385031215611541575f5ffd5b61154a83611487565b915061155860208401611521565b90509250929050565b5f5f5f5f60408587031215611574575f5ffd5b843567ffffffffffffffff81111561158a575f5ffd5b61159687828801611362565b909550935050602085013567ffffffffffffffff8111156115b5575f5ffd5b6115c187828801611362565b95989497509550505050565b5f5f5f604084860312156115df575f5ffd5b833567ffffffffffffffff8111156115f5575f5ffd5b61160186828701611362565b9094509250611614905060208501611521565b90509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b818103818111156102bf577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfea2646970667358221220cbff2ff8269644eb8b308fdbcb17314d9325d7ffcb3861001f753a1e829cab2064736f6c634300081d0033";

type WhitelistManagerFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WhitelistManagerFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WhitelistManagerFacet__factory extends ContractFactory {
  constructor(...args: WhitelistManagerFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WhitelistManagerFacet> {
    return super.deploy(overrides || {}) as Promise<WhitelistManagerFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WhitelistManagerFacet {
    return super.attach(address) as WhitelistManagerFacet;
  }
  override connect(signer: Signer): WhitelistManagerFacet__factory {
    return super.connect(signer) as WhitelistManagerFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistManagerFacetInterface {
    return new utils.Interface(_abi) as WhitelistManagerFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WhitelistManagerFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WhitelistManagerFacet;
  }
}
