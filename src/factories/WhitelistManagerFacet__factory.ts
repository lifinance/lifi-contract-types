/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  WhitelistManagerFacet,
  WhitelistManagerFacetInterface,
} from "../WhitelistManagerFacet";

const _abi = [
  {
    type: "function",
    name: "addToWhitelist",
    inputs: [
      {
        name: "_contractAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "batchAddToWhitelist",
    inputs: [
      {
        name: "_addresses",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "batchRemoveFromWhitelist",
    inputs: [
      {
        name: "_addresses",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "batchSetFunctionApprovalBySelector",
    inputs: [
      {
        name: "_selectors",
        type: "bytes4[]",
        internalType: "bytes4[]",
      },
      {
        name: "_approval",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getApprovedFunctionSelectors",
    inputs: [],
    outputs: [
      {
        name: "selectors",
        type: "bytes4[]",
        internalType: "bytes4[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWhitelistedAddresses",
    inputs: [],
    outputs: [
      {
        name: "addresses",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isAddressWhitelisted",
    inputs: [
      {
        name: "_address",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isFunctionApproved",
    inputs: [
      {
        name: "_selector",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeFromWhitelist",
    inputs: [
      {
        name: "_address",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setFunctionApprovalBySelector",
    inputs: [
      {
        name: "_selector",
        type: "bytes4",
        internalType: "bytes4",
      },
      {
        name: "_approval",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AddressRemoved",
    inputs: [
      {
        name: "removedAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "AddressWhitelisted",
    inputs: [
      {
        name: "whitelistedAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "FunctionSelectorApprovalChanged",
    inputs: [
      {
        name: "functionSelector",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
      {
        name: "approved",
        type: "bool",
        indexed: true,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotAuthoriseSelf",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "UnAuthorized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b5061130c8061001c5f395ff3fe608060405234801561000f575f5ffd5b50600436106100b9575f3560e01c80636d02802711610072578063bcde4c4511610058578063bcde4c451461015d578063e43252d714610170578063ecd1851714610183575f5ffd5b80636d028027146101355780638ab1d6811461014a575f5ffd5b806314a931f2116100a257806314a931f2146100fa5780632d2506a91461010f5780632db6fa3614610122575f5ffd5b8063045fb888146100bd57806313f44d10146100d2575b5f5ffd5b6100d06100cb36600461103d565b610196565b005b6100e56100e036600461107c565b610224565b60405190151581526020015b60405180910390f35b610102610272565b6040516100f191906110b6565b6100e561011d36600461114e565b610281565b6100d061013036600461103d565b6102d9565b61013d610361565b6040516100f19190611167565b6100d061015836600461107c565b61036b565b6100d061016b3660046111c3565b6103bd565b6100d061017e36600461107c565b610411565b6100d06101913660046111f4565b610460565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff1633146101dc576101dc6104f0565b805f5b8181101561021e576102168484838181106101fc576101fc611244565b9050602002016020810190610211919061107c565b61058c565b6001016101df565b50505050565b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea68602052604081205460ff165b92915050565b606061027c6105d8565b905090565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea69602052604081205460ff1661026c565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff16331461031f5761031f6104f0565b805f5b8181101561021e5761035984848381811061033f5761033f611244565b9050602002016020810190610354919061107c565b610691565b600101610322565b606061027c61077b565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff1633146103b1576103b16104f0565b6103ba8161058c565b50565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff163314610403576104036104f0565b61040d8282610809565b5050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff163314610457576104576104f0565b6103ba81610691565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff1633146104a6576104a66104f0565b815f5b818110156104e9576104e18585838181106104c6576104c6611244565b90506020020160208101906104db919061114e565b84610809565b6001016104a9565b5050505050565b5f80357fffffffff000000000000000000000000000000000000000000000000000000001681527fdf05114fe8fad5d7cd2d71c5651effc2a4c21f13ee8b4a462e2a3bd4e140c73e6020818152604080842033855290915290912054600160ff9091161515146103ba576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105958161087a565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f24a12366c02e13fe4a9e03d86a8952e85bb74a456c16e4a18b6d8295700b74bb905f90a250565b60607f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea6860050180548060200260200160405190810160405280929190818152602001828054801561068757602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116106345790505b5050505050905090565b3073ffffffffffffffffffffffffffffffffffffffff8216036106e0576040517fa9cefcae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea68602052604090205460ff161561072f5750565b61073881610aa7565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f4f783c179409b4127238bc9c990bc99b9a651666a0d20b51d6c42849eb88466d905f90a250565b60607f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea6860040180548060200260200160405190810160405280929190818152602001828054801561068757602002820191905f5260205f20905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107d5575050505050905090565b801561081d5761081882610ba3565b610826565b61082682610cd0565b604051811515907fffffffff000000000000000000000000000000000000000000000000000000008416907fcf13ae361f956ffe6b34a2c8e46f4e87d8671c9352d2a8c3474774d61422cab4905f90a35050565b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea68602081905260409091205460ff166108cc575050565b73ffffffffffffffffffffffffffffffffffffffff82165f9081526002820160205260408120549081900361090057505050565b5f61090c600183611271565b60048401549091505f9061092290600190611271565b90508082146109df575f84600401828154811061094157610941611244565b5f9182526020909120015460048601805473ffffffffffffffffffffffffffffffffffffffff909216925082918590811061097e5761097e611244565b5f91825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff94851617905592909116815260028601909152604090208390555b836004018054806109f2576109f26112a9565b5f828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff969096168152600285018652604080822082905594909552505050902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b610ab081610f58565b73ffffffffffffffffffffffffffffffffffffffff81165f9081527f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea68602081905260409091205460ff1615610b03575050565b73ffffffffffffffffffffffffffffffffffffffff9091165f8181526020838152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600486018054918201815580855283852090910180547fffffffffffffffffffffffff0000000000000000000000000000000000000000168617905554938352600290940190529190912055565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea6960205260409020547f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea689060ff1615610c21575050565b7fffffffff0000000000000000000000000000000000000000000000000000000082165f81815260018381016020908152604080842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168417905560058601805493840181558085528285206008850401805463ffffffff60079096166004026101000a958602191660e09990991c949094029790971790925594549282526003909301909352912055565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea6960205260409020547f181a9a063711e148dc95111d1248c4ff7b263939ce1df02b18ac1f5eb936ea689060ff16610d4d575050565b7fffffffff0000000000000000000000000000000000000000000000000000000082165f90815260038201602052604081205490819003610d8d57505050565b5f610d99600183611271565b60058401549091505f90610daf90600190611271565b9050808214610e8d575f846005018281548110610dce57610dce611244565b905f5260205f2090600891828204019190066004029054906101000a900460e01b905080856005018481548110610e0757610e07611244565b905f5260205f2090600891828204019190066004026101000a81548163ffffffff021916908360e01c021790555083856003015f837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f2081905550505b83600501805480610ea057610ea06112a9565b5f828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff0000000000000000000000000000000000000000000000000000000090961681526003850186526040808220829055600195909501909552505050902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b73ffffffffffffffffffffffffffffffffffffffff8116610fa5576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163b5f036103ba576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5f83601f840112611005575f5ffd5b50813567ffffffffffffffff81111561101c575f5ffd5b6020830191508360208260051b8501011115611036575f5ffd5b9250929050565b5f5f6020838503121561104e575f5ffd5b823567ffffffffffffffff811115611064575f5ffd5b61107085828601610ff5565b90969095509350505050565b5f6020828403121561108c575f5ffd5b813573ffffffffffffffffffffffffffffffffffffffff811681146110af575f5ffd5b9392505050565b602080825282518282018190525f918401906040840190835b8181101561110f5783517fffffffff00000000000000000000000000000000000000000000000000000000168352602093840193909201916001016110cf565b509095945050505050565b80357fffffffff0000000000000000000000000000000000000000000000000000000081168114611149575f5ffd5b919050565b5f6020828403121561115e575f5ffd5b6110af8261111a565b602080825282518282018190525f918401906040840190835b8181101561110f57835173ffffffffffffffffffffffffffffffffffffffff16835260209384019390920191600101611180565b80358015158114611149575f5ffd5b5f5f604083850312156111d4575f5ffd5b6111dd8361111a565b91506111eb602084016111b4565b90509250929050565b5f5f5f60408486031215611206575f5ffd5b833567ffffffffffffffff81111561121c575f5ffd5b61122886828701610ff5565b909450925061123b9050602085016111b4565b90509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b8181038181111561026c577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfea2646970667358221220389e3f2a5fa27a32a3d1553b0b946691682c5dc1b8fddb2051366322b89f1d7a64736f6c634300081d0033";

type WhitelistManagerFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WhitelistManagerFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WhitelistManagerFacet__factory extends ContractFactory {
  constructor(...args: WhitelistManagerFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WhitelistManagerFacet> {
    return super.deploy(overrides || {}) as Promise<WhitelistManagerFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WhitelistManagerFacet {
    return super.attach(address) as WhitelistManagerFacet;
  }
  override connect(signer: Signer): WhitelistManagerFacet__factory {
    return super.connect(signer) as WhitelistManagerFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistManagerFacetInterface {
    return new utils.Interface(_abi) as WhitelistManagerFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WhitelistManagerFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WhitelistManagerFacet;
  }
}
