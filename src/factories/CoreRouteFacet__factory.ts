/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CoreRouteFacet,
  CoreRouteFacetInterface,
} from "../CoreRouteFacet";

const _abi = [
  {
    type: "function",
    name: "processRoute",
    inputs: [
      {
        name: "tokenIn",
        type: "address",
        internalType: "address",
      },
      {
        name: "amountIn",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "tokenOut",
        type: "address",
        internalType: "address",
      },
      {
        name: "amountOutMin",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "route",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "amountOut",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "Route",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "tokenIn",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenOut",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amountIn",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amountOutMin",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amountOut",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "MinimalInputBalanceViolation",
    inputs: [
      {
        name: "available",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "MinimalOutputBalanceViolation",
    inputs: [
      {
        name: "amountOut",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
  {
    type: "error",
    name: "SwapFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "UnknownCommandCode",
    inputs: [],
  },
  {
    type: "error",
    name: "UnknownSelector",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b506118358061001c5f395ff3fe60806040526004361061001d575f3560e01c80632646478b14610021575b5f5ffd5b61003461002f3660046115a3565b610046565b60405190815260200160405180910390f35b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80545f91907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100c4576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181556100d7898989898989896100e7565b91505f9055979650505050505050565b5f8073ffffffffffffffffffffffffffffffffffffffff891673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146101ab576040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8a16906370a0823190602401602060405180830381865afa158015610182573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101a69190611655565b6101ad565b5f5b90505f73ffffffffffffffffffffffffffffffffffffffff881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610274576040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301528916906370a0823190602401602060405180830381865afa15801561024b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061026f9190611655565b61028d565b8573ffffffffffffffffffffffffffffffffffffffff16315b604080516020601f88018190048102820181019092528681529192508a915f9182916102d2918a908a90819084018382808284375f9201919091525061084092505050565b90505b8051602082015111156104005780518051600190910182525f90811a90506103316040518060400160405280600e81526020017f636f6d6d616e64436f6465323232000000000000000000000000000000000000815250610862565b61033d8160ff166108f4565b8060ff16600103610365575f61035283610985565b9050835f0361035f578094505b506103ef565b8060ff1660020361037f5761037a828e610a47565b6103ef565b8060ff16600303610394575f61035283610a66565b8060ff166004036103a85761037a82610a8c565b8060ff166006036103bd5761037a8e83610aaa565b6040517fb926a1f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103f883611699565b9250506102d5565b505f905073ffffffffffffffffffffffffffffffffffffffff8c1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146104c6576040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8d16906370a0823190602401602060405180830381865afa15801561049d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104c19190611655565b6104c8565b5f5b9050836104d58c836116d0565b1015610527576104e58b826116d0565b6040517f583af5860000000000000000000000000000000000000000000000000000000081526004810191909152602481018590526044015b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff8b1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146105ec576040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a811660048301528c16906370a0823190602401602060405180830381865afa1580156105c3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105e79190611655565b610605565b8873ffffffffffffffffffffffffffffffffffffffff16315b90506106456040518060400160405280600b81526020017f746f6b656e4f7574323232000000000000000000000000000000000000000000815250610862565b61064e8b610b0e565b61068c6040518060400160405280600581526020017f746f323232000000000000000000000000000000000000000000000000000000815250610862565b61069589610b0e565b6106d36040518060400160405280601281526020017f62616c616e63654f757446696e616c3232320000000000000000000000000000815250610862565b6106dc816108f4565b61071a6040518060400160405280601481526020017f62616c616e63654f7574496e697469616c323232000000000000000000000000815250610862565b610723846108f4565b6107616040518060400160405280600f81526020017f616d6f756e744f75744d696e3232320000000000000000000000000000000000815250610862565b61076a8a6108f4565b6107748a856116d0565b8110156107ba5761078584826116e9565b6040517f963b34a500000000000000000000000000000000000000000000000000000000815260040161051e91815260200190565b6107c484826116e9565b6040805173ffffffffffffffffffffffffffffffffffffffff8c81168252602082018790529181018d905260608101839052919750808d1691908f169033907f2db5ddd0b42bdbca0d69ea16f234a870a485854ae0d91f16643d6f317d8b89949060800160405180910390a45050505050979650505050505050565b6040805180820190915260208281018252825190920182019181019190915290565b6108f1816040516024016108769190611748565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac00000000000000000000000000000000000000000000000000000000179052610bab565b50565b6108f18160405160240161090a91815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ff82c50f100000000000000000000000000000000000000000000000000000000179052610bab565b80518051601490910182525f90819060601c6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915073ffffffffffffffffffffffffffffffffffffffff8216906370a0823190602401602060405180830381865afa158015610a02573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a269190611655565b91508115610a35576001820391505b610a4183308385610bb4565b50919050565b815180516014909101835260601c610a6183338385610bb4565b505050565b47610a87823073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee84610bb4565b919050565b805180516014909101825260601c610aa6825f8381610ca5565b5050565b80518051602082018084525160408301808552516041840180865251606185018087525160819095018652929391925f9190911a91610b0573ffffffffffffffffffffffffffffffffffffffff88163330888888888861116a565b50505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff821660248201526108f190604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f2c2ecbc2000000000000000000000000000000000000000000000000000000001790525b6108f1816113df565b83518051600190910185525f90811a9050610c036040518060400160405280600681526020017f6e756d3232320000000000000000000000000000000000000000000000000000815250610862565b610c0f8160ff166108f4565b5f5b8160ff16811015610c9d5785518051600290910187525f9060f01c9050610c6c6040518060400160405280600881526020017f7368617265323232000000000000000000000000000000000000000000000000815250610862565b610c798161ffff166108f4565b61ffff8181168502049384900393610c9388888884610ca5565b5050600101610c11565b505050505050565b8351805160049091018552610cee6040518060400160405280600b81526020017f73656c6563746f72323232000000000000000000000000000000000000000000815250610862565b610cf7816113ff565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602052604081205473ffffffffffffffffffffffffffffffffffffffff169050610d9d6040518060400160405280600881526020017f6661636574323232000000000000000000000000000000000000000000000000815250610862565b610da681610b0e565b73ffffffffffffffffffffffffffffffffffffffff8116610df3576040517fdc66f67300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e316040518060400160405280600a81526020017f73747265616d3232323a00000000000000000000000000000000000000000000815250610862565b610e5b86604051602001610e4791815260200190565b6040516020818303038152906040526114ac565b7fffffffff0000000000000000000000000000000000000000000000000000000082167f334b26d90000000000000000000000000000000000000000000000000000000003610fdc57610ec56040518060800160405280604681526020016117ba60469139610862565b610f036040518060400160405280600d81526020017f63616c6c6461746173697a653a00000000000000000000000000000000000000815250610862565b610f0c366108f4565b610f4a6040518060400160405280600981526020017f63616c6c646174613a0000000000000000000000000000000000000000000000815250610862565b610f885f368080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506114ac92505050565b610fc66040518060400160405280600781526020017f73747265616d3a00000000000000000000000000000000000000000000000000815250610862565b610fdc86604051602001610e4791815260200190565b5f610fe68761153b565b90506110266040518060400160405280601081526020017f72656d61696e696e674461746132323200000000000000000000000000000000815250610862565b61102f816114ac565b5f8273ffffffffffffffffffffffffffffffffffffffff16848389898960405160240161105f9493929190611761565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516110e891906117a3565b5f60405180830381855af49150503d805f8114611120576040519150601f19603f3d011682016040523d82523d5f602084013e611125565b606091505b5050905080611160576040517f81ceff3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050505050565b6040517f7ecebe0000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301525f91908a1690637ecebe0090602401602060405180830381865afa1580156111d7573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111fb9190611655565b6040517fd505accf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a811660048301528981166024830152604482018990526064820188905260ff8716608483015260a4820186905260c48201859052919250908a169063d505accf9060e4015f604051808303815f87803b158015611292575f5ffd5b505af11580156112a4573d5f5f3e3d5ffd5b50506040517f7ecebe0000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b811660048301525f93508c169150637ecebe0090602401602060405180830381865afa158015611314573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113389190611655565b90506113458260016116d0565b81146113d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5361666545524332303a207065726d697420646964206e6f742073756363656560448201527f6400000000000000000000000000000000000000000000000000000000000000606482015260840161051e565b50505050505050505050565b80516a636f6e736f6c652e6c6f67602083015f808483855afa5050505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000821660248201526108f190604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fe05f48d100000000000000000000000000000000000000000000000000000000179052610bab565b6108f1816040516024016114c09190611748565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0be77f5600000000000000000000000000000000000000000000000000000000179052610bab565b80516020820151606091905f61155183836116e9565b905080156115775760405193506020810184016040528084528060208501828560045afa505b50909252919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610a87575f5ffd5b5f5f5f5f5f5f5f60c0888a0312156115b9575f5ffd5b6115c288611580565b9650602088013595506115d760408901611580565b9450606088013593506115ec60808901611580565b925060a088013567ffffffffffffffff811115611607575f5ffd5b8801601f81018a13611617575f5ffd5b803567ffffffffffffffff81111561162d575f5ffd5b8a602082840101111561163e575f5ffd5b602082019350809250505092959891949750929550565b5f60208284031215611665575f5ffd5b5051919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116c9576116c961166c565b5060010190565b808201808211156116e3576116e361166c565b92915050565b818103818111156116e3576116e361166c565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081525f61175a60208301846116fc565b9392505050565b608081525f61177360808301876116fc565b73ffffffffffffffffffffffffffffffffffffffff95861660208401529390941660408201526060015292915050565b5f82518060208501845e5f92019182525091905056fe3d3d3d2056656c6f64726f6d65563246616365742063616c6c20646574656374656420696e20436f7265526f7574654661636574205f646973706174636853776170203d3d3da2646970667358221220ab9d34c7d782c16437025f06b64263f220f2ef5124d3061f025a10684b49b98364736f6c634300081d0033";

type CoreRouteFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CoreRouteFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CoreRouteFacet__factory extends ContractFactory {
  constructor(...args: CoreRouteFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CoreRouteFacet> {
    return super.deploy(overrides || {}) as Promise<CoreRouteFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CoreRouteFacet {
    return super.attach(address) as CoreRouteFacet;
  }
  override connect(signer: Signer): CoreRouteFacet__factory {
    return super.connect(signer) as CoreRouteFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoreRouteFacetInterface {
    return new utils.Interface(_abi) as CoreRouteFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoreRouteFacet {
    return new Contract(address, _abi, signerOrProvider) as CoreRouteFacet;
  }
}
