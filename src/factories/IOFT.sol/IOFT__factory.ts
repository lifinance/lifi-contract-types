/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IOFT, IOFTInterface } from "../../IOFT.sol/IOFT";

const _abi = [
  {
    type: "function",
    name: "estimateSendFee",
    inputs: [
      {
        name: "_dstChainId",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "_toAddress",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_useZro",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "_adapterParams",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "nativeFee",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "zroFee",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "sendFrom",
    inputs: [
      {
        name: "_from",
        type: "address",
        internalType: "address",
      },
      {
        name: "_dstChainId",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "_toAddress",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_refundAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_zroPaymentAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_adapterParams",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
] as const;

export class IOFT__factory {
  static readonly abi = _abi;
  static createInterface(): IOFTInterface {
    return new utils.Interface(_abi) as IOFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IOFT {
    return new Contract(address, _abi, signerOrProvider) as IOFT;
  }
}
