/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { WormholeFacet, WormholeFacetInterface } from "../WormholeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWormholeRouter",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotBridgeToSameNetwork",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyContractOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "UnsupportedChainId",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "wormholeChainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "receiver",
        type: "bytes32",
      },
    ],
    name: "BridgeToNonEVMChain",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lifiChainId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "wormholeChainId",
        type: "uint256",
      },
    ],
    name: "WormholeChainIdMapped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "wormholeChainId",
            type: "uint16",
          },
        ],
        indexed: false,
        internalType: "struct WormholeFacet.Config[]",
        name: "configs",
        type: "tuple[]",
      },
    ],
    name: "WormholeChainIdsMapped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "wormholeChainId",
            type: "uint16",
          },
        ],
        indexed: false,
        internalType: "struct WormholeFacet.Config[]",
        name: "configs",
        type: "tuple[]",
      },
    ],
    name: "WormholeInitialized",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "wormholeChainId",
            type: "uint16",
          },
        ],
        internalType: "struct WormholeFacet.Config[]",
        name: "configs",
        type: "tuple[]",
      },
    ],
    name: "initWormhole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lifiChainId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_wormholeChainId",
        type: "uint16",
      },
    ],
    name: "setWormholeChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "wormholeChainId",
            type: "uint16",
          },
        ],
        internalType: "struct WormholeFacet.Config[]",
        name: "configs",
        type: "tuple[]",
      },
    ],
    name: "setWormholeChainIds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "arbiterFee",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
        ],
        internalType: "struct WormholeFacet.WormholeData",
        name: "_wormholeData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaWormhole",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "arbiterFee",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
        ],
        internalType: "struct WormholeFacet.WormholeData",
        name: "_wormholeData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaWormhole",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200312d3803806200312d833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b60805161308b620000a260003960008181610bee01528181610c520152610d4d015261308b6000f3fe60806040526004361061005a5760003560e01c806365c958d41161004357806365c958d4146100a1578063ac3dcc95146100b4578063fbf88f03146100c757600080fd5b806313a5201b1461005f5780632290720414610081575b600080fd5b34801561006b57600080fd5b5061007f61007a36600461264f565b6100e7565b005b34801561008d57600080fd5b5061007f61009c3660046126db565b61023c565b61007f6100af3660046129ab565b6102d5565b61007f6100c23660046129f1565b610511565b3480156100d357600080fd5b5061007f6100e236600461264f565b610756565b6100ef6108cd565b7f7e906a0d60cb07599c0056400d4173f09da0e1b16416a2ae67013f2df575d4b4547f7e906a0d60cb07599c0056400d4173f09da0e1b16416a2ae67013f2df575d4b39060ff1661016c576040517f87138d5c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160005b818110156101fc5784848281811061018a5761018a612a9d565b90506040020160200160208101906101a29190612acc565b8360008787858181106101b7576101b7612a9d565b90506040020160000135815260200190815260200160002060006101000a81548161ffff021916908361ffff16021790555080806101f490612b16565b915050610170565b507f08872e189095d957ee9ef34bf3cc064dfdfff5d37a936bc928c3b3aab2500d7e848460405161022e929190612b4e565b60405180910390a150505050565b6102446108cd565b60007f7e906a0d60cb07599c0056400d4173f09da0e1b16416a2ae67013f2df575d4b360008481526020829052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff871690811790915590519293509185917f56465cf2b3a3cef7d0c3c0133292f4fded765d74b65b78ab526a3fa85351facb91a3505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610350576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006103613447612ba0565b905084806101000151156103a1576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101200151156103df576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866104028160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610439576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610477576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104b4576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104c688608001518960c00151610942565b6104d08888610ac2565b50479150600090508282116104e65760006104f0565b6104f08383612ba0565b905080156105045761050460008583610eeb565b5050600090925550505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161058c576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061059d3447612ba0565b9050868061010001516105dc576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561061a576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8861063d8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610674576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036106b2576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036106ef576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107048a600001518b60c001518b8b33610f1c565b60c08b01526107138a88610ac2565b5047915060009050828211610729576000610733565b6107338383612ba0565b905080156107475761074760008583610eeb565b50506000909255505050505050565b61075e6108cd565b7f7e906a0d60cb07599c0056400d4173f09da0e1b16416a2ae67013f2df575d4b4547f7e906a0d60cb07599c0056400d4173f09da0e1b16416a2ae67013f2df575d4b39060ff16156107dc576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160005b8181101561086c578484828181106107fa576107fa612a9d565b90506040020160200160208101906108129190612acc565b83600087878581811061082757610827612a9d565b90506040020160000135815260200190815260200160002060006101000a81548161ffff021916908361ffff160217905550808061086490612b16565b9150506107e0565b50600182810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690911790556040517f7a7f93414e28b498e780e485402bc5944e6c5cb682751a0ed8be3f2fc1ec18af9061022e9086908690612b4e565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314610940576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b73ffffffffffffffffffffffffffffffffffffffff821661099b5780341015610997576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b806000036109d5576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610a42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a669190612bb3565b905081811015610ab1576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b610abd8333308561105f565b505050565b6000610ad18360e00151611279565b90506000610ade46611279565b90508360e001514603610b1d576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8161ffff16600003610b63578360e001516040517fa5dab5fe000000000000000000000000000000000000000000000000000000008152600401610aa891815260200190565b8061ffff16600003610ba3576040517fa5dab5fe000000000000000000000000000000000000000000000000000000008152466004820152602401610aa8565b8161ffff168161ffff1603610be4576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c1784608001517f00000000000000000000000000000000000000000000000000000000000000008660c001516112f0565b608084015173ffffffffffffffffffffffffffffffffffffffff16610d2c5760c084015173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690639981509f908486356020880135610c9160608a0160408b01612bcc565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815261ffff90941660048501526024840192909252604483015263ffffffff16606482015260840160206040518083038185885af1158015610d01573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610d269190612bf2565b50610e33565b608084015160c085015173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001691630f5287b0918587356020890135610d8c60608b0160408c01612bcc565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b16815273ffffffffffffffffffffffffffffffffffffffff9096166004870152602486019490945261ffff90921660448501526064840152608483015263ffffffff1660a482015260c401600060405180830381600087803b158015610e1a57600080fd5b505af1158015610e2e573d6000803e3d6000fd5b505050505b7311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168460a0015173ffffffffffffffffffffffffffffffffffffffff1603610ebc5783516040518435815261ffff841691907f7be3e48a8a8b4d32138937e1809ac83481fffe48e49bb60e43ed1d3d50349e4c9060200160405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18460405161022e9190612c8a565b73ffffffffffffffffffffffffffffffffffffffff831615610f1257610abd83838361143b565b610abd828261156a565b600082808203610f58576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610f67600185612ba0565b818110610f7657610f76612a9d565b9050602002810190610f889190612d9d565b610f99906080810190606001612ddb565b90506000610fa682611694565b905073ffffffffffffffffffffffffffffffffffffffff8216610fd057610fcd3482612ba0565b90505b6000610fdc888861174d565b9050610fe88888611859565b610ff58a898989856118ba565b60008261100185611694565b61100b9190612ba0565b905089811015611051576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b905260248101829052604401610aa8565b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff84166110ac576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166110f9576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa15801561116a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118e9190612bb3565b905061119c82868686611c6c565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa15801561120c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112309190612bb3565b61123a9190612ba0565b14611271576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b60008181527f7e906a0d60cb07599c0056400d4173f09da0e1b16416a2ae67013f2df575d4b36020819052604082205461ffff168083036112e9576040517fa5dab5fe00000000000000000000000000000000000000000000000000000000815260048101859052602401610aa8565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff831661131057505050565b73ffffffffffffffffffffffffffffffffffffffff821661135d576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa1580156113d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f79190612bb3565b905081811015611435576114358484611430847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612ba0565b611d48565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316611488576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa1580156114f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115199190612bb3565b90508082111561155f576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610aa8565b611435848484611e46565b73ffffffffffffffffffffffffffffffffffffffff82166115b7576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156115fa576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610aa8565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611654576040519150601f19603f3d011682016040523d82523d6000602084013e611659565b606091505b5050905080610abd576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff821615611745576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa15801561171c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117409190612bb3565b611747565b475b92915050565b60608160008167ffffffffffffffff81111561176b5761176b612707565b604051908082528060200260200182016040528015611794578160200160208202803683370190505b5090506000805b8381101561184e578686828181106117b5576117b5612a9d565b90506020028101906117c79190612d9d565b6117d8906080810190606001612ddb565b91506117e382611694565b8382815181106117f5576117f5612a9d565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216611846573483828151811061182e5761182e612a9d565b602002602001018181516118429190612ba0565b9052505b60010161179b565b509095945050505050565b60005b81811015610abd57600083838381811061187857611878612a9d565b905060200281019061188a9190612d9d565b61189390612df6565b90508060c00151156118b1576118b181604001518260800151610942565b5060010161185c565b838383838260018114611b8757600085856118d6600185612ba0565b8181106118e5576118e5612a9d565b90506020028101906118f79190612d9d565b611908906080810190606001612ddb565b9050600089815b81811015611ab357368d8d8381811061192a5761192a612a9d565b905060200281019061193c9190612d9d565b905061196b6119516060830160408401612ddb565b73ffffffffffffffffffffffffffffffffffffffff161590565b806119ce57506119ce6119846040830160208401612ddb565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156119e557506119e56119846020830183612ddb565b8015611a6a5750611a6a6119fc60a0830183612e9b565b611a0b91600491600091612f07565b611a1491612f31565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611aa0576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611aaa8f82611e9c565b5060010161190f565b505060005b611ac3600185612ba0565b811015611b7f576000888883818110611ade57611ade612a9d565b9050602002810190611af09190612d9d565b611b01906080810190606001612ddb565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b7657858281518110611b4857611b48612a9d565b6020026020010151611b5982611694565b611b639190612ba0565b92508215611b7657611b76818885610eeb565b50600101611ab8565b505050611c60565b8760005b81811015611c5d57368b8b83818110611ba657611ba6612a9d565b9050602002810190611bb89190612d9d565b9050611bcd6119516060830160408401612ddb565b80611be65750611be66119846040830160208401612ddb565b8015611bfd5750611bfd6119846020830183612ddb565b8015611c145750611c146119fc60a0830183612e9b565b611c4a576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c548d82611e9c565b50600101611b8b565b50505b50505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526114359085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526121b2565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611dbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de39190612bb3565b611ded9190612f79565b60405173ffffffffffffffffffffffffffffffffffffffff85166024820152604481018290529091506114359085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611cc6565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610abd9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611cc6565b611eb2611eac6020830183612ddb565b3b151590565b611ee8576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611f28576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611f3d6119516060850160408601612ddb565b611f48576000611f4e565b82608001355b90506000611f6a611f656060860160408701612ddb565b611694565b90506000611f81611f656080870160608801612ddb565b905082600003611fb857611fb8611f9e6060870160408801612ddb565b611fae6040880160208901612ddb565b87608001356112f0565b8460800135821015612003576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610aa8565b6000806120136020880188612ddb565b73ffffffffffffffffffffffffffffffffffffffff168561203760a08a018a612e9b565b604051612045929190612f8c565b60006040518083038185875af1925050503d8060008114612082576040519150601f19603f3d011682016040523d82523d6000602084013e612087565b606091505b5091509150816120d257600061209c826122be565b9050806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa89190612f9c565b60006120e7611f6560808a0160608b01612ddb565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961211860208b018b612ddb565b61212860608c0160408d01612ddb565b61213860808d0160608e01612ddb565b8c6080013589871161214a5786612154565b6121548a88612ba0565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6000612214826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166123359092919063ffffffff16565b805190915015610abd57808060200190518101906122329190612faf565b610abd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610aa8565b606060448251101561230357505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b600061231f60048085516123179190612ba0565b85919061234c565b9050808060200190518101906112e99190612fcc565b60606123448484600085612466565b949350505050565b60608161235a81601f612f79565b1015612392576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61239c8284612f79565b845110156123d6576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060821580156123f5576040519150600082526020820160405261245d565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561242e578051835260209283019201612416565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6060824710156124f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610aa8565b73ffffffffffffffffffffffffffffffffffffffff85163b612576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610aa8565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161259f9190613043565b60006040518083038185875af1925050503d80600081146125dc576040519150601f19603f3d011682016040523d82523d6000602084013e6125e1565b606091505b50915091506125f18282866125fc565b979650505050505050565b6060831561260b5750816112e9565b82511561261b5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa89190612f9c565b6000806020838503121561266257600080fd5b823567ffffffffffffffff8082111561267a57600080fd5b818501915085601f83011261268e57600080fd5b81358181111561269d57600080fd5b8660208260061b85010111156126b257600080fd5b60209290920196919550909350505050565b803561ffff811681146126d657600080fd5b919050565b600080604083850312156126ee57600080fd5b823591506126fe602084016126c4565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561275a5761275a612707565b60405290565b60405160e0810167ffffffffffffffff8111828210171561275a5761275a612707565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156127ca576127ca612707565b604052919050565b600067ffffffffffffffff8211156127ec576127ec612707565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261282957600080fd5b813561283c612837826127d2565b612783565b81815284602083860101111561285157600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146126d657600080fd5b80151581146128a057600080fd5b50565b80356126d681612892565b600061014082840312156128c157600080fd5b6128c9612736565b905081358152602082013567ffffffffffffffff808211156128ea57600080fd5b6128f685838601612818565b6020840152604084013591508082111561290f57600080fd5b5061291c84828501612818565b60408301525061292e6060830161286e565b606082015261293f6080830161286e565b608082015261295060a0830161286e565b60a082015260c082013560c082015260e082013560e08201526101006129778184016128a3565b908201526101206129898382016128a3565b9082015292915050565b6000606082840312156129a557600080fd5b50919050565b600080608083850312156129be57600080fd5b823567ffffffffffffffff8111156129d557600080fd5b6129e1858286016128ae565b9250506126fe8460208501612993565b60008060008060a08587031215612a0757600080fd5b843567ffffffffffffffff80821115612a1f57600080fd5b612a2b888389016128ae565b95506020870135915080821115612a4157600080fd5b818701915087601f830112612a5557600080fd5b813581811115612a6457600080fd5b8860208260051b8501011115612a7957600080fd5b602083019550809450505050612a928660408701612993565b905092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215612ade57600080fd5b6112e9826126c4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612b4757612b47612ae7565b5060010190565b6020808252818101839052600090604080840186845b87811015612b93578135835261ffff612b7e8684016126c4565b16838601529183019190830190600101612b64565b5090979650505050505050565b8181038181111561174757611747612ae7565b600060208284031215612bc557600080fd5b5051919050565b600060208284031215612bde57600080fd5b813563ffffffff811681146112e957600080fd5b600060208284031215612c0457600080fd5b815167ffffffffffffffff811681146112e957600080fd5b60005b83811015612c37578181015183820152602001612c1f565b50506000910152565b60008151808452612c58816020860160208601612c1c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081528151602082015260006020830151610140806040850152612cb3610160850183612c40565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152612cee8382612c40565b9250506060850151612d18608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120612d8b8187018315159052565b90950151151593019290925250919050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612dd157600080fd5b9190910192915050565b600060208284031215612ded57600080fd5b6112e98261286e565b600060e08236031215612e0857600080fd5b612e10612760565b612e198361286e565b8152612e276020840161286e565b6020820152612e386040840161286e565b6040820152612e496060840161286e565b60608201526080830135608082015260a083013567ffffffffffffffff811115612e7257600080fd5b612e7e36828601612818565b60a083015250612e9060c084016128a3565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612ed057600080fd5b83018035915067ffffffffffffffff821115612eeb57600080fd5b602001915036819003821315612f0057600080fd5b9250929050565b60008085851115612f1757600080fd5b83861115612f2457600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612f715780818660040360031b1b83161692505b505092915050565b8082018082111561174757611747612ae7565b8183823760009101908152919050565b6020815260006112e96020830184612c40565b600060208284031215612fc157600080fd5b81516112e981612892565b600060208284031215612fde57600080fd5b815167ffffffffffffffff811115612ff557600080fd5b8201601f8101841361300657600080fd5b8051613014612837826127d2565b81815285602083850101111561302957600080fd5b61303a826020830160208601612c1c565b95945050505050565b60008251612dd1818460208701612c1c56fea26469706673582212208ca16f7b3da160cb312b2982f58bc09ad2432e01e7f075c353d51566788658cf64736f6c63430008110033";

type WormholeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WormholeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WormholeFacet__factory extends ContractFactory {
  constructor(...args: WormholeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WormholeFacet> {
    return super.deploy(_router, overrides || {}) as Promise<WormholeFacet>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, overrides || {});
  }
  override attach(address: string): WormholeFacet {
    return super.attach(address) as WormholeFacet;
  }
  override connect(signer: Signer): WormholeFacet__factory {
    return super.connect(signer) as WormholeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WormholeFacetInterface {
    return new utils.Interface(_abi) as WormholeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WormholeFacet {
    return new Contract(address, _abi, signerOrProvider) as WormholeFacet;
  }
}
