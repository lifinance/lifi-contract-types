/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FacetOne,
  FacetOneInterface,
} from "../../ContractFiveFacetTest.sol/FacetOne";

const _abi = [
  {
    type: "function",
    name: "admin",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAdmin",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setAdmin",
    inputs: [
      {
        name: "_admin",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b5061016a8061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061003f575f3560e01c80636e9960c314610043578063704b6c0214610085578063f851a440146100db575b5f5ffd5b5f5473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100d96100933660046100fa565b5f80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b005b5f5461005c9073ffffffffffffffffffffffffffffffffffffffff1681565b5f6020828403121561010a575f5ffd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461012d575f5ffd5b939250505056fea2646970667358221220ad7a65ab4fb93eca64e5ca4bae6e7b42e8ee1fff7d3880fb0c4c04973720e2b764736f6c634300081d0033";

type FacetOneConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FacetOneConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FacetOne__factory extends ContractFactory {
  constructor(...args: FacetOneConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FacetOne> {
    return super.deploy(overrides || {}) as Promise<FacetOne>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FacetOne {
    return super.attach(address) as FacetOne;
  }
  override connect(signer: Signer): FacetOne__factory {
    return super.connect(signer) as FacetOne__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FacetOneInterface {
    return new utils.Interface(_abi) as FacetOneInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FacetOne {
    return new Contract(address, _abi, signerOrProvider) as FacetOne;
  }
}
