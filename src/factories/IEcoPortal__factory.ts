/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IEcoPortal, IEcoPortalInterface } from "../IEcoPortal";

const _abi = [
  {
    type: "function",
    name: "publishAndFund",
    inputs: [
      {
        name: "intent",
        type: "tuple",
        internalType: "struct IEcoPortal.Intent",
        components: [
          {
            name: "route",
            type: "tuple",
            internalType: "struct IEcoPortal.Route",
            components: [
              {
                name: "salt",
                type: "bytes32",
                internalType: "bytes32",
              },
              {
                name: "source",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "destination",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "inbox",
                type: "address",
                internalType: "address",
              },
              {
                name: "tokens",
                type: "tuple[]",
                internalType: "struct IEcoPortal.TokenAmount[]",
                components: [
                  {
                    name: "token",
                    type: "address",
                    internalType: "address",
                  },
                  {
                    name: "amount",
                    type: "uint256",
                    internalType: "uint256",
                  },
                ],
              },
              {
                name: "calls",
                type: "tuple[]",
                internalType: "struct IEcoPortal.Call[]",
                components: [
                  {
                    name: "target",
                    type: "address",
                    internalType: "address",
                  },
                  {
                    name: "data",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "value",
                    type: "uint256",
                    internalType: "uint256",
                  },
                ],
              },
            ],
          },
          {
            name: "reward",
            type: "tuple",
            internalType: "struct IEcoPortal.Reward",
            components: [
              {
                name: "creator",
                type: "address",
                internalType: "address",
              },
              {
                name: "prover",
                type: "address",
                internalType: "address",
              },
              {
                name: "deadline",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "nativeValue",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "tokens",
                type: "tuple[]",
                internalType: "struct IEcoPortal.TokenAmount[]",
                components: [
                  {
                    name: "token",
                    type: "address",
                    internalType: "address",
                  },
                  {
                    name: "amount",
                    type: "uint256",
                    internalType: "uint256",
                  },
                ],
              },
            ],
          },
        ],
      },
      {
        name: "allowPartial",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "intentHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "payable",
  },
] as const;

export class IEcoPortal__factory {
  static readonly abi = _abi;
  static createInterface(): IEcoPortalInterface {
    return new utils.Interface(_abi) as IEcoPortalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IEcoPortal {
    return new Contract(address, _abi, signerOrProvider) as IEcoPortal;
  }
}
