/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ThorSwapFacet, ThorSwapFacetInterface } from "../ThorSwapFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_thorchainRouter",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaThorSwap",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_thorSwapData",
        type: "tuple",
        internalType: "struct ThorSwapFacet.ThorSwapData",
        components: [
          {
            name: "vault",
            type: "address",
            internalType: "address",
          },
          {
            name: "memo",
            type: "string",
            internalType: "string",
          },
          {
            name: "expiration",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaThorSwap",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_thorSwapData",
        type: "tuple",
        internalType: "struct ThorSwapFacet.ThorSwapData",
        components: [
          {
            name: "vault",
            type: "address",
            internalType: "address",
          },
          {
            name: "memo",
            type: "string",
            internalType: "string",
          },
          {
            name: "expiration",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "DeprecatedToken",
    inputs: [],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a0604052348015600e575f5ffd5b50604051611daa380380611daa833981016040819052602b91603b565b6001600160a01b03166080526066565b5f60208284031215604a575f5ffd5b81516001600160a01b0381168114605f575f5ffd5b9392505050565b608051611d256100855f395f81816105f1015261061c0152611d255ff3fe608060405260043610610028575f3560e01c80632541ec571461002c578063ad673d8814610041575b5f5ffd5b61003f61003a36600461176e565b610054565b005b61003f61004f3660046117d3565b610279565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100cf576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6100df3447611899565b9050846101048160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561013b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610178576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101b5576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156101f3576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610231576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61024388608001518960c001516104a1565b61024d8888610555565b50479150508181111561026e5761026e5f846102698585611899565b61071c565b50505f909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102f4576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6103043447611899565b905086806101000151610343576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8780610120015115610381576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886103a48160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103db576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610418576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610455576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104698a5f01518b60c001518b8b33610751565b60c08b01526104788a88610555565b504791505081811115610494576104945f846102698585611899565b50505f9091555050505050565b805f036104da576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610533578034101561052f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61052f73ffffffffffffffffffffffffffffffffffffffff8316333084610894565b4660011480156105925750608082015173ffffffffffffffffffffffffffffffffffffffff16733155ba85d5f96b2d030a4966af206230e46849cb145b156105c9576040517fa6fbe3b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608082015173ffffffffffffffffffffffffffffffffffffffff8116158061061a5761061a827f00000000000000000000000000000000000000000000000000000000000000008660c001516108ec565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166344bc937b82610661575f610667565b8560c001515b61067460208701876118d1565b608088015160c089015161068b60208a018a6118f1565b8a604001356040518863ffffffff1660e01b81526004016106b196959493929190611959565b5f604051808303818588803b1580156106c8575f5ffd5b505af11580156106da573d5f5f3e3d5ffd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18460405161070e9190611a3b565b60405180910390a150505050565b73ffffffffffffffffffffffffffffffffffffffff8316610746576107418282610918565b505050565b610741838383610985565b5f8280820361078c576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f858561079a600185611899565b8181106107a9576107a9611b4e565b90506020028101906107bb9190611b7b565b6107cc9060808101906060016118d1565b90505f6107d8826109f3565b905073ffffffffffffffffffffffffffffffffffffffff8216610802576107ff3482611899565b90505b5f61080d8888610a3d565b90506108198888610b47565b6108268a89898985610bb3565b5f82610831856109f3565b61083b9190611899565b905089811015610886576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f511417166108df57637939f4245f526004601cfd5b5f60605260405250505050565b6107418383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610f5e565b73ffffffffffffffffffffffffffffffffffffffff8216610965576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61052f73ffffffffffffffffffffffffffffffffffffffff83168261106f565b73ffffffffffffffffffffffffffffffffffffffff82166109d2576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61074173ffffffffffffffffffffffffffffffffffffffff84168383611088565b5f73ffffffffffffffffffffffffffffffffffffffff821615610a3557610a3073ffffffffffffffffffffffffffffffffffffffff8316306110d1565b610a37565b475b92915050565b6060815f8167ffffffffffffffff811115610a5a57610a5a611539565b604051908082528060200260200182016040528015610a83578160200160208202803683370190505b5090505f805b83811015610b3c57868682818110610aa357610aa3611b4e565b9050602002810190610ab59190611b7b565b610ac69060808101906060016118d1565b9150610ad1826109f3565b838281518110610ae357610ae3611b4e565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610b345734838281518110610b1c57610b1c611b4e565b60200260200101818151610b309190611899565b9052505b600101610a89565b509095945050505050565b5f5b818110156107415736838383818110610b6457610b64611b4e565b9050602002810190610b769190611b7b565b9050610b8860e0820160c08301611bb7565b15610baa57610baa610ba060608301604084016118d1565b82608001356104a1565b50600101610b49565b838383838260018114610e7a575f8585610bce600185611899565b818110610bdd57610bdd611b4e565b9050602002810190610bef9190611b7b565b610c009060808101906060016118d1565b90505f89815b81811015610da757368d8d83818110610c2157610c21611b4e565b9050602002810190610c339190611b7b565b9050610c62610c4860608301604084016118d1565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610cc45750610cc4610c7b60408301602084016118d1565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610cdb5750610cdb610c7b60208301836118d1565b8015610d5e5750610d5e610cf260a08301836118f1565b610d00916004915f91611bd0565b610d0991611bf7565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610d94576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d9e8f82611104565b50600101610c06565b505f90505b610db7600185611899565b811015610e72575f888883818110610dd157610dd1611b4e565b9050602002810190610de39190611b7b565b610df49060808101906060016118d1565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e6957858281518110610e3b57610e3b611b4e565b6020026020010151610e4c826109f3565b610e569190611899565b92508215610e6957610e6981888561071c565b50600101610dac565b505050610f52565b875f5b81811015610f4f57368b8b83818110610e9857610e98611b4e565b9050602002810190610eaa9190611b7b565b9050610ebf610c4860608301604084016118d1565b80610ed85750610ed8610c7b60408301602084016118d1565b8015610eef5750610eef610c7b60208301836118d1565b8015610f065750610f06610cf260a08301836118f1565b610f3c576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f468d82611104565b50600101610e7d565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610fab576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa15801561101e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110429190611c5d565b10156110695761106973ffffffffffffffffffffffffffffffffffffffff851684836113d6565b50505050565b5f385f3884865af161052f5763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166110c8576390b8ec185f526004601cfd5b5f603452505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b61111961111460208301836118d1565b611454565b61114f576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f81900361118e576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6111a2610c4860608501604086016118d1565b6111ac575f6111b2565b82608001355b90505f6111cd6111c860608601604087016118d1565b6109f3565b90505f6111e36111c860808701606088016118d1565b9050825f03611219576112196111ff60608701604088016118d1565b61120f60408801602089016118d1565b87608001356108ec565b8460800135821015611264576040517fcf479181000000000000000000000000000000000000000000000000000000008152608086013560048201526024810183905260440161087d565b5f8061127360208801886118d1565b73ffffffffffffffffffffffffffffffffffffffff168561129760a08a018a6118f1565b6040516112a5929190611c74565b5f6040518083038185875af1925050503d805f81146112df576040519150601f19603f3d011682016040523d82523d5f602084013e6112e4565b606091505b5091509150816112f7576112f78161152f565b5f61130b6111c860808a0160608b016118d1565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961133c60208b018b6118d1565b61134c60608c0160408d016118d1565b61135c60808d0160608e016118d1565b8c6080013589871161136e5786611378565b6113788a88611899565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f511417166110c8575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f511417166110c857633e3f8f735f526004601cfd5b6040805160038082528183019092525f91829182917fef0100000000000000000000000000000000000000000000000000000000000091839160208201818036833701905050863b945090507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060035f60208401893c863f93505f6114d883611c83565b90507fffffff00000000000000000000000000000000000000000000000000000000008085169082160361151457506001979650505050505050565b5f861180156115235750818514155b98975050505050505050565b8051602082018181fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff8111828210171561158a5761158a611539565b60405290565b5f82601f83011261159f575f5ffd5b813567ffffffffffffffff8111156115b9576115b9611539565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff8111828210171561160657611606611539565b60405281815283820160200185101561161d575f5ffd5b816020850160208301375f918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461165c575f5ffd5b919050565b8035801515811461165c575f5ffd5b5f6101408284031215611681575f5ffd5b611689611566565b823581529050602082013567ffffffffffffffff8111156116a8575f5ffd5b6116b484828501611590565b602083015250604082013567ffffffffffffffff8111156116d3575f5ffd5b6116df84828501611590565b6040830152506116f160608301611639565b606082015261170260808301611639565b608082015261171360a08301611639565b60a082015260c0828101359082015260e080830135908201526117396101008301611661565b61010082015261174c6101208301611661565b61012082015292915050565b5f60608284031215611768575f5ffd5b50919050565b5f5f6040838503121561177f575f5ffd5b823567ffffffffffffffff811115611795575f5ffd5b6117a185828601611670565b925050602083013567ffffffffffffffff8111156117bd575f5ffd5b6117c985828601611758565b9150509250929050565b5f5f5f5f606085870312156117e6575f5ffd5b843567ffffffffffffffff8111156117fc575f5ffd5b61180887828801611670565b945050602085013567ffffffffffffffff811115611824575f5ffd5b8501601f81018713611834575f5ffd5b803567ffffffffffffffff81111561184a575f5ffd5b8760208260051b840101111561185e575f5ffd5b60209190910193509150604085013567ffffffffffffffff811115611881575f5ffd5b61188d87828801611758565b91505092959194509250565b81810381811115610a37577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f602082840312156118e1575f5ffd5b6118ea82611639565b9392505050565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611924575f5ffd5b83018035915067ffffffffffffffff82111561193e575f5ffd5b602001915036819003821315611952575f5ffd5b9250929050565b73ffffffffffffffffffffffffffffffffffffffff8716815273ffffffffffffffffffffffffffffffffffffffff8616602082015284604082015260a060608201528260a0820152828460c08301375f60c084830101525f60c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601168301019050826080830152979650505050505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f60208301516101406040840152611a626101608401826119ef565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611a9d82826119ef565b9150506060840151611ac7608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e0840151610100840152610100840151611b3661012085018215159052565b50610120840151801515610140850152509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611bad575f5ffd5b9190910192915050565b5f60208284031215611bc7575f5ffd5b6118ea82611661565b5f5f85851115611bde575f5ffd5b83861115611bea575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015611c56577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b5f60208284031215611c6d575f5ffd5b5051919050565b818382375f9101908152919050565b805160208201517fffffff0000000000000000000000000000000000000000000000000000000000811691906003821015611ce8577fffffff0000000000000000000000000000000000000000000000000000000000808360030360031b1b82161692505b505091905056fea264697066735822122017b5da7c5a959d4af615d50c188ddbee5496fb9dd5d5f7085615bceee797541d64736f6c634300081d0033";

type ThorSwapFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ThorSwapFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ThorSwapFacet__factory extends ContractFactory {
  constructor(...args: ThorSwapFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _thorchainRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ThorSwapFacet> {
    return super.deploy(
      _thorchainRouter,
      overrides || {}
    ) as Promise<ThorSwapFacet>;
  }
  override getDeployTransaction(
    _thorchainRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_thorchainRouter, overrides || {});
  }
  override attach(address: string): ThorSwapFacet {
    return super.attach(address) as ThorSwapFacet;
  }
  override connect(signer: Signer): ThorSwapFacet__factory {
    return super.connect(signer) as ThorSwapFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ThorSwapFacetInterface {
    return new utils.Interface(_abi) as ThorSwapFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ThorSwapFacet {
    return new Contract(address, _abi, signerOrProvider) as ThorSwapFacet;
  }
}
