/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IVelodromeV2Router,
  IVelodromeV2RouterInterface,
} from "../IVelodromeV2Router";

const _abi = [
  {
    type: "function",
    name: "getAmountsOut",
    inputs: [
      {
        name: "amountIn",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "routes",
        type: "tuple[]",
        internalType: "struct IVelodromeV2Router.Route[]",
        components: [
          {
            name: "from",
            type: "address",
            internalType: "address",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "stable",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "factory",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "amounts",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolFor",
    inputs: [
      {
        name: "tokenA",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenB",
        type: "address",
        internalType: "address",
      },
      {
        name: "stable",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "_factory",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "pool",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
] as const;

export class IVelodromeV2Router__factory {
  static readonly abi = _abi;
  static createInterface(): IVelodromeV2RouterInterface {
    return new utils.Interface(_abi) as IVelodromeV2RouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IVelodromeV2Router {
    return new Contract(address, _abi, signerOrProvider) as IVelodromeV2Router;
  }
}
