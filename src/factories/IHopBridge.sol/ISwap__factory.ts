/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ISwap, ISwapInterface } from "../../IHopBridge.sol/ISwap";

const _abi = [
  {
    type: "function",
    name: "swap",
    inputs: [
      {
        name: "tokenIndexFrom",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "tokenIndexTo",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "dx",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "minDy",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "deadline",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

export class ISwap__factory {
  static readonly abi = _abi;
  static createInterface(): ISwapInterface {
    return new utils.Interface(_abi) as ISwapInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ISwap {
    return new Contract(address, _abi, signerOrProvider) as ISwap;
  }
}
