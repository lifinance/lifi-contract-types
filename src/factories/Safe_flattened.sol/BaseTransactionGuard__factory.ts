/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  BaseTransactionGuard,
  BaseTransactionGuardInterface,
} from "../../Safe_flattened.sol/BaseTransactionGuard";

const _abi = [
  {
    type: "function",
    name: "checkAfterExecution",
    inputs: [
      {
        name: "hash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "checkTransaction",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "operation",
        type: "uint8",
        internalType: "enum Enum.Operation",
      },
      {
        name: "safeTxGas",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "baseGas",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "gasPrice",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "gasToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "refundReceiver",
        type: "address",
        internalType: "address payable",
      },
      {
        name: "signatures",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "msgSender",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
] as const;

export class BaseTransactionGuard__factory {
  static readonly abi = _abi;
  static createInterface(): BaseTransactionGuardInterface {
    return new utils.Interface(_abi) as BaseTransactionGuardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseTransactionGuard {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BaseTransactionGuard;
  }
}
