/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { GasZip, GasZipInterface } from "../../GasZip.sol/GasZip";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_gasZipRouter",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "ZERO",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "gasZipRouter",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IGasZip",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "zip",
    inputs: [
      {
        name: "amountToZip",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "destinationChain",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "zipERC20",
    inputs: [
      {
        name: "_swap",
        type: "tuple",
        internalType: "struct LibSwap.SwapData",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "destinationChain",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "TransferFailed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c0604052600060805234801561001557600080fd5b506040516111ae3803806111ae83398101604081905261003491610045565b6001600160a01b031660a052610075565b60006020828403121561005757600080fd5b81516001600160a01b038116811461006e57600080fd5b9392505050565b60805160a0516111016100ad6000396000818160e80152818161015601526102cd015260008181606b015261025a01526111016000f3fe60806040526004361061003f5760003560e01c806344ef26401461004457806358fa63ca1461005957806397b30749146100b6578063ba956b9a146100d6575b600080fd5b610057610052366004610e9f565b61010a565b005b34801561006557600080fd5b5061008d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100c257600080fd5b506100576100d1366004610ed4565b610248565b3480156100e257600080fd5b5061008d7f000000000000000000000000000000000000000000000000000000000000000081565b6040517f6e553f650000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff82811660248301527f00000000000000000000000000000000000000000000000000000000000000001690636e553f659085906044016000604051808303818588803b15801561019b57600080fd5b505af11580156101af573d6000803e3d6000fd5b504793505082159150610242905057604051600090339047908381818185875af1925050503d8060008114610200576040519150601f19603f3d011682016040523d82523d6000602084013e610205565b606091505b5050905080610240576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b50505050565b6102536000846104bb565b600061027e7f00000000000000000000000000000000000000000000000000000000000000006107b8565b6040517f6e553f650000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff84811660248301529192507f000000000000000000000000000000000000000000000000000000000000000090911690636e553f659083906044016000604051808303818588803b15801561031457600080fd5b505af1158015610328573d6000803e3d6000fd5b505050505060008460400160208101906103429190610f27565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156103b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d69190610f49565b905080156104b3576040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810182905260009073ffffffffffffffffffffffffffffffffffffffff84169063a9059cbb906044016020604051808303816000875af1158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190610f62565b9050806104b1576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b505050505050565b6104d16104cb6020830183610f27565b3b151590565b610507576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003610547576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061057661055c6060850160408601610f27565b73ffffffffffffffffffffffffffffffffffffffff161590565b610581576000610587565b82608001355b905060006105a361059e6060860160408701610f27565b6107b8565b905060006105ba61059e6080870160608801610f27565b9050826000036105f1576105f16105d76060870160408801610f27565b6105e76040880160208901610f27565b8760800135610871565b8460800135821015610641576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044015b60405180910390fd5b6000806106516020880188610f27565b73ffffffffffffffffffffffffffffffffffffffff168561067560a08a018a610f84565b604051610683929190610ff0565b60006040518083038185875af1925050503d80600081146106c0576040519150601f19603f3d011682016040523d82523d6000602084013e6106c5565b606091505b5091509150816106d8576106d8816109b9565b60006106ed61059e60808a0160608b01610f27565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961071e60208b018b610f27565b61072e60608c0160408d01610f27565b61073e60808d0160608e01610f27565b8c60800135898711610750578661075a565b61075a8a88611000565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff821615610869576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610840573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108649190610f49565b61086b565b475b92915050565b73ffffffffffffffffffffffffffffffffffffffff831661089157505050565b73ffffffffffffffffffffffffffffffffffffffff82166108de576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190610f49565b10156109b457610989838360006109c3565b6109b483837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6109c3565b505050565b8051602082018181fd5b801580610a6357506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a619190610f49565b155b610aef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610638565b6040805173ffffffffffffffffffffffffffffffffffffffff848116602483015260448083018590528351808403909101815260649092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526109b492869291600091610bba918516908490610c67565b9050805160001480610bdb575080806020019051810190610bdb9190610f62565b6109b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610638565b6060610c768484600085610c7e565b949350505050565b606082471015610d10576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610638565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610d39919061105e565b60006040518083038185875af1925050503d8060008114610d76576040519150601f19603f3d011682016040523d82523d6000602084013e610d7b565b606091505b5091509150610d8c87838387610d97565b979650505050505050565b60608315610e2d578251600003610e265773ffffffffffffffffffffffffffffffffffffffff85163b610e26576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610638565b5081610c76565b610c768383815115610e425781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610638919061107a565b803573ffffffffffffffffffffffffffffffffffffffff81168114610e9a57600080fd5b919050565b600080600060608486031215610eb457600080fd5b8335925060208401359150610ecb60408501610e76565b90509250925092565b600080600060608486031215610ee957600080fd5b833567ffffffffffffffff811115610f0057600080fd5b840160e08187031215610f1257600080fd5b925060208401359150610ecb60408501610e76565b600060208284031215610f3957600080fd5b610f4282610e76565b9392505050565b600060208284031215610f5b57600080fd5b5051919050565b600060208284031215610f7457600080fd5b81518015158114610f4257600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610fb957600080fd5b83018035915067ffffffffffffffff821115610fd457600080fd5b602001915036819003821315610fe957600080fd5b9250929050565b8183823760009101908152919050565b8181038181111561086b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60005b8381101561105557818101518382015260200161103d565b50506000910152565b6000825161107081846020870161103a565b9190910192915050565b602081526000825180602084015261109981604085016020870161103a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea2646970667358221220b859bfa30c749e660700f282f264951b45073cba14059f721d9d726dc29e3cf464736f6c63430008110033";

type GasZipConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GasZipConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GasZip__factory extends ContractFactory {
  constructor(...args: GasZipConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gasZipRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GasZip> {
    return super.deploy(_gasZipRouter, overrides || {}) as Promise<GasZip>;
  }
  override getDeployTransaction(
    _gasZipRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gasZipRouter, overrides || {});
  }
  override attach(address: string): GasZip {
    return super.attach(address) as GasZip;
  }
  override connect(signer: Signer): GasZip__factory {
    return super.connect(signer) as GasZip__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GasZipInterface {
    return new utils.Interface(_abi) as GasZipInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GasZip {
    return new Contract(address, _abi, signerOrProvider) as GasZip;
  }
}
