/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { GardenFacet, GardenFacetInterface } from "../GardenFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_htlcRegistry",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaGarden",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_gardenData",
        type: "tuple",
        internalType: "struct GardenFacet.GardenData",
        components: [
          {
            name: "redeemer",
            type: "address",
            internalType: "address",
          },
          {
            name: "timelock",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "secretHash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaGarden",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_gardenData",
        type: "tuple",
        internalType: "struct GardenFacet.GardenData",
        components: [
          {
            name: "redeemer",
            type: "address",
            internalType: "address",
          },
          {
            name: "timelock",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "secretHash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChainBytes32",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AssetNotSupported",
    inputs: [],
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidConfig",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidGardenData",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a0604052348015600e575f5ffd5b50604051611dce380380611dce833981016040819052602b916061565b6001600160a01b0381166051576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b0316608052608c565b5f602082840312156070575f5ffd5b81516001600160a01b03811681146085575f5ffd5b9392505050565b608051611d2a6100a45f395f6106490152611d2a5ff3fe608060405260043610610028575f3560e01c80639b61eae61461002c578063d60ebc8614610041575b5f5ffd5b61003f61003a36600461188a565b610054565b005b61003f61004f3660046118d6565b610279565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100cf576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6100df3447611983565b9050846101048160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561013b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610178576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101b5576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156101f3576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610231576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61024388608001518960c001516104a1565b61024d8888610555565b50479150508181111561026e5761026e5f846102698585611983565b61091d565b50505f909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102f4576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6103043447611983565b905086806101000151610343576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8780610120015115610381576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886103a48160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103db576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610418576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610455576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104698a5f01518b60c001518b8b33610952565b60c08b01526104788a88610555565b504791505081811115610494576104945f846102698585611983565b50505f9091555050505050565b805f036104da576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610533578034101561052f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61052f73ffffffffffffffffffffffffffffffffffffffff8316333084610a94565b5f61056360208301836119bb565b73ffffffffffffffffffffffffffffffffffffffff1614806105885750438160200135105b8061059557506040810135155b156105cc576040517f639a6b5600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6105ef836080015173ffffffffffffffffffffffffffffffffffffffff161590565b6105fd5782608001516105ff565b5f5b6040517f6ff78d6900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192505f917f00000000000000000000000000000000000000000000000000000000000000001690636ff78d6990602401602060405180830381865afa15801561068e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106b291906119dd565b905073ffffffffffffffffffffffffffffffffffffffff8116610701576040517f981a2a2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080840151819073ffffffffffffffffffffffffffffffffffffffff166107fc5760c085015160a086015173ffffffffffffffffffffffffffffffffffffffff8316916313d4a7879161075760208901896119bb565b60c08a0151604080517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff948516600482015293909216602484015260208a013560448401526064830152880135608482015260a4015f604051808303818588803b1580156107e0575f5ffd5b505af11580156107f2573d5f5f3e3d5ffd5b50505050506108df565b61080f8560800151838760c00151610aec565b60a085015173ffffffffffffffffffffffffffffffffffffffff8216906313d4a7879061083f60208801886119bb565b60c0890151604080517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815273ffffffffffffffffffffffffffffffffffffffff9485166004820152939092166024840152602089013560448401526064830152870135608482015260a4015f604051808303815f87803b1580156108c8575f5ffd5b505af11580156108da573d5f5f3e3d5ffd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18560405161090e9190611a44565b60405180910390a15050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610947576109428282610b18565b505050565b610942838383610b85565b5f8280820361098d576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f858561099b600185611983565b8181106109aa576109aa611b57565b90506020028101906109bc9190611b84565b6109cd9060808101906060016119bb565b90505f6109d982610bf3565b905073ffffffffffffffffffffffffffffffffffffffff8216610a0357610a003482611983565b90505b5f610a0e8888610c3d565b9050610a1a8888610d47565b610a278a89898985610db3565b5f82610a3285610bf3565b610a3c9190611983565b905089811015610a86576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f51141716610adf57637939f4245f526004601cfd5b5f60605260405250505050565b6109428383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610f75565b73ffffffffffffffffffffffffffffffffffffffff8216610b65576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61052f73ffffffffffffffffffffffffffffffffffffffff8316826110a2565b73ffffffffffffffffffffffffffffffffffffffff8216610bd2576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61094273ffffffffffffffffffffffffffffffffffffffff841683836110bb565b5f73ffffffffffffffffffffffffffffffffffffffff821615610c3557610c3073ffffffffffffffffffffffffffffffffffffffff831630611104565b610c37565b475b92915050565b6060815f8167ffffffffffffffff811115610c5a57610c5a611649565b604051908082528060200260200182016040528015610c83578160200160208202803683370190505b5090505f5f5b83811015610d3c57868682818110610ca357610ca3611b57565b9050602002810190610cb59190611b84565b610cc69060808101906060016119bb565b9150610cd182610bf3565b838281518110610ce357610ce3611b57565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610d345734838281518110610d1c57610d1c611b57565b60200260200101818151610d309190611983565b9052505b600101610c89565b509095945050505050565b5f5b818110156109425736838383818110610d6457610d64611b57565b9050602002810190610d769190611b84565b9050610d8860e0820160c08301611bc0565b15610daa57610daa610da060608301604084016119bb565b82608001356104a1565b50600101610d49565b83838383825f5b81811015610f5b57368a8a83818110610dd557610dd5611b57565b9050602002810190610de79190611b84565b9050610e16610dfc60608301604084016119bb565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610e785750610e78610e2f60408301602084016119bb565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610e8f5750610e8f610e2f60208301836119bb565b8015610f125750610f12610ea660a0830183611bd9565b610eb4916004915f91611c41565b610ebd91611c68565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610f48576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f528c82611137565b50600101610dba565b5050610f6a848484845f6113aa565b505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff84161561109c5773ffffffffffffffffffffffffffffffffffffffff8316610fde576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611051573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110759190611cce565b101561109c5761109c73ffffffffffffffffffffffffffffffffffffffff851684836115c1565b50505050565b5f385f3884865af161052f5763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166110fb576390b8ec185f526004601cfd5b5f603452505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b61114f61114760208301836119bb565b6017903b1190565b611185576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f8190036111c4576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6111d8610dfc60608501604086016119bb565b6111e2575f6111e8565b82608001355b90505f6112036111fe60808601606087016119bb565b610bf3565b9050815f036112395761123961121f60608601604087016119bb565b61122f60408701602088016119bb565b8660800135610aec565b5f8061124860208701876119bb565b73ffffffffffffffffffffffffffffffffffffffff168461126c60a0890189611bd9565b60405161127a929190611ce5565b5f6040518083038185875af1925050503d805f81146112b4576040519150601f19603f3d011682016040523d82523d5f602084013e6112b9565b606091505b5091509150816112cc576112cc8161163f565b5f6112e06111fe6080890160608a016119bb565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861131160208a018a6119bb565b61132160608b0160408c016119bb565b61133160808c0160608d016119bb565b8b60800135898711611343578661134d565b61134d8a88611983565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f86826113b9600182611983565b8181106113c8576113c8611b57565b90506020028101906113da9190611b84565b6113eb9060808101906060016119bb565b90505f5f5f5f5f5f5f5b888110156115b15761140860018a611983565b81108015611417575088600114155b156114f2578d8d8281811061142e5761142e611b57565b90506020028101906114409190611b84565b6114519060808101906060016119bb565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146114f2578a818151811061149857611498611b57565b60200260200101516114a987610bf3565b6114b39190611983565b965073ffffffffffffffffffffffffffffffffffffffff8616156114d7575f6114d9565b895b9350838711156114f2576114f2868d610269878b611983565b8d8d8281811061150457611504611b57565b90506020028101906115169190611b84565b6115279060608101906040016119bb565b945061153285610bf3565b925073ffffffffffffffffffffffffffffffffffffffff851615611556575f611558565b895b9150818311801561159557508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b156115a9576115a9858d6102698587611983565b6001016113f5565b5050505050505050505050505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f511417166110fb575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f511417166110fb57633e3f8f735f526004601cfd5b8051602082018181fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff8111828210171561169a5761169a611649565b60405290565b5f82601f8301126116af575f5ffd5b813567ffffffffffffffff8111156116c9576116c9611649565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff8111828210171561171657611716611649565b60405281815283820160200185101561172d575f5ffd5b816020850160208301375f918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461176a575f5ffd5b50565b803561177881611749565b919050565b80358015158114611778575f5ffd5b5f610140828403121561179d575f5ffd5b6117a5611676565b823581529050602082013567ffffffffffffffff8111156117c4575f5ffd5b6117d0848285016116a0565b602083015250604082013567ffffffffffffffff8111156117ef575f5ffd5b6117fb848285016116a0565b60408301525061180d6060830161176d565b606082015261181e6080830161176d565b608082015261182f60a0830161176d565b60a082015260c0828101359082015260e08083013590820152611855610100830161177d565b610100820152611868610120830161177d565b61012082015292915050565b5f60608284031215611884575f5ffd5b50919050565b5f5f6080838503121561189b575f5ffd5b823567ffffffffffffffff8111156118b1575f5ffd5b6118bd8582860161178c565b9250506118cd8460208501611874565b90509250929050565b5f5f5f5f60a085870312156118e9575f5ffd5b843567ffffffffffffffff8111156118ff575f5ffd5b61190b8782880161178c565b945050602085013567ffffffffffffffff811115611927575f5ffd5b8501601f81018713611937575f5ffd5b803567ffffffffffffffff81111561194d575f5ffd5b8760208260051b8401011115611961575f5ffd5b602091909101935091506119788660408701611874565b905092959194509250565b81810381811115610c37577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f602082840312156119cb575f5ffd5b81356119d681611749565b9392505050565b5f602082840312156119ed575f5ffd5b81516119d681611749565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f60208301516101406040840152611a6b6101608401826119f8565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611aa682826119f8565b9150506060840151611ad0608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e0840151610100840152610100840151611b3f61012085018215159052565b50610120840151801515610140850152509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611bb6575f5ffd5b9190910192915050565b5f60208284031215611bd0575f5ffd5b6119d68261177d565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611c0c575f5ffd5b83018035915067ffffffffffffffff821115611c26575f5ffd5b602001915036819003821315611c3a575f5ffd5b9250929050565b5f5f85851115611c4f575f5ffd5b83861115611c5b575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015611cc7577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b5f60208284031215611cde575f5ffd5b5051919050565b818382375f910190815291905056fea2646970667358221220f5791285668f42e030df44341ad51aad74f05bef88eb8134b3975f69a03b9d7164736f6c634300081d0033";

type GardenFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GardenFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GardenFacet__factory extends ContractFactory {
  constructor(...args: GardenFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _htlcRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GardenFacet> {
    return super.deploy(_htlcRegistry, overrides || {}) as Promise<GardenFacet>;
  }
  override getDeployTransaction(
    _htlcRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_htlcRegistry, overrides || {});
  }
  override attach(address: string): GardenFacet {
    return super.attach(address) as GardenFacet;
  }
  override connect(signer: Signer): GardenFacet__factory {
    return super.connect(signer) as GardenFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GardenFacetInterface {
    return new utils.Interface(_abi) as GardenFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GardenFacet {
    return new Contract(address, _abi, signerOrProvider) as GardenFacet;
  }
}
