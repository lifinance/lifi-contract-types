/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { GardenFacet, GardenFacetInterface } from "../GardenFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_htlcRegistry",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaGarden",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_gardenData",
        type: "tuple",
        internalType: "struct GardenFacet.GardenData",
        components: [
          {
            name: "redeemer",
            type: "address",
            internalType: "address",
          },
          {
            name: "refundAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "timelock",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "secretHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "nonEvmReceiver",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaGarden",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_gardenData",
        type: "tuple",
        internalType: "struct GardenFacet.GardenData",
        components: [
          {
            name: "redeemer",
            type: "address",
            internalType: "address",
          },
          {
            name: "refundAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "timelock",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "secretHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "nonEvmReceiver",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChainBytes32",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AssetNotSupported",
    inputs: [],
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidConfig",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidGardenData",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a0604052348015600e575f5ffd5b50604051611ec8380380611ec8833981016040819052602b916061565b6001600160a01b0381166051576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b0316608052608c565b5f602082840312156070575f5ffd5b81516001600160a01b03811681146085575f5ffd5b9392505050565b608051611e246100a45f395f6106be0152611e245ff3fe608060405260043610610028575f3560e01c80635f9af35d1461002c57806376ad76fe14610041575b5f5ffd5b61003f61003a366004611984565b610054565b005b61003f61004f3660046119d0565b610279565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100cf576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6100df3447611a7d565b9050846101048160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561013b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610178576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101b5576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156101f3576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610231576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61024388608001518960c001516104a1565b61024d8888610555565b50479150508181111561026e5761026e5f846102698585611a7d565b610a19565b50505f909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102f4576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6103043447611a7d565b905086806101000151610343576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8780610120015115610381576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886103a48160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103db576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610418576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610455576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104698a5f01518b60c001518b8b33610a4e565b60c08b01526104788a88610555565b504791505081811115610494576104945f846102698585611a7d565b50505f9091555050505050565b805f036104da576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610533578034101561052f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61052f73ffffffffffffffffffffffffffffffffffffffff8316333084610b90565b5f610578836080015173ffffffffffffffffffffffffffffffffffffffff161590565b90505f6105886020840184611ab5565b73ffffffffffffffffffffffffffffffffffffffff1614806105ac57506040820135155b806105b957506060820135155b156105f0576040517f639a6b5600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6106016040840160208501611ab5565b73ffffffffffffffffffffffffffffffffffffffff160361064e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8161065e578360800151610674565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee5b6040517f6ff78d6900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192505f917f00000000000000000000000000000000000000000000000000000000000000001690636ff78d6990602401602060405180830381865afa158015610703573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107279190611ad7565b905073ffffffffffffffffffffffffffffffffffffffff8116610776576040517f981a2a2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8083156108635760c086015173ffffffffffffffffffffffffffffffffffffffff8216906313d4a787906107b06040890160208a01611ab5565b6107bd60208a018a611ab5565b60c08b0151604080517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff9485166004820152939092166024840152908a0135604483015260648201526060890135608482015260a4015f604051808303818588803b158015610847575f5ffd5b505af1158015610859573d5f5f3e3d5ffd5b5050505050610950565b6108768660800151838860c00151610be8565b73ffffffffffffffffffffffffffffffffffffffff81166313d4a7876108a26040880160208901611ab5565b6108af6020890189611ab5565b60c08a0151604080517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815273ffffffffffffffffffffffffffffffffffffffff948516600482015293909216602484015290890135604483015260648201526060880135608482015260a4015f604051808303815f87803b158015610939575f5ffd5b505af115801561094b573d5f5f3e3d5ffd5b505050505b7311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168660a0015173ffffffffffffffffffffffffffffffffffffffff16036109da5760e08601518651604051608088013581527f815cd8dc72093a13fe3577112c391b6279303956526382ab98772d0239dbf78c9060200160405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f186604051610a099190611b3e565b60405180910390a1505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610a4357610a3e8282610c14565b505050565b610a3e838383610c81565b5f82808203610a89576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8585610a97600185611a7d565b818110610aa657610aa6611c51565b9050602002810190610ab89190611c7e565b610ac9906080810190606001611ab5565b90505f610ad582610cef565b905073ffffffffffffffffffffffffffffffffffffffff8216610aff57610afc3482611a7d565b90505b5f610b0a8888610d39565b9050610b168888610e43565b610b238a89898985610eaf565b5f82610b2e85610cef565b610b389190611a7d565b905089811015610b82576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f51141716610bdb57637939f4245f526004601cfd5b5f60605260405250505050565b610a3e8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61106f565b73ffffffffffffffffffffffffffffffffffffffff8216610c61576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61052f73ffffffffffffffffffffffffffffffffffffffff83168261119c565b73ffffffffffffffffffffffffffffffffffffffff8216610cce576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a3e73ffffffffffffffffffffffffffffffffffffffff841683836111b5565b5f73ffffffffffffffffffffffffffffffffffffffff821615610d3157610d2c73ffffffffffffffffffffffffffffffffffffffff8316306111fe565b610d33565b475b92915050565b6060815f8167ffffffffffffffff811115610d5657610d56611743565b604051908082528060200260200182016040528015610d7f578160200160208202803683370190505b5090505f5f5b83811015610e3857868682818110610d9f57610d9f611c51565b9050602002810190610db19190611c7e565b610dc2906080810190606001611ab5565b9150610dcd82610cef565b838281518110610ddf57610ddf611c51565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610e305734838281518110610e1857610e18611c51565b60200260200101818151610e2c9190611a7d565b9052505b600101610d85565b509095945050505050565b5f5b81811015610a3e5736838383818110610e6057610e60611c51565b9050602002810190610e729190611c7e565b9050610e8460e0820160c08301611cba565b15610ea657610ea6610e9c6060830160408401611ab5565b82608001356104a1565b50600101610e45565b83838383825f5b8181101561105557368a8a83818110610ed157610ed1611c51565b9050602002810190610ee39190611c7e565b9050610f12610ef86060830160408401611ab5565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610f735750610f73610f2b6040830160208401611ab5565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f216020526040902054151590565b8015610f8a5750610f8a610f2b6020830183611ab5565b801561100c575061100c610fa160a0830183611cd3565b610faf916004915f91611d3b565b610fb891611d62565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f226020526040902054151590565b611042576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61104c8c82611231565b50600101610eb6565b5050611064848484845f6114a4565b505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156111965773ffffffffffffffffffffffffffffffffffffffff83166110d8576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa15801561114b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061116f9190611dc8565b10156111965761119673ffffffffffffffffffffffffffffffffffffffff851684836116bb565b50505050565b5f385f3884865af161052f5763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166111f5576390b8ec185f526004601cfd5b5f603452505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b6112496112416020830183611ab5565b6017903b1190565b61127f576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f8190036112be576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6112d2610ef86060850160408601611ab5565b6112dc575f6112e2565b82608001355b90505f6112fd6112f86080860160608701611ab5565b610cef565b9050815f03611333576113336113196060860160408701611ab5565b6113296040870160208801611ab5565b8660800135610be8565b5f806113426020870187611ab5565b73ffffffffffffffffffffffffffffffffffffffff168461136660a0890189611cd3565b604051611374929190611ddf565b5f6040518083038185875af1925050503d805f81146113ae576040519150601f19603f3d011682016040523d82523d5f602084013e6113b3565b606091505b5091509150816113c6576113c681611739565b5f6113da6112f86080890160608a01611ab5565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861140b60208a018a611ab5565b61141b60608b0160408c01611ab5565b61142b60808c0160608d01611ab5565b8b6080013589871161143d5786611447565b6114478a88611a7d565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f86826114b3600182611a7d565b8181106114c2576114c2611c51565b90506020028101906114d49190611c7e565b6114e5906080810190606001611ab5565b90505f5f5f5f5f5f5f5b888110156116ab5761150260018a611a7d565b81108015611511575088600114155b156115ec578d8d8281811061152857611528611c51565b905060200281019061153a9190611c7e565b61154b906080810190606001611ab5565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146115ec578a818151811061159257611592611c51565b60200260200101516115a387610cef565b6115ad9190611a7d565b965073ffffffffffffffffffffffffffffffffffffffff8616156115d1575f6115d3565b895b9350838711156115ec576115ec868d610269878b611a7d565b8d8d828181106115fe576115fe611c51565b90506020028101906116109190611c7e565b611621906060810190604001611ab5565b945061162c85610cef565b925073ffffffffffffffffffffffffffffffffffffffff851615611650575f611652565b895b9150818311801561168f57508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b156116a3576116a3858d6102698587611a7d565b6001016114ef565b5050505050505050505050505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f511417166111f5575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f511417166111f557633e3f8f735f526004601cfd5b8051602082018181fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff8111828210171561179457611794611743565b60405290565b5f82601f8301126117a9575f5ffd5b813567ffffffffffffffff8111156117c3576117c3611743565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff8111828210171561181057611810611743565b604052818152838201602001851015611827575f5ffd5b816020850160208301375f918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611864575f5ffd5b50565b803561187281611843565b919050565b80358015158114611872575f5ffd5b5f6101408284031215611897575f5ffd5b61189f611770565b823581529050602082013567ffffffffffffffff8111156118be575f5ffd5b6118ca8482850161179a565b602083015250604082013567ffffffffffffffff8111156118e9575f5ffd5b6118f58482850161179a565b60408301525061190760608301611867565b606082015261191860808301611867565b608082015261192960a08301611867565b60a082015260c0828101359082015260e0808301359082015261194f6101008301611877565b6101008201526119626101208301611877565b61012082015292915050565b5f60a0828403121561197e575f5ffd5b50919050565b5f5f60c08385031215611995575f5ffd5b823567ffffffffffffffff8111156119ab575f5ffd5b6119b785828601611886565b9250506119c7846020850161196e565b90509250929050565b5f5f5f5f60e085870312156119e3575f5ffd5b843567ffffffffffffffff8111156119f9575f5ffd5b611a0587828801611886565b945050602085013567ffffffffffffffff811115611a21575f5ffd5b8501601f81018713611a31575f5ffd5b803567ffffffffffffffff811115611a47575f5ffd5b8760208260051b8401011115611a5b575f5ffd5b60209190910193509150611a72866040870161196e565b905092959194509250565b81810381811115610d33577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f60208284031215611ac5575f5ffd5b8135611ad081611843565b9392505050565b5f60208284031215611ae7575f5ffd5b8151611ad081611843565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f60208301516101406040840152611b65610160840182611af2565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611ba08282611af2565b9150506060840151611bca608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e0840151610100840152610100840151611c3961012085018215159052565b50610120840151801515610140850152509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611cb0575f5ffd5b9190910192915050565b5f60208284031215611cca575f5ffd5b611ad082611877565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611d06575f5ffd5b83018035915067ffffffffffffffff821115611d20575f5ffd5b602001915036819003821315611d34575f5ffd5b9250929050565b5f5f85851115611d49575f5ffd5b83861115611d55575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015611dc1577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b5f60208284031215611dd8575f5ffd5b5051919050565b818382375f910190815291905056fea2646970667358221220f69f2bae2581cd4f02c3cdf21402dc1aa4151525b7aea75f839e11bb41d9d29764736f6c634300081d0033";

type GardenFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GardenFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GardenFacet__factory extends ContractFactory {
  constructor(...args: GardenFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _htlcRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GardenFacet> {
    return super.deploy(_htlcRegistry, overrides || {}) as Promise<GardenFacet>;
  }
  override getDeployTransaction(
    _htlcRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_htlcRegistry, overrides || {});
  }
  override attach(address: string): GardenFacet {
    return super.attach(address) as GardenFacet;
  }
  override connect(signer: Signer): GardenFacet__factory {
    return super.connect(signer) as GardenFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GardenFacetInterface {
    return new utils.Interface(_abi) as GardenFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GardenFacet {
    return new Contract(address, _abi, signerOrProvider) as GardenFacet;
  }
}
