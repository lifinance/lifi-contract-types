/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { GardenFacet, GardenFacetInterface } from "../GardenFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_htlcRegistry",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaGarden",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_gardenData",
        type: "tuple",
        internalType: "struct GardenFacet.GardenData",
        components: [
          {
            name: "redeemer",
            type: "address",
            internalType: "address",
          },
          {
            name: "timelock",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "secretHash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaGarden",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_gardenData",
        type: "tuple",
        internalType: "struct GardenFacet.GardenData",
        components: [
          {
            name: "redeemer",
            type: "address",
            internalType: "address",
          },
          {
            name: "timelock",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "secretHash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChainBytes32",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AssetNotSupported",
    inputs: [],
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a0604052348015600e575f5ffd5b50604051611d34380380611d34833981016040819052602b91603b565b6001600160a01b03166080526066565b5f60208284031215604a575f5ffd5b81516001600160a01b0381168114605f575f5ffd5b9392505050565b608051611cb661007e5f395f6105d20152611cb65ff3fe608060405260043610610028575f3560e01c80639b61eae61461002c578063d60ebc8614610041575b5f5ffd5b61003f61003a366004611816565b610054565b005b61003f61004f366004611862565b610279565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100cf576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6100df344761190f565b9050846101048160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561013b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610178576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101b5576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156101f3576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610231576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61024388608001518960c001516104a1565b61024d8888610555565b50479150508181111561026e5761026e5f84610269858561190f565b6108a9565b50505f909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102f4576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f610304344761190f565b905086806101000151610343576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8780610120015115610381576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886103a48160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103db576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610418576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610455576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104698a5f01518b60c001518b8b336108de565b60c08b01526104788a88610555565b504791505081811115610494576104945f84610269858561190f565b50505f9091555050505050565b805f036104da576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610533578034101561052f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61052f73ffffffffffffffffffffffffffffffffffffffff8316333084610a20565b5f610578836080015173ffffffffffffffffffffffffffffffffffffffff161590565b610586578260800151610588565b5f5b6040517f6ff78d6900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192505f917f00000000000000000000000000000000000000000000000000000000000000001690636ff78d6990602401602060405180830381865afa158015610617573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061063b9190611947565b905073ffffffffffffffffffffffffffffffffffffffff811661068a576040517f981a2a2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080840151819073ffffffffffffffffffffffffffffffffffffffff166107855760c085015160a086015173ffffffffffffffffffffffffffffffffffffffff8316916313d4a787916106e06020890189611969565b60c08a0151604080517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff948516600482015293909216602484015260208a013560448401526064830152880135608482015260a4015f604051808303818588803b158015610769575f5ffd5b505af115801561077b573d5f5f3e3d5ffd5b505050505061086b565b6107988560800151838760c00151610a78565b60a085015173ffffffffffffffffffffffffffffffffffffffff8216906313d4a787905f906107ca6020890189611969565b60c08a0151604080517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff948516600482015293909216602484015260208a013560448401526064830152880135608482015260a4015f604051808303818588803b158015610853575f5ffd5b505af1158015610865573d5f5f3e3d5ffd5b50505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18560405161089a91906119d0565b60405180910390a15050505050565b73ffffffffffffffffffffffffffffffffffffffff83166108d3576108ce8282610aa4565b505050565b6108ce838383610b11565b5f82808203610919576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f858561092760018561190f565b81811061093657610936611ae3565b90506020028101906109489190611b10565b610959906080810190606001611969565b90505f61096582610b7f565b905073ffffffffffffffffffffffffffffffffffffffff821661098f5761098c348261190f565b90505b5f61099a8888610bc9565b90506109a68888610cd3565b6109b38a89898985610d3f565b5f826109be85610b7f565b6109c8919061190f565b905089811015610a12576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f51141716610a6b57637939f4245f526004601cfd5b5f60605260405250505050565b6108ce8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610f01565b73ffffffffffffffffffffffffffffffffffffffff8216610af1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61052f73ffffffffffffffffffffffffffffffffffffffff83168261102e565b73ffffffffffffffffffffffffffffffffffffffff8216610b5e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108ce73ffffffffffffffffffffffffffffffffffffffff84168383611047565b5f73ffffffffffffffffffffffffffffffffffffffff821615610bc157610bbc73ffffffffffffffffffffffffffffffffffffffff831630611090565b610bc3565b475b92915050565b6060815f8167ffffffffffffffff811115610be657610be66115d5565b604051908082528060200260200182016040528015610c0f578160200160208202803683370190505b5090505f5f5b83811015610cc857868682818110610c2f57610c2f611ae3565b9050602002810190610c419190611b10565b610c52906080810190606001611969565b9150610c5d82610b7f565b838281518110610c6f57610c6f611ae3565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610cc05734838281518110610ca857610ca8611ae3565b60200260200101818151610cbc919061190f565b9052505b600101610c15565b509095945050505050565b5f5b818110156108ce5736838383818110610cf057610cf0611ae3565b9050602002810190610d029190611b10565b9050610d1460e0820160c08301611b4c565b15610d3657610d36610d2c6060830160408401611969565b82608001356104a1565b50600101610cd5565b83838383825f5b81811015610ee757368a8a83818110610d6157610d61611ae3565b9050602002810190610d739190611b10565b9050610da2610d886060830160408401611969565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610e045750610e04610dbb6040830160208401611969565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610e1b5750610e1b610dbb6020830183611969565b8015610e9e5750610e9e610e3260a0830183611b65565b610e40916004915f91611bcd565b610e4991611bf4565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610ed4576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ede8c826110c3565b50600101610d46565b5050610ef6848484845f611336565b505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156110285773ffffffffffffffffffffffffffffffffffffffff8316610f6a576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015610fdd573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110019190611c5a565b10156110285761102873ffffffffffffffffffffffffffffffffffffffff8516848361154d565b50505050565b5f385f3884865af161052f5763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716611087576390b8ec185f526004601cfd5b5f603452505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b6110db6110d36020830183611969565b6017903b1190565b611111576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003611150576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f611164610d886060850160408601611969565b61116e575f611174565b82608001355b90505f61118f61118a6080860160608701611969565b610b7f565b9050815f036111c5576111c56111ab6060860160408701611969565b6111bb6040870160208801611969565b8660800135610a78565b5f806111d46020870187611969565b73ffffffffffffffffffffffffffffffffffffffff16846111f860a0890189611b65565b604051611206929190611c71565b5f6040518083038185875af1925050503d805f8114611240576040519150601f19603f3d011682016040523d82523d5f602084013e611245565b606091505b50915091508161125857611258816115cb565b5f61126c61118a6080890160608a01611969565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861129d60208a018a611969565b6112ad60608b0160408c01611969565b6112bd60808c0160608d01611969565b8b608001358987116112cf57866112d9565b6112d98a8861190f565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f868261134560018261190f565b81811061135457611354611ae3565b90506020028101906113669190611b10565b611377906080810190606001611969565b90505f5f5f5f5f5f5f5b8881101561153d5761139460018a61190f565b811080156113a3575088600114155b1561147e578d8d828181106113ba576113ba611ae3565b90506020028101906113cc9190611b10565b6113dd906080810190606001611969565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161461147e578a818151811061142457611424611ae3565b602002602001015161143587610b7f565b61143f919061190f565b965073ffffffffffffffffffffffffffffffffffffffff861615611463575f611465565b895b93508387111561147e5761147e868d610269878b61190f565b8d8d8281811061149057611490611ae3565b90506020028101906114a29190611b10565b6114b3906060810190604001611969565b94506114be85610b7f565b925073ffffffffffffffffffffffffffffffffffffffff8516156114e2575f6114e4565b895b9150818311801561152157508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b1561153557611535858d610269858761190f565b600101611381565b5050505050505050505050505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716611087575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f5114171661108757633e3f8f735f526004601cfd5b8051602082018181fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff81118282101715611626576116266115d5565b60405290565b5f82601f83011261163b575f5ffd5b813567ffffffffffffffff811115611655576116556115d5565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff811182821017156116a2576116a26115d5565b6040528181528382016020018510156116b9575f5ffd5b816020850160208301375f918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146116f6575f5ffd5b50565b8035611704816116d5565b919050565b80358015158114611704575f5ffd5b5f6101408284031215611729575f5ffd5b611731611602565b823581529050602082013567ffffffffffffffff811115611750575f5ffd5b61175c8482850161162c565b602083015250604082013567ffffffffffffffff81111561177b575f5ffd5b6117878482850161162c565b604083015250611799606083016116f9565b60608201526117aa608083016116f9565b60808201526117bb60a083016116f9565b60a082015260c0828101359082015260e080830135908201526117e16101008301611709565b6101008201526117f46101208301611709565b61012082015292915050565b5f60608284031215611810575f5ffd5b50919050565b5f5f60808385031215611827575f5ffd5b823567ffffffffffffffff81111561183d575f5ffd5b61184985828601611718565b9250506118598460208501611800565b90509250929050565b5f5f5f5f60a08587031215611875575f5ffd5b843567ffffffffffffffff81111561188b575f5ffd5b61189787828801611718565b945050602085013567ffffffffffffffff8111156118b3575f5ffd5b8501601f810187136118c3575f5ffd5b803567ffffffffffffffff8111156118d9575f5ffd5b8760208260051b84010111156118ed575f5ffd5b602091909101935091506119048660408701611800565b905092959194509250565b81810381811115610bc3577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f60208284031215611957575f5ffd5b8151611962816116d5565b9392505050565b5f60208284031215611979575f5ffd5b8135611962816116d5565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f602083015161014060408401526119f7610160840182611984565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611a328282611984565b9150506060840151611a5c608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e0840151610100840152610100840151611acb61012085018215159052565b50610120840151801515610140850152509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611b42575f5ffd5b9190910192915050565b5f60208284031215611b5c575f5ffd5b61196282611709565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611b98575f5ffd5b83018035915067ffffffffffffffff821115611bb2575f5ffd5b602001915036819003821315611bc6575f5ffd5b9250929050565b5f5f85851115611bdb575f5ffd5b83861115611be7575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015611c53577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b5f60208284031215611c6a575f5ffd5b5051919050565b818382375f910190815291905056fea2646970667358221220abdf13b6dcb442898537b0806d304303c050c1d6a5bec261c44527a902f7122164736f6c634300081d0033";

type GardenFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GardenFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GardenFacet__factory extends ContractFactory {
  constructor(...args: GardenFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _htlcRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GardenFacet> {
    return super.deploy(_htlcRegistry, overrides || {}) as Promise<GardenFacet>;
  }
  override getDeployTransaction(
    _htlcRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_htlcRegistry, overrides || {});
  }
  override attach(address: string): GardenFacet {
    return super.attach(address) as GardenFacet;
  }
  override connect(signer: Signer): GardenFacet__factory {
    return super.connect(signer) as GardenFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GardenFacetInterface {
    return new utils.Interface(_abi) as GardenFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GardenFacet {
    return new Contract(address, _abi, signerOrProvider) as GardenFacet;
  }
}
