/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IAcrossSpokePool,
  IAcrossSpokePoolInterface,
} from "../IAcrossSpokePool";

const _abi = [
  {
    type: "function",
    name: "deposit",
    inputs: [
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "originToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "relayerFeePct",
        type: "int64",
        internalType: "int64",
      },
      {
        name: "quoteTimestamp",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "maxCount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "depositV3",
    inputs: [
      {
        name: "depositor",
        type: "address",
        internalType: "address",
      },
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "inputToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "outputToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "outputAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "exclusiveRelayer",
        type: "address",
        internalType: "address",
      },
      {
        name: "quoteTimestamp",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "fillDeadline",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "exclusivityDeadline",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
] as const;

export class IAcrossSpokePool__factory {
  static readonly abi = _abi;
  static createInterface(): IAcrossSpokePoolInterface {
    return new utils.Interface(_abi) as IAcrossSpokePoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAcrossSpokePool {
    return new Contract(address, _abi, signerOrProvider) as IAcrossSpokePool;
  }
}
