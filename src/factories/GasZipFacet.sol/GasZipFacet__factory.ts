/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  GasZipFacet,
  GasZipFacetInterface,
} from "../../GasZipFacet.sol/GasZipFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_gasZipRouter",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "depositToGasZipERC20",
    inputs: [
      {
        name: "_swapData",
        type: "tuple",
        internalType: "struct LibSwap.SwapData",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_destinationChainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "depositToGasZipERC20WithDeposit",
    inputs: [
      {
        name: "_swapData",
        type: "tuple",
        internalType: "struct LibSwap.SwapData",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_destinationChainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "depositToGasZipNative",
    inputs: [
      {
        name: "_amountToZip",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_destinationChainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "gasZipRouter",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IGasZip",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610fac380380610fac83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610f1461009860003960008181608b0152818161014d01526101fd0152610f146000f3fe60806040526004361061003f5760003560e01c80633d86ea8714610044578063867372e414610066578063ba956b9a14610079578063f78d7f27146100d6575b600080fd5b34801561005057600080fd5b5061006461005f366004610cb2565b6100f6565b005b610064610074366004610d0e565b6101b1565b34801561008557600080fd5b506100ad7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100e257600080fd5b506100646100f1366004610cb2565b61022e565b610101600084610276565b6040517f6e553f650000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff82811660248301527f00000000000000000000000000000000000000000000000000000000000000001690636e553f659047906044015b6000604051808303818588803b15801561019357600080fd5b505af11580156101a7573d6000803e3d6000fd5b5050505050505050565b6040517f6e553f650000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff82811660248301527f00000000000000000000000000000000000000000000000000000000000000001690636e553f6590859060440161017a565b610266333060808601356102486060880160408901610d3a565b73ffffffffffffffffffffffffffffffffffffffff16929190610573565b6102718383836100f6565b505050565b61028c6102866020830183610d3a565b3b151590565b6102c2576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003610302576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006103316103176060850160408601610d3a565b73ffffffffffffffffffffffffffffffffffffffff161590565b61033c576000610342565b82608001355b9050600061035e6103596060860160408701610d3a565b6105d0565b905060006103756103596080870160608801610d3a565b9050826000036103ac576103ac6103926060870160408801610d3a565b6103a26040880160208901610d3a565b8760800135610689565b84608001358210156103fc576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044015b60405180910390fd5b60008061040c6020880188610d3a565b73ffffffffffffffffffffffffffffffffffffffff168561043060a08a018a610d5c565b60405161043e929190610dc8565b60006040518083038185875af1925050503d806000811461047b576040519150601f19603f3d011682016040523d82523d6000602084013e610480565b606091505b50915091508161049357610493816107cc565b60006104a861035960808a0160608b01610d3a565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896104d960208b018b610d3a565b6104e960608c0160408d01610d3a565b6104f960808d0160608e01610d3a565b8c6080013589871161050b5786610515565b6105158a88610dd8565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d1560016000511417166105c257637939f4246000526004601cfd5b600060605260405250505050565b600073ffffffffffffffffffffffffffffffffffffffff821615610681576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067c9190610e12565b610683565b475b92915050565b73ffffffffffffffffffffffffffffffffffffffff83166106a957505050565b73ffffffffffffffffffffffffffffffffffffffff82166106f6576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa15801561076b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078f9190610e12565b1015610271576107a1838360006107d6565b61027183837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6107d6565b8051602082018181fd5b80158061087657506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610850573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108749190610e12565b155b610902576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016103f3565b6040805173ffffffffffffffffffffffffffffffffffffffff848116602483015260448083018590528351808403909101815260649092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152610271928692916000916109cd918516908490610a7a565b90508051600014806109ee5750808060200190518101906109ee9190610e2b565b610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016103f3565b6060610a898484600085610a91565b949350505050565b606082471015610b23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016103f3565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610b4c9190610e71565b60006040518083038185875af1925050503d8060008114610b89576040519150601f19603f3d011682016040523d82523d6000602084013e610b8e565b606091505b5091509150610b9f87838387610baa565b979650505050505050565b60608315610c40578251600003610c395773ffffffffffffffffffffffffffffffffffffffff85163b610c39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103f3565b5081610a89565b610a898383815115610c555781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f39190610e8d565b803573ffffffffffffffffffffffffffffffffffffffff81168114610cad57600080fd5b919050565b600080600060608486031215610cc757600080fd5b833567ffffffffffffffff811115610cde57600080fd5b840160e08187031215610cf057600080fd5b925060208401359150610d0560408501610c89565b90509250925092565b600080600060608486031215610d2357600080fd5b8335925060208401359150610d0560408501610c89565b600060208284031215610d4c57600080fd5b610d5582610c89565b9392505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610d9157600080fd5b83018035915067ffffffffffffffff821115610dac57600080fd5b602001915036819003821315610dc157600080fd5b9250929050565b8183823760009101908152919050565b81810381811115610683577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060208284031215610e2457600080fd5b5051919050565b600060208284031215610e3d57600080fd5b81518015158114610d5557600080fd5b60005b83811015610e68578181015183820152602001610e50565b50506000910152565b60008251610e83818460208701610e4d565b9190910192915050565b6020815260008251806020840152610eac816040850160208701610e4d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea2646970667358221220b41fe8fa177b76637c7162e92e3104d0503dba246fefc6f8b92c0c1cbabd1c1564736f6c63430008110033";

type GasZipFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GasZipFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GasZipFacet__factory extends ContractFactory {
  constructor(...args: GasZipFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gasZipRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GasZipFacet> {
    return super.deploy(_gasZipRouter, overrides || {}) as Promise<GasZipFacet>;
  }
  override getDeployTransaction(
    _gasZipRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gasZipRouter, overrides || {});
  }
  override attach(address: string): GasZipFacet {
    return super.attach(address) as GasZipFacet;
  }
  override connect(signer: Signer): GasZipFacet__factory {
    return super.connect(signer) as GasZipFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GasZipFacetInterface {
    return new utils.Interface(_abi) as GasZipFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GasZipFacet {
    return new Contract(address, _abi, signerOrProvider) as GasZipFacet;
  }
}
