/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  GasZipFacet,
  GasZipFacetInterface,
} from "../../GasZipFacet.sol/GasZipFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_gasZipRouter",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "depositToGasZipERC20",
    inputs: [
      {
        name: "_swapData",
        type: "tuple",
        internalType: "struct LibSwap.SwapData",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_destinationChainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "depositToGasZipNative",
    inputs: [
      {
        name: "_amountToZip",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_destinationChainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "gasZipRouter",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IGasZip",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "NativeAssetTransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161104138038061104183398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610fa961009860003960008181608b0152818161016501526102140152610fa96000f3fe6080604052600436106100385760003560e01c80633d86ea8714610044578063867372e414610066578063ba956b9a1461007957600080fd5b3661003f57005b600080fd5b34801561005057600080fd5b5061006461005f366004610d47565b6100d6565b005b610064610074366004610da3565b6101c8565b34801561008557600080fd5b506100ad7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61010e333060808601356100f06060880160408901610dcf565b73ffffffffffffffffffffffffffffffffffffffff16929190610306565b610119600084610363565b6040517f6e553f650000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff82811660248301527f00000000000000000000000000000000000000000000000000000000000000001690636e553f659047906044016000604051808303818588803b1580156101aa57600080fd5b505af11580156101be573d6000803e3d6000fd5b5050505050505050565b6040517f6e553f650000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff82811660248301527f00000000000000000000000000000000000000000000000000000000000000001690636e553f659085906044016000604051808303818588803b15801561025957600080fd5b505af115801561026d573d6000803e3d6000fd5b504793505082159150610300905057604051600090339083908381818185875af1925050503d80600081146102be576040519150601f19603f3d011682016040523d82523d6000602084013e6102c3565b606091505b50509050806102fe576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b50505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d15600160005114171661035557637939f4246000526004601cfd5b600060605260405250505050565b6103796103736020830183610dcf565b3b151590565b6103af576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036103ef576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061041e6104046060850160408601610dcf565b73ffffffffffffffffffffffffffffffffffffffff161590565b61042957600061042f565b82608001355b9050600061044b6104466060860160408701610dcf565b610660565b905060006104626104466080870160608801610dcf565b9050826000036104995761049961047f6060870160408801610dcf565b61048f6040880160208901610dcf565b8760800135610719565b84608001358210156104e9576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044015b60405180910390fd5b6000806104f96020880188610dcf565b73ffffffffffffffffffffffffffffffffffffffff168561051d60a08a018a610df1565b60405161052b929190610e5d565b60006040518083038185875af1925050503d8060008114610568576040519150601f19603f3d011682016040523d82523d6000602084013e61056d565b606091505b5091509150816105805761058081610861565b600061059561044660808a0160608b01610dcf565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896105c660208b018b610dcf565b6105d660608c0160408d01610dcf565b6105e660808d0160608e01610dcf565b8c608001358987116105f85786610602565b6106028a88610e6d565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff821615610711576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156106e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070c9190610ea7565b610713565b475b92915050565b73ffffffffffffffffffffffffffffffffffffffff831661073957505050565b73ffffffffffffffffffffffffffffffffffffffff8216610786576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa1580156107fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081f9190610ea7565b101561085c576108318383600061086b565b61085c83837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61086b565b505050565b8051602082018181fd5b80158061090b57506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156108e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109099190610ea7565b155b610997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016104e0565b6040805173ffffffffffffffffffffffffffffffffffffffff848116602483015260448083018590528351808403909101815260649092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261085c92869291600091610a62918516908490610b0f565b9050805160001480610a83575080806020019051810190610a839190610ec0565b61085c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016104e0565b6060610b1e8484600085610b26565b949350505050565b606082471015610bb8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016104e0565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610be19190610f06565b60006040518083038185875af1925050503d8060008114610c1e576040519150601f19603f3d011682016040523d82523d6000602084013e610c23565b606091505b5091509150610c3487838387610c3f565b979650505050505050565b60608315610cd5578251600003610cce5773ffffffffffffffffffffffffffffffffffffffff85163b610cce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104e0565b5081610b1e565b610b1e8383815115610cea5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e09190610f22565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d4257600080fd5b919050565b600080600060608486031215610d5c57600080fd5b833567ffffffffffffffff811115610d7357600080fd5b840160e08187031215610d8557600080fd5b925060208401359150610d9a60408501610d1e565b90509250925092565b600080600060608486031215610db857600080fd5b8335925060208401359150610d9a60408501610d1e565b600060208284031215610de157600080fd5b610dea82610d1e565b9392505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610e2657600080fd5b83018035915067ffffffffffffffff821115610e4157600080fd5b602001915036819003821315610e5657600080fd5b9250929050565b8183823760009101908152919050565b81810381811115610713577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060208284031215610eb957600080fd5b5051919050565b600060208284031215610ed257600080fd5b81518015158114610dea57600080fd5b60005b83811015610efd578181015183820152602001610ee5565b50506000910152565b60008251610f18818460208701610ee2565b9190910192915050565b6020815260008251806020840152610f41816040850160208701610ee2565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea26469706673582212202ac312e0f1686ecdc8493f6047747045cc46d49158564819ee07322a5fec1f3f64736f6c63430008110033";

type GasZipFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GasZipFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GasZipFacet__factory extends ContractFactory {
  constructor(...args: GasZipFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gasZipRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GasZipFacet> {
    return super.deploy(_gasZipRouter, overrides || {}) as Promise<GasZipFacet>;
  }
  override getDeployTransaction(
    _gasZipRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gasZipRouter, overrides || {});
  }
  override attach(address: string): GasZipFacet {
    return super.attach(address) as GasZipFacet;
  }
  override connect(signer: Signer): GasZipFacet__factory {
    return super.connect(signer) as GasZipFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GasZipFacetInterface {
    return new utils.Interface(_abi) as GasZipFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GasZipFacet {
    return new Contract(address, _abi, signerOrProvider) as GasZipFacet;
  }
}
