/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Patcher, PatcherInterface } from "../../Patcher.sol/Patcher";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_diamond",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "diamond",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "patchWithAvailableAmounts",
    inputs: [
      {
        name: "offsets",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "inputToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "bs",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "patchWithAvailableAmountsAndForward",
    inputs: [
      {
        name: "offsets",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "inputToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "outputToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "bs",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "callTo",
        type: "address",
        internalType: "address payable",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "replaceUint256At",
    inputs: [
      {
        name: "bs",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "newData",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InternalCallFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidBytesOp",
    inputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "NativeAssetTransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "NoTransferToNullAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAnERC20Token",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516116ef3803806116ef83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161165e6100916000396000818160b701526101d2015261165e6000f3fe6080604052600436106100435760003560e01c80632c7c8a1a1461004f5780633fbf181814610085578063f0b7db4e146100a5578063fc70d8ad146100fe57600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b5061006f61006a3660046111e9565b610120565b60405161007c91906112dc565b60405180910390f35b34801561009157600080fd5b5061006f6100a03660046112f6565b6101ce565b3480156100b157600080fd5b506100d97f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161007c565b34801561010a57600080fd5b5061011e6101193660046113d2565b610505565b005b6060600083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093945061016892508891506105bb9050565b905060005b67ffffffffffffffff81168811156101c1576101af838a8a8467ffffffffffffffff1681811061019f5761019f6114b4565b905060200201358460001b610505565b806101b981611512565b91505061016d565b5090979650505050505050565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff8116632d2506a961021b60046000888a611539565b61022491611563565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b81168252919091166004820152602401602060405180830381865afa15801561027a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029e91906115ab565b6102d4576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff87161561042c576040517f70a08231000000000000000000000000000000000000000000000000000000008152336004820152879060009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa15801561035f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038391906115cd565b905061038f8982610674565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301526024820183905283169063095ea7b3906044016020604051808303816000875af1158015610404573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042891906115ab565b5050505b600061043b8a8a8a8989610120565b90506000808573ffffffffffffffffffffffffffffffffffffffff168360405161046591906115e6565b6000604051808303816000865af19150503d80600081146104a2576040519150601f19603f3d011682016040523d82523d6000602084013e6104a7565b606091505b5091509150816104e3576040517f52760cdd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104f689336104f18c6105bb565b6107ef565b9b9a5050505050505050505050565b610510826020611602565b835110156105a5576040517f8aaa866900000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f5265706c6163656d656e7420696e646578202b2033322062697473206973206f60448201527f7574206f6620626f756e6473000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60006105b2836020611602565b93909301525050565b600073ffffffffffffffffffffffffffffffffffffffff82161561066c576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610643573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066791906115cd565b61066e565b475b92915050565b806000036106ae576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166107075780341015610703576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610774573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079891906115cd565b9050818110156107de576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161059c565b6107ea83333085610820565b505050565b73ffffffffffffffffffffffffffffffffffffffff831615610816576107ea838383610a3a565b6107ea8282610bbc565b73ffffffffffffffffffffffffffffffffffffffff841661086d576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166108ba576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa15801561092b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094f91906115cd565b905061095d82868686610ce6565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa1580156109cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f191906115cd565b6109fb9190611615565b14610a32576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610a87576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610ad4576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610b41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6591906115cd565b905080821115610bab576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161059c565b610bb6848484610dc2565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610c09576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115610c4c576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810182905247602482015260440161059c565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610ca6576040519150601f19603f3d011682016040523d82523d6000602084013e610cab565b606091505b50509050806107ea576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610bb69085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610e18565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526107ea9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401610d40565b6000610e7a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610f279092919063ffffffff16565b9050805160001480610e9b575080806020019051810190610e9b91906115ab565b6107ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161059c565b6060610f368484600085610f3e565b949350505050565b606082471015610fd0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161059c565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610ff991906115e6565b60006040518083038185875af1925050503d8060008114611036576040519150601f19603f3d011682016040523d82523d6000602084013e61103b565b606091505b509150915061104c87838387611057565b979650505050505050565b606083156110ed5782516000036110e65773ffffffffffffffffffffffffffffffffffffffff85163b6110e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161059c565b5081610f36565b610f3683838151156111025781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059c91906112dc565b60008083601f84011261114857600080fd5b50813567ffffffffffffffff81111561116057600080fd5b6020830191508360208260051b850101111561117b57600080fd5b9250929050565b73ffffffffffffffffffffffffffffffffffffffff811681146111a457600080fd5b50565b60008083601f8401126111b957600080fd5b50813567ffffffffffffffff8111156111d157600080fd5b60208301915083602082850101111561117b57600080fd5b60008060008060006060868803121561120157600080fd5b853567ffffffffffffffff8082111561121957600080fd5b61122589838a01611136565b90975095506020880135915061123a82611182565b9093506040870135908082111561125057600080fd5b5061125d888289016111a7565b969995985093965092949392505050565b60005b83811015611289578181015183820152602001611271565b50506000910152565b600081518084526112aa81602086016020860161126e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006112ef6020830184611292565b9392505050565b600080600080600080600060a0888a03121561131157600080fd5b873567ffffffffffffffff8082111561132957600080fd5b6113358b838c01611136565b909950975060208a0135915061134a82611182565b90955060408901359061135c82611182565b9094506060890135908082111561137257600080fd5b5061137f8a828b016111a7565b909450925050608088013561139381611182565b8091505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000606084860312156113e757600080fd5b833567ffffffffffffffff808211156113ff57600080fd5b818601915086601f83011261141357600080fd5b813581811115611425576114256113a3565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561146b5761146b6113a3565b8160405282815289602084870101111561148457600080fd5b82602086016020830137600060208483010152809750505050505060208401359150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff80831681810361152f5761152f6114e3565b6001019392505050565b6000808585111561154957600080fd5b8386111561155657600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156115a35780818660040360031b1b83161692505b505092915050565b6000602082840312156115bd57600080fd5b815180151581146112ef57600080fd5b6000602082840312156115df57600080fd5b5051919050565b600082516115f881846020870161126e565b9190910192915050565b8082018082111561066e5761066e6114e3565b8181038181111561066e5761066e6114e356fea264697066735822122009ce88d1ea3df1fe007bc9763d9cd70a157b636ab828f3bd3e725aae1554d09b64736f6c63430008110033";

type PatcherConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PatcherConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Patcher__factory extends ContractFactory {
  constructor(...args: PatcherConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _diamond: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Patcher> {
    return super.deploy(_diamond, overrides || {}) as Promise<Patcher>;
  }
  override getDeployTransaction(
    _diamond: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_diamond, overrides || {});
  }
  override attach(address: string): Patcher {
    return super.attach(address) as Patcher;
  }
  override connect(signer: Signer): Patcher__factory {
    return super.connect(signer) as Patcher__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PatcherInterface {
    return new utils.Interface(_abi) as PatcherInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Patcher {
    return new Contract(address, _abi, signerOrProvider) as Patcher;
  }
}
