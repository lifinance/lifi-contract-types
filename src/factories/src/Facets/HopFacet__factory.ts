/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HopFacet, HopFacetInterface } from "../../../src/Facets/HopFacet";

const _abi = [
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotBridgeToSameNetwork",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidConfig",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeValueWithERC",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyContractOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bridge",
        type: "address",
      },
    ],
    name: "HopBridgeRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "assetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "bridge",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct HopFacet.Config[]",
        name: "configs",
        type: "tuple[]",
      },
    ],
    name: "HopInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: true,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "assetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "bridge",
            type: "address",
          },
        ],
        internalType: "struct HopFacet.Config[]",
        name: "configs",
        type: "tuple[]",
      },
    ],
    name: "initHop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "bridge",
        type: "address",
      },
    ],
    name: "registerBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bonderFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationAmountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationDeadline",
            type: "uint256",
          },
        ],
        internalType: "struct HopFacet.HopData",
        name: "_hopData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaHop",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bonderFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationAmountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationDeadline",
            type: "uint256",
          },
        ],
        internalType: "struct HopFacet.HopData",
        name: "_hopData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaHop",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612c91806100206000396000f3fe60806040526004361061003f5760003560e01c80633961d1ed1461004457806367fdd71e14610066578063e55f811014610086578063fa904c1214610099575b600080fd5b34801561005057600080fd5b5061006461005f3660046122b5565b6100ac565b005b34801561007257600080fd5b506100646100813660046122e8565b610160565b6100646100943660046125f9565b610395565b6100646100a73660046126a5565b610577565b6100b4610746565b73ffffffffffffffffffffffffffffffffffffffff82811660008181527f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b8602081815260409283902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001695871695861790558251948552915190937fcf56a25ddc5c325bc2d2557f7eee90d061f2e19b7294a6ef738f86f2c3d9280c92908290030190a2505050565b610168610746565b7f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b9547f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b89060ff16156101e6576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82811015610327576000848483818110610205576102056126ff565b905060400201602001602081019061021d919061272e565b73ffffffffffffffffffffffffffffffffffffffff160361026a576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83838281811061027c5761027c6126ff565b9050604002016020016020810190610294919061272e565b8260008686858181106102a9576102a96126ff565b6102bf926020604090920201908101915061272e565b73ffffffffffffffffffffffffffffffffffffffff9081168252602082019290925260400160002080547fffffffffffffffffffffffff000000000000000000000000000000000000000016929091169190911790558061031f81612778565b9150506101e9565b50600181810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690911790556040517f5910f57b2fdae9f2f45a1d913c63f55985d0f77d120de8aab63e686ff670dde39061038890859085906127b0565b60405180910390a1505050565b838061010001516103d2576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846103f58160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561042c576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361046a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016104e5576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155608087015173ffffffffffffffffffffffffffffffffffffffff161515801561051157503415155b15610547576040517e3f45b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61055c87600001518860c001518888336107bb565b60c088015261056b87856108fe565b60009055505050505050565b336000610584344761281f565b905083806101000151156105c4576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846105e78160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561061e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361065c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016106d7576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155608087015160c08801516106ef9190610bc2565b6107078761070236899003890189612832565b6108fe565b600090819055479250905082821161072057600061072a565b61072a838361281f565b9050801561073e5761073e60008583610d3d565b505050505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff1633146107b9576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008281036107f6576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000848461080560018261281f565b818110610814576108146126ff565b9050602002810190610826919061284e565b61083790608081019060600161272e565b9050600073ffffffffffffffffffffffffffffffffffffffff82161561085e576000610860565b345b905060008161086e84610d6e565b610878919061281f565b90506108848787610e27565b61089089888888610e88565b60008161089c85610d6e565b6108a6919061281f565b9050888110156108f1576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018a9052602481018290526044015b60405180910390fd5b9998505050505050505050565b8160e00151460361093b576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608082015173ffffffffffffffffffffffffffffffffffffffff80821660009081527f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b8602081905260409091205460c08601519192169061099f908490839061126e565b600073ffffffffffffffffffffffffffffffffffffffff8416156109c45760006109ca565b8560c001515b905046600103610a9d5760e086015160a087015160c0880151606088015160808901516040517fdeace8f5000000000000000000000000000000000000000000000000000000008152600481019590955273ffffffffffffffffffffffffffffffffffffffff9384166024860152604485019290925260648401526084830152600060a4830181905260c483015283169063deace8f590839060e4016000604051808303818588803b158015610a7f57600080fd5b505af1158015610a93573d6000803e3d6000fd5b5050505050610b7c565b60e086015160a087015160c0880151875160208901516040808b015160608c015160808d015192517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019890985273ffffffffffffffffffffffffffffffffffffffff968716602489015260448801959095526064870193909352608486019190915260a485019190915260c484019190915260e483015283169063eea0d7b2908390610104016000604051808303818588803b158015610b6257600080fd5b505af1158015610b76573d6000803e3d6000fd5b50505050505b85604051610b8a91906128d3565b604051908190038120907fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f190600090a2505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216610c1b5780341015610c17576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610c55576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610cc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce691906129cc565b905081811015610d2c576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016108e8565b610d38833330856113b9565b505050565b73ffffffffffffffffffffffffffffffffffffffff831615610d6457610d388383836115cb565b610d3882826116fa565b600073ffffffffffffffffffffffffffffffffffffffff821615610e1f576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610df6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1a91906129cc565b610e21565b475b92915050565b60005b81811015610d38576000838383818110610e4657610e466126ff565b9050602002810190610e58919061284e565b610e61906129e5565b90508060c0015115610e7f57610e7f81604001518260800151610bc2565b50600101610e2a565b828282816001811461118d576000610ea08585611824565b905060008585610eb160018661281f565b818110610ec057610ec06126ff565b9050602002810190610ed2919061284e565b610ee390608081019060600161272e565b905060008060005b8a81101561108f57368c8c83818110610f0657610f066126ff565b9050602002810190610f18919061284e565b9050610f47610f2d606083016040840161272e565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610faa5750610faa610f60604083016020840161272e565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610fc15750610fc1610f60602083018361272e565b80156110465750611046610fd860a0830183612a8a565b610fe791600491600091612af6565b610ff091612b20565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61107c576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110868e826118e4565b50600101610eeb565b5060005b61109e60018761281f565b8110156111835760008989838181106110b9576110b96126ff565b90506020028101906110cb919061284e565b6110dc90608081019060600161272e565b90508473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461117a5761111a81610d6e565b925085828151811061112e5761112e6126ff565b602002602001015183116111425782611167565b858281518110611154576111546126ff565b602002602001015183611167919061281f565b9350831561117a5761117a818986610d3d565b50600101611093565b5050505050611264565b60005b8681101561126257368888838181106111ab576111ab6126ff565b90506020028101906111bd919061284e565b90506111d2610f2d606083016040840161272e565b806111eb57506111eb610f60604083016020840161272e565b80156112025750611202610f60602083018361272e565b80156112195750611219610fd860a0830183612a8a565b61124f576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112598a826118e4565b50600101611190565b505b5050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661128e57505050565b73ffffffffffffffffffffffffffffffffffffffff82166112db576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015611351573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137591906129cc565b9050818110156113b3576113b384846113ae847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61281f565b611bf5565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8416611406576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611453576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa1580156114c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e891906129cc565b90506114f682868686611d53565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158a91906129cc565b611594919061281f565b1461073e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316611618576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611685573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a991906129cc565b9050808211156116ef576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016108e8565b6113b3848484611db1565b73ffffffffffffffffffffffffffffffffffffffff8216611747576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4781111561178a576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016108e8565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146117e4576040519150601f19603f3d011682016040523d82523d6000602084013e6117e9565b606091505b5050905080610d38576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608160008167ffffffffffffffff8111156118425761184261235d565b60405190808252806020026020018201604052801561186b578160200160208202803683370190505b50905060005b828110156118db576118b686868381811061188e5761188e6126ff565b90506020028101906118a0919061284e565b6118b190608081019060600161272e565b610d6e565b8282815181106118c8576118c86126ff565b6020908102919091010152600101611871565b50949350505050565b6118fa6118f4602083018361272e565b3b151590565b611930576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611970576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611985610f2d606085016040860161272e565b611990576000611996565b82608001355b905060006119ad6118b1606086016040870161272e565b905060006119c46118b1608087016060880161272e565b9050826000036119fb576119fb6119e1606087016040880161272e565b6119f1604088016020890161272e565b876080013561126e565b8460800135821015611a46576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016108e8565b600080611a56602088018861272e565b73ffffffffffffffffffffffffffffffffffffffff1685611a7a60a08a018a612a8a565b604051611a88929190612b68565b60006040518083038185875af1925050503d8060008114611ac5576040519150601f19603f3d011682016040523d82523d6000602084013e611aca565b606091505b509150915081611b15576000611adf82611e07565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e89190612b78565b6000611b2a6118b160808a0160608b0161272e565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611b5b60208b018b61272e565b611b6b60608c0160408d0161272e565b611b7b60808d0160608e0161272e565b8c60800135898711611b8d5786611b97565b611b978a8861281f565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611c6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c9091906129cc565b611c9a9190612bab565b60405173ffffffffffffffffffffffffffffffffffffffff85166024820152604481018290529091506113b39085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611e85565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526113b39085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611cef565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610d389084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611cef565b6060604482511015611e4c57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611e686004808551611e60919061281f565b859190611f91565b905080806020019051810190611e7e9190612bbe565b9392505050565b6000611ee7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661208c9092919063ffffffff16565b805190915015610d385780806020019051810190611f059190612c2c565b610d38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016108e8565b606081611f9f81601f612bab565b1015611fd7576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611fe18284612bab565b8451101561201b576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608215801561203a57604051915060008252602082016040526118db565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561207357805183526020928301920161205b565b5050858452601f01601f19166040525050949350505050565b606061209b84846000856120a3565b949350505050565b606082471015612135576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016108e8565b73ffffffffffffffffffffffffffffffffffffffff85163b6121b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108e8565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516121dc9190612c49565b60006040518083038185875af1925050503d8060008114612219576040519150601f19603f3d011682016040523d82523d6000602084013e61221e565b606091505b509150915061222e828286612239565b979650505050505050565b60608315612248575081611e7e565b8251156122585782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e89190612b78565b803573ffffffffffffffffffffffffffffffffffffffff811681146122b057600080fd5b919050565b600080604083850312156122c857600080fd5b6122d18361228c565b91506122df6020840161228c565b90509250929050565b600080602083850312156122fb57600080fd5b823567ffffffffffffffff8082111561231357600080fd5b818501915085601f83011261232757600080fd5b81358181111561233657600080fd5b8660208260061b850101111561234b57600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156123b0576123b061235d565b60405290565b60405160e0810167ffffffffffffffff811182821017156123b0576123b061235d565b604051601f8201601f1916810167ffffffffffffffff811182821017156124025761240261235d565b604052919050565b600067ffffffffffffffff8211156124245761242461235d565b50601f01601f191660200190565b600082601f83011261244357600080fd5b81356124566124518261240a565b6123d9565b81815284602083860101111561246b57600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461249657600080fd5b50565b80356122b081612488565b600061014082840312156124b757600080fd5b6124bf61238c565b905081358152602082013567ffffffffffffffff808211156124e057600080fd5b6124ec85838601612432565b6020840152604084013591508082111561250557600080fd5b5061251284828501612432565b6040830152506125246060830161228c565b60608201526125356080830161228c565b608082015261254660a0830161228c565b60a082015260c082013560c082015260e082013560e082015261010061256d818401612499565b9082015261012061257f838201612499565b9082015292915050565b600060a0828403121561259b57600080fd5b60405160a0810181811067ffffffffffffffff821117156125be576125be61235d565b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b60008060008060e0858703121561260f57600080fd5b843567ffffffffffffffff8082111561262757600080fd5b612633888389016124a4565b9550602087013591508082111561264957600080fd5b818701915087601f83011261265d57600080fd5b81358181111561266c57600080fd5b8860208260051b850101111561268157600080fd5b60208301955080945050505061269a8660408701612589565b905092959194509250565b60008082840360c08112156126b957600080fd5b833567ffffffffffffffff8111156126d057600080fd5b6126dc868287016124a4565b93505060a0601f19820112156126f157600080fd5b506020830190509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561274057600080fd5b611e7e8261228c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036127a9576127a9612749565b5060010190565b6020808252818101839052600090604080840186845b878110156128125773ffffffffffffffffffffffffffffffffffffffff806127ed8461228c565b168452806127fc87850161228c565b16848701525091830191908301906001016127c6565b5090979650505050505050565b81810381811115610e2157610e21612749565b600060a0828403121561284457600080fd5b611e7e8383612589565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261288257600080fd5b9190910192915050565b60005b838110156128a757818101518382015260200161288f565b50506000910152565b600081516128c281856020860161288c565b601f01601f19169290920192915050565b815181526000602083015180516128f181602086016020850161288c565b6129c36129b36129a36129966129896129666129436129206020601f19601f8b01168d010160408e01516128b0565b60608d015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60808c015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60a08b015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60c08a0151815260200190565b60e0890151815260200190565b6101008801511515815260200190565b6101208701511515815260200190565b95945050505050565b6000602082840312156129de57600080fd5b5051919050565b600060e082360312156129f757600080fd5b6129ff6123b6565b612a088361228c565b8152612a166020840161228c565b6020820152612a276040840161228c565b6040820152612a386060840161228c565b60608201526080830135608082015260a083013567ffffffffffffffff811115612a6157600080fd5b612a6d36828601612432565b60a083015250612a7f60c08401612499565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612abf57600080fd5b83018035915067ffffffffffffffff821115612ada57600080fd5b602001915036819003821315612aef57600080fd5b9250929050565b60008085851115612b0657600080fd5b83861115612b1357600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612b605780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b6020815260008251806020840152612b9781604085016020870161288c565b601f01601f19169190910160400192915050565b80820180821115610e2157610e21612749565b600060208284031215612bd057600080fd5b815167ffffffffffffffff811115612be757600080fd5b8201601f81018413612bf857600080fd5b8051612c066124518261240a565b818152856020838501011115612c1b57600080fd5b6129c382602083016020860161288c565b600060208284031215612c3e57600080fd5b8151611e7e81612488565b6000825161288281846020870161288c56fea2646970667358221220e1c9ee9915c821b36598258d6290622fe0602c34c7f3720c1eb01ea368a3996f64736f6c63430008100033";

type HopFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HopFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HopFacet__factory extends ContractFactory {
  constructor(...args: HopFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HopFacet> {
    return super.deploy(overrides || {}) as Promise<HopFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HopFacet {
    return super.attach(address) as HopFacet;
  }
  override connect(signer: Signer): HopFacet__factory {
    return super.connect(signer) as HopFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HopFacetInterface {
    return new utils.Interface(_abi) as HopFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HopFacet {
    return new Contract(address, _abi, signerOrProvider) as HopFacet;
  }
}
