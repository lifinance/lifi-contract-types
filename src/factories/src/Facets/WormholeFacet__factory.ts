/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WormholeFacet,
  WormholeFacetInterface,
} from "../../../src/Facets/WormholeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWormholeRouter",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotBridgeToSameNetwork",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyContractOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "UnsupportedChainId",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: true,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lifiChainId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "wormholeChainId",
        type: "uint256",
      },
    ],
    name: "WormholeChainIdMapped",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lifiChainId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_wormholeChainId",
        type: "uint16",
      },
    ],
    name: "setWormholeChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "arbiterFee",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
        ],
        internalType: "struct WormholeFacet.WormholeData",
        name: "_wormholeData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaWormhole",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "arbiterFee",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
        ],
        internalType: "struct WormholeFacet.WormholeData",
        name: "_wormholeData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaWormhole",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002b6c38038062002b6c833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b608051612aca620000a260003960008181610841015281816108aa01526109860152612aca6000f3fe6080604052600436106100345760003560e01c806322907204146100395780639a5ccd891461005b578063d360eda01461006e575b600080fd5b34801561004557600080fd5b5061005961005436600461220c565b610081565b005b6100596100693660046124b0565b61011a565b61005961007c3660046124ff565b61031a565b610089610520565b60007f7e906a0d60cb07599c0056400d4173f09da0e1b16416a2ae67013f2df575d4b360008481526020829052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff871690811790915590519293509185917f56465cf2b3a3cef7d0c3c0133292f4fded765d74b65b78ab526a3fa85351facb91a3505050565b33600061012734476125da565b90508380610100015115610167576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84806101200151156101a5576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856101c88160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101ff576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361023d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102b8576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155608088015160c08901516102d09190610595565b6102da8888610715565b6000908190554793509150508282116102f45760006102fe565b6102fe83836125da565b905080156103125761031260008583610aec565b505050505050565b33600061032734476125da565b905085806101000151610366576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86806101200151156103a4576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876103c78160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103fe576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361043c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016104b7576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155895160c08b01516104cf91908b8b33610b1d565b60c08b01526104de8a88610715565b6000908190554793509150508282116104f8576000610502565b61050283836125da565b905080156105165761051660008583610aec565b5050505050505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314610593576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b73ffffffffffffffffffffffffffffffffffffffff82166105ee57803410156105ea576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610628576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610695573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b991906125ed565b905081811015610704576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b61071083333085610c60565b505050565b60006107248360e00151610e72565b9050600061073146610e72565b90508360e001514603610770576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8161ffff166000036107b6578360e001516040517fa5dab5fe0000000000000000000000000000000000000000000000000000000081526004016106fb91815260200190565b8061ffff166000036107f6576040517fa5dab5fe0000000000000000000000000000000000000000000000000000000081524660048201526024016106fb565b8161ffff168161ffff1603610837576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61086a84608001517f00000000000000000000000000000000000000000000000000000000000000008660c00151610ee9565b608084015173ffffffffffffffffffffffffffffffffffffffff166109845760c084015160a085015173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811692639981509f92909186911687356108e960408a0160208b01612606565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815261ffff90941660048501526024840192909252604483015263ffffffff16606482015260840160206040518083038185885af1158015610959573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061097e919061262c565b50610aa8565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630f5287b085608001518660c00151858860a0015173ffffffffffffffffffffffffffffffffffffffff1660001b8860000135896020016020810190610a019190612606565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b16815273ffffffffffffffffffffffffffffffffffffffff9096166004870152602486019490945261ffff90921660448501526064840152608483015263ffffffff1660a482015260c401600060405180830381600087803b158015610a8f57600080fd5b505af1158015610aa3573d6000803e3d6000fd5b505050505b83604051610ab6919061269d565b604051908190038120907fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f190600090a250505050565b73ffffffffffffffffffffffffffffffffffffffff831615610b1357610710838383611034565b6107108282611163565b600082808203610b59576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610b686001856125da565b818110610b7757610b77612796565b9050602002810190610b8991906127c5565b610b9a906080810190606001612803565b90506000610ba78261128d565b905073ffffffffffffffffffffffffffffffffffffffff8216610bd157610bce34826125da565b90505b6000610bdd8888611346565b9050610be98888611452565b610bf68a898989856114b3565b600082610c028561128d565b610c0c91906125da565b905089811015610c52576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044016106fb565b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416610cad576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610cfa576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610d6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8f91906125ed565b9050610d9d82868686611865565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610e0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3191906125ed565b610e3b91906125da565b14610312576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008181527f7e906a0d60cb07599c0056400d4173f09da0e1b16416a2ae67013f2df575d4b36020819052604082205461ffff16808303610ee2576040517fa5dab5fe000000000000000000000000000000000000000000000000000000008152600481018590526024016106fb565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8316610f0957505050565b73ffffffffffffffffffffffffffffffffffffffff8216610f56576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610fcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff091906125ed565b90508181101561102e5761102e8484611029847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6125da565b611923565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316611081576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa1580156110ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111291906125ed565b905080821115611158576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016106fb565b61102e848484611a21565b73ffffffffffffffffffffffffffffffffffffffff82166111b0576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156111f3576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016106fb565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461124d576040519150601f19603f3d011682016040523d82523d6000602084013e611252565b606091505b5050905080610710576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff82161561133e576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611315573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133991906125ed565b611340565b475b92915050565b60608160008167ffffffffffffffff81111561136457611364612243565b60405190808252806020026020018201604052801561138d578160200160208202803683370190505b5090506000805b83811015611447578686828181106113ae576113ae612796565b90506020028101906113c091906127c5565b6113d1906080810190606001612803565b91506113dc8261128d565b8382815181106113ee576113ee612796565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff821661143f573483828151811061142757611427612796565b6020026020010181815161143b91906125da565b9052505b600101611394565b509095945050505050565b60005b8181101561071057600083838381811061147157611471612796565b905060200281019061148391906127c5565b61148c9061281e565b90508060c00151156114aa576114aa81604001518260800151610595565b50600101611455565b83838383826001811461178057600085856114cf6001856125da565b8181106114de576114de612796565b90506020028101906114f091906127c5565b611501906080810190606001612803565b9050600089815b818110156116ac57368d8d8381811061152357611523612796565b905060200281019061153591906127c5565b905061156461154a6060830160408401612803565b73ffffffffffffffffffffffffffffffffffffffff161590565b806115c757506115c761157d6040830160208401612803565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156115de57506115de61157d6020830183612803565b801561166357506116636115f560a08301836128c3565b6116049160049160009161292f565b61160d91612959565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611699576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116a38f82611a77565b50600101611508565b505060005b6116bc6001856125da565b8110156117785760008888838181106116d7576116d7612796565b90506020028101906116e991906127c5565b6116fa906080810190606001612803565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461176f5785828151811061174157611741612796565b60200260200101516117528261128d565b61175c91906125da565b9250821561176f5761176f818885610aec565b506001016116b1565b505050611859565b8760005b8181101561185657368b8b8381811061179f5761179f612796565b90506020028101906117b191906127c5565b90506117c661154a6060830160408401612803565b806117df57506117df61157d6040830160208401612803565b80156117f657506117f661157d6020830183612803565b801561180d575061180d6115f560a08301836128c3565b611843576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61184d8d82611a77565b50600101611784565b50505b50505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff8085166024830152831660448201526064810182905261102e9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611d8d565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561199a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119be91906125ed565b6119c891906129a1565b60405173ffffffffffffffffffffffffffffffffffffffff851660248201526044810182905290915061102e9085907f095ea7b300000000000000000000000000000000000000000000000000000000906064016118bf565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526107109084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016118bf565b611a8d611a876020830183612803565b3b151590565b611ac3576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611b03576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b1861154a6060850160408601612803565b611b23576000611b29565b82608001355b90506000611b45611b406060860160408701612803565b61128d565b90506000611b5c611b406080870160608801612803565b905082600003611b9357611b93611b796060870160408801612803565b611b896040880160208901612803565b8760800135610ee9565b8460800135821015611bde576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016106fb565b600080611bee6020880188612803565b73ffffffffffffffffffffffffffffffffffffffff1685611c1260a08a018a6128c3565b604051611c209291906129b4565b60006040518083038185875af1925050503d8060008114611c5d576040519150601f19603f3d011682016040523d82523d6000602084013e611c62565b606091505b509150915081611cad576000611c7782611e99565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fb91906129c4565b6000611cc2611b4060808a0160608b01612803565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611cf360208b018b612803565b611d0360608c0160408d01612803565b611d1360808d0160608e01612803565b8c60800135898711611d255786611d2f565b611d2f8a886125da565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6000611def826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611f109092919063ffffffff16565b8051909150156107105780806020019051810190611e0d91906129f7565b610710576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016106fb565b6060604482511015611ede57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611efa6004808551611ef291906125da565b859190611f27565b905080806020019051810190610ee29190612a14565b6060611f1f8484600085612023565b949350505050565b606081611f3581601f6129a1565b1015611f6d576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611f7782846129a1565b84511015611fb1576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611fd0576040519150600082526020820160405261201a565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015612009578051835260209283019201611ff1565b5050858452601f01601f1916604052505b50949350505050565b6060824710156120b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016106fb565b73ffffffffffffffffffffffffffffffffffffffff85163b612133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106fb565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161215c9190612a82565b60006040518083038185875af1925050503d8060008114612199576040519150601f19603f3d011682016040523d82523d6000602084013e61219e565b606091505b50915091506121ae8282866121b9565b979650505050505050565b606083156121c8575081610ee2565b8251156121d85782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fb91906129c4565b6000806040838503121561221f57600080fd5b82359150602083013561ffff8116811461223857600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561229657612296612243565b60405290565b60405160e0810167ffffffffffffffff8111828210171561229657612296612243565b604051601f8201601f1916810167ffffffffffffffff811182821017156122e8576122e8612243565b604052919050565b600067ffffffffffffffff82111561230a5761230a612243565b50601f01601f191660200190565b600082601f83011261232957600080fd5b813561233c612337826122f0565b6122bf565b81815284602083860101111561235157600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461239257600080fd5b919050565b80151581146123a557600080fd5b50565b803561239281612397565b600061014082840312156123c657600080fd5b6123ce612272565b905081358152602082013567ffffffffffffffff808211156123ef57600080fd5b6123fb85838601612318565b6020840152604084013591508082111561241457600080fd5b5061242184828501612318565b6040830152506124336060830161236e565b60608201526124446080830161236e565b608082015261245560a0830161236e565b60a082015260c082013560c082015260e082013560e082015261010061247c8184016123a8565b9082015261012061248e8382016123a8565b9082015292915050565b6000604082840312156124aa57600080fd5b50919050565b600080606083850312156124c357600080fd5b823567ffffffffffffffff8111156124da57600080fd5b6124e6858286016123b3565b9250506124f68460208501612498565b90509250929050565b6000806000806080858703121561251557600080fd5b843567ffffffffffffffff8082111561252d57600080fd5b612539888389016123b3565b9550602087013591508082111561254f57600080fd5b818701915087601f83011261256357600080fd5b81358181111561257257600080fd5b8860208260051b850101111561258757600080fd5b6020830195508094505050506125a08660408701612498565b905092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115611340576113406125ab565b6000602082840312156125ff57600080fd5b5051919050565b60006020828403121561261857600080fd5b813563ffffffff81168114610ee257600080fd5b60006020828403121561263e57600080fd5b815167ffffffffffffffff81168114610ee257600080fd5b60005b83811015612671578181015183820152602001612659565b50506000910152565b6000815161268c818560208601612656565b601f01601f19169290920192915050565b815181526000602083015180516126bb816020860160208501612656565b61278d61277d61276d61276061275361273061270d6126ea6020601f19601f8b01168d010160408e015161267a565b60608d015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60808c015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60a08b015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60c08a0151815260200190565b60e0890151815260200190565b6101008801511515815260200190565b6101208701511515815260200190565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126127f957600080fd5b9190910192915050565b60006020828403121561281557600080fd5b610ee28261236e565b600060e0823603121561283057600080fd5b61283861229c565b6128418361236e565b815261284f6020840161236e565b60208201526128606040840161236e565b60408201526128716060840161236e565b60608201526080830135608082015260a083013567ffffffffffffffff81111561289a57600080fd5b6128a636828601612318565b60a0830152506128b860c084016123a8565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126128f857600080fd5b83018035915067ffffffffffffffff82111561291357600080fd5b60200191503681900382131561292857600080fd5b9250929050565b6000808585111561293f57600080fd5b8386111561294c57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156129995780818660040360031b1b83161692505b505092915050565b80820180821115611340576113406125ab565b8183823760009101908152919050565b60208152600082518060208401526129e3816040850160208701612656565b601f01601f19169190910160400192915050565b600060208284031215612a0957600080fd5b8151610ee281612397565b600060208284031215612a2657600080fd5b815167ffffffffffffffff811115612a3d57600080fd5b8201601f81018413612a4e57600080fd5b8051612a5c612337826122f0565b818152856020838501011115612a7157600080fd5b61278d826020830160208601612656565b600082516127f981846020870161265656fea2646970667358221220a63a59ee6870f27c915ac30ca3a0e6599932c664061a46c0dcee3e5feb9855b264736f6c63430008110033";

type WormholeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WormholeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WormholeFacet__factory extends ContractFactory {
  constructor(...args: WormholeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WormholeFacet> {
    return super.deploy(_router, overrides || {}) as Promise<WormholeFacet>;
  }
  override getDeployTransaction(
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, overrides || {});
  }
  override attach(address: string): WormholeFacet {
    return super.attach(address) as WormholeFacet;
  }
  override connect(signer: Signer): WormholeFacet__factory {
    return super.connect(signer) as WormholeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WormholeFacetInterface {
    return new utils.Interface(_abi) as WormholeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WormholeFacet {
    return new Contract(address, _abi, signerOrProvider) as WormholeFacet;
  }
}
