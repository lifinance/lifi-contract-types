/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WormholeFacet,
  WormholeFacetInterface,
} from "../../../src/Facets/WormholeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWormholeRouter",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotBridgeToSameNetwork",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyContractOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "UnsupportedChainId",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: true,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lifiChainId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "wormholeChainId",
        type: "uint256",
      },
    ],
    name: "WormholeChainIdMapped",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lifiChainId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_wormholeChainId",
        type: "uint16",
      },
    ],
    name: "setWormholeChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "arbiterFee",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
        ],
        internalType: "struct WormholeFacet.WormholeData",
        name: "_wormholeData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaWormhole",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "arbiterFee",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
        ],
        internalType: "struct WormholeFacet.WormholeData",
        name: "_wormholeData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaWormhole",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002aca38038062002aca833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b608051612a28620000a2600039600081816107c30152818161082c01526109080152612a286000f3fe6080604052600436106100345760003560e01c806322907204146100395780639a5ccd891461005b578063d360eda01461006e575b600080fd5b34801561004557600080fd5b5061005961005436600461216a565b610081565b005b61005961006936600461240e565b61011a565b61005961007c36600461245d565b6102db565b6100896104a2565b60007f7e906a0d60cb07599c0056400d4173f09da0e1b16416a2ae67013f2df575d4b360008481526020829052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff871690811790915590519293509185917f56465cf2b3a3cef7d0c3c0133292f4fded765d74b65b78ab526a3fa85351facb91a3505050565b3360006101273447612538565b90508380610100015115610167576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8461018a8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101c1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101ff576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161027a576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155608087015160c08801516102929190610517565b61029c8787610697565b60009081905547925090508282116102b55760006102bf565b6102bf8383612538565b905080156102d3576102d360008583610a6e565b505050505050565b3360006102e83447612538565b905085806101000151610327576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8661034a8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610381576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036103bf576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161043a576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155885160c08a015161045291908a8a33610a9f565b60c08a01526104618987610697565b600090819055479250905082821161047a576000610484565b6104848383612538565b905080156104985761049860008583610a6e565b5050505050505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314610515576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b73ffffffffffffffffffffffffffffffffffffffff8216610570578034101561056c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b806000036105aa576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610617573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063b919061254b565b905081811015610686576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b61069283333085610bdd565b505050565b60006106a68360e00151610def565b905060006106b346610def565b90508360e0015146036106f2576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8161ffff16600003610738578360e001516040517fa5dab5fe00000000000000000000000000000000000000000000000000000000815260040161067d91815260200190565b8061ffff16600003610778576040517fa5dab5fe00000000000000000000000000000000000000000000000000000000815246600482015260240161067d565b8161ffff168161ffff16036107b9576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107ec84608001517f00000000000000000000000000000000000000000000000000000000000000008660c00151610e66565b608084015173ffffffffffffffffffffffffffffffffffffffff166109065760c084015160a085015173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811692639981509f929091869116873561086b60408a0160208b01612564565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815261ffff90941660048501526024840192909252604483015263ffffffff16606482015260840160206040518083038185885af11580156108db573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610900919061258a565b50610a2a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630f5287b085608001518660c00151858860a0015173ffffffffffffffffffffffffffffffffffffffff1660001b88600001358960200160208101906109839190612564565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b16815273ffffffffffffffffffffffffffffffffffffffff9096166004870152602486019490945261ffff90921660448501526064840152608483015263ffffffff1660a482015260c401600060405180830381600087803b158015610a1157600080fd5b505af1158015610a25573d6000803e3d6000fd5b505050505b83604051610a3891906125fb565b604051908190038120907fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f190600090a250505050565b73ffffffffffffffffffffffffffffffffffffffff831615610a9557610692838383610fb1565b61069282826110e0565b6000828103610ada576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008484610ae9600182612538565b818110610af857610af86126f4565b9050602002810190610b0a9190612723565b610b1b906080810190606001612761565b9050600073ffffffffffffffffffffffffffffffffffffffff821615610b42576000610b44565b345b9050600081610b528461120a565b610b5c9190612538565b9050610b6887876112c3565b610b7489888888611324565b600081610b808561120a565b610b8a9190612538565b905088811015610bd0576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018a90526024810182905260440161067d565b9998505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416610c2a576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610c77576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610ce8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0c919061254b565b9050610d1a82868686611709565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610d8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dae919061254b565b610db89190612538565b146102d3576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008181527f7e906a0d60cb07599c0056400d4173f09da0e1b16416a2ae67013f2df575d4b36020819052604082205461ffff16808303610e5f576040517fa5dab5fe0000000000000000000000000000000000000000000000000000000081526004810185905260240161067d565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8316610e8657505050565b73ffffffffffffffffffffffffffffffffffffffff8216610ed3576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610f49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6d919061254b565b905081811015610fab57610fab8484610fa6847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612538565b6117c7565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610ffe576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa15801561106b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108f919061254b565b9050808211156110d5576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161067d565b610fab8484846118c5565b73ffffffffffffffffffffffffffffffffffffffff821661112d576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611170576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810182905247602482015260440161067d565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146111ca576040519150601f19603f3d011682016040523d82523d6000602084013e6111cf565b606091505b5050905080610692576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff8216156112bb576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611292573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b6919061254b565b6112bd565b475b92915050565b60005b818110156106925760008383838181106112e2576112e26126f4565b90506020028101906112f49190612723565b6112fd9061277c565b90508060c001511561131b5761131b81604001518260800151610517565b506001016112c6565b828282816001811461162957600061133c858561191b565b90506000858561134d600186612538565b81811061135c5761135c6126f4565b905060200281019061136e9190612723565b61137f906080810190606001612761565b905060008060005b8a81101561152b57368c8c838181106113a2576113a26126f4565b90506020028101906113b49190612723565b90506113e36113c96060830160408401612761565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061144657506114466113fc6040830160208401612761565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561145d575061145d6113fc6020830183612761565b80156114e257506114e261147460a0830183612821565b6114839160049160009161288d565b61148c916128b7565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611518576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115228e826119db565b50600101611387565b5060005b61153a600187612538565b81101561161f576000898983818110611555576115556126f4565b90506020028101906115679190612723565b611578906080810190606001612761565b90508473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611616576115b68161120a565b92508582815181106115ca576115ca6126f4565b602002602001015183116115de5782611603565b8582815181106115f0576115f06126f4565b6020026020010151836116039190612538565b9350831561161657611616818986610a6e565b5060010161152f565b5050505050610498565b60005b868110156116fe5736888883818110611647576116476126f4565b90506020028101906116599190612723565b905061166e6113c96060830160408401612761565b8061168757506116876113fc6040830160208401612761565b801561169e575061169e6113fc6020830183612761565b80156116b557506116b561147460a0830183612821565b6116eb576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116f58a826119db565b5060010161162c565b505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610fab9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611cec565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561183e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611862919061254b565b61186c91906128ff565b60405173ffffffffffffffffffffffffffffffffffffffff8516602482015260448101829052909150610fab9085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611763565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526106929084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611763565b60608160008167ffffffffffffffff811115611939576119396121a1565b604051908082528060200260200182016040528015611962578160200160208202803683370190505b50905060005b828110156119d2576119ad868683818110611985576119856126f4565b90506020028101906119979190612723565b6119a8906080810190606001612761565b61120a565b8282815181106119bf576119bf6126f4565b6020908102919091010152600101611968565b50949350505050565b6119f16119eb6020830183612761565b3b151590565b611a27576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611a67576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611a7c6113c96060850160408601612761565b611a87576000611a8d565b82608001355b90506000611aa46119a86060860160408701612761565b90506000611abb6119a86080870160608801612761565b905082600003611af257611af2611ad86060870160408801612761565b611ae86040880160208901612761565b8760800135610e66565b8460800135821015611b3d576040517fcf479181000000000000000000000000000000000000000000000000000000008152608086013560048201526024810183905260440161067d565b600080611b4d6020880188612761565b73ffffffffffffffffffffffffffffffffffffffff1685611b7160a08a018a612821565b604051611b7f929190612912565b60006040518083038185875af1925050503d8060008114611bbc576040519150601f19603f3d011682016040523d82523d6000602084013e611bc1565b606091505b509150915081611c0c576000611bd682611df8565b9050806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067d9190612922565b6000611c216119a860808a0160608b01612761565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611c5260208b018b612761565b611c6260608c0160408d01612761565b611c7260808d0160608e01612761565b8c60800135898711611c845786611c8e565b611c8e8a88612538565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6000611d4e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611e6f9092919063ffffffff16565b8051909150156106925780806020019051810190611d6c9190612955565b610692576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161067d565b6060604482511015611e3d57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611e596004808551611e519190612538565b859190611e86565b905080806020019051810190610e5f9190612972565b6060611e7e8484600085611f81565b949350505050565b606081611e9481601f6128ff565b1015611ecc576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611ed682846128ff565b84511015611f10576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611f2f57604051915060008252602082016040526119d2565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611f68578051835260209283019201611f50565b5050858452601f01601f19166040525050949350505050565b606082471015612013576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161067d565b73ffffffffffffffffffffffffffffffffffffffff85163b612091576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161067d565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516120ba91906129e0565b60006040518083038185875af1925050503d80600081146120f7576040519150601f19603f3d011682016040523d82523d6000602084013e6120fc565b606091505b509150915061210c828286612117565b979650505050505050565b60608315612126575081610e5f565b8251156121365782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067d9190612922565b6000806040838503121561217d57600080fd5b82359150602083013561ffff8116811461219657600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156121f4576121f46121a1565b60405290565b60405160e0810167ffffffffffffffff811182821017156121f4576121f46121a1565b604051601f8201601f1916810167ffffffffffffffff81118282101715612246576122466121a1565b604052919050565b600067ffffffffffffffff821115612268576122686121a1565b50601f01601f191660200190565b600082601f83011261228757600080fd5b813561229a6122958261224e565b61221d565b8181528460208386010111156122af57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146122f057600080fd5b919050565b801515811461230357600080fd5b50565b80356122f0816122f5565b6000610140828403121561232457600080fd5b61232c6121d0565b905081358152602082013567ffffffffffffffff8082111561234d57600080fd5b61235985838601612276565b6020840152604084013591508082111561237257600080fd5b5061237f84828501612276565b604083015250612391606083016122cc565b60608201526123a2608083016122cc565b60808201526123b360a083016122cc565b60a082015260c082013560c082015260e082013560e08201526101006123da818401612306565b908201526101206123ec838201612306565b9082015292915050565b60006040828403121561240857600080fd5b50919050565b6000806060838503121561242157600080fd5b823567ffffffffffffffff81111561243857600080fd5b61244485828601612311565b92505061245484602085016123f6565b90509250929050565b6000806000806080858703121561247357600080fd5b843567ffffffffffffffff8082111561248b57600080fd5b61249788838901612311565b955060208701359150808211156124ad57600080fd5b818701915087601f8301126124c157600080fd5b8135818111156124d057600080fd5b8860208260051b85010111156124e557600080fd5b6020830195508094505050506124fe86604087016123f6565b905092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156112bd576112bd612509565b60006020828403121561255d57600080fd5b5051919050565b60006020828403121561257657600080fd5b813563ffffffff81168114610e5f57600080fd5b60006020828403121561259c57600080fd5b815167ffffffffffffffff81168114610e5f57600080fd5b60005b838110156125cf5781810151838201526020016125b7565b50506000910152565b600081516125ea8185602086016125b4565b601f01601f19169290920192915050565b815181526000602083015180516126198160208601602085016125b4565b6126eb6126db6126cb6126be6126b161268e61266b6126486020601f19601f8b01168d010160408e01516125d8565b60608d015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60808c015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60a08b015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60c08a0151815260200190565b60e0890151815260200190565b6101008801511515815260200190565b6101208701511515815260200190565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261275757600080fd5b9190910192915050565b60006020828403121561277357600080fd5b610e5f826122cc565b600060e0823603121561278e57600080fd5b6127966121fa565b61279f836122cc565b81526127ad602084016122cc565b60208201526127be604084016122cc565b60408201526127cf606084016122cc565b60608201526080830135608082015260a083013567ffffffffffffffff8111156127f857600080fd5b61280436828601612276565b60a08301525061281660c08401612306565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261285657600080fd5b83018035915067ffffffffffffffff82111561287157600080fd5b60200191503681900382131561288657600080fd5b9250929050565b6000808585111561289d57600080fd5b838611156128aa57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156128f75780818660040360031b1b83161692505b505092915050565b808201808211156112bd576112bd612509565b8183823760009101908152919050565b60208152600082518060208401526129418160408501602087016125b4565b601f01601f19169190910160400192915050565b60006020828403121561296757600080fd5b8151610e5f816122f5565b60006020828403121561298457600080fd5b815167ffffffffffffffff81111561299b57600080fd5b8201601f810184136129ac57600080fd5b80516129ba6122958261224e565b8181528560208385010111156129cf57600080fd5b6126eb8260208301602086016125b4565b600082516127578184602087016125b456fea264697066735822122095c912e9f644071dd930ff95ab7b5ebe55d84b587ce676faeac293beb705d92364736f6c63430008100033";

type WormholeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WormholeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WormholeFacet__factory extends ContractFactory {
  constructor(...args: WormholeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WormholeFacet> {
    return super.deploy(_router, overrides || {}) as Promise<WormholeFacet>;
  }
  override getDeployTransaction(
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, overrides || {});
  }
  override attach(address: string): WormholeFacet {
    return super.attach(address) as WormholeFacet;
  }
  override connect(signer: Signer): WormholeFacet__factory {
    return super.connect(signer) as WormholeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WormholeFacetInterface {
    return new utils.Interface(_abi) as WormholeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WormholeFacet {
    return new Contract(address, _abi, signerOrProvider) as WormholeFacet;
  }
}
