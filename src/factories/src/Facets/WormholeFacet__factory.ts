/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WormholeFacet,
  WormholeFacetInterface,
} from "../../../src/Facets/WormholeFacet";

const _abi = [
  {
    inputs: [],
    name: "CannotBridgeToSameNetwork",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidConfig",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeValueWithERC",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "bridge",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "bridgeData",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "integrator",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sendingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "destinationChainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "hasSourceSwap",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "hasDestinationCall",
        type: "bool",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_wormholeRouter",
        type: "address",
      },
    ],
    name: "WormholeInitialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRouter",
        type: "address",
      },
    ],
    name: "changeWormholeRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wormholeRouter",
        type: "address",
      },
    ],
    name: "initWormhole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ILiFi.LiFiData",
        name: "_lifiData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "toChainId",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
        ],
        internalType: "struct WormholeFacet.WormholeData",
        name: "_wormholeData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaWormhole",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ILiFi.LiFiData",
        name: "_lifiData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "toChainId",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
        ],
        internalType: "struct WormholeFacet.WormholeData",
        name: "_wormholeData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaWormhole",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061246a806100206000396000f3fe60806040526004361061003f5760003560e01c80632c4e0ccc146100445780639081b8691461006657806390a6259914610086578063e2ea2b1914610099575b600080fd5b34801561005057600080fd5b5061006461005f366004611c46565b6100ac565b005b34801561007257600080fd5b50610064610081366004611c46565b610199565b610064610094366004611dac565b610207565b6100646100a7366004611e58565b61038c565b6100b46104e7565b73ffffffffffffffffffffffffffffffffffffffff8116610101576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7ffa6ac87476d86fd4b0d4dd698eea8ab3feb975d02a087fbaa25457a8b2cc39f2805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff00000000000000000000000000000000000000009091168117825560408051918252517ff0914ee09d41b6b64fbd609e33abfab7d4c2d7578e653adf151517515a234ee79181900360200190a15050565b6101a16104e7565b7ffa6ac87476d86fd4b0d4dd698eea8ab3feb975d02a087fbaa25457a8b2cc39f280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610282576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815561029961029286611f30565b85856105b7565b60208301526102a7826106aa565b84357f438f81f3fe94456cd9d98e9073524f1c2bafb3ce75def8ced69f708061ddd5c46102d76020880188611fdc565b6102e760608a0160408b01611c46565b888860008181106102fa576102fa612048565b905060200281019061030c9190612077565b61031d906060810190604001611c46565b61032d60a08c0160808d01611c46565b88604001518b8b600081811061034557610345612048565b90506020028101906103579190612077565b608001358a606001516001600060405161037a9a999897969594939291906120b5565b60405180910390a26000905550505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610407576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815561042561041b6020840184611c46565b8360200135610803565b61043c610437368490038401846121ce565b6106aa565b82357f438f81f3fe94456cd9d98e9073524f1c2bafb3ce75def8ced69f708061ddd5c461046c6020860186611fdc565b61047c6060880160408901611c46565b6104896020880188611c46565b61049960a08a0160808b01611c46565b6104a960608a0160408b01611c46565b60208a01356104be60808c0160608d016121ea565b6000806040516104d79a999897969594939291906120b5565b60405180910390a2600090555050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff1633146105b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201527f657200000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b565b6000818082036105f3576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008484610602600182612234565b81811061061157610611612048565b90506020028101906106239190612077565b610634906080810190606001611c46565b9050600061064182610829565b905061064e8787876108e2565b8061065883610829565b6106629190612234565b90508060000361069e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b925050505b9392505050565b806060015161ffff1646036106eb576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80517ffa6ac87476d86fd4b0d4dd698eea8ab3feb975d02a087fbaa25457a8b2cc39f280546020840151919261073992909173ffffffffffffffffffffffffffffffffffffffff1690610cc3565b8054825160208401516060850151604080870151608088015191517f0f5287b000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9586166004820152602481019490945261ffff909216604484015290831660648301526000608483015263ffffffff1660a4820152911690630f5287b09060c401600060405180830381600087803b1580156107e757600080fd5b505af11580156107fb573d6000803e3d6000fd5b505050505050565b610825828273ffffffffffffffffffffffffffffffffffffffff821615610e05565b5050565b600073ffffffffffffffffffffffffffffffffffffffff8216156108da576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156108b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d5919061224b565b6108dc565b475b92915050565b81818060018114610b6f5760006108f98484610f1f565b90506000848461090a600186612234565b81811061091957610919612048565b905060200281019061092b9190612077565b61093c906080810190606001611c46565b90506000805b87811015610a8a573689898381811061095d5761095d612048565b905060200281019061096f9190612077565b90506000806109846040840160208501611c46565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff1680156109f057506000806109c56020840184611c46565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff165b8015610a35575060016000610a0860a0840184611fdc565b610a1791600891600091612264565b610a209161228e565b815260208101919091526040016000205460ff165b610a6b576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8a51610a779082610fe9565b5080610a82816122ca565b915050610942565b5060005b610a99600186612234565b811015610b66576000878783818110610ab457610ab4612048565b9050602002810190610ac69190612077565b610ad7906080810190606001611c46565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b125750610b54565b848281518110610b2457610b24612048565b6020026020010151610b3582610829565b610b3f9190612234565b92508215610b5257610b528133856112a9565b505b80610b5e816122ca565b915050610a8e565b505050506107fb565b60005b84811015610cba5736868683818110610b8d57610b8d612048565b9050602002810190610b9f9190612077565b9050600080610bb46040840160208501611c46565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff168015610c205750600080610bf56020840184611c46565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff165b8015610c65575060016000610c3860a0840184611fdc565b610c4791600891600091612264565b610c509161228e565b815260208101919091526040016000205460ff165b610c9b576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8751610ca79082610fe9565b5080610cb2816122ca565b915050610b72565b50505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610ce357505050565b73ffffffffffffffffffffffffffffffffffffffff8216610d30576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610da6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dca919061224b565b905081811015610dff57610dff84847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6112da565b50505050565b81600003610e3f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015610e8357813414610e7e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b3415610eba576040517e3f45b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610ec584610829565b9050610ed3843330866114bc565b8281610ede86610829565b610ee89190612234565b14610dff576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608160008167ffffffffffffffff811115610f3d57610f3d611c7a565b604051908082528060200260200182016040528015610f66578160200160208202803683370190505b50905060005b82811015610fe057610fb1868683818110610f8957610f89612048565b9050602002810190610f9b9190612077565b610fac906080810190606001611c46565b610829565b828281518110610fc357610fc3612048565b602090810291909101015280610fd8816122ca565b915050610f6c565b50949350505050565b610fff610ff96020830183611c46565b3b151590565b611035576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611075576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806110886060850160408601611c46565b9050600061109c6080860160608701611c46565b905060006110a983610829565b905060006110b683610829565b905060008683106110c85760006110d2565b6110d28388612234565b905073ffffffffffffffffffffffffffffffffffffffff8516156111215761110a8561110460408b0160208c01611c46565b89610cc3565b801561111c5761111c853330846114bc565b611125565b8695505b60008061113560208b018b611c46565b73ffffffffffffffffffffffffffffffffffffffff168861115960a08d018d611fdc565b604051611167929190612302565b60006040518083038185875af1925050503d80600081146111a4576040519150601f19603f3d011682016040523d82523d6000602084013e6111a9565b606091505b5091509150816111f45760006111be82611562565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ac919061233e565b7f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388b61122360208d018d611c46565b61123360608e0160408f01611c46565b898d8961123f8d610829565b6112499190612234565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316156112d057610e7e8383836115d9565b610e7e8282611631565b80158061137a57506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611354573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611378919061224b565b155b611406576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016105ac565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610e7e9084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611718565b73ffffffffffffffffffffffffffffffffffffffff8416611509576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611556576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610dff84848484611824565b60606044825110156115a757505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b60006115c360048085516115bb9190612234565b859190611882565b9050808060200190518101906106a39190612371565b73ffffffffffffffffffffffffffffffffffffffff8316611626576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e7e8383836119dd565b73ffffffffffffffffffffffffffffffffffffffff821661167e576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146116d8576040519150601f19603f3d011682016040523d82523d6000602084013e6116dd565b606091505b5050905080610e7e576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061177a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611a339092919063ffffffff16565b805190915015610e7e578080602001905181019061179891906123e8565b610e7e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105ac565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610dff9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611458565b60608161189081601f61240a565b10156118f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f7700000000000000000000000000000000000060448201526064016105ac565b611902828461240a565b8451101561196c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e647300000000000000000000000000000060448201526064016105ac565b60608215801561198b5760405191506000825260208201604052610fe0565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156119c45780518352602092830192016119ac565b5050858452601f01601f19166040525050949350505050565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610e7e9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611458565b6060611a428484600085611a4a565b949350505050565b606082471015611adc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105ac565b843b611b44576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105ac565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611b6d9190612422565b60006040518083038185875af1925050503d8060008114611baa576040519150601f19603f3d011682016040523d82523d6000602084013e611baf565b606091505b5091509150611bbf828286611bca565b979650505050505050565b60608315611bd95750816106a3565b825115611be95782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ac919061233e565b803573ffffffffffffffffffffffffffffffffffffffff81168114611c4157600080fd5b919050565b600060208284031215611c5857600080fd5b6106a382611c1d565b60006101008284031215611c7457600080fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611ccd57611ccd611c7a565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611cfc57611cfc611c7a565b604052919050565b803561ffff81168114611c4157600080fd5b600060a08284031215611d2857600080fd5b60405160a0810181811067ffffffffffffffff82111715611d4b57611d4b611c7a565b604052905080611d5a83611c1d565b815260208301356020820152611d7260408401611c1d565b6040820152611d8360608401611d04565b6060820152608083013563ffffffff81168114611d9f57600080fd5b6080919091015292915050565b60008060008060e08587031215611dc257600080fd5b843567ffffffffffffffff80821115611dda57600080fd5b611de688838901611c61565b95506020870135915080821115611dfc57600080fd5b818701915087601f830112611e1057600080fd5b813581811115611e1f57600080fd5b8860208260051b8501011115611e3457600080fd5b602083019550809450505050611e4d8660408701611d16565b905092959194509250565b60008082840360c0811215611e6c57600080fd5b833567ffffffffffffffff811115611e8357600080fd5b611e8f86828701611c61565b93505060a0601f1982011215611ea457600080fd5b506020830190509250929050565b600067ffffffffffffffff821115611ecc57611ecc611c7a565b50601f01601f191660200190565b600082601f830112611eeb57600080fd5b8135611efe611ef982611eb2565b611cd3565b818152846020838601011115611f1357600080fd5b816020850160208301376000918101602001919091529392505050565b60006101008236031215611f4357600080fd5b611f4b611ca9565b82358152602083013567ffffffffffffffff811115611f6957600080fd5b611f7536828601611eda565b602083015250611f8760408401611c1d565b6040820152611f9860608401611c1d565b6060820152611fa960808401611c1d565b6080820152611fba60a08401611c1d565b60a082015260c083013560c082015260e083013560e082015280915050919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261201157600080fd5b83018035915067ffffffffffffffff82111561202c57600080fd5b60200191503681900382131561204157600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff418336030181126120ab57600080fd5b9190910192915050565b6000610160808352600881840152507f776f726d686f6c650000000000000000000000000000000000000000000000006101808301526101a0806020840152600081840152506101c08060408401528b81840152506101e08b8d8285013760008c840182015273ffffffffffffffffffffffffffffffffffffffff8b166060840152601f19601f8d0116830101905073ffffffffffffffffffffffffffffffffffffffff8916608083015273ffffffffffffffffffffffffffffffffffffffff881660a083015273ffffffffffffffffffffffffffffffffffffffff871660c08301528560e08301526121af61010083018661ffff169052565b9215156101208201529015156101409091015298975050505050505050565b600060a082840312156121e057600080fd5b6106a38383611d16565b6000602082840312156121fc57600080fd5b6106a382611d04565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561224657612246612205565b500390565b60006020828403121561225d57600080fd5b5051919050565b6000808585111561227457600080fd5b8386111561228157600080fd5b5050820193919092039150565b803560208310156108dc577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122fb576122fb612205565b5060010190565b8183823760009101908152919050565b60005b8381101561232d578181015183820152602001612315565b83811115610dff5750506000910152565b602081526000825180602084015261235d816040850160208701612312565b601f01601f19169190910160400192915050565b60006020828403121561238357600080fd5b815167ffffffffffffffff81111561239a57600080fd5b8201601f810184136123ab57600080fd5b80516123b9611ef982611eb2565b8181528560208385010111156123ce57600080fd5b6123df826020830160208601612312565b95945050505050565b6000602082840312156123fa57600080fd5b815180151581146106a357600080fd5b6000821982111561241d5761241d612205565b500190565b600082516120ab81846020870161231256fea2646970667358221220f8126951661666fecf7d19d7dbe26597f89922320f9f72c62cff56f61504458464736f6c634300080d0033";

type WormholeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WormholeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WormholeFacet__factory extends ContractFactory {
  constructor(...args: WormholeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WormholeFacet> {
    return super.deploy(overrides || {}) as Promise<WormholeFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WormholeFacet {
    return super.attach(address) as WormholeFacet;
  }
  override connect(signer: Signer): WormholeFacet__factory {
    return super.connect(signer) as WormholeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WormholeFacetInterface {
    return new utils.Interface(_abi) as WormholeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WormholeFacet {
    return new Contract(address, _abi, signerOrProvider) as WormholeFacet;
  }
}
