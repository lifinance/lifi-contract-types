/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AcrossFacet,
  AcrossFacetInterface,
} from "../../../src/Facets/AcrossFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAcrossSpokePool",
        name: "_spokePool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "QuoteTimeout",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: true,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "relayerFeePct",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "quoteTimestamp",
            type: "uint32",
          },
        ],
        internalType: "struct AcrossFacet.AcrossData",
        name: "_acrossData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaAcross",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "relayerFeePct",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "quoteTimestamp",
            type: "uint32",
          },
        ],
        internalType: "struct AcrossFacet.AcrossData",
        name: "_acrossData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaAcross",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200281e3803806200281e833981016040819052620000349162000065565b6001600160a01b039182166080521660a052620000a4565b6001600160a01b03811681146200006257600080fd5b50565b600080604083850312156200007957600080fd5b825162000086816200004c565b602084015190925062000099816200004c565b809150509250929050565b60805160a05161274d620000d160003960006105eb01526000818161061f015261064a015261274d6000f3fe6080604052600436106100295760003560e01c80634eefe3a51461002e578063ba66bd9a14610043575b600080fd5b61004161003c36600461215c565b610056565b005b610041610051366004612208565b61025c565b3360006100633447612291565b9050858061010001516100a2576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86806101200151156100e0576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101038160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561013a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610178576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016101f3576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155895160c08b015161020b91908b8b3361046a565b60c08b015261021a8a886105b2565b60009081905547935091505082821161023457600061023e565b61023e8383612291565b9050801561025257610252600085836107a9565b5050505050505050565b3360006102693447612291565b90508361028e8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156102c5576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610303576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8480610100015115610341576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b858061012001511561037f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016103fa576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155608088015160c089015161041291906107df565b61042a88610425368a90038a018a6122a4565b6105b2565b60009081905547935091505082821161044457600061044e565b61044e8383612291565b9050801561046257610462600085836107a9565b505050505050565b6000828082036104a6576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856104b5600185612291565b8181106104c4576104c46122c0565b90506020028101906104d691906122ef565b6104e790608081019060600161232d565b905060006104f482610955565b905073ffffffffffffffffffffffffffffffffffffffff821661051e5761051b3482612291565b90505b600061052a8888610a0e565b90506105368888610b1a565b6105438a89898985610b7b565b60008261054f85610955565b6105599190612291565b9050898110156105a4576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b608082015173ffffffffffffffffffffffffffffffffffffffff161580156106155773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166080840152610648565b61064883608001517f00000000000000000000000000000000000000000000000000000000000000008560c00151610f2d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634922897882610690576000610696565b8460c001515b60a0860151608087015160c088015160e0808a0151895160208b01516040519389901b7fffffffff0000000000000000000000000000000000000000000000000000000016845273ffffffffffffffffffffffffffffffffffffffff96871660048501529590941660248301526044820192909252606481019190915267ffffffffffffffff909116608482015263ffffffff90911660a482015260c4016000604051808303818588803b15801561074d57600080fd5b505af1158015610761573d6000803e3d6000fd5b505050505082604051610774919061238f565b604051908190038120907fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f190600090a2505050565b73ffffffffffffffffffffffffffffffffffffffff8316156107d5576107d0838383611078565b505050565b6107d082826111a7565b73ffffffffffffffffffffffffffffffffffffffff82166108385780341015610834576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610872576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156108df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109039190612488565b905081811015610949576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161059b565b6107d0833330856112d1565b600073ffffffffffffffffffffffffffffffffffffffff821615610a06576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156109dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a019190612488565b610a08565b475b92915050565b60608160008167ffffffffffffffff811115610a2c57610a2c611e91565b604051908082528060200260200182016040528015610a55578160200160208202803683370190505b5090506000805b83811015610b0f57868682818110610a7657610a766122c0565b9050602002810190610a8891906122ef565b610a9990608081019060600161232d565b9150610aa482610955565b838281518110610ab657610ab66122c0565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610b075734838281518110610aef57610aef6122c0565b60200260200101818151610b039190612291565b9052505b600101610a5c565b509095945050505050565b60005b818110156107d0576000838383818110610b3957610b396122c0565b9050602002810190610b4b91906122ef565b610b54906124a1565b90508060c0015115610b7257610b72816040015182608001516107df565b50600101610b1d565b838383838260018114610e485760008585610b97600185612291565b818110610ba657610ba66122c0565b9050602002810190610bb891906122ef565b610bc990608081019060600161232d565b9050600089815b81811015610d7457368d8d83818110610beb57610beb6122c0565b9050602002810190610bfd91906122ef565b9050610c2c610c12606083016040840161232d565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610c8f5750610c8f610c45604083016020840161232d565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610ca65750610ca6610c45602083018361232d565b8015610d2b5750610d2b610cbd60a0830183612546565b610ccc916004916000916125b2565b610cd5916125dc565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610d61576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d6b8f826114e3565b50600101610bd0565b505060005b610d84600185612291565b811015610e40576000888883818110610d9f57610d9f6122c0565b9050602002810190610db191906122ef565b610dc290608081019060600161232d565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e3757858281518110610e0957610e096122c0565b6020026020010151610e1a82610955565b610e249190612291565b92508215610e3757610e378188856107a9565b50600101610d79565b505050610f21565b8760005b81811015610f1e57368b8b83818110610e6757610e676122c0565b9050602002810190610e7991906122ef565b9050610e8e610c12606083016040840161232d565b80610ea75750610ea7610c45604083016020840161232d565b8015610ebe5750610ebe610c45602083018361232d565b8015610ed55750610ed5610cbd60a0830183612546565b610f0b576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f158d826114e3565b50600101610e4c565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610f4d57505050565b73ffffffffffffffffffffffffffffffffffffffff8216610f9a576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015611010573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110349190612488565b90508181101561107257611072848461106d847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612291565b6117f9565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166110c5576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611132573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111569190612488565b90508082111561119c576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161059b565b611072848484611957565b73ffffffffffffffffffffffffffffffffffffffff82166111f4576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611237576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810182905247602482015260440161059b565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611291576040519150601f19603f3d011682016040523d82523d6000602084013e611296565b606091505b50509050806107d0576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841661131e576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661136b576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa1580156113dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114009190612488565b905061140e828686866119ad565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa15801561147e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a29190612488565b6114ac9190612291565b14610462576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114f96114f3602083018361232d565b3b151590565b61152f576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080810135600081900361156f576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611584610c12606085016040860161232d565b61158f576000611595565b82608001355b905060006115b16115ac606086016040870161232d565b610955565b905060006115c86115ac608087016060880161232d565b9050826000036115ff576115ff6115e5606087016040880161232d565b6115f5604088016020890161232d565b8760800135610f2d565b846080013582101561164a576040517fcf479181000000000000000000000000000000000000000000000000000000008152608086013560048201526024810183905260440161059b565b60008061165a602088018861232d565b73ffffffffffffffffffffffffffffffffffffffff168561167e60a08a018a612546565b60405161168c929190612624565b60006040518083038185875af1925050503d80600081146116c9576040519150601f19603f3d011682016040523d82523d6000602084013e6116ce565b606091505b5091509150816117195760006116e382611a0b565b9050806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b9190612634565b600061172e6115ac60808a0160608b0161232d565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961175f60208b018b61232d565b61176f60608c0160408d0161232d565b61177f60808d0160608e0161232d565b8c60800135898711611791578661179b565b61179b8a88612291565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611870573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118949190612488565b61189e9190612667565b60405173ffffffffffffffffffffffffffffffffffffffff85166024820152604481018290529091506110729085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611a89565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526107d09084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016118f3565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526110729085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016118f3565b6060604482511015611a5057505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611a6c6004808551611a649190612291565b859190611b95565b905080806020019051810190611a82919061267a565b9392505050565b6000611aeb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611c919092919063ffffffff16565b8051909150156107d05780806020019051810190611b0991906126e8565b6107d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161059b565b606081611ba381601f612667565b1015611bdb576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611be58284612667565b84511015611c1f576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611c3e5760405191506000825260208201604052611c88565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611c77578051835260209283019201611c5f565b5050858452601f01601f1916604052505b50949350505050565b6060611ca08484600085611ca8565b949350505050565b606082471015611d3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161059b565b73ffffffffffffffffffffffffffffffffffffffff85163b611db8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161059b565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611de19190612705565b60006040518083038185875af1925050503d8060008114611e1e576040519150601f19603f3d011682016040523d82523d6000602084013e611e23565b606091505b5091509150611e33828286611e3e565b979650505050505050565b60608315611e4d575081611a82565b825115611e5d5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b9190612634565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611ee457611ee4611e91565b60405290565b60405160e0810167ffffffffffffffff81118282101715611ee457611ee4611e91565b604051601f8201601f1916810167ffffffffffffffff81118282101715611f3657611f36611e91565b604052919050565b600067ffffffffffffffff821115611f5857611f58611e91565b50601f01601f191660200190565b600082601f830112611f7757600080fd5b8135611f8a611f8582611f3e565b611f0d565b818152846020838601011115611f9f57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611fe057600080fd5b919050565b8015158114611ff357600080fd5b50565b8035611fe081611fe5565b6000610140828403121561201457600080fd5b61201c611ec0565b905081358152602082013567ffffffffffffffff8082111561203d57600080fd5b61204985838601611f66565b6020840152604084013591508082111561206257600080fd5b5061206f84828501611f66565b60408301525061208160608301611fbc565b606082015261209260808301611fbc565b60808201526120a360a08301611fbc565b60a082015260c082013560c082015260e082013560e08201526101006120ca818401611ff6565b908201526101206120dc838201611ff6565b9082015292915050565b6000604082840312156120f857600080fd5b6040516040810167ffffffffffffffff828210818311171561211c5761211c611e91565b8160405282935084359150808216821461213557600080fd5b508152602083013563ffffffff8116811461214f57600080fd5b6020919091015292915050565b6000806000806080858703121561217257600080fd5b843567ffffffffffffffff8082111561218a57600080fd5b61219688838901612001565b955060208701359150808211156121ac57600080fd5b818701915087601f8301126121c057600080fd5b8135818111156121cf57600080fd5b8860208260051b85010111156121e457600080fd5b6020830195508094505050506121fd86604087016120e6565b905092959194509250565b600080828403606081121561221c57600080fd5b833567ffffffffffffffff81111561223357600080fd5b61223f86828701612001565b9350506040601f198201121561225457600080fd5b506020830190509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610a0857610a08612262565b6000604082840312156122b657600080fd5b611a8283836120e6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261232357600080fd5b9190910192915050565b60006020828403121561233f57600080fd5b611a8282611fbc565b60005b8381101561236357818101518382015260200161234b565b50506000910152565b6000815161237e818560208601612348565b601f01601f19169290920192915050565b815181526000602083015180516123ad816020860160208501612348565b61247f61246f61245f6124526124456124226123ff6123dc6020601f19601f8b01168d010160408e015161236c565b60608d015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60808c015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60a08b015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60c08a0151815260200190565b60e0890151815260200190565b6101008801511515815260200190565b6101208701511515815260200190565b95945050505050565b60006020828403121561249a57600080fd5b5051919050565b600060e082360312156124b357600080fd5b6124bb611eea565b6124c483611fbc565b81526124d260208401611fbc565b60208201526124e360408401611fbc565b60408201526124f460608401611fbc565b60608201526080830135608082015260a083013567ffffffffffffffff81111561251d57600080fd5b61252936828601611f66565b60a08301525061253b60c08401611ff6565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261257b57600080fd5b83018035915067ffffffffffffffff82111561259657600080fd5b6020019150368190038213156125ab57600080fd5b9250929050565b600080858511156125c257600080fd5b838611156125cf57600080fd5b5050820193919092039150565b7fffffffff00000000000000000000000000000000000000000000000000000000813581811691600485101561261c5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b6020815260008251806020840152612653816040850160208701612348565b601f01601f19169190910160400192915050565b80820180821115610a0857610a08612262565b60006020828403121561268c57600080fd5b815167ffffffffffffffff8111156126a357600080fd5b8201601f810184136126b457600080fd5b80516126c2611f8582611f3e565b8181528560208385010111156126d757600080fd5b61247f826020830160208601612348565b6000602082840312156126fa57600080fd5b8151611a8281611fe5565b6000825161232381846020870161234856fea264697066735822122026911f4375b5d477ff3b8697e1a2e873277f2c20cdad4fce0722afa59488889d64736f6c63430008110033";

type AcrossFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AcrossFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AcrossFacet__factory extends ContractFactory {
  constructor(...args: AcrossFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _spokePool: string,
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AcrossFacet> {
    return super.deploy(
      _spokePool,
      _weth,
      overrides || {}
    ) as Promise<AcrossFacet>;
  }
  override getDeployTransaction(
    _spokePool: string,
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_spokePool, _weth, overrides || {});
  }
  override attach(address: string): AcrossFacet {
    return super.attach(address) as AcrossFacet;
  }
  override connect(signer: Signer): AcrossFacet__factory {
    return super.connect(signer) as AcrossFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AcrossFacetInterface {
    return new utils.Interface(_abi) as AcrossFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AcrossFacet {
    return new Contract(address, _abi, signerOrProvider) as AcrossFacet;
  }
}
