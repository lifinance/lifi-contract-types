/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AcrossFacet,
  AcrossFacetInterface,
} from "../../../src/Facets/AcrossFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAcrossSpokePool",
        name: "_spokePool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "QuoteTimeout",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "relayerFeePct",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "quoteTimestamp",
            type: "uint32",
          },
        ],
        internalType: "struct AcrossFacet.AcrossData",
        name: "_acrossData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaAcross",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "relayerFeePct",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "quoteTimestamp",
            type: "uint32",
          },
        ],
        internalType: "struct AcrossFacet.AcrossData",
        name: "_acrossData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaAcross",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200280538038062002805833981016040819052620000349162000065565b6001600160a01b039182166080521660a052620000a4565b6001600160a01b03811681146200006257600080fd5b50565b600080604083850312156200007957600080fd5b825162000086816200004c565b602084015190925062000099816200004c565b809150509250929050565b60805160a051612734620000d160003960006105eb01526000818161061f015261064a01526127346000f3fe6080604052600436106100295760003560e01c80634eefe3a51461002e578063ba66bd9a14610043575b600080fd5b61004161003c366004612155565b610056565b005b610041610051366004612201565b61025c565b336000610063344761228a565b9050858061010001516100a2576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86806101200151156100e0576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101038160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561013a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610178576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016101f3576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155895160c08b015161020b91908b8b3361046a565b60c08b015261021a8a886105b2565b60009081905547935091505082821161023457600061023e565b61023e838361228a565b9050801561025257610252600085836107a2565b5050505050505050565b336000610269344761228a565b90508361028e8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156102c5576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610303576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8480610100015115610341576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b858061012001511561037f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016103fa576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155608088015160c089015161041291906107d8565b61042a88610425368a90038a018a61229d565b6105b2565b60009081905547935091505082821161044457600061044e565b61044e838361228a565b9050801561046257610462600085836107a2565b505050505050565b6000828082036104a6576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856104b560018561228a565b8181106104c4576104c46122b9565b90506020028101906104d691906122e8565b6104e7906080810190606001612326565b905060006104f48261094e565b905073ffffffffffffffffffffffffffffffffffffffff821661051e5761051b348261228a565b90505b600061052a8888610a07565b90506105368888610b13565b6105438a89898985610b74565b60008261054f8561094e565b610559919061228a565b9050898110156105a4576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b608082015173ffffffffffffffffffffffffffffffffffffffff161580156106155773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166080840152610648565b61064883608001517f00000000000000000000000000000000000000000000000000000000000000008560c00151610f26565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634922897882610690576000610696565b8460c001515b60a0860151608087015160c088015160e0808a0151895160208b01516040519389901b7fffffffff0000000000000000000000000000000000000000000000000000000016845273ffffffffffffffffffffffffffffffffffffffff96871660048501529590941660248301526044820192909252606481019190915267ffffffffffffffff909116608482015263ffffffff90911660a482015260c4016000604051808303818588803b15801561074d57600080fd5b505af1158015610761573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1836040516107959190612391565b60405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff8316156107ce576107c9838383611071565b505050565b6107c982826111a0565b73ffffffffffffffffffffffffffffffffffffffff8216610831578034101561082d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b8060000361086b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156108d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fc9190612486565b905081811015610942576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161059b565b6107c9833330856112ca565b600073ffffffffffffffffffffffffffffffffffffffff8216156109ff576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156109d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fa9190612486565b610a01565b475b92915050565b60608160008167ffffffffffffffff811115610a2557610a25611e8a565b604051908082528060200260200182016040528015610a4e578160200160208202803683370190505b5090506000805b83811015610b0857868682818110610a6f57610a6f6122b9565b9050602002810190610a8191906122e8565b610a92906080810190606001612326565b9150610a9d8261094e565b838281518110610aaf57610aaf6122b9565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610b005734838281518110610ae857610ae86122b9565b60200260200101818151610afc919061228a565b9052505b600101610a55565b509095945050505050565b60005b818110156107c9576000838383818110610b3257610b326122b9565b9050602002810190610b4491906122e8565b610b4d9061249f565b90508060c0015115610b6b57610b6b816040015182608001516107d8565b50600101610b16565b838383838260018114610e415760008585610b9060018561228a565b818110610b9f57610b9f6122b9565b9050602002810190610bb191906122e8565b610bc2906080810190606001612326565b9050600089815b81811015610d6d57368d8d83818110610be457610be46122b9565b9050602002810190610bf691906122e8565b9050610c25610c0b6060830160408401612326565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610c885750610c88610c3e6040830160208401612326565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610c9f5750610c9f610c3e6020830183612326565b8015610d245750610d24610cb660a0830183612544565b610cc5916004916000916125b0565b610cce916125da565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610d5a576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d648f826114dc565b50600101610bc9565b505060005b610d7d60018561228a565b811015610e39576000888883818110610d9857610d986122b9565b9050602002810190610daa91906122e8565b610dbb906080810190606001612326565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e3057858281518110610e0257610e026122b9565b6020026020010151610e138261094e565b610e1d919061228a565b92508215610e3057610e308188856107a2565b50600101610d72565b505050610f1a565b8760005b81811015610f1757368b8b83818110610e6057610e606122b9565b9050602002810190610e7291906122e8565b9050610e87610c0b6060830160408401612326565b80610ea05750610ea0610c3e6040830160208401612326565b8015610eb75750610eb7610c3e6020830183612326565b8015610ece5750610ece610cb660a0830183612544565b610f04576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f0e8d826114dc565b50600101610e45565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610f4657505050565b73ffffffffffffffffffffffffffffffffffffffff8216610f93576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015611009573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102d9190612486565b90508181101561106b5761106b8484611066847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61228a565b6117f2565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166110be576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa15801561112b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114f9190612486565b905080821115611195576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161059b565b61106b848484611950565b73ffffffffffffffffffffffffffffffffffffffff82166111ed576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611230576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810182905247602482015260440161059b565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461128a576040519150601f19603f3d011682016040523d82523d6000602084013e61128f565b606091505b50509050806107c9576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416611317576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611364576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa1580156113d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f99190612486565b9050611407828686866119a6565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611477573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149b9190612486565b6114a5919061228a565b14610462576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114f26114ec6020830183612326565b3b151590565b611528576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611568576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061157d610c0b6060850160408601612326565b61158857600061158e565b82608001355b905060006115aa6115a56060860160408701612326565b61094e565b905060006115c16115a56080870160608801612326565b9050826000036115f8576115f86115de6060870160408801612326565b6115ee6040880160208901612326565b8760800135610f26565b8460800135821015611643576040517fcf479181000000000000000000000000000000000000000000000000000000008152608086013560048201526024810183905260440161059b565b6000806116536020880188612326565b73ffffffffffffffffffffffffffffffffffffffff168561167760a08a018a612544565b604051611685929190612622565b60006040518083038185875af1925050503d80600081146116c2576040519150601f19603f3d011682016040523d82523d6000602084013e6116c7565b606091505b5091509150816117125760006116dc82611a04565b9050806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b9190612632565b60006117276115a560808a0160608b01612326565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961175860208b018b612326565b61176860608c0160408d01612326565b61177860808d0160608e01612326565b8c6080013589871161178a5786611794565b6117948a8861228a565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188d9190612486565b6118979190612645565b60405173ffffffffffffffffffffffffffffffffffffffff851660248201526044810182905290915061106b9085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611a82565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526107c99084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016118ec565b60405173ffffffffffffffffffffffffffffffffffffffff8085166024830152831660448201526064810182905261106b9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016118ec565b6060604482511015611a4957505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611a656004808551611a5d919061228a565b859190611b8e565b905080806020019051810190611a7b9190612658565b9392505050565b6000611ae4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611c8a9092919063ffffffff16565b8051909150156107c95780806020019051810190611b0291906126cf565b6107c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161059b565b606081611b9c81601f612645565b1015611bd4576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611bde8284612645565b84511015611c18576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611c375760405191506000825260208201604052611c81565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611c70578051835260209283019201611c58565b5050858452601f01601f1916604052505b50949350505050565b6060611c998484600085611ca1565b949350505050565b606082471015611d33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161059b565b73ffffffffffffffffffffffffffffffffffffffff85163b611db1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161059b565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611dda91906126ec565b60006040518083038185875af1925050503d8060008114611e17576040519150601f19603f3d011682016040523d82523d6000602084013e611e1c565b606091505b5091509150611e2c828286611e37565b979650505050505050565b60608315611e46575081611a7b565b825115611e565782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b9190612632565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611edd57611edd611e8a565b60405290565b60405160e0810167ffffffffffffffff81118282101715611edd57611edd611e8a565b604051601f8201601f1916810167ffffffffffffffff81118282101715611f2f57611f2f611e8a565b604052919050565b600067ffffffffffffffff821115611f5157611f51611e8a565b50601f01601f191660200190565b600082601f830112611f7057600080fd5b8135611f83611f7e82611f37565b611f06565b818152846020838601011115611f9857600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611fd957600080fd5b919050565b8015158114611fec57600080fd5b50565b8035611fd981611fde565b6000610140828403121561200d57600080fd5b612015611eb9565b905081358152602082013567ffffffffffffffff8082111561203657600080fd5b61204285838601611f5f565b6020840152604084013591508082111561205b57600080fd5b5061206884828501611f5f565b60408301525061207a60608301611fb5565b606082015261208b60808301611fb5565b608082015261209c60a08301611fb5565b60a082015260c082013560c082015260e082013560e08201526101006120c3818401611fef565b908201526101206120d5838201611fef565b9082015292915050565b6000604082840312156120f157600080fd5b6040516040810167ffffffffffffffff828210818311171561211557612115611e8a565b8160405282935084359150808216821461212e57600080fd5b508152602083013563ffffffff8116811461214857600080fd5b6020919091015292915050565b6000806000806080858703121561216b57600080fd5b843567ffffffffffffffff8082111561218357600080fd5b61218f88838901611ffa565b955060208701359150808211156121a557600080fd5b818701915087601f8301126121b957600080fd5b8135818111156121c857600080fd5b8860208260051b85010111156121dd57600080fd5b6020830195508094505050506121f686604087016120df565b905092959194509250565b600080828403606081121561221557600080fd5b833567ffffffffffffffff81111561222c57600080fd5b61223886828701611ffa565b9350506040601f198201121561224d57600080fd5b506020830190509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610a0157610a0161225b565b6000604082840312156122af57600080fd5b611a7b83836120df565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261231c57600080fd5b9190910192915050565b60006020828403121561233857600080fd5b611a7b82611fb5565b60005b8381101561235c578181015183820152602001612344565b50506000910152565b6000815180845261237d816020860160208601612341565b601f01601f19169290920160200192915050565b6020815281516020820152600060208301516101408060408501526123ba610160850183612365565b91506040850151601f198584030160608601526123d78382612365565b9250506060850151612401608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206124748187018315159052565b90950151151593019290925250919050565b60006020828403121561249857600080fd5b5051919050565b600060e082360312156124b157600080fd5b6124b9611ee3565b6124c283611fb5565b81526124d060208401611fb5565b60208201526124e160408401611fb5565b60408201526124f260608401611fb5565b60608201526080830135608082015260a083013567ffffffffffffffff81111561251b57600080fd5b61252736828601611f5f565b60a08301525061253960c08401611fef565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261257957600080fd5b83018035915067ffffffffffffffff82111561259457600080fd5b6020019150368190038213156125a957600080fd5b9250929050565b600080858511156125c057600080fd5b838611156125cd57600080fd5b5050820193919092039150565b7fffffffff00000000000000000000000000000000000000000000000000000000813581811691600485101561261a5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b602081526000611a7b6020830184612365565b80820180821115610a0157610a0161225b565b60006020828403121561266a57600080fd5b815167ffffffffffffffff81111561268157600080fd5b8201601f8101841361269257600080fd5b80516126a0611f7e82611f37565b8181528560208385010111156126b557600080fd5b6126c6826020830160208601612341565b95945050505050565b6000602082840312156126e157600080fd5b8151611a7b81611fde565b6000825161231c81846020870161234156fea264697066735822122008383458db6f5a24a80bd29b146ce727f201adb307bd5208612e75e6a21e687264736f6c63430008110033";

type AcrossFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AcrossFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AcrossFacet__factory extends ContractFactory {
  constructor(...args: AcrossFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _spokePool: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AcrossFacet> {
    return super.deploy(
      _spokePool,
      _weth,
      overrides || {}
    ) as Promise<AcrossFacet>;
  }
  override getDeployTransaction(
    _spokePool: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_spokePool, _weth, overrides || {});
  }
  override attach(address: string): AcrossFacet {
    return super.attach(address) as AcrossFacet;
  }
  override connect(signer: Signer): AcrossFacet__factory {
    return super.connect(signer) as AcrossFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AcrossFacetInterface {
    return new utils.Interface(_abi) as AcrossFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AcrossFacet {
    return new Contract(address, _abi, signerOrProvider) as AcrossFacet;
  }
}
