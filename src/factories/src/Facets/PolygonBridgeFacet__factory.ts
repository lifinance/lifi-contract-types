/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PolygonBridgeFacet,
  PolygonBridgeFacetInterface,
} from "../../../src/Facets/PolygonBridgeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IRootChainManager",
        name: "_rootChainManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_erc20Predicate",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: true,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaPolygonBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
    ],
    name: "swapAndStartBridgeTokensViaPolygonBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620028ac380380620028ac833981016040819052620000349162000065565b6001600160a01b039182166080521660a052620000a4565b6001600160a01b03811681146200006257600080fd5b50565b600080604083850312156200007957600080fd5b825162000086816200004c565b602084015190925062000099816200004c565b809150509250929050565b60805160a0516127d4620000d86000396000610776015260008181610650015281816106fd015261081001526127d46000f3fe6080604052600436106100295760003560e01c8063af62c7d61461002e578063b4f3758114610043575b600080fd5b61004161003c3660046121d2565b610056565b005b610041610051366004612207565b610254565b33600061006334476122d0565b905082806101000151156100a3576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83806101200151156100e1576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846101048160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561013b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610179576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016101f4576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155608087015160c088015161020c9190610458565b610215876105d8565b60009081905547935091505082821161022f576000610239565b61023983836122d0565b9050801561024d5761024d600085836108bc565b5050505050565b33600061026134476122d0565b9050848061010001516102a0576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101200151156102de576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866103018160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610338576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610376576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016103f1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155885160c08a015161040991908a8a336108ed565b60c08a0152610417896105d8565b60009081905547935091505082821161043157600061043b565b61043b83836122d0565b9050801561044f5761044f600085836108bc565b50505050505050565b73ffffffffffffffffffffffffffffffffffffffff82166104b157803410156104ad576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b806000036104eb576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610558573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057c91906122e3565b9050818110156105c7576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b6105d383333085610a30565b505050565b60006105fc826080015173ffffffffffffffffffffffffffffffffffffffff161590565b156106b35760c082015160a08301516040517f4faa8a2600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201527f000000000000000000000000000000000000000000000000000000000000000090911691634faa8a26916024016000604051808303818588803b15801561069557600080fd5b505af11580156106a9573d6000803e3d6000fd5b505050505061087a565b60808201516040517fea60c7c400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201527f00000000000000000000000000000000000000000000000000000000000000009091169063ea60c7c490602401602060405180830381865afa158015610746573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076a91906122fc565b905061079f82608001517f00000000000000000000000000000000000000000000000000000000000000008460c00151610c4a565b60008260c001516040516020016107b891815260200190565b60408051601f198184030181529082905260a085015160808601517fe3dec8fb00000000000000000000000000000000000000000000000000000000845291935073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169263e3dec8fb9261084692918690600401612369565b600060405180830381600087803b15801561086057600080fd5b505af1158015610874573d6000803e3d6000fd5b50505050505b8160405161088891906123ce565b604051908190038120907fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f190600090a25050565b73ffffffffffffffffffffffffffffffffffffffff8316156108e3576105d3838383610d95565b6105d38282610ec4565b600082808203610929576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856109386001856122d0565b818110610947576109476124be565b905060200281019061095991906124ed565b61096a90608081019060600161252b565b9050600061097782610fee565b905073ffffffffffffffffffffffffffffffffffffffff82166109a15761099e34826122d0565b90505b60006109ad88886110a7565b90506109b988886111b3565b6109c68a89898985611214565b6000826109d285610fee565b6109dc91906122d0565b905089811015610a22576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044016105be565b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416610a7d576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610aca576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610b3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5f91906122e3565b9050610b6d828686866115c6565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0191906122e3565b610c0b91906122d0565b14610c42576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610c6a57505050565b73ffffffffffffffffffffffffffffffffffffffff8216610cb7576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610d2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5191906122e3565b905081811015610d8f57610d8f8484610d8a847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6122d0565b611684565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610de2576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610e4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7391906122e3565b905080821115610eb9576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016105be565b610d8f848484611782565b73ffffffffffffffffffffffffffffffffffffffff8216610f11576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115610f54576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016105be565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610fae576040519150601f19603f3d011682016040523d82523d6000602084013e610fb3565b606091505b50509050806105d3576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff82161561109f576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611076573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109a91906122e3565b6110a1565b475b92915050565b60608160008167ffffffffffffffff8111156110c5576110c5611f74565b6040519080825280602002602001820160405280156110ee578160200160208202803683370190505b5090506000805b838110156111a85786868281811061110f5761110f6124be565b905060200281019061112191906124ed565b61113290608081019060600161252b565b915061113d82610fee565b83828151811061114f5761114f6124be565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff82166111a05734838281518110611188576111886124be565b6020026020010181815161119c91906122d0565b9052505b6001016110f5565b509095945050505050565b60005b818110156105d35760008383838181106111d2576111d26124be565b90506020028101906111e491906124ed565b6111ed90612548565b90508060c001511561120b5761120b81604001518260800151610458565b506001016111b6565b8383838382600181146114e157600085856112306001856122d0565b81811061123f5761123f6124be565b905060200281019061125191906124ed565b61126290608081019060600161252b565b9050600089815b8181101561140d57368d8d83818110611284576112846124be565b905060200281019061129691906124ed565b90506112c56112ab606083016040840161252b565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061132857506113286112de604083016020840161252b565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561133f575061133f6112de602083018361252b565b80156113c457506113c461135660a08301836125ed565b61136591600491600091612659565b61136e91612683565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6113fa576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114048f826117d8565b50600101611269565b505060005b61141d6001856122d0565b8110156114d9576000888883818110611438576114386124be565b905060200281019061144a91906124ed565b61145b90608081019060600161252b565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114d0578582815181106114a2576114a26124be565b60200260200101516114b382610fee565b6114bd91906122d0565b925082156114d0576114d08188856108bc565b50600101611412565b5050506115ba565b8760005b818110156115b757368b8b83818110611500576115006124be565b905060200281019061151291906124ed565b90506115276112ab606083016040840161252b565b8061154057506115406112de604083016020840161252b565b801561155757506115576112de602083018361252b565b801561156e575061156e61135660a08301836125ed565b6115a4576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115ae8d826117d8565b506001016114e5565b50505b50505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610d8f9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611aee565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156116fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171f91906122e3565b61172991906126cb565b60405173ffffffffffffffffffffffffffffffffffffffff8516602482015260448101829052909150610d8f9085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611620565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526105d39084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611620565b6117ee6117e8602083018361252b565b3b151590565b611824576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611864576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006118796112ab606085016040860161252b565b61188457600061188a565b82608001355b905060006118a66118a1606086016040870161252b565b610fee565b905060006118bd6118a1608087016060880161252b565b9050826000036118f4576118f46118da606087016040880161252b565b6118ea604088016020890161252b565b8760800135610c4a565b846080013582101561193f576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016105be565b60008061194f602088018861252b565b73ffffffffffffffffffffffffffffffffffffffff168561197360a08a018a6125ed565b6040516119819291906126de565b60006040518083038185875af1925050503d80600081146119be576040519150601f19603f3d011682016040523d82523d6000602084013e6119c3565b606091505b509150915081611a0e5760006119d882611bfa565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105be91906126ee565b6000611a236118a160808a0160608b0161252b565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611a5460208b018b61252b565b611a6460608c0160408d0161252b565b611a7460808d0160608e0161252b565b8c60800135898711611a865786611a90565b611a908a886122d0565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6000611b50826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611c789092919063ffffffff16565b8051909150156105d35780806020019051810190611b6e9190612701565b6105d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105be565b6060604482511015611c3f57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611c5b6004808551611c5391906122d0565b859190611c8f565b905080806020019051810190611c71919061271e565b9392505050565b6060611c878484600085611d8b565b949350505050565b606081611c9d81601f6126cb565b1015611cd5576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611cdf82846126cb565b84511015611d19576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611d385760405191506000825260208201604052611d82565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611d71578051835260209283019201611d59565b5050858452601f01601f1916604052505b50949350505050565b606082471015611e1d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105be565b73ffffffffffffffffffffffffffffffffffffffff85163b611e9b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105be565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611ec4919061278c565b60006040518083038185875af1925050503d8060008114611f01576040519150601f19603f3d011682016040523d82523d6000602084013e611f06565b606091505b5091509150611f16828286611f21565b979650505050505050565b60608315611f30575081611c71565b825115611f405782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105be91906126ee565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611fc757611fc7611f74565b60405290565b60405160e0810167ffffffffffffffff81118282101715611fc757611fc7611f74565b604051601f8201601f1916810167ffffffffffffffff8111828210171561201957612019611f74565b604052919050565b600067ffffffffffffffff82111561203b5761203b611f74565b50601f01601f191660200190565b600082601f83011261205a57600080fd5b813561206d61206882612021565b611ff0565b81815284602083860101111561208257600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146120c157600080fd5b50565b80356120cf8161209f565b919050565b80151581146120c157600080fd5b80356120cf816120d4565b6000610140828403121561210057600080fd5b612108611fa3565b905081358152602082013567ffffffffffffffff8082111561212957600080fd5b61213585838601612049565b6020840152604084013591508082111561214e57600080fd5b5061215b84828501612049565b60408301525061216d606083016120c4565b606082015261217e608083016120c4565b608082015261218f60a083016120c4565b60a082015260c082013560c082015260e082013560e08201526101006121b68184016120e2565b908201526101206121c88382016120e2565b9082015292915050565b6000602082840312156121e457600080fd5b813567ffffffffffffffff8111156121fb57600080fd5b611c87848285016120ed565b60008060006040848603121561221c57600080fd5b833567ffffffffffffffff8082111561223457600080fd5b612240878388016120ed565b9450602086013591508082111561225657600080fd5b818601915086601f83011261226a57600080fd5b81358181111561227957600080fd5b8760208260051b850101111561228e57600080fd5b6020830194508093505050509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156110a1576110a16122a1565b6000602082840312156122f557600080fd5b5051919050565b60006020828403121561230e57600080fd5b8151611c718161209f565b60005b8381101561233457818101518382015260200161231c565b50506000910152565b60008151808452612355816020860160208601612319565b601f01601f19169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff8086168352808516602084015250606060408301526123a2606083018461233d565b95945050505050565b600081516123bd818560208601612319565b601f01601f19169290920192915050565b815181526000602083015180516123ec816020860160208501612319565b6123a26124ae61249e61249161248461246161243e61241b6020601f19601f8b01168d010160408e01516123ab565b60608d015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60808c015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60a08b015173ffffffffffffffffffffffffffffffffffffffff16815260200190565b60c08a0151815260200190565b60e0890151815260200190565b6101008801511515815260200190565b6101208701511515815260200190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261252157600080fd5b9190910192915050565b60006020828403121561253d57600080fd5b8135611c718161209f565b600060e0823603121561255a57600080fd5b612562611fcd565b61256b836120c4565b8152612579602084016120c4565b602082015261258a604084016120c4565b604082015261259b606084016120c4565b60608201526080830135608082015260a083013567ffffffffffffffff8111156125c457600080fd5b6125d036828601612049565b60a0830152506125e260c084016120e2565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261262257600080fd5b83018035915067ffffffffffffffff82111561263d57600080fd5b60200191503681900382131561265257600080fd5b9250929050565b6000808585111561266957600080fd5b8386111561267657600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156126c35780818660040360031b1b83161692505b505092915050565b808201808211156110a1576110a16122a1565b8183823760009101908152919050565b602081526000611c71602083018461233d565b60006020828403121561271357600080fd5b8151611c71816120d4565b60006020828403121561273057600080fd5b815167ffffffffffffffff81111561274757600080fd5b8201601f8101841361275857600080fd5b805161276661206882612021565b81815285602083850101111561277b57600080fd5b6123a2826020830160208601612319565b6000825161252181846020870161231956fea264697066735822122092b24055b15fe27e948436de353db46e763f602a3c356666b14df1f5c9a499a864736f6c63430008110033";

type PolygonBridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonBridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonBridgeFacet__factory extends ContractFactory {
  constructor(...args: PolygonBridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rootChainManager: string,
    _erc20Predicate: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PolygonBridgeFacet> {
    return super.deploy(
      _rootChainManager,
      _erc20Predicate,
      overrides || {}
    ) as Promise<PolygonBridgeFacet>;
  }
  override getDeployTransaction(
    _rootChainManager: string,
    _erc20Predicate: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rootChainManager,
      _erc20Predicate,
      overrides || {}
    );
  }
  override attach(address: string): PolygonBridgeFacet {
    return super.attach(address) as PolygonBridgeFacet;
  }
  override connect(signer: Signer): PolygonBridgeFacet__factory {
    return super.connect(signer) as PolygonBridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonBridgeFacetInterface {
    return new utils.Interface(_abi) as PolygonBridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonBridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as PolygonBridgeFacet;
  }
}
