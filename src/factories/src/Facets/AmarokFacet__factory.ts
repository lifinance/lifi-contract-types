/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AmarokFacet,
  AmarokFacetInterface,
} from "../../../src/Facets/AmarokFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IConnextHandler",
        name: "_connextHandler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_srcChainDomain",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: true,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "dstChainDomain",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "forceSlow",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "receiveLocal",
            type: "bool",
          },
          {
            internalType: "address",
            name: "callback",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "callbackFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "relayerFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slippageTol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "originMinOut",
            type: "uint256",
          },
        ],
        internalType: "struct AmarokFacet.AmarokData",
        name: "_amarokData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaAmarok",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "dstChainDomain",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "forceSlow",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "receiveLocal",
            type: "bool",
          },
          {
            internalType: "address",
            name: "callback",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "callbackFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "relayerFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slippageTol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "originMinOut",
            type: "uint256",
          },
        ],
        internalType: "struct AmarokFacet.AmarokData",
        name: "_amarokData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaAmarok",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200282f3803806200282f833981016040819052620000349162000051565b6001600160a01b0390911660805263ffffffff1660a052620000a3565b600080604083850312156200006557600080fd5b82516001600160a01b03811681146200007d57600080fd5b602084015190925063ffffffff811681146200009857600080fd5b809150509250929050565b60805160a05161275f620000d06000396000610629015260008181610733015261078c015261275f6000f3fe6080604052600436106100295760003560e01c8063301f7d221461002e578063c07f932e14610043575b600080fd5b61004161003c366004611ff9565b610056565b005b6100416100513660046120b8565b61025e565b3360006100633447612154565b9050858061010001516100a2576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866100b88160a001516001600160a01b03161590565b156100ef576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361012d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8761014381608001516001600160a01b03161590565b1561017a576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016101f5576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155895160c08b015161020d91908b8b33610479565b60c08b015261021c8a886105af565b600090819055479350915050828211610236576000610240565b6102408383612154565b905080156102545761025460008583610848565b5050505050505050565b33600061026b3447612154565b905061027684612167565b806101000151156102b3576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102bc85612167565b60a08101516001600160a01b0316610300576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361033e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61034786612167565b60808101516001600160a01b031661038b576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610406576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815561042761041d60a08a0160808b01612173565b8960c00135610871565b61043961043389612167565b886105af565b60009081905547935091505082821161045357600061045d565b61045d8383612154565b905080156104715761047160008583610848565b505050505050565b60008281036104b4576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600084846104c3600182612154565b8181106104d2576104d261218e565b90506020028101906104e491906121bd565b6104f5906080810190606001612173565b905060006001600160a01b0382161561050f576000610511565b345b905060008161051f846109cd565b6105299190612154565b90506105358787610a6c565b61054189888888610acd565b60008161054d856109cd565b6105579190612154565b9050888110156105a2576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018a9052602481018290526044015b60405180910390fd5b9998505050505050505050565b600060405180608001604052806040518061018001604052808660a001516001600160a01b031681526020018580602001906105eb91906121fb565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525063ffffffff7f00000000000000000000000000000000000000000000000000000000000000001660208083019190915260409091019061066490870187612267565b63ffffffff1681526020018660a001516001600160a01b03168152602001336001600160a01b031681526020018560400160208101906106a4919061228d565b151581526020016106bb608087016060880161228d565b151581526020016106d260a0870160808801612173565b6001600160a01b031681526020018560a0013581526020018560c0013581526020018560e00135815250815260200184608001516001600160a01b031681526020018460c001518152602001836101000135815250905061075c83608001517f00000000000000000000000000000000000000000000000000000000000000008560c00151610e7e565b6040517f35c94dfc0000000000000000000000000000000000000000000000000000000081526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906335c94dfc906107c19084906004016122fa565b6020604051808303816000875af11580156107e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108049190612431565b5082604051610813919061246d565b604051908190038120907fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f190600090a2505050565b6001600160a01b0383161561086757610862838383610fa2565b505050565b61086282826110b7565b6001600160a01b0382166108bd57803410156108b9576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b806000036108f7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b9190612431565b9050818110156109c1576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610599565b610862833330856111c7565b60006001600160a01b03821615610a64576040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610a3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5f9190612431565b610a66565b475b92915050565b60005b81811015610862576000838383818110610a8b57610a8b61218e565b9050602002810190610a9d91906121bd565b610aa69061253f565b90508060c0015115610ac457610ac481604001518260800151610871565b50600101610a6f565b8282828160018114610d9e576000610ae585856113a5565b905060008585610af6600186612154565b818110610b0557610b0561218e565b9050602002810190610b1791906121bd565b610b28906080810190606001612173565b905060008060005b8a811015610cba57368c8c83818110610b4b57610b4b61218e565b9050602002810190610b5d91906121bd565b9050610b7f610b726060830160408401612173565b6001600160a01b03161590565b80610bd55750610bd5610b986040830160208401612173565b6001600160a01b031660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610bec5750610bec610b986020830183612173565b8015610c715750610c71610c0360a08301836121fb565b610c12916004916000916125e4565b610c1b9161260e565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610ca7576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cb18e82611465565b50600101610b30565b5060005b610cc9600187612154565b811015610d94576000898983818110610ce457610ce461218e565b9050602002810190610cf691906121bd565b610d07906080810190606001612173565b9050846001600160a01b0316816001600160a01b031614610d8b57610d2b816109cd565b9250858281518110610d3f57610d3f61218e565b60200260200101518311610d535782610d78565b858281518110610d6557610d6561218e565b602002602001015183610d789190612154565b93508315610d8b57610d8b818986610848565b50600101610cbe565b5050505050610254565b60005b86811015610e735736888883818110610dbc57610dbc61218e565b9050602002810190610dce91906121bd565b9050610de3610b726060830160408401612173565b80610dfc5750610dfc610b986040830160208401612173565b8015610e135750610e13610b986020830183612173565b8015610e2a5750610e2a610c0360a08301836121fb565b610e60576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e6a8a82611465565b50600101610da1565b505050505050505050565b6001600160a01b038316610e9157505050565b6001600160a01b038216610ed1576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610f3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5e9190612431565b905081811015610f9c57610f9c8484610f97847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612154565b61175c565b50505050565b6001600160a01b038316610fe2576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa158015611042573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110669190612431565b9050808211156110ac576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610599565b610f9c8484846118a0565b6001600160a01b0382166110f7576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4781111561113a576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610599565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611187576040519150601f19603f3d011682016040523d82523d6000602084013e61118c565b606091505b5050905080610862576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038416611207576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038216611247576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015285916000918316906370a0823190602401602060405180830381865afa1580156112ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cf9190612431565b90506112dd828686866118e9565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152849183918516906370a0823190602401602060405180830381865afa158015611340573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113649190612431565b61136e9190612154565b14610471576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608160008167ffffffffffffffff8111156113c3576113c3611d98565b6040519080825280602002602001820160405280156113ec578160200160208202803683370190505b50905060005b8281101561145c5761143786868381811061140f5761140f61218e565b905060200281019061142191906121bd565b611432906080810190606001612173565b6109cd565b8282815181106114495761144961218e565b60209081029190910101526001016113f2565b50949350505050565b61147b6114756020830183612173565b3b151590565b6114b1576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036114f1576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611506610b726060850160408601612173565b611511576000611517565b82608001355b9050600061152e6114326060860160408701612173565b905060006115456114326080870160608801612173565b90508260000361157c5761157c6115626060870160408801612173565b6115726040880160208901612173565b8760800135610e7e565b84608001358210156115c7576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610599565b6000806115d76020880188612173565b6001600160a01b0316856115ee60a08a018a6121fb565b6040516115fc929190612656565b60006040518083038185875af1925050503d8060008114611639576040519150601f19603f3d011682016040523d82523d6000602084013e61163e565b606091505b5091509150816116895760006116538261193a565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105999190612666565b600061169e61143260808a0160608b01612173565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896116cf60208b018b612173565b6116df60608c0160408d01612173565b6116ef60808d0160608e01612173565b8c60800135898711611701578661170b565b61170b8a88612154565b604080519687526001600160a01b0395861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156117c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ea9190612431565b6117f49190612679565b6040516001600160a01b038516602482015260448101829052909150610f9c9085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526119b8565b6040516001600160a01b0383166024820152604481018290526108629084907fa9059cbb000000000000000000000000000000000000000000000000000000009060640161183c565b6040516001600160a01b0380851660248301528316604482015260648101829052610f9c9085907f23b872dd000000000000000000000000000000000000000000000000000000009060840161183c565b606060448251101561197f57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b600061199b60048085516119939190612154565b859190611ab7565b9050808060200190518101906119b1919061268c565b9392505050565b6000611a0d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611bb29092919063ffffffff16565b8051909150156108625780806020019051810190611a2b91906126fa565b610862576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610599565b606081611ac581601f612679565b1015611afd576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b078284612679565b84511015611b41576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611b60576040519150600082526020820160405261145c565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611b99578051835260209283019201611b81565b5050858452601f01601f19166040525050949350505050565b6060611bc18484600085611bc9565b949350505050565b606082471015611c5b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610599565b6001600160a01b0385163b611ccc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610599565b600080866001600160a01b03168587604051611ce89190612717565b60006040518083038185875af1925050503d8060008114611d25576040519150601f19603f3d011682016040523d82523d6000602084013e611d2a565b606091505b5091509150611d3a828286611d45565b979650505050505050565b60608315611d545750816119b1565b825115611d645782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105999190612666565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611deb57611deb611d98565b60405290565b60405160e0810167ffffffffffffffff81118282101715611deb57611deb611d98565b604051601f8201601f1916810167ffffffffffffffff81118282101715611e3d57611e3d611d98565b604052919050565b600067ffffffffffffffff821115611e5f57611e5f611d98565b50601f01601f191660200190565b600082601f830112611e7e57600080fd5b8135611e91611e8c82611e45565b611e14565b818152846020838601011115611ea657600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b0381168114611eda57600080fd5b919050565b8015158114611eed57600080fd5b50565b8035611eda81611edf565b60006101408284031215611f0e57600080fd5b611f16611dc7565b905081358152602082013567ffffffffffffffff80821115611f3757600080fd5b611f4385838601611e6d565b60208401526040840135915080821115611f5c57600080fd5b50611f6984828501611e6d565b604083015250611f7b60608301611ec3565b6060820152611f8c60808301611ec3565b6080820152611f9d60a08301611ec3565b60a082015260c082013560c082015260e082013560e0820152610100611fc4818401611ef0565b90820152610120611fd6838201611ef0565b9082015292915050565b60006101208284031215611ff357600080fd5b50919050565b6000806000806060858703121561200f57600080fd5b843567ffffffffffffffff8082111561202757600080fd5b61203388838901611efb565b9550602087013591508082111561204957600080fd5b818701915087601f83011261205d57600080fd5b81358181111561206c57600080fd5b8860208260051b850101111561208157600080fd5b60208301955080945050604087013591508082111561209f57600080fd5b506120ac87828801611fe0565b91505092959194509250565b600080604083850312156120cb57600080fd5b823567ffffffffffffffff808211156120e357600080fd5b9084019061014082870312156120f857600080fd5b9092506020840135908082111561210e57600080fd5b5061211b85828601611fe0565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610a6657610a66612125565b6000610a663683611efb565b60006020828403121561218557600080fd5b6119b182611ec3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126121f157600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261223057600080fd5b83018035915067ffffffffffffffff82111561224b57600080fd5b60200191503681900382131561226057600080fd5b9250929050565b60006020828403121561227957600080fd5b813563ffffffff811681146119b157600080fd5b60006020828403121561229f57600080fd5b81356119b181611edf565b60005b838110156122c55781810151838201526020016122ad565b50506000910152565b600081518084526122e68160208601602086016122aa565b601f01601f19169290920160200192915050565b60208152600082516080602084015261231f60a0840182516001600160a01b03169052565b60208101516101808060c086015261233b6102208601836122ce565b9150604083015161235460e087018263ffffffff169052565b50606083015161010061236e8188018363ffffffff169052565b6080850151915061012061238c818901846001600160a01b03169052565b60a086015192506101406123aa818a01856001600160a01b03169052565b60c087015193506101606123c1818b018615159052565b60e08801511515958a0195909552918601516001600160a01b039081166101a08a0152908601516101c0890152908501516101e088015291909301516102008601526020860151908116604086015291506040850151606085015260608501516080850152809250505092915050565b60006020828403121561244357600080fd5b5051919050565b6000815161245c8185602086016122aa565b601f01601f19169290920192915050565b8151815260006020830151805161248b8160208601602085016122aa565b6125366125266125166125096124fc6124e66124d06124ba6020601f19601f8b01168d010160408e015161244a565b60608d01516001600160a01b0316815260200190565b60808c01516001600160a01b0316815260200190565b60a08b01516001600160a01b0316815260200190565b60c08a0151815260200190565b60e0890151815260200190565b6101008801511515815260200190565b6101208701511515815260200190565b95945050505050565b600060e0823603121561255157600080fd5b612559611df1565b61256283611ec3565b815261257060208401611ec3565b602082015261258160408401611ec3565b604082015261259260608401611ec3565b60608201526080830135608082015260a083013567ffffffffffffffff8111156125bb57600080fd5b6125c736828601611e6d565b60a0830152506125d960c08401611ef0565b60c082015292915050565b600080858511156125f457600080fd5b8386111561260157600080fd5b5050820193919092039150565b7fffffffff00000000000000000000000000000000000000000000000000000000813581811691600485101561264e5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b6020815260006119b160208301846122ce565b80820180821115610a6657610a66612125565b60006020828403121561269e57600080fd5b815167ffffffffffffffff8111156126b557600080fd5b8201601f810184136126c657600080fd5b80516126d4611e8c82611e45565b8181528560208385010111156126e957600080fd5b6125368260208301602086016122aa565b60006020828403121561270c57600080fd5b81516119b181611edf565b600082516121f18184602087016122aa56fea264697066735822122033d670dd7fc435e328370e6ba6485c476a0143bc28915fc91e272523321f4aeb64736f6c63430008100033";

type AmarokFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AmarokFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AmarokFacet__factory extends ContractFactory {
  constructor(...args: AmarokFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _connextHandler: string,
    _srcChainDomain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AmarokFacet> {
    return super.deploy(
      _connextHandler,
      _srcChainDomain,
      overrides || {}
    ) as Promise<AmarokFacet>;
  }
  override getDeployTransaction(
    _connextHandler: string,
    _srcChainDomain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _connextHandler,
      _srcChainDomain,
      overrides || {}
    );
  }
  override attach(address: string): AmarokFacet {
    return super.attach(address) as AmarokFacet;
  }
  override connect(signer: Signer): AmarokFacet__factory {
    return super.connect(signer) as AmarokFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AmarokFacetInterface {
    return new utils.Interface(_abi) as AmarokFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AmarokFacet {
    return new Contract(address, _abi, signerOrProvider) as AmarokFacet;
  }
}
