/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AmarokFacet,
  AmarokFacetInterface,
} from "../../../src/Facets/AmarokFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IConnextHandler",
        name: "_connextHandler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_srcChainDomain",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyContractOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
    ],
    name: "UnknownAmarokDomain",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
    ],
    name: "AmarokDomainSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: true,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "setAmarokDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "forceSlow",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "receiveLocal",
            type: "bool",
          },
          {
            internalType: "address",
            name: "callback",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "callbackFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "relayerFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slippageTol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "originMinOut",
            type: "uint256",
          },
        ],
        internalType: "struct AmarokFacet.AmarokData",
        name: "_amarokData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaAmarok",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "forceSlow",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "receiveLocal",
            type: "bool",
          },
          {
            internalType: "address",
            name: "callback",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "callbackFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "relayerFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slippageTol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "originMinOut",
            type: "uint256",
          },
        ],
        internalType: "struct AmarokFacet.AmarokData",
        name: "_amarokData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaAmarok",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002aa738038062002aa7833981016040819052620000349162000051565b6001600160a01b0390911660805263ffffffff1660a052620000a3565b600080604083850312156200006557600080fd5b82516001600160a01b03811681146200007d57600080fd5b602084015190925063ffffffff811681146200009857600080fd5b809150509250929050565b60805160a0516129d7620000d06000396000610848015260008181610939015261099201526129d76000f3fe6080604052600436106100345760003560e01c8063280c6deb146100395780633cfeaa031461005b5780639d716e4f1461006e575b600080fd5b34801561004557600080fd5b50610059610054366004611ffd565b610081565b005b61005961006936600461204f565b61011c565b61005961007c366004612304565b61038d565b6100896105e0565b60007feb4198458a814793befc1a2917bf545aff2a1c03cd5d74bd029e61245d484aaf60008481526020829052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff871690811790915590519293509185917ff7d9e84ed3fcc363e379b957a2727eab9d6cb676f99533cbe3b68dadc0153dd991a3505050565b33600061012934476123f2565b905061013484612405565b80610100015115610171576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61017a85612405565b60a08101516001600160a01b03166101be576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101fc576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61020586612405565b60808101516001600160a01b0316610249576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102c4576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181556102da61014089016101208a01612411565b15156102e588610648565b15151461031e576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61033b61033160a08a0160808b0161242e565b8960c0013561065f565b61034d61034789612405565b886107c5565b600090819055479350915050828211610367576000610371565b61037183836123f2565b905080156103855761038560008583610a4f565b505050505050565b33600061039a34476123f2565b9050858061010001516103d9576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866103ef8160a001516001600160a01b03161590565b15610426576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610464576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8761047a81608001516001600160a01b03161590565b156104b1576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161052c576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181556101208a0151151561054188610648565b15151461057a576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61058f8a600001518b60c001518b8b33610a73565b60c08b015261059e8a886107c5565b6000908190554793509150508282116105b85760006105c2565b6105c283836123f2565b905080156105d6576105d660008583610a4f565b5050505050505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b03163314610646576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000806106558380612449565b9050119050919050565b6001600160a01b0382166106ab57803410156106a7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b806000036106e5576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610745573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076991906124b5565b9050818110156107b4576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b6107c083333085610ba9565b505050565b60006107d48360e00151610d87565b60408051610200810190915260a0808601516001600160a01b0316608083019081529293506000928291820161080a8780612449565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525063ffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660208084019190915290871660408084019190915260a0808b01516001600160a01b03166060850152336080850152909201916108ab91908901908901612411565b151581526020016108c26060880160408901612411565b151581526020016108d9608088016060890161242e565b6001600160a01b03168152602001866080013581526020018660a0013581526020018660c00135815250815260200185608001516001600160a01b031681526020018560c0015181526020018460e00135815250905061096284608001517f00000000000000000000000000000000000000000000000000000000000000008660c00151610e05565b6040517f35c94dfc0000000000000000000000000000000000000000000000000000000081526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906335c94dfc906109c790849060040161251e565b6020604051808303816000875af11580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0a91906124b5565b5083604051610a199190612678565b604051908190038120907fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f190600090a250505050565b6001600160a01b03831615610a69576107c0838383610f29565b6107c0828261103e565b600082808203610aaf576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610abe6001856123f2565b818110610acd57610acd61274a565b9050602002810190610adf9190612779565b610af090608081019060600161242e565b90506000610afd8261114e565b90506001600160a01b038216610b1a57610b1734826123f2565b90505b6000610b2688886111ed565b9050610b3288886112ec565b610b3f8a8989898561134d565b600082610b4b8561114e565b610b5591906123f2565b905089811015610b9b576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044016107ab565b9a9950505050505050505050565b6001600160a01b038416610be9576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038216610c29576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610c8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb191906124b5565b9050610cbf828686866116cb565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152849183918516906370a0823190602401602060405180830381865afa158015610d22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4691906124b5565b610d5091906123f2565b14610385576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008181527feb4198458a814793befc1a2917bf545aff2a1c03cd5d74bd029e61245d484aaf6020819052604082205463ffffffff16808303610dfe576040517f34d1a6a800000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526024016107ab565b9392505050565b6001600160a01b038316610e1857505050565b6001600160a01b038216610e58576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610ec1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee591906124b5565b905081811015610f2357610f238484610f1e847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6123f2565b61177c565b50505050565b6001600160a01b038316610f69576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa158015610fc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fed91906124b5565b905080821115611033576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016107ab565b610f23848484611860565b6001600160a01b03821661107e576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156110c1576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016107ab565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461110e576040519150601f19603f3d011682016040523d82523d6000602084013e611113565b606091505b50509050806107c0576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001600160a01b038216156111e5576040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa1580156111bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e091906124b5565b6111e7565b475b92915050565b60608160008167ffffffffffffffff81111561120b5761120b6120bc565b604051908082528060200260200182016040528015611234578160200160208202803683370190505b5090506000805b838110156112e1578686828181106112555761125561274a565b90506020028101906112679190612779565b61127890608081019060600161242e565b91506112838261114e565b8382815181106112955761129561274a565b60209081029190910101526001600160a01b0382166112d957348382815181106112c1576112c161274a565b602002602001018181516112d591906123f2565b9052505b60010161123b565b509095945050505050565b60005b818110156107c057600083838381811061130b5761130b61274a565b905060200281019061131d9190612779565b611326906127b7565b90508060c0015115611344576113448160400151826080015161065f565b506001016112ef565b8383838382600181146115e657600085856113696001856123f2565b8181106113785761137861274a565b905060200281019061138a9190612779565b61139b90608081019060600161242e565b9050600089815b8181101561152c57368d8d838181106113bd576113bd61274a565b90506020028101906113cf9190612779565b90506113f16113e4606083016040840161242e565b6001600160a01b03161590565b80611447575061144761140a604083016020840161242e565b6001600160a01b031660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561145e575061145e61140a602083018361242e565b80156114e357506114e361147560a0830183612449565b6114849160049160009161285c565b61148d91612886565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611519576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115238f826118a9565b506001016113a2565b505060005b61153c6001856123f2565b8110156115de5760008888838181106115575761155761274a565b90506020028101906115699190612779565b61157a90608081019060600161242e565b9050836001600160a01b0316816001600160a01b0316146115d5578582815181106115a7576115a761274a565b60200260200101516115b88261114e565b6115c291906123f2565b925082156115d5576115d5818885610a4f565b50600101611531565b5050506116bf565b8760005b818110156116bc57368b8b838181106116055761160561274a565b90506020028101906116179190612779565b905061162c6113e4606083016040840161242e565b80611645575061164561140a604083016020840161242e565b801561165c575061165c61140a602083018361242e565b8015611673575061167361147560a0830183612449565b6116a9576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116b38d826118a9565b506001016115ea565b50505b50505050505050505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610f239085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611ba5565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156117e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180a91906124b5565b61181491906128ce565b6040516001600160a01b038516602482015260448101829052909150610f239085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611718565b6040516001600160a01b0383166024820152604481018290526107c09084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611718565b6118bf6118b9602083018361242e565b3b151590565b6118f5576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611935576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061194a6113e4606085016040860161242e565b61195557600061195b565b82608001355b90506000611977611972606086016040870161242e565b61114e565b9050600061198e611972608087016060880161242e565b9050826000036119c5576119c56119ab606087016040880161242e565b6119bb604088016020890161242e565b8760800135610e05565b8460800135821015611a10576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016107ab565b600080611a20602088018861242e565b6001600160a01b031685611a3760a08a018a612449565b604051611a459291906128e1565b60006040518083038185875af1925050503d8060008114611a82576040519150601f19603f3d011682016040523d82523d6000602084013e611a87565b606091505b509150915081611ad2576000611a9c82611ca4565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ab91906128f1565b6000611ae761197260808a0160608b0161242e565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611b1860208b018b61242e565b611b2860608c0160408d0161242e565b611b3860808d0160608e0161242e565b8c60800135898711611b4a5786611b54565b611b548a886123f2565b604080519687526001600160a01b0395861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6000611bfa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611d1b9092919063ffffffff16565b8051909150156107c05780806020019051810190611c189190612904565b6107c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016107ab565b6060604482511015611ce957505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611d056004808551611cfd91906123f2565b859190611d32565b905080806020019051810190610dfe9190612921565b6060611d2a8484600085611e2e565b949350505050565b606081611d4081601f6128ce565b1015611d78576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d8282846128ce565b84511015611dbc576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611ddb5760405191506000825260208201604052611e25565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611e14578051835260209283019201611dfc565b5050858452601f01601f1916604052505b50949350505050565b606082471015611ec0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016107ab565b6001600160a01b0385163b611f31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107ab565b600080866001600160a01b03168587604051611f4d919061298f565b60006040518083038185875af1925050503d8060008114611f8a576040519150601f19603f3d011682016040523d82523d6000602084013e611f8f565b606091505b5091509150611f9f828286611faa565b979650505050505050565b60608315611fb9575081610dfe565b825115611fc95782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ab91906128f1565b6000806040838503121561201057600080fd5b82359150602083013563ffffffff8116811461202b57600080fd5b809150509250929050565b6000610100828403121561204957600080fd5b50919050565b6000806040838503121561206257600080fd5b823567ffffffffffffffff8082111561207a57600080fd5b90840190610140828703121561208f57600080fd5b909250602084013590808211156120a557600080fd5b506120b285828601612036565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561210f5761210f6120bc565b60405290565b60405160e0810167ffffffffffffffff8111828210171561210f5761210f6120bc565b604051601f8201601f1916810167ffffffffffffffff81118282101715612161576121616120bc565b604052919050565b600067ffffffffffffffff821115612183576121836120bc565b50601f01601f191660200190565b600082601f8301126121a257600080fd5b81356121b56121b082612169565b612138565b8181528460208386010111156121ca57600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b03811681146121fe57600080fd5b919050565b801515811461221157600080fd5b50565b80356121fe81612203565b6000610140828403121561223257600080fd5b61223a6120eb565b905081358152602082013567ffffffffffffffff8082111561225b57600080fd5b61226785838601612191565b6020840152604084013591508082111561228057600080fd5b5061228d84828501612191565b60408301525061229f606083016121e7565b60608201526122b0608083016121e7565b60808201526122c160a083016121e7565b60a082015260c082013560c082015260e082013560e08201526101006122e8818401612214565b908201526101206122fa838201612214565b9082015292915050565b6000806000806060858703121561231a57600080fd5b843567ffffffffffffffff8082111561233257600080fd5b61233e8883890161221f565b9550602087013591508082111561235457600080fd5b818701915087601f83011261236857600080fd5b81358181111561237757600080fd5b8860208260051b850101111561238c57600080fd5b6020830195508094505060408701359150808211156123aa57600080fd5b506123b787828801612036565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156111e7576111e76123c3565b60006111e7368361221f565b60006020828403121561242357600080fd5b8135610dfe81612203565b60006020828403121561244057600080fd5b610dfe826121e7565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261247e57600080fd5b83018035915067ffffffffffffffff82111561249957600080fd5b6020019150368190038213156124ae57600080fd5b9250929050565b6000602082840312156124c757600080fd5b5051919050565b60005b838110156124e95781810151838201526020016124d1565b50506000910152565b6000815180845261250a8160208601602086016124ce565b601f01601f19169290920160200192915050565b60208152600082516080602084015261254360a0840182516001600160a01b03169052565b60208101516101808060c086015261255f6102208601836124f2565b9150604083015161257860e087018263ffffffff169052565b5060608301516101006125928188018363ffffffff169052565b608085015191506101206125b0818901846001600160a01b03169052565b60a086015192506101406125ce818a01856001600160a01b03169052565b60c087015193506101606125e5818b018615159052565b60e08801511515958a0195909552918601516001600160a01b039081166101a08a0152908601516101c0890152908501516101e088015291909301516102008601526020860151908116604086015291506040850151606085015260608501516080850152809250505092915050565b600081516126678185602086016124ce565b601f01601f19169290920192915050565b815181526000602083015180516126968160208601602085016124ce565b6127416127316127216127146127076126f16126db6126c56020601f19601f8b01168d010160408e0151612655565b60608d01516001600160a01b0316815260200190565b60808c01516001600160a01b0316815260200190565b60a08b01516001600160a01b0316815260200190565b60c08a0151815260200190565b60e0890151815260200190565b6101008801511515815260200190565b6101208701511515815260200190565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126127ad57600080fd5b9190910192915050565b600060e082360312156127c957600080fd5b6127d1612115565b6127da836121e7565b81526127e8602084016121e7565b60208201526127f9604084016121e7565b604082015261280a606084016121e7565b60608201526080830135608082015260a083013567ffffffffffffffff81111561283357600080fd5b61283f36828601612191565b60a08301525061285160c08401612214565b60c082015292915050565b6000808585111561286c57600080fd5b8386111561287957600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156128c65780818660040360031b1b83161692505b505092915050565b808201808211156111e7576111e76123c3565b8183823760009101908152919050565b602081526000610dfe60208301846124f2565b60006020828403121561291657600080fd5b8151610dfe81612203565b60006020828403121561293357600080fd5b815167ffffffffffffffff81111561294a57600080fd5b8201601f8101841361295b57600080fd5b80516129696121b082612169565b81815285602083850101111561297e57600080fd5b6127418260208301602086016124ce565b600082516127ad8184602087016124ce56fea2646970667358221220584b82fbb354f0f2cebd78efd3bacefe23a10c6fa017819fe297c921ceea77be64736f6c63430008110033";

type AmarokFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AmarokFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AmarokFacet__factory extends ContractFactory {
  constructor(...args: AmarokFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _connextHandler: string,
    _srcChainDomain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AmarokFacet> {
    return super.deploy(
      _connextHandler,
      _srcChainDomain,
      overrides || {}
    ) as Promise<AmarokFacet>;
  }
  override getDeployTransaction(
    _connextHandler: string,
    _srcChainDomain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _connextHandler,
      _srcChainDomain,
      overrides || {}
    );
  }
  override attach(address: string): AmarokFacet {
    return super.attach(address) as AmarokFacet;
  }
  override connect(signer: Signer): AmarokFacet__factory {
    return super.connect(signer) as AmarokFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AmarokFacetInterface {
    return new utils.Interface(_abi) as AmarokFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AmarokFacet {
    return new Contract(address, _abi, signerOrProvider) as AmarokFacet;
  }
}
