/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  XChainExecFacet,
  XChainExecFacetInterface,
} from "../../../src/Facets/XChainExecFacet";

const _abi = [
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeValueWithERC",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "bridge",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "bridgeData",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "integrator",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sendingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "destinationChainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "hasSourceSwap",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "hasDestinationCall",
        type: "bool",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ILiFi.LiFiData",
        name: "_lifiData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "transferredAssetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
    ],
    name: "swapAndCompleteBridgeTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d7f806100206000396000f3fe60806040526004361061001e5760003560e01c8063254692d214610023575b600080fd5b610036610031366004611751565b610038565b005b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100b3576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180825560009081908190889088906100cd9082611845565b8181106100dc576100dc61185c565b90506020028101906100ee919061188b565b6100ff9060808101906060016118c9565b905073ffffffffffffffffffffffffffffffffffffffff81161561012d576101268161029e565b9150610144565b346101378261029e565b6101419190611845565b91505b73ffffffffffffffffffffffffffffffffffffffff861615610215576101698661029e565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815233600482015230602482015290935060009073ffffffffffffffffffffffffffffffffffffffff88169063dd62ed3e90604401602060405180830381865afa1580156101df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020391906118e6565b905061020f8782610357565b5061022c565b3461021f8761029e565b6102299190611845565b92505b6102406102388a611a43565b89898861037d565b600061024b8761029e565b9050838111156102695761026987876102648785611845565b610762565b60006102748361029e565b90508381111561028d5761028d83886102648785611845565b505060009093555050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82161561034f576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034a91906118e6565b610351565b475b92915050565b610379828273ffffffffffffffffffffffffffffffffffffffff821615610798565b5050565b828282816001811461060b57600061039585856108b3565b9050600085856103a6600186611845565b8181106103b5576103b561185c565b90506020028101906103c7919061188b565b6103d89060808101906060016118c9565b90506000805b8981101561052657368b8b838181106103f9576103f961185c565b905060200281019061040b919061188b565b905060008061042060408401602085016118c9565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff16801561048c575060008061046160208401846118c9565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff165b80156104d15750600160006104a460a0840184611aef565b6104b391600891600091611b5b565b6104bc91611b85565b815260208101919091526040016000205460ff165b610507576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c51610513908261097d565b508061051e81611bc1565b9150506103de565b5060005b610535600186611845565b8110156106025760008888838181106105505761055061185c565b9050602002810190610562919061188b565b6105739060808101906060016118c9565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105ae57506105f0565b8482815181106105c0576105c061185c565b60200260200101516105d18261029e565b6105db9190611845565b925082156105ee576105ee818885610762565b505b806105fa81611bc1565b91505061052a565b50505050610758565b60005b8681101561075657368888838181106106295761062961185c565b905060200281019061063b919061188b565b905060008061065060408401602085016118c9565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff1680156106bc575060008061069160208401846118c9565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff165b80156107015750600160006106d460a0840184611aef565b6106e391600891600091611b5b565b6106ec91611b85565b815260208101919091526040016000205460ff165b610737576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8951610743908261097d565b508061074e81611bc1565b91505061060e565b505b5050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83161561078e57610789838383610c5a565b505050565b6107898282610cb2565b816000036107d2576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b801561081157813414610789576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3415610848576040517e3f45b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006108538461029e565b905061086184333086610d99565b828161086c8661029e565b6108769190611845565b146108ad576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b60608160008167ffffffffffffffff8111156108d1576108d16118ff565b6040519080825280602002602001820160405280156108fa578160200160208202803683370190505b50905060005b828110156109745761094586868381811061091d5761091d61185c565b905060200281019061092f919061188b565b6109409060808101906060016118c9565b61029e565b8282815181106109575761095761185c565b60209081029190910101528061096c81611bc1565b915050610900565b50949350505050565b61099361098d60208301836118c9565b3b151590565b6109c9576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003610a09576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080610a1c60608501604086016118c9565b90506000610a3060808601606087016118c9565b90506000610a3d8361029e565b90506000610a4a8361029e565b90506000868310610a5c576000610a66565b610a668388611845565b905073ffffffffffffffffffffffffffffffffffffffff851615610ab557610a9e85610a9860408b0160208c016118c9565b89610e3f565b8015610ab057610ab085333084610d99565b610ab9565b8695505b600080610ac960208b018b6118c9565b73ffffffffffffffffffffffffffffffffffffffff1688610aed60a08d018d611aef565b604051610afb929190611bf9565b60006040518083038185875af1925050503d8060008114610b38576040519150601f19603f3d011682016040523d82523d6000602084013e610b3d565b606091505b509150915081610b91576000610b5282610f7b565b9050806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b889190611c35565b60405180910390fd5b6000610b9c8761029e565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388c610bcd60208e018e6118c9565b8d6040016020810190610be091906118c9565b8a8e8a8711610bef5786610bf9565b610bf98b88611845565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610ca7576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610789838383610ff9565b73ffffffffffffffffffffffffffffffffffffffff8216610cff576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610d59576040519150601f19603f3d011682016040523d82523d6000602084013e610d5e565b606091505b5050905080610789576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416610de6576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610e33576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108ad848484846110cd565b73ffffffffffffffffffffffffffffffffffffffff8316610e5f57505050565b73ffffffffffffffffffffffffffffffffffffffff8216610eac576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610f22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4691906118e6565b9050818110156108ad576108ad84847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61112b565b6060604482511015610fc057505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000610fdc6004808551610fd49190611845565b8591906112ad565b905080806020019051810190610ff29190611c86565b9392505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526107899084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611426565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526108ad9085907f23b872dd000000000000000000000000000000000000000000000000000000009060840161104b565b8015806111cb57506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156111a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c991906118e6565b155b611257576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610b88565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526107899084907f095ea7b3000000000000000000000000000000000000000000000000000000009060640161104b565b6060816112bb81601f611cfd565b1015611323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f770000000000000000000000000000000000006044820152606401610b88565b61132d8284611cfd565b84511015611397576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e64730000000000000000000000000000006044820152606401610b88565b6060821580156113b65760405191506000825260208201604052610974565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156113ef5780518352602092830192016113d7565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0166040525050949350505050565b6000611488826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166115329092919063ffffffff16565b80519091501561078957808060200190518101906114a69190611d15565b610789576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610b88565b60606115418484600085611549565b949350505050565b6060824710156115db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610b88565b843b611643576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b88565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161166c9190611d37565b60006040518083038185875af1925050503d80600081146116a9576040519150601f19603f3d011682016040523d82523d6000602084013e6116ae565b606091505b50915091506116be8282866116c9565b979650505050505050565b606083156116d8575081610ff2565b8251156116e85782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b889190611c35565b73ffffffffffffffffffffffffffffffffffffffff8116811461173e57600080fd5b50565b803561174c8161171c565b919050565b60008060008060006080868803121561176957600080fd5b853567ffffffffffffffff8082111561178157600080fd5b90870190610100828a03121561179657600080fd5b909550602087013590808211156117ac57600080fd5b818801915088601f8301126117c057600080fd5b8135818111156117cf57600080fd5b8960208260051b85010111156117e457600080fd5b6020830196508095505050506117fc60408701611741565b915061180a60608701611741565b90509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561185757611857611816565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff418336030181126118bf57600080fd5b9190910192915050565b6000602082840312156118db57600080fd5b8135610ff28161171c565b6000602082840312156118f857600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611952576119526118ff565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561199f5761199f6118ff565b604052919050565b600067ffffffffffffffff8211156119c1576119c16118ff565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126119fe57600080fd5b8135611a11611a0c826119a7565b611958565b818152846020838601011115611a2657600080fd5b816020850160208301376000918101602001919091529392505050565b60006101008236031215611a5657600080fd5b611a5e61192e565b82358152602083013567ffffffffffffffff811115611a7c57600080fd5b611a88368286016119ed565b602083015250611a9a60408401611741565b6040820152611aab60608401611741565b6060820152611abc60808401611741565b6080820152611acd60a08401611741565b60a082015260c083013560c082015260e083013560e082015280915050919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611b2457600080fd5b83018035915067ffffffffffffffff821115611b3f57600080fd5b602001915036819003821315611b5457600080fd5b9250929050565b60008085851115611b6b57600080fd5b83861115611b7857600080fd5b5050820193919092039150565b80356020831015610351577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611bf257611bf2611816565b5060010190565b8183823760009101908152919050565b60005b83811015611c24578181015183820152602001611c0c565b838111156108ad5750506000910152565b6020815260008251806020840152611c54816040850160208701611c09565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600060208284031215611c9857600080fd5b815167ffffffffffffffff811115611caf57600080fd5b8201601f81018413611cc057600080fd5b8051611cce611a0c826119a7565b818152856020838501011115611ce357600080fd5b611cf4826020830160208601611c09565b95945050505050565b60008219821115611d1057611d10611816565b500190565b600060208284031215611d2757600080fd5b81518015158114610ff257600080fd5b600082516118bf818460208701611c0956fea26469706673582212208836fcdd44be79bf137c778fc522b467cfb218b064cffd3cbab4bf5afb76cd5964736f6c634300080d0033";

type XChainExecFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XChainExecFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XChainExecFacet__factory extends ContractFactory {
  constructor(...args: XChainExecFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XChainExecFacet> {
    return super.deploy(overrides || {}) as Promise<XChainExecFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): XChainExecFacet {
    return super.attach(address) as XChainExecFacet;
  }
  override connect(signer: Signer): XChainExecFacet__factory {
    return super.connect(signer) as XChainExecFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XChainExecFacetInterface {
    return new utils.Interface(_abi) as XChainExecFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XChainExecFacet {
    return new Contract(address, _abi, signerOrProvider) as XChainExecFacet;
  }
}
