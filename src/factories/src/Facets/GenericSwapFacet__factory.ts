/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GenericSwapFacet,
  GenericSwapFacetInterface,
} from "../../../src/Facets/GenericSwapFacet";

const _abi = [
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "integrator",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "referrer",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fromAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "toAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toAmount",
        type: "uint256",
      },
    ],
    name: "LiFiSwappedGeneric",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: true,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transactionId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_integrator",
        type: "string",
      },
      {
        internalType: "string",
        name: "_referrer",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_minAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
    ],
    name: "swapTokensGeneric",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506120da806100206000396000f3fe60806040526004361061001e5760003560e01c8063ad15453e14610023575b600080fd5b610036610031366004611a6c565b610038565b005b3360006100453447611b78565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b8054919250907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100c4576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815560006100d78c8888883361020e565b9050600086866100e8600182611b78565b8181106100f7576100f7611b8b565b90506020028101906101099190611bba565b61011a906080810190606001611c21565b9050610127813384610351565b8c7f93517b7c6f32856737008edf37cf2542b55d27d83fa299aa216f55a982a6ee1d8d8d8d8d8c8c600081811061016057610160611b8b565b90506020028101906101729190611bba565b610183906060810190604001611c21565b878e8e600081811061019757610197611b8b565b90506020028101906101a99190611bba565b608001358a6040516101c2989796959493929190611c67565b60405180910390a2505060009081905547908282116101e25760006101ec565b6101ec8383611b78565b905080156102005761020060008583610351565b505050505050505050505050565b6000828103610249576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008484610258600182611b78565b81811061026757610267611b8b565b90506020028101906102799190611bba565b61028a906080810190606001611c21565b9050600073ffffffffffffffffffffffffffffffffffffffff8216156102b15760006102b3565b345b90506000816102c184610387565b6102cb9190611b78565b90506102d78787610440565b6102e3898888886104a1565b6000816102ef85610387565b6102f99190611b78565b905088811015610344576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018a9052602481018290526044015b60405180910390fd5b9998505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83161561037d57610378838383610887565b505050565b61037882826109bc565b600073ffffffffffffffffffffffffffffffffffffffff821615610438576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa15801561040f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104339190611ccc565b61043a565b475b92915050565b60005b8181101561037857600083838381811061045f5761045f611b8b565b90506020028101906104719190611bba565b61047a90611e08565b90508060c00151156104985761049881604001518260800151610ae6565b50600101610443565b82828281600181146107a65760006104b98585610c5c565b9050600085856104ca600186611b78565b8181106104d9576104d9611b8b565b90506020028101906104eb9190611bba565b6104fc906080810190606001611c21565b905060008060005b8a8110156106a857368c8c8381811061051f5761051f611b8b565b90506020028101906105319190611bba565b90506105606105466060830160408401611c21565b73ffffffffffffffffffffffffffffffffffffffff161590565b806105c357506105c36105796040830160208401611c21565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156105da57506105da6105796020830183611c21565b801561065f575061065f6105f160a0830183611ead565b61060091600491600091611f12565b61060991611f3c565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610695576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61069f8e82610d1c565b50600101610504565b5060005b6106b7600187611b78565b81101561079c5760008989838181106106d2576106d2611b8b565b90506020028101906106e49190611bba565b6106f5906080810190606001611c21565b90508473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107935761073381610387565b925085828151811061074757610747611b8b565b6020026020010151831161075b5782610780565b85828151811061076d5761076d611b8b565b6020026020010151836107809190611b78565b9350831561079357610793818986610351565b506001016106ac565b505050505061087d565b60005b8681101561087b57368888838181106107c4576107c4611b8b565b90506020028101906107d69190611bba565b90506107eb6105466060830160408401611c21565b8061080457506108046105796040830160208401611c21565b801561081b575061081b6105796020830183611c21565b801561083257506108326105f160a0830183611ead565b610868576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108728a82610d1c565b506001016107a9565b505b5050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166108d4576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610941573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109659190611ccc565b9050808211156109ab576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161033b565b6109b684848461102d565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610a09576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115610a4c576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810182905247602482015260440161033b565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610aa6576040519150601f19603f3d011682016040523d82523d6000602084013e610aab565b606091505b5050905080610378576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610b3f5780341015610b3b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610b79576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610be6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0a9190611ccc565b905081811015610c50576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161033b565b610378833330856110e3565b60608160008167ffffffffffffffff811115610c7a57610c7a611ce5565b604051908082528060200260200182016040528015610ca3578160200160208202803683370190505b50905060005b82811015610d1357610cee868683818110610cc657610cc6611b8b565b9050602002810190610cd89190611bba565b610ce9906080810190606001611c21565b610387565b828281518110610d0057610d00611b8b565b6020908102919091010152600101610ca9565b50949350505050565b610d32610d2c6020830183611c21565b3b151590565b610d68576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003610da8576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610dbd6105466060850160408601611c21565b610dc8576000610dce565b82608001355b90506000610de5610ce96060860160408701611c21565b90506000610dfc610ce96080870160608801611c21565b905082600003610e3357610e33610e196060870160408801611c21565b610e296040880160208901611c21565b87608001356112fd565b8460800135821015610e7e576040517fcf479181000000000000000000000000000000000000000000000000000000008152608086013560048201526024810183905260440161033b565b600080610e8e6020880188611c21565b73ffffffffffffffffffffffffffffffffffffffff1685610eb260a08a018a611ead565b604051610ec0929190611f84565b60006040518083038185875af1925050503d8060008114610efd576040519150601f19603f3d011682016040523d82523d6000602084013e610f02565b606091505b509150915081610f4d576000610f1782611442565b9050806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033b9190611fb8565b6000610f62610ce960808a0160608b01611c21565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889610f9360208b018b611c21565b610fa360608c0160408d01611c21565b610fb360808d0160608e01611c21565b8c60800135898711610fc55786610fcf565b610fcf8a88611b78565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526103789084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526114c0565b73ffffffffffffffffffffffffffffffffffffffff8416611130576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661117d576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa1580156111ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112129190611ccc565b9050611220828686866115cc565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b49190611ccc565b6112be9190611b78565b146112f5576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661131d57505050565b73ffffffffffffffffffffffffffffffffffffffff821661136a576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa1580156113e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114049190611ccc565b9050818110156109b6576109b6848461143d847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611b78565b61162a565b606060448251101561148757505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b60006114a3600480855161149b9190611b78565b859190611728565b9050808060200190518101906114b99190611feb565b9392505050565b6000611522826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166118239092919063ffffffff16565b80519091501561037857808060200190518101906115409190612062565b610378576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161033b565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526109b69085907f23b872dd000000000000000000000000000000000000000000000000000000009060840161107f565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156116a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c59190611ccc565b6116cf919061207f565b60405173ffffffffffffffffffffffffffffffffffffffff85166024820152604481018290529091506109b69085907f095ea7b3000000000000000000000000000000000000000000000000000000009060640161107f565b60608161173681601f61207f565b101561176e576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611778828461207f565b845110156117b2576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060821580156117d15760405191506000825260208201604052610d13565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561180a5780518352602092830192016117f2565b5050858452601f01601f19166040525050949350505050565b6060611832848460008561183a565b949350505050565b6060824710156118cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161033b565b73ffffffffffffffffffffffffffffffffffffffff85163b61194a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161033b565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516119739190612092565b60006040518083038185875af1925050503d80600081146119b0576040519150601f19603f3d011682016040523d82523d6000602084013e6119b5565b606091505b50915091506119c58282866119d0565b979650505050505050565b606083156119df5750816114b9565b8251156119ef5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033b9190611fb8565b60008083601f840112611a3557600080fd5b50813567ffffffffffffffff811115611a4d57600080fd5b602083019150836020828501011115611a6557600080fd5b9250929050565b60008060008060008060008060a0898b031215611a8857600080fd5b88359750602089013567ffffffffffffffff80821115611aa757600080fd5b611ab38c838d01611a23565b909950975060408b0135915080821115611acc57600080fd5b611ad88c838d01611a23565b909750955060608b0135945060808b0135915080821115611af857600080fd5b818b0191508b601f830112611b0c57600080fd5b813581811115611b1b57600080fd5b8c60208260051b8501011115611b3057600080fd5b6020830194508093505050509295985092959890939650565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561043a5761043a611b49565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611bee57600080fd5b9190910192915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611c1c57600080fd5b919050565b600060208284031215611c3357600080fd5b6114b982611bf8565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b60c081526000611c7b60c083018a8c611c3c565b8281036020840152611c8e81898b611c3c565b73ffffffffffffffffffffffffffffffffffffffff978816604085015295909616606083015250608081019290925260a09091015295945050505050565b600060208284031215611cde57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715611d3757611d37611ce5565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611d6657611d66611ce5565b604052919050565b600067ffffffffffffffff821115611d8857611d88611ce5565b50601f01601f191660200190565b600082601f830112611da757600080fd5b8135611dba611db582611d6e565b611d3d565b818152846020838601011115611dcf57600080fd5b816020850160208301376000918101602001919091529392505050565b8015158114611dfa57600080fd5b50565b8035611c1c81611dec565b600060e08236031215611e1a57600080fd5b611e22611d14565b611e2b83611bf8565b8152611e3960208401611bf8565b6020820152611e4a60408401611bf8565b6040820152611e5b60608401611bf8565b60608201526080830135608082015260a083013567ffffffffffffffff811115611e8457600080fd5b611e9036828601611d96565b60a083015250611ea260c08401611dfd565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611ee257600080fd5b83018035915067ffffffffffffffff821115611efd57600080fd5b602001915036819003821315611a6557600080fd5b60008085851115611f2257600080fd5b83861115611f2f57600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015611f7c5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b60005b83811015611faf578181015183820152602001611f97565b50506000910152565b6020815260008251806020840152611fd7816040850160208701611f94565b601f01601f19169190910160400192915050565b600060208284031215611ffd57600080fd5b815167ffffffffffffffff81111561201457600080fd5b8201601f8101841361202557600080fd5b8051612033611db582611d6e565b81815285602083850101111561204857600080fd5b612059826020830160208601611f94565b95945050505050565b60006020828403121561207457600080fd5b81516114b981611dec565b8082018082111561043a5761043a611b49565b60008251611bee818460208701611f9456fea26469706673582212200b93c63f108e43febee959a70c79692555381edbc7612be3fb436349887ff0dc64736f6c63430008100033";

type GenericSwapFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GenericSwapFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GenericSwapFacet__factory extends ContractFactory {
  constructor(...args: GenericSwapFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GenericSwapFacet> {
    return super.deploy(overrides || {}) as Promise<GenericSwapFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GenericSwapFacet {
    return super.attach(address) as GenericSwapFacet;
  }
  override connect(signer: Signer): GenericSwapFacet__factory {
    return super.connect(signer) as GenericSwapFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GenericSwapFacetInterface {
    return new utils.Interface(_abi) as GenericSwapFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GenericSwapFacet {
    return new Contract(address, _abi, signerOrProvider) as GenericSwapFacet;
  }
}
