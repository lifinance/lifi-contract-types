/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GenericSwapFacet,
  GenericSwapFacetInterface,
} from "../../../src/Facets/GenericSwapFacet";

const _abi = [
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "integrator",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fromAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "toAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toAmount",
        type: "uint256",
      },
    ],
    name: "LiFiSwappedGeneric",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "bridge",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "bridgeData",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "integrator",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sendingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "destinationChainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "hasSourceSwap",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "hasDestinationCall",
        type: "bool",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ILiFi.LiFiData",
        name: "_lifiData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
    ],
    name: "swapTokensGeneric",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611c7d806100206000396000f3fe60806040526004361061001e5760003560e01c8063a4baa10c14610023575b600080fd5b61003661003136600461163b565b610038565b005b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100b3576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815560006100cc6100c58661180f565b85856101e3565b9050600084846100dd6001826118ea565b8181106100ec576100ec611901565b90506020028101906100fe9190611930565b61010f90608081019060600161196e565b905061011c8133846102e7565b85357f5575cf3fc102f1c1470603a0cf871dad0c96ea2afe544e11452343d8eb6b239961014c6020890189611989565b61015c60608b0160408c0161196e565b8989600081811061016f5761016f611901565b90506020028101906101819190611930565b61019290606081019060400161196e565b868b8b60008181106101a6576101a6611901565b90506020028101906101b89190611930565b60800135896040516101d097969594939291906119f5565b60405180910390a2505060009055505050565b60008180820361021f576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000848461022e6001826118ea565b81811061023d5761023d611901565b905060200281019061024f9190611930565b61026090608081019060600161196e565b9050600061026d8261031d565b905061027a8787876103d6565b60006102858361031d565b9050818111610294578061029e565b61029e82826118ea565b9150816000036102da576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50925050505b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8316156103135761030e8383836107b8565b505050565b61030e8282610810565b600073ffffffffffffffffffffffffffffffffffffffff8216156103ce576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156103a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c99190611a5e565b6103d0565b475b92915050565b818180600181146106635760006103ed84846108f7565b9050600084846103fe6001866118ea565b81811061040d5761040d611901565b905060200281019061041f9190611930565b61043090608081019060600161196e565b90506000805b8781101561057e573689898381811061045157610451611901565b90506020028101906104639190611930565b9050600080610478604084016020850161196e565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff1680156104e457506000806104b9602084018461196e565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff165b80156105295750600160006104fc60a0840184611989565b61050b91600891600091611a77565b61051491611aa1565b815260208101919091526040016000205460ff165b61055f576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8a5161056b9082610a18565b508061057681611add565b915050610436565b5060005b61058d6001866118ea565b81101561065a5760008787838181106105a8576105a8611901565b90506020028101906105ba9190611930565b6105cb90608081019060600161196e565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106065750610648565b84828151811061061857610618611901565b60200260200101516106298261031d565b61063391906118ea565b92508215610646576106468133856102e7565b505b8061065281611add565b915050610582565b505050506107b0565b60005b848110156107ae573686868381811061068157610681611901565b90506020028101906106939190611930565b90506000806106a8604084016020850161196e565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff16801561071457506000806106e9602084018461196e565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff165b801561075957506001600061072c60a0840184611989565b61073b91600891600091611a77565b61074491611aa1565b815260208101919091526040016000205460ff165b61078f576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b875161079b9082610a18565b50806107a681611add565b915050610666565b505b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610805576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61030e838383610cf5565b73ffffffffffffffffffffffffffffffffffffffff821661085d576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146108b7576040519150601f19603f3d011682016040523d82523d6000602084013e6108bc565b606091505b505090508061030e576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608160008167ffffffffffffffff811115610915576109156116de565b60405190808252806020026020018201604052801561093e578160200160208202803683370190505b50905060005b82811015610a0f57600086868381811061096057610960611901565b90506020028101906109729190611930565b61098390608081019060600161196e565b905060006109908261031d565b905073ffffffffffffffffffffffffffffffffffffffff82166109da576109b734826118ea565b8484815181106109c9576109c9611901565b6020026020010181815250506109fa565b808484815181106109ed576109ed611901565b6020026020010181815250505b50508080610a0790611add565b915050610944565b50949350505050565b610a2e610a28602083018361196e565b3b151590565b610a64576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003610aa4576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080610ab7606085016040860161196e565b90506000610acb608086016060870161196e565b90506000610ad88361031d565b90506000610ae58361031d565b90506000868310610af7576000610b01565b610b0183886118ea565b905073ffffffffffffffffffffffffffffffffffffffff851615610b5057610b3985610b3360408b0160208c0161196e565b89610dab565b8015610b4b57610b4b85333084610eed565b610b54565b8695505b600080610b6460208b018b61196e565b73ffffffffffffffffffffffffffffffffffffffff1688610b8860a08d018d611989565b604051610b96929190611b15565b60006040518083038185875af1925050503d8060008114610bd3576040519150601f19603f3d011682016040523d82523d6000602084013e610bd8565b606091505b509150915081610c2c576000610bed82610f93565b9050806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c239190611b51565b60405180910390fd5b6000610c378761031d565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388c610c6860208e018e61196e565b8d6040016020810190610c7b919061196e565b8a8e8a8711610c8a5786610c94565b610c948b886118ea565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261030e9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261100a565b73ffffffffffffffffffffffffffffffffffffffff8316610dcb57505050565b73ffffffffffffffffffffffffffffffffffffffff8216610e18576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610e8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb29190611a5e565b905081811015610ee757610ee784847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611116565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8416610f3a576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610f87576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ee784848484611298565b6060604482511015610fd857505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000610ff46004808551610fec91906118ea565b8591906112f6565b9050808060200190518101906102e09190611b84565b600061106c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166114519092919063ffffffff16565b80519091501561030e578080602001905181019061108a9190611bfb565b61030e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610c23565b8015806111b657506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611190573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b49190611a5e565b155b611242576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610c23565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261030e9084907f095ea7b30000000000000000000000000000000000000000000000000000000090606401610d47565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610ee79085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401610d47565b60608161130481601f611c1d565b101561136c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f770000000000000000000000000000000000006044820152606401610c23565b6113768284611c1d565b845110156113e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e64730000000000000000000000000000006044820152606401610c23565b6060821580156113ff5760405191506000825260208201604052610a0f565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611438578051835260209283019201611420565b5050858452601f01601f19166040525050949350505050565b60606114608484600085611468565b949350505050565b6060824710156114fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610c23565b843b611562576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c23565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161158b9190611c35565b60006040518083038185875af1925050503d80600081146115c8576040519150601f19603f3d011682016040523d82523d6000602084013e6115cd565b606091505b50915091506115dd8282866115e8565b979650505050505050565b606083156115f75750816102e0565b8251156116075782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c239190611b51565b60008060006040848603121561165057600080fd5b833567ffffffffffffffff8082111561166857600080fd5b90850190610100828803121561167d57600080fd5b9093506020850135908082111561169357600080fd5b818601915086601f8301126116a757600080fd5b8135818111156116b657600080fd5b8760208260051b85010111156116cb57600080fd5b6020830194508093505050509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611731576117316116de565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611760576117606116de565b604052919050565b600067ffffffffffffffff821115611782576117826116de565b50601f01601f191660200190565b600082601f8301126117a157600080fd5b81356117b46117af82611768565b611737565b8181528460208386010111156117c957600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461180a57600080fd5b919050565b6000610100823603121561182257600080fd5b61182a61170d565b82358152602083013567ffffffffffffffff81111561184857600080fd5b61185436828601611790565b602083015250611866604084016117e6565b6040820152611877606084016117e6565b6060820152611888608084016117e6565b608082015261189960a084016117e6565b60a082015260c083013560c082015260e083013560e082015280915050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156118fc576118fc6118bb565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4183360301811261196457600080fd5b9190910192915050565b60006020828403121561198057600080fd5b6102e0826117e6565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126119be57600080fd5b83018035915067ffffffffffffffff8211156119d957600080fd5b6020019150368190038213156119ee57600080fd5b9250929050565b60c081528660c0820152868860e0830137600060e088830181019190915273ffffffffffffffffffffffffffffffffffffffff96871660208301529486166040820152929094166060830152608082015260a0810192909252601f909201601f19160101919050565b600060208284031215611a7057600080fd5b5051919050565b60008085851115611a8757600080fd5b83861115611a9457600080fd5b5050820193919092039150565b803560208310156103d0577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b0e57611b0e6118bb565b5060010190565b8183823760009101908152919050565b60005b83811015611b40578181015183820152602001611b28565b83811115610ee75750506000910152565b6020815260008251806020840152611b70816040850160208701611b25565b601f01601f19169190910160400192915050565b600060208284031215611b9657600080fd5b815167ffffffffffffffff811115611bad57600080fd5b8201601f81018413611bbe57600080fd5b8051611bcc6117af82611768565b818152856020838501011115611be157600080fd5b611bf2826020830160208601611b25565b95945050505050565b600060208284031215611c0d57600080fd5b815180151581146102e057600080fd5b60008219821115611c3057611c306118bb565b500190565b60008251611964818460208701611b2556fea2646970667358221220b382dd7a8ad421eddb2f39abf32c6a1294df36f336a8265e5487ba771e1e442764736f6c634300080d0033";

type GenericSwapFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GenericSwapFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GenericSwapFacet__factory extends ContractFactory {
  constructor(...args: GenericSwapFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GenericSwapFacet> {
    return super.deploy(overrides || {}) as Promise<GenericSwapFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GenericSwapFacet {
    return super.attach(address) as GenericSwapFacet;
  }
  override connect(signer: Signer): GenericSwapFacet__factory {
    return super.connect(signer) as GenericSwapFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GenericSwapFacetInterface {
    return new utils.Interface(_abi) as GenericSwapFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GenericSwapFacet {
    return new Contract(address, _abi, signerOrProvider) as GenericSwapFacet;
  }
}
