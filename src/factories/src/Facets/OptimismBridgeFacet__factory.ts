/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OptimismBridgeFacet,
  OptimismBridgeFacetInterface,
} from "../../../src/Facets/OptimismBridgeFacet";

const _abi = [
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidConfig",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyContractOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: true,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bridge",
        type: "address",
      },
    ],
    name: "OptimismBridgeRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "assetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "bridge",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct OptimismBridgeFacet.Config[]",
        name: "configs",
        type: "tuple[]",
      },
    ],
    name: "OptimismInitialized",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "assetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "bridge",
            type: "address",
          },
        ],
        internalType: "struct OptimismBridgeFacet.Config[]",
        name: "configs",
        type: "tuple[]",
      },
      {
        internalType: "contract IL1StandardBridge",
        name: "standardBridge",
        type: "address",
      },
    ],
    name: "initOptimism",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "bridge",
        type: "address",
      },
    ],
    name: "registerBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "assetIdOnL2",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "l2Gas",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isSynthetix",
            type: "bool",
          },
        ],
        internalType: "struct OptimismBridgeFacet.OptimismData",
        name: "_optimismData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaOptimismBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "assetIdOnL2",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "l2Gas",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isSynthetix",
            type: "bool",
          },
        ],
        internalType: "struct OptimismBridgeFacet.OptimismData",
        name: "_optimismData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaOptimismBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612c13806100206000396000f3fe60806040526004361061003f5760003560e01c80633961d1ed146100445780635bb5d44814610066578063899cc31714610079578063ce8a97a514610099575b600080fd5b34801561005057600080fd5b5061006461005f36600461228d565b6100ac565b005b610064610074366004612507565b610207565b34801561008557600080fd5b506100646100943660046125b3565b610400565b6100646100a7366004612639565b610652565b6100b4610845565b7f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca4547f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca39074010000000000000000000000000000000000000000900460ff16610149576040517f87138d5c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038216610189576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038381166000818152602084815260409182902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169487169485179055905192835290917f8ba151f3405c32cff2d4c159409e00b97b0b46fbcbe59438e7f62c1283f80638910160405180910390a2505050565b33600061021434476126b7565b905085806101000151610253576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610291576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876102a78160a001516001600160a01b03161590565b156102de576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361031c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610397576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155895160c08b01516103af91908b8b336108ad565b60c08b01526103be8a886109e8565b6000908190554793509150508282116103d85760006103e2565b6103e283836126b7565b905080156103f6576103f660008583610d03565b5050505050505050565b610408610845565b7f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca4547f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca39074010000000000000000000000000000000000000000900460ff161561049e576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b838110156105c55760008585838181106104bd576104bd6126ca565b90506040020160200160208101906104d591906126f9565b6001600160a01b031603610515576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b848482818110610527576105276126ca565b905060400201602001602081019061053f91906126f9565b826000878785818110610554576105546126ca565b61056a92602060409092020190810191506126f9565b6001600160a01b039081168252602082019290925260400160002080547fffffffffffffffffffffffff00000000000000000000000000000000000000001692909116919091179055806105bd81612716565b9150506104a1565b506001810180547fffffffffffffffffffffff000000000000000000000000000000000000000000166001600160a01b03841617740100000000000000000000000000000000000000001790556040517fd192688003c02a257d1ee3ef083c31f3ba31e400ad8655bf4257081255c9156890610644908690869061274e565b60405180910390a150505050565b33600061065f34476126b7565b9050838061010001511561069f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84806101200151156106dd576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856106f38160a001516001600160a01b03161590565b1561072a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610768576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016107e3576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155608088015160c08901516107fb9190610d2c565b61080588886109e8565b60009081905547935091505082821161081f576000610829565b61082983836126b7565b9050801561083d5761083d60008583610d03565b505050505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b031633146108ab576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000828082036108e9576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856108f86001856126b7565b818110610907576109076126ca565b905060200281019061091991906127b4565b61092a9060808101906060016126f9565b9050600061093782610e88565b90506001600160a01b0382166109545761095134826126b7565b90505b60006109608888610f27565b905061096c8888611026565b6109798a89898985611087565b60008261098585610e88565b61098f91906126b7565b9050898110156109da576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b60808201516001600160a01b0390811660009081527f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca360208190526040822054909216908115610a385781610a47565b60018301546001600160a01b03165b9050610a5e85608001516001600160a01b03161590565b15610b1d5760c085015160a08601516001600160a01b03831691639a2ac6d591610a8e6040890160208a016127f2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b03909216600483015263ffffffff16602482015260606044820152600060648201526084016000604051808303818588803b158015610aff57600080fd5b505af1158015610b13573d6000803e3d6000fd5b5050505050610cbe565b610b308560800151828760c00151611405565b610b406060850160408601612818565b15610bdd5760a085015160c08601516040517fffaad6a50000000000000000000000000000000000000000000000000000000081526001600160a01b0384169263ffaad6a592610ba6926004016001600160a01b03929092168252602082015260400190565b600060405180830381600087803b158015610bc057600080fd5b505af1158015610bd4573d6000803e3d6000fd5b50505050610cbe565b60808501516001600160a01b0382169063838b252090610c0060208801886126f9565b60a089015160c08a0151610c1a60408b0160208c016127f2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b1681526001600160a01b0395861660048201529385166024850152939091166044830152606482015263ffffffff91909116608482015260c060a4820152600060c482015260e401600060405180830381600087803b158015610ca557600080fd5b505af1158015610cb9573d6000803e3d6000fd5b505050505b84604051610ccc919061287c565b604051908190038120907fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f190600090a25050505050565b6001600160a01b03831615610d2257610d1d838383611529565b505050565b610d1d828261163e565b6001600160a01b038216610d785780341015610d74576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610db2576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e36919061294e565b905081811015610e7c576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016109d1565b610d1d8333308561174e565b60006001600160a01b03821615610f1f576040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610ef6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1a919061294e565b610f21565b475b92915050565b60608160008167ffffffffffffffff811115610f4557610f456122c6565b604051908082528060200260200182016040528015610f6e578160200160208202803683370190505b5090506000805b8381101561101b57868682818110610f8f57610f8f6126ca565b9050602002810190610fa191906127b4565b610fb29060808101906060016126f9565b9150610fbd82610e88565b838281518110610fcf57610fcf6126ca565b60209081029190910101526001600160a01b0382166110135734838281518110610ffb57610ffb6126ca565b6020026020010181815161100f91906126b7565b9052505b600101610f75565b509095945050505050565b60005b81811015610d1d576000838383818110611045576110456126ca565b905060200281019061105791906127b4565b61106090612967565b90508060c001511561107e5761107e81604001518260800151610d2c565b50600101611029565b83838383826001811461132057600085856110a36001856126b7565b8181106110b2576110b26126ca565b90506020028101906110c491906127b4565b6110d59060808101906060016126f9565b9050600089815b8181101561126657368d8d838181106110f7576110f76126ca565b905060200281019061110991906127b4565b905061112b61111e60608301604084016126f9565b6001600160a01b03161590565b80611181575061118161114460408301602084016126f9565b6001600160a01b031660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015611198575061119861114460208301836126f9565b801561121d575061121d6111af60a0830183612a0c565b6111be91600491600091612a78565b6111c791612aa2565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611253576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61125d8f8261192c565b506001016110dc565b505060005b6112766001856126b7565b811015611318576000888883818110611291576112916126ca565b90506020028101906112a391906127b4565b6112b49060808101906060016126f9565b9050836001600160a01b0316816001600160a01b03161461130f578582815181106112e1576112e16126ca565b60200260200101516112f282610e88565b6112fc91906126b7565b9250821561130f5761130f818885610d03565b5060010161126b565b5050506113f9565b8760005b818110156113f657368b8b8381811061133f5761133f6126ca565b905060200281019061135191906127b4565b905061136661111e60608301604084016126f9565b8061137f575061137f61114460408301602084016126f9565b8015611396575061139661114460208301836126f9565b80156113ad57506113ad6111af60a0830183612a0c565b6113e3576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113ed8d8261192c565b50600101611324565b50505b50505050505050505050565b6001600160a01b03831661141857505050565b6001600160a01b038216611458576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa1580156114c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e5919061294e565b90508181101561152357611523848461151e847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6126b7565b611c28565b50505050565b6001600160a01b038316611569576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa1580156115c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ed919061294e565b905080821115611633576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016109d1565b611523848484611d6c565b6001600160a01b03821661167e576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156116c1576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016109d1565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461170e576040519150601f19603f3d011682016040523d82523d6000602084013e611713565b606091505b5050905080610d1d576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03841661178e576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0382166117ce576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015285916000918316906370a0823190602401602060405180830381865afa158015611832573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611856919061294e565b905061186482868686611db5565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152849183918516906370a0823190602401602060405180830381865afa1580156118c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118eb919061294e565b6118f591906126b7565b1461083d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61194261193c60208301836126f9565b3b151590565b611978576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036119b8576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006119cd61111e60608501604086016126f9565b6119d85760006119de565b82608001355b905060006119fa6119f560608601604087016126f9565b610e88565b90506000611a116119f560808701606088016126f9565b905082600003611a4857611a48611a2e60608701604088016126f9565b611a3e60408801602089016126f9565b8760800135611405565b8460800135821015611a93576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016109d1565b600080611aa360208801886126f9565b6001600160a01b031685611aba60a08a018a612a0c565b604051611ac8929190612aea565b60006040518083038185875af1925050503d8060008114611b05576040519150601f19603f3d011682016040523d82523d6000602084013e611b0a565b606091505b509150915081611b55576000611b1f82611e06565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d19190612afa565b6000611b6a6119f560808a0160608b016126f9565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611b9b60208b018b6126f9565b611bab60608c0160408d016126f9565b611bbb60808d0160608e016126f9565b8c60800135898711611bcd5786611bd7565b611bd78a886126b7565b604080519687526001600160a01b0395861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611c92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb6919061294e565b611cc09190612b2d565b6040516001600160a01b0385166024820152604481018290529091506115239085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611e84565b6040516001600160a01b038316602482015260448101829052610d1d9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611d08565b6040516001600160a01b03808516602483015283166044820152606481018290526115239085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611d08565b6060604482511015611e4b57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611e676004808551611e5f91906126b7565b859190611f83565b905080806020019051810190611e7d9190612b40565b9392505050565b6000611ed9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661207f9092919063ffffffff16565b805190915015610d1d5780806020019051810190611ef79190612bae565b610d1d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016109d1565b606081611f9181601f612b2d565b1015611fc9576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611fd38284612b2d565b8451101561200d576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608215801561202c5760405191506000825260208201604052612076565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561206557805183526020928301920161204d565b5050858452601f01601f1916604052505b50949350505050565b606061208e8484600085612096565b949350505050565b606082471015612128576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016109d1565b6001600160a01b0385163b612199576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109d1565b600080866001600160a01b031685876040516121b59190612bcb565b60006040518083038185875af1925050503d80600081146121f2576040519150601f19603f3d011682016040523d82523d6000602084013e6121f7565b606091505b5091509150612207828286612212565b979650505050505050565b60608315612221575081611e7d565b8251156122315782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d19190612afa565b6001600160a01b038116811461227a57600080fd5b50565b803561228881612265565b919050565b600080604083850312156122a057600080fd5b82356122ab81612265565b915060208301356122bb81612265565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715612319576123196122c6565b60405290565b60405160e0810167ffffffffffffffff81118282101715612319576123196122c6565b604051601f8201601f1916810167ffffffffffffffff8111828210171561236b5761236b6122c6565b604052919050565b600067ffffffffffffffff82111561238d5761238d6122c6565b50601f01601f191660200190565b600082601f8301126123ac57600080fd5b81356123bf6123ba82612373565b612342565b8181528460208386010111156123d457600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461227a57600080fd5b8035612288816123f1565b6000610140828403121561241d57600080fd5b6124256122f5565b905081358152602082013567ffffffffffffffff8082111561244657600080fd5b6124528583860161239b565b6020840152604084013591508082111561246b57600080fd5b506124788482850161239b565b60408301525061248a6060830161227d565b606082015261249b6080830161227d565b60808201526124ac60a0830161227d565b60a082015260c082013560c082015260e082013560e08201526101006124d38184016123ff565b908201526101206124e58382016123ff565b9082015292915050565b60006060828403121561250157600080fd5b50919050565b60008060008060a0858703121561251d57600080fd5b843567ffffffffffffffff8082111561253557600080fd5b6125418883890161240a565b9550602087013591508082111561255757600080fd5b818701915087601f83011261256b57600080fd5b81358181111561257a57600080fd5b8860208260051b850101111561258f57600080fd5b6020830195508094505050506125a886604087016124ef565b905092959194509250565b6000806000604084860312156125c857600080fd5b833567ffffffffffffffff808211156125e057600080fd5b818601915086601f8301126125f457600080fd5b81358181111561260357600080fd5b8760208260061b850101111561261857600080fd5b6020928301955093505084013561262e81612265565b809150509250925092565b6000806080838503121561264c57600080fd5b823567ffffffffffffffff81111561266357600080fd5b61266f8582860161240a565b92505061267f84602085016124ef565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610f2157610f21612688565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561270b57600080fd5b8135611e7d81612265565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361274757612747612688565b5060010190565b6020808252818101839052600090604080840186845b878110156127a757813561277781612265565b6001600160a01b039081168452828601359061279282612265565b16838601529183019190830190600101612764565b5090979650505050505050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126127e857600080fd5b9190910192915050565b60006020828403121561280457600080fd5b813563ffffffff81168114611e7d57600080fd5b60006020828403121561282a57600080fd5b8135611e7d816123f1565b60005b83811015612850578181015183820152602001612838565b50506000910152565b6000815161286b818560208601612835565b601f01601f19169290920192915050565b8151815260006020830151805161289a816020860160208501612835565b61294561293561292561291861290b6128f56128df6128c96020601f19601f8b01168d010160408e0151612859565b60608d01516001600160a01b0316815260200190565b60808c01516001600160a01b0316815260200190565b60a08b01516001600160a01b0316815260200190565b60c08a0151815260200190565b60e0890151815260200190565b6101008801511515815260200190565b6101208701511515815260200190565b95945050505050565b60006020828403121561296057600080fd5b5051919050565b600060e0823603121561297957600080fd5b61298161231f565b61298a8361227d565b81526129986020840161227d565b60208201526129a96040840161227d565b60408201526129ba6060840161227d565b60608201526080830135608082015260a083013567ffffffffffffffff8111156129e357600080fd5b6129ef3682860161239b565b60a083015250612a0160c084016123ff565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612a4157600080fd5b83018035915067ffffffffffffffff821115612a5c57600080fd5b602001915036819003821315612a7157600080fd5b9250929050565b60008085851115612a8857600080fd5b83861115612a9557600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612ae25780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b6020815260008251806020840152612b19816040850160208701612835565b601f01601f19169190910160400192915050565b80820180821115610f2157610f21612688565b600060208284031215612b5257600080fd5b815167ffffffffffffffff811115612b6957600080fd5b8201601f81018413612b7a57600080fd5b8051612b886123ba82612373565b818152856020838501011115612b9d57600080fd5b612945826020830160208601612835565b600060208284031215612bc057600080fd5b8151611e7d816123f1565b600082516127e881846020870161283556fea26469706673582212202ef53a165616cd12a8e1fdfe4b496b1e93517a085b8f7df9ba973198028a077664736f6c63430008110033";

type OptimismBridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismBridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismBridgeFacet__factory extends ContractFactory {
  constructor(...args: OptimismBridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OptimismBridgeFacet> {
    return super.deploy(overrides || {}) as Promise<OptimismBridgeFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OptimismBridgeFacet {
    return super.attach(address) as OptimismBridgeFacet;
  }
  override connect(signer: Signer): OptimismBridgeFacet__factory {
    return super.connect(signer) as OptimismBridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismBridgeFacetInterface {
    return new utils.Interface(_abi) as OptimismBridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismBridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as OptimismBridgeFacet;
  }
}
