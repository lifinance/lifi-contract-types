/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ICurveV2, ICurveV2Interface } from "../ICurveV2";

const _abi = [
  {
    type: "function",
    name: "exchange",
    inputs: [
      {
        name: "i",
        type: "int128",
        internalType: "int128",
      },
      {
        name: "j",
        type: "int128",
        internalType: "int128",
      },
      {
        name: "dx",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "min_dy",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "exchange_received",
    inputs: [
      {
        name: "i",
        type: "int128",
        internalType: "int128",
      },
      {
        name: "j",
        type: "int128",
        internalType: "int128",
      },
      {
        name: "dx",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "min_dy",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

export class ICurveV2__factory {
  static readonly abi = _abi;
  static createInterface(): ICurveV2Interface {
    return new utils.Interface(_abi) as ICurveV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICurveV2 {
    return new Contract(address, _abi, signerOrProvider) as ICurveV2;
  }
}
