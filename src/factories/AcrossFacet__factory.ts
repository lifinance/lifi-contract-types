/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { AcrossFacet, AcrossFacetInterface } from "../AcrossFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAcrossSpokePool",
        name: "_spokePool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wrappedNative",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotBridgeToSameNetwork",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "integrator",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "referrer",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fromAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "toAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toAmount",
        type: "uint256",
      },
    ],
    name: "LiFiGenericSwapCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "integrator",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "referrer",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fromAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "toAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toAmount",
        type: "uint256",
      },
    ],
    name: "LiFiSwappedGeneric",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int64",
            name: "relayerFeePct",
            type: "int64",
          },
          {
            internalType: "uint32",
            name: "quoteTimestamp",
            type: "uint32",
          },
        ],
        internalType: "struct AcrossFacet.AcrossData",
        name: "_acrossData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaAcross",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "int64",
            name: "relayerFeePct",
            type: "int64",
          },
          {
            internalType: "uint32",
            name: "quoteTimestamp",
            type: "uint32",
          },
        ],
        internalType: "struct AcrossFacet.AcrossData",
        name: "_acrossData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaAcross",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002a6f38038062002a6f833981016040819052620000349162000065565b6001600160a01b039182166080521660a052620000a4565b6001600160a01b03811681146200006257600080fd5b50565b600080604083850312156200007957600080fd5b825162000086816200004c565b602084015190925062000099816200004c565b809150509250929050565b60805160a051612997620000d860003960006106640152600081816106390152818161079001526107bb01526129976000f3fe6080604052600436106100295760003560e01c80630bcfecda1461002e57806398494d5814610043575b600080fd5b61004161003c3660046123e2565b610056565b005b61004161005136600461248e565b610288565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e2344761250c565b905086806101000151610121576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561015f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886101828160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101b9576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101f7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610234576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102498a600001518b60c001518b8b336104ac565b60c08b01526102588a886105f4565b50479150508181111561027a5761027a600084610275858561250c565b610946565b505060009091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610303576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155336000610314344761250c565b9050846103398160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610370576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036103ae576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036103eb576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8580610100015115610429576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610467576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61047988608001518960c0015161097c565b61048388886105f4565b5047915050818111156104a0576104a0600084610275858561250c565b50506000909155505050565b6000828082036104e8576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856104f760018561250c565b8181106105065761050661251f565b9050602002810190610518919061254e565b61052990608081019060600161258c565b9050600061053682610af2565b905073ffffffffffffffffffffffffffffffffffffffff82166105605761055d348261250c565b90505b600061056c8888610bab565b90506105788888610cb7565b6105858a89898985610d24565b60008261059185610af2565b61059b919061250c565b9050898110156105e6576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b608082015173ffffffffffffffffffffffffffffffffffffffff166107865760c082015160a083015160e084015173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001692631186ec339290917f000000000000000000000000000000000000000000000000000000000000000090839061069360208901896125a7565b6106a360408a0160208b016125ca565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e08a901b16815273ffffffffffffffffffffffffffffffffffffffff96871660048201529590941660248601526044850192909252606484015260070b608483015263ffffffff1660a482015261010060c482015260006101048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60e4820152610124016000604051808303818588803b15801561076857600080fd5b505af115801561077c573d6000803e3d6000fd5b505050505061090b565b6107b982608001517f00000000000000000000000000000000000000000000000000000000000000008460c001516110d6565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631186ec338360a0015184608001518560c001518660e0015186600001602081019061081c91906125a7565b61082c6040890160208a016125ca565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b16815273ffffffffffffffffffffffffffffffffffffffff96871660048201529590941660248601526044850192909252606484015260070b608483015263ffffffff1660a482015261010060c482015260006101048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60e482015261012401600060405180830381600087803b1580156108f257600080fd5b505af1158015610906573d6000803e3d6000fd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161093a919061265e565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff8316156109725761096d838383611219565b505050565b61096d828261139b565b806000036109b6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610a0f5780341015610a0b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa09190612771565b905081811015610ae6576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016105dd565b61096d833330856114c5565b600073ffffffffffffffffffffffffffffffffffffffff821615610ba3576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610b7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9e9190612771565b610ba5565b475b92915050565b60608160008167ffffffffffffffff811115610bc957610bc961215c565b604051908082528060200260200182016040528015610bf2578160200160208202803683370190505b5090506000805b83811015610cac57868682818110610c1357610c1361251f565b9050602002810190610c25919061254e565b610c3690608081019060600161258c565b9150610c4182610af2565b838281518110610c5357610c5361251f565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610ca45734838281518110610c8c57610c8c61251f565b60200260200101818151610ca0919061250c565b9052505b600101610bf9565b509095945050505050565b60005b8181101561096d5736838383818110610cd557610cd561251f565b9050602002810190610ce7919061254e565b9050610cf960e0820160c0830161278a565b15610d1b57610d1b610d11606083016040840161258c565b826080013561097c565b50600101610cba565b838383838260018114610ff15760008585610d4060018561250c565b818110610d4f57610d4f61251f565b9050602002810190610d61919061254e565b610d7290608081019060600161258c565b9050600089815b81811015610f1d57368d8d83818110610d9457610d9461251f565b9050602002810190610da6919061254e565b9050610dd5610dbb606083016040840161258c565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610e385750610e38610dee604083016020840161258c565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610e4f5750610e4f610dee602083018361258c565b8015610ed45750610ed4610e6660a08301836127a7565b610e7591600491600091612813565b610e7e9161283d565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610f0a576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f148f826116df565b50600101610d79565b505060005b610f2d60018561250c565b811015610fe9576000888883818110610f4857610f4861251f565b9050602002810190610f5a919061254e565b610f6b90608081019060600161258c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610fe057858281518110610fb257610fb261251f565b6020026020010151610fc382610af2565b610fcd919061250c565b92508215610fe057610fe0818885610946565b50600101610f22565b5050506110ca565b8760005b818110156110c757368b8b838181106110105761101061251f565b9050602002810190611022919061254e565b9050611037610dbb606083016040840161258c565b806110505750611050610dee604083016020840161258c565b80156110675750611067610dee602083018361258c565b801561107e575061107e610e6660a08301836127a7565b6110b4576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110be8d826116df565b50600101610ff5565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166110f657505050565b73ffffffffffffffffffffffffffffffffffffffff8216611143576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa1580156111b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111dc9190612771565b101561096d576111ee838360006119f5565b61096d83837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6119f5565b73ffffffffffffffffffffffffffffffffffffffff8316611266576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166112b3576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611320573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113449190612771565b90508082111561138a576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016105dd565b611395848484611bf5565b50505050565b73ffffffffffffffffffffffffffffffffffffffff82166113e8576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4781111561142b576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016105dd565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611485576040519150601f19603f3d011682016040523d82523d6000602084013e61148a565b606091505b505090508061096d576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416611512576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661155f576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa1580156115d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f49190612771565b905061160282868686611c4b565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611672573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116969190612771565b6116a0919061250c565b146116d7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b6116f56116ef602083018361258c565b3b151590565b61172b576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080810135600081900361176b576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611780610dbb606085016040860161258c565b61178b576000611791565b82608001355b905060006117ad6117a8606086016040870161258c565b610af2565b905060006117c46117a8608087016060880161258c565b9050826000036117fb576117fb6117e1606087016040880161258c565b6117f1604088016020890161258c565b87608001356110d6565b8460800135821015611846576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016105dd565b600080611856602088018861258c565b73ffffffffffffffffffffffffffffffffffffffff168561187a60a08a018a6127a7565b604051611888929190612885565b60006040518083038185875af1925050503d80600081146118c5576040519150601f19603f3d011682016040523d82523d6000602084013e6118ca565b606091505b5091509150816119155760006118df82611ca9565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dd9190612895565b600061192a6117a860808a0160608b0161258c565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961195b60208b018b61258c565b61196b60608c0160408d0161258c565b61197b60808d0160608e0161258c565b8c6080013589871161198d5786611997565b6119978a8861250c565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b801580611a9557506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a939190612771565b155b611b21576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016105dd565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261096d9084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611d27565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261096d9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611b73565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526113959085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611b73565b6060604482511015611cee57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611d0a6004808551611d02919061250c565b859190611e33565b905080806020019051810190611d2091906128a8565b9392505050565b6000611d89826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611f4d9092919063ffffffff16565b80519091501561096d5780806020019051810190611da7919061291f565b61096d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105dd565b606081611e4181601f61293c565b1015611e79576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611e83828461293c565b84511015611ebd576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611edc5760405191506000825260208201604052611f44565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611f15578051835260209283019201611efd565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6060611f5c8484600085611f64565b949350505050565b606082471015611ff6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105dd565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161201f919061294f565b60006040518083038185875af1925050503d806000811461205c576040519150601f19603f3d011682016040523d82523d6000602084013e612061565b606091505b50915091506120728783838761207d565b979650505050505050565b6060831561211357825160000361210c5773ffffffffffffffffffffffffffffffffffffffff85163b61210c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105dd565b5081611f5c565b611f5c83838151156121285781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dd9190612895565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156121af576121af61215c565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156121fc576121fc61215c565b604052919050565b600067ffffffffffffffff82111561221e5761221e61215c565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261225b57600080fd5b813561226e61226982612204565b6121b5565b81815284602083860101111561228357600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146122c457600080fd5b919050565b80151581146122d757600080fd5b50565b80356122c4816122c9565b600061014082840312156122f857600080fd5b61230061218b565b905081358152602082013567ffffffffffffffff8082111561232157600080fd5b61232d8583860161224a565b6020840152604084013591508082111561234657600080fd5b506123538482850161224a565b604083015250612365606083016122a0565b6060820152612376608083016122a0565b608082015261238760a083016122a0565b60a082015260c082013560c082015260e082013560e08201526101006123ae8184016122da565b908201526101206123c08382016122da565b9082015292915050565b6000604082840312156123dc57600080fd5b50919050565b600080600080608085870312156123f857600080fd5b843567ffffffffffffffff8082111561241057600080fd5b61241c888389016122e5565b9550602087013591508082111561243257600080fd5b818701915087601f83011261244657600080fd5b81358181111561245557600080fd5b8860208260051b850101111561246a57600080fd5b60208301955080945050505061248386604087016123ca565b905092959194509250565b600080606083850312156124a157600080fd5b823567ffffffffffffffff8111156124b857600080fd5b6124c4858286016122e5565b9250506124d484602085016123ca565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610ba557610ba56124dd565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261258257600080fd5b9190910192915050565b60006020828403121561259e57600080fd5b611d20826122a0565b6000602082840312156125b957600080fd5b81358060070b8114611d2057600080fd5b6000602082840312156125dc57600080fd5b813563ffffffff81168114611d2057600080fd5b60005b8381101561260b5781810151838201526020016125f3565b50506000910152565b6000815180845261262c8160208601602086016125f0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081528151602082015260006020830151610140806040850152612687610160850183612614565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526126c28382612614565b92505060608501516126ec608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e085015161010081818701528087015191505061012061275f8187018315159052565b90950151151593019290925250919050565b60006020828403121561278357600080fd5b5051919050565b60006020828403121561279c57600080fd5b8135611d20816122c9565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126127dc57600080fd5b83018035915067ffffffffffffffff8211156127f757600080fd5b60200191503681900382131561280c57600080fd5b9250929050565b6000808585111561282357600080fd5b8386111561283057600080fd5b5050820193919092039150565b7fffffffff00000000000000000000000000000000000000000000000000000000813581811691600485101561287d5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b602081526000611d206020830184612614565b6000602082840312156128ba57600080fd5b815167ffffffffffffffff8111156128d157600080fd5b8201601f810184136128e257600080fd5b80516128f061226982612204565b81815285602083850101111561290557600080fd5b6129168260208301602086016125f0565b95945050505050565b60006020828403121561293157600080fd5b8151611d20816122c9565b80820180821115610ba557610ba56124dd565b600082516125828184602087016125f056fea26469706673582212201f243aee79d7ea7c7f19180ae59e142a5b40699f634bca852508f865d7b7bfab64736f6c63430008110033";

type AcrossFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AcrossFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AcrossFacet__factory extends ContractFactory {
  constructor(...args: AcrossFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _spokePool: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AcrossFacet> {
    return super.deploy(
      _spokePool,
      _wrappedNative,
      overrides || {}
    ) as Promise<AcrossFacet>;
  }
  override getDeployTransaction(
    _spokePool: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _spokePool,
      _wrappedNative,
      overrides || {}
    );
  }
  override attach(address: string): AcrossFacet {
    return super.attach(address) as AcrossFacet;
  }
  override connect(signer: Signer): AcrossFacet__factory {
    return super.connect(signer) as AcrossFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AcrossFacetInterface {
    return new utils.Interface(_abi) as AcrossFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AcrossFacet {
    return new Contract(address, _abi, signerOrProvider) as AcrossFacet;
  }
}
