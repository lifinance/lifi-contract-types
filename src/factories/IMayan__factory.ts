/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IMayan, IMayanInterface } from "../IMayan";

const _abi = [
  {
    type: "function",
    name: "swap",
    inputs: [
      {
        name: "relayerFees",
        type: "tuple",
        internalType: "struct IMayan.RelayerFees",
        components: [
          {
            name: "swapFee",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "redeemFee",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "refundFee",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
      {
        name: "recipient",
        type: "tuple",
        internalType: "struct IMayan.Recepient",
        components: [
          {
            name: "mayanAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "mayanChainId",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "auctionAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "destAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "destChainId",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "referrer",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "refundAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
      {
        name: "tokenOutAddr",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "tokenOutChainId",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "criteria",
        type: "tuple",
        internalType: "struct IMayan.Criteria",
        components: [
          {
            name: "transferDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "swapDeadline",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "amountOutMin",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "unwrap",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "gasDrop",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "customPayload",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "tokenIn",
        type: "address",
        internalType: "address",
      },
      {
        name: "amountIn",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "sequence",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "wrapAndSwapETH",
    inputs: [
      {
        name: "relayerFees",
        type: "tuple",
        internalType: "struct IMayan.RelayerFees",
        components: [
          {
            name: "swapFee",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "redeemFee",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "refundFee",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
      {
        name: "recipient",
        type: "tuple",
        internalType: "struct IMayan.Recepient",
        components: [
          {
            name: "mayanAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "mayanChainId",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "auctionAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "destAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "destChainId",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "referrer",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "refundAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
      {
        name: "tokenOutAddr",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "tokenOutChainId",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "criteria",
        type: "tuple",
        internalType: "struct IMayan.Criteria",
        components: [
          {
            name: "transferDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "swapDeadline",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "amountOutMin",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "unwrap",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "gasDrop",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "customPayload",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "sequence",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "payable",
  },
] as const;

export class IMayan__factory {
  static readonly abi = _abi;
  static createInterface(): IMayanInterface {
    return new utils.Interface(_abi) as IMayanInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IMayan {
    return new Contract(address, _abi, signerOrProvider) as IMayan;
  }
}
