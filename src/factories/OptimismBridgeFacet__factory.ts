/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  OptimismBridgeFacet,
  OptimismBridgeFacetInterface,
} from "../OptimismBridgeFacet";

const _abi = [
  {
    type: "function",
    name: "initOptimism",
    inputs: [
      {
        name: "configs",
        type: "tuple[]",
        internalType: "struct OptimismBridgeFacet.Config[]",
        components: [
          {
            name: "assetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "bridge",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "standardBridge",
        type: "address",
        internalType: "contract IL1StandardBridge",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "registerOptimismBridge",
    inputs: [
      {
        name: "assetId",
        type: "address",
        internalType: "address",
      },
      {
        name: "bridge",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaOptimismBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_optimismData",
        type: "tuple",
        internalType: "struct OptimismBridgeFacet.OptimismData",
        components: [
          {
            name: "assetIdOnL2",
            type: "address",
            internalType: "address",
          },
          {
            name: "l2Gas",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "isSynthetix",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaOptimismBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_optimismData",
        type: "tuple",
        internalType: "struct OptimismBridgeFacet.OptimismData",
        components: [
          {
            name: "assetIdOnL2",
            type: "address",
            internalType: "address",
          },
          {
            name: "l2Gas",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "isSynthetix",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OptimismBridgeRegistered",
    inputs: [
      {
        name: "assetId",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "bridge",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OptimismInitialized",
    inputs: [
      {
        name: "configs",
        type: "tuple[]",
        indexed: false,
        internalType: "struct OptimismBridgeFacet.Config[]",
        components: [
          {
            name: "assetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "bridge",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidConfig",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyContractOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b506123288061001c5f395ff3fe60806040526004361061003e575f3560e01c80635bb5d44814610042578063899cc31714610057578063ce8a97a514610076578063decb09d714610089575b5f5ffd5b610055610050366004611d45565b6100a8565b005b348015610062575f5ffd5b50610055610071366004611df2565b6102d5565b610055610084366004611e74565b610540565b348015610094575f5ffd5b506100556100a3366004611ec0565b610760565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610123576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6101333447611ef7565b905086806101000151610172576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101200151156101b0576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886101d38160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561020a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610247576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610284576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102988a5f01518b60c001518b8b336108d4565b60c08b01526102a78a88610a16565b5047915050818111156102c8576102c85f846102c38585611ef7565b610d8e565b50505f9091555050505050565b6102dd610dc3565b7f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca4547f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca39074010000000000000000000000000000000000000000900460ff1615610373576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b838110156104a6575f85858381811061039057610390611f2f565b90506040020160200160208101906103a89190611f5c565b73ffffffffffffffffffffffffffffffffffffffff16036103f5576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84848281811061040757610407611f2f565b905060400201602001602081019061041f9190611f5c565b825f87878581811061043357610433611f2f565b6104499260206040909202019081019150611f5c565b73ffffffffffffffffffffffffffffffffffffffff908116825260208201929092526040015f2080547fffffffffffffffffffffffff00000000000000000000000000000000000000001692909116919091179055600101610375565b506001810180547fffffffffffffffffffffff0000000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617740100000000000000000000000000000000000000001790556040517fd192688003c02a257d1ee3ef083c31f3ba31e400ad8655bf4257081255c91568906105329086908690611f7e565b60405180910390a150505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016105bb576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6105cb3447611ef7565b9050848061010001511561060b576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8580610120015115610649576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8661066c8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156106a3576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036106e0576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361071d576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61072f88608001518960c00151610e38565b6107398888610a16565b504791505081811115610755576107555f846102c38585611ef7565b50505f909155505050565b610768610dc3565b7f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca4547f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca39074010000000000000000000000000000000000000000900460ff166107fd576040517f87138d5c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661084a576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8381165f818152602084815260409182902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169487169485179055905192835290917f8ba151f3405c32cff2d4c159409e00b97b0b46fbcbe59438e7f62c1283f80638910160405180910390a2505050565b5f8280820361090f576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f858561091d600185611ef7565b81811061092c5761092c611f2f565b905060200281019061093e9190612000565b61094f906080810190606001611f5c565b90505f61095b82610eec565b905073ffffffffffffffffffffffffffffffffffffffff8216610985576109823482611ef7565b90505b5f6109908888610f36565b905061099c8888611040565b6109a98a898989856110ac565b5f826109b485610eec565b6109be9190611ef7565b905089811015610a08576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b608082015173ffffffffffffffffffffffffffffffffffffffff9081165f9081527f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca360208190526040822054909216908115610a725781610a8e565b600183015473ffffffffffffffffffffffffffffffffffffffff165b9050610ab2856080015173ffffffffffffffffffffffffffffffffffffffff161590565b15610b865760c085015160a086015173ffffffffffffffffffffffffffffffffffffffff831691639a2ac6d591610aef6040890160208a0161203c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015263ffffffff166024820152606060448201525f60648201526084015f604051808303818588803b158015610b6a575f5ffd5b505af1158015610b7c573d5f5f3e3d5ffd5b5050505050610d50565b610b998560800151828760c00151611457565b610ba9606085016040860161205f565b15610c5b5760a085015160c08601516040517fffaad6a500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169263ffaad6a592610c299260040173ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b5f604051808303815f87803b158015610c40575f5ffd5b505af1158015610c52573d5f5f3e3d5ffd5b50505050610d50565b608085015173ffffffffffffffffffffffffffffffffffffffff82169063838b252090610c8b6020880188611f5c565b60a089015160c08a0151610ca560408b0160208c0161203c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff95861660048201529385166024850152939091166044830152606482015263ffffffff91909116608482015260c060a48201525f60c482015260e4015f604051808303815f87803b158015610d39575f5ffd5b505af1158015610d4b573d5f5f3e3d5ffd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f185604051610d7f91906120c4565b60405180910390a15050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610db857610db38282611483565b505050565b610db38383836114f0565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314610e36576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b805f03610e71576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610eca5780341015610ec6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610ec673ffffffffffffffffffffffffffffffffffffffff831633308461155e565b5f73ffffffffffffffffffffffffffffffffffffffff821615610f2e57610f2973ffffffffffffffffffffffffffffffffffffffff8316306115b6565b610f30565b475b92915050565b6060815f8167ffffffffffffffff811115610f5357610f53611b04565b604051908082528060200260200182016040528015610f7c578160200160208202803683370190505b5090505f805b8381101561103557868682818110610f9c57610f9c611f2f565b9050602002810190610fae9190612000565b610fbf906080810190606001611f5c565b9150610fca82610eec565b838281518110610fdc57610fdc611f2f565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff821661102d573483828151811061101557611015611f2f565b602002602001018181516110299190611ef7565b9052505b600101610f82565b509095945050505050565b5f5b81811015610db3573683838381811061105d5761105d611f2f565b905060200281019061106f9190612000565b905061108160e0820160c0830161205f565b156110a3576110a36110996060830160408401611f5c565b8260800135610e38565b50600101611042565b838383838260018114611373575f85856110c7600185611ef7565b8181106110d6576110d6611f2f565b90506020028101906110e89190612000565b6110f9906080810190606001611f5c565b90505f89815b818110156112a057368d8d8381811061111a5761111a611f2f565b905060200281019061112c9190612000565b905061115b6111416060830160408401611f5c565b73ffffffffffffffffffffffffffffffffffffffff161590565b806111bd57506111bd6111746040830160208401611f5c565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156111d457506111d46111746020830183611f5c565b801561125757506112576111eb60a08301836121d7565b6111f9916004915f9161223f565b61120291612266565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61128d576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112978f826115e9565b506001016110ff565b505f90505b6112b0600185611ef7565b81101561136b575f8888838181106112ca576112ca611f2f565b90506020028101906112dc9190612000565b6112ed906080810190606001611f5c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113625785828151811061133457611334611f2f565b602002602001015161134582610eec565b61134f9190611ef7565b9250821561136257611362818885610d8e565b506001016112a5565b50505061144b565b875f5b8181101561144857368b8b8381811061139157611391611f2f565b90506020028101906113a39190612000565b90506113b86111416060830160408401611f5c565b806113d157506113d16111746040830160208401611f5c565b80156113e857506113e86111746020830183611f5c565b80156113ff57506113ff6111eb60a08301836121d7565b611435576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61143f8d826115e9565b50600101611376565b50505b50505050505050505050565b610db38383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611859565b73ffffffffffffffffffffffffffffffffffffffff82166114d0576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ec673ffffffffffffffffffffffffffffffffffffffff831682611986565b73ffffffffffffffffffffffffffffffffffffffff821661153d576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610db373ffffffffffffffffffffffffffffffffffffffff8416838361199f565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f511417166115a957637939f4245f526004601cfd5b5f60605260405250505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b6115fe6115f96020830183611f5c565b6119e8565b611634576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003611673576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6116876111416060850160408601611f5c565b611691575f611697565b82608001355b90505f6116b26116ad6080860160608701611f5c565b610eec565b9050815f036116e8576116e86116ce6060860160408701611f5c565b6116de6040870160208801611f5c565b8660800135611457565b5f806116f76020870187611f5c565b73ffffffffffffffffffffffffffffffffffffffff168461171b60a08901896121d7565b6040516117299291906122cc565b5f6040518083038185875af1925050503d805f8114611763576040519150601f19603f3d011682016040523d82523d5f602084013e611768565b606091505b50915091508161177b5761177b81611a7c565b5f61178f6116ad6080890160608a01611f5c565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38886117c060208a018a611f5c565b6117d060608b0160408c01611f5c565b6117e060808c0160608d01611f5c565b8b608001358987116117f257866117fc565b6117fc8a88611ef7565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156119805773ffffffffffffffffffffffffffffffffffffffff83166118c2576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611935573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061195991906122db565b10156119805761198073ffffffffffffffffffffffffffffffffffffffff85168483611a86565b50505050565b5f385f3884865af1610ec65763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166119df576390b8ec185f526004601cfd5b5f603452505050565b6040805160178082528183019092525f9182919060208201818036833701905050905060175f60208301853c60208101517f10ff0000000000000000000000000000000000000000000000000000000000007fffffff0000000000000000000000000000000000000000000000000000000000821601611a7357506023015160601c3b151592915050565b5050503b151590565b8051602082018181fd5b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f511417166119df575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f511417166119df57633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff81118282101715611b5557611b55611b04565b60405290565b5f82601f830112611b6a575f5ffd5b813567ffffffffffffffff811115611b8457611b84611b04565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff81118282101715611bd157611bd1611b04565b604052818152838201602001851015611be8575f5ffd5b816020850160208301375f918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611c25575f5ffd5b50565b8035611c3381611c04565b919050565b80358015158114611c33575f5ffd5b5f6101408284031215611c58575f5ffd5b611c60611b31565b823581529050602082013567ffffffffffffffff811115611c7f575f5ffd5b611c8b84828501611b5b565b602083015250604082013567ffffffffffffffff811115611caa575f5ffd5b611cb684828501611b5b565b604083015250611cc860608301611c28565b6060820152611cd960808301611c28565b6080820152611cea60a08301611c28565b60a082015260c0828101359082015260e08083013590820152611d106101008301611c38565b610100820152611d236101208301611c38565b61012082015292915050565b5f60608284031215611d3f575f5ffd5b50919050565b5f5f5f5f60a08587031215611d58575f5ffd5b843567ffffffffffffffff811115611d6e575f5ffd5b611d7a87828801611c47565b945050602085013567ffffffffffffffff811115611d96575f5ffd5b8501601f81018713611da6575f5ffd5b803567ffffffffffffffff811115611dbc575f5ffd5b8760208260051b8401011115611dd0575f5ffd5b60209190910193509150611de78660408701611d2f565b905092959194509250565b5f5f5f60408486031215611e04575f5ffd5b833567ffffffffffffffff811115611e1a575f5ffd5b8401601f81018613611e2a575f5ffd5b803567ffffffffffffffff811115611e40575f5ffd5b8660208260061b8401011115611e54575f5ffd5b602091820194509250840135611e6981611c04565b809150509250925092565b5f5f60808385031215611e85575f5ffd5b823567ffffffffffffffff811115611e9b575f5ffd5b611ea785828601611c47565b925050611eb78460208501611d2f565b90509250929050565b5f5f60408385031215611ed1575f5ffd5b8235611edc81611c04565b91506020830135611eec81611c04565b809150509250929050565b81810381811115610f30577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60208284031215611f6c575f5ffd5b8135611f7781611c04565b9392505050565b602080825281018290525f8360408301825b85811015611ff6578235611fa381611c04565b73ffffffffffffffffffffffffffffffffffffffff1682526020830135611fc981611c04565b73ffffffffffffffffffffffffffffffffffffffff16602083015260409283019290910190600101611f90565b5095945050505050565b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612032575f5ffd5b9190910192915050565b5f6020828403121561204c575f5ffd5b813563ffffffff81168114611f77575f5ffd5b5f6020828403121561206f575f5ffd5b611f7782611c38565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f602083015161014060408401526120eb610160840182612078565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160608501526121268282612078565b9150506060840151612150608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e08401516101008401526101008401516121bf61012085018215159052565b50610120840151801515610140850152509392505050565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261220a575f5ffd5b83018035915067ffffffffffffffff821115612224575f5ffd5b602001915036819003821315612238575f5ffd5b9250929050565b5f5f8585111561224d575f5ffd5b83861115612259575f5ffd5b5050820193919092039150565b80357fffffffff0000000000000000000000000000000000000000000000000000000081169060048410156122c5577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b5f602082840312156122eb575f5ffd5b505191905056fea26469706673582212201882dfef9ea5a36388c0b3039e6960ba9fba5f7f5ac66ec3b5a53603e350992464736f6c634300081d0033";

type OptimismBridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismBridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismBridgeFacet__factory extends ContractFactory {
  constructor(...args: OptimismBridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismBridgeFacet> {
    return super.deploy(overrides || {}) as Promise<OptimismBridgeFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OptimismBridgeFacet {
    return super.attach(address) as OptimismBridgeFacet;
  }
  override connect(signer: Signer): OptimismBridgeFacet__factory {
    return super.connect(signer) as OptimismBridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismBridgeFacetInterface {
    return new utils.Interface(_abi) as OptimismBridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismBridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as OptimismBridgeFacet;
  }
}
