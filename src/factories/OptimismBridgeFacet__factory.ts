/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  OptimismBridgeFacet,
  OptimismBridgeFacetInterface,
} from "../OptimismBridgeFacet";

const _abi = [
  {
    type: "function",
    name: "initOptimism",
    inputs: [
      {
        name: "configs",
        type: "tuple[]",
        internalType: "struct OptimismBridgeFacet.Config[]",
        components: [
          {
            name: "assetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "bridge",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "standardBridge",
        type: "address",
        internalType: "contract IL1StandardBridge",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "registerOptimismBridge",
    inputs: [
      {
        name: "assetId",
        type: "address",
        internalType: "address",
      },
      {
        name: "bridge",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaOptimismBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_optimismData",
        type: "tuple",
        internalType: "struct OptimismBridgeFacet.OptimismData",
        components: [
          {
            name: "assetIdOnL2",
            type: "address",
            internalType: "address",
          },
          {
            name: "l2Gas",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "isSynthetix",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaOptimismBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_optimismData",
        type: "tuple",
        internalType: "struct OptimismBridgeFacet.OptimismData",
        components: [
          {
            name: "assetIdOnL2",
            type: "address",
            internalType: "address",
          },
          {
            name: "l2Gas",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "isSynthetix",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OptimismBridgeRegistered",
    inputs: [
      {
        name: "assetId",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "bridge",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OptimismInitialized",
    inputs: [
      {
        name: "configs",
        type: "tuple[]",
        indexed: false,
        internalType: "struct OptimismBridgeFacet.Config[]",
        components: [
          {
            name: "assetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "bridge",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidConfig",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyContractOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b506122f88061001c5f395ff3fe60806040526004361061003e575f3560e01c80635bb5d44814610042578063899cc31714610057578063ce8a97a514610076578063decb09d714610089575b5f5ffd5b610055610050366004611d15565b6100a8565b005b348015610062575f5ffd5b50610055610071366004611dc2565b6102d5565b610055610084366004611e44565b610540565b348015610094575f5ffd5b506100556100a3366004611e90565b610760565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610123576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6101333447611ec7565b905086806101000151610172576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101200151156101b0576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886101d38160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561020a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610247576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610284576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102988a5f01518b60c001518b8b336108d4565b60c08b01526102a78a88610a17565b5047915050818111156102c8576102c85f846102c38585611ec7565b610d8f565b50505f9091555050505050565b6102dd610dc4565b7f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca4547f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca39074010000000000000000000000000000000000000000900460ff1615610373576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b838110156104a6575f85858381811061039057610390611eff565b90506040020160200160208101906103a89190611f2c565b73ffffffffffffffffffffffffffffffffffffffff16036103f5576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84848281811061040757610407611eff565b905060400201602001602081019061041f9190611f2c565b825f87878581811061043357610433611eff565b6104499260206040909202019081019150611f2c565b73ffffffffffffffffffffffffffffffffffffffff908116825260208201929092526040015f2080547fffffffffffffffffffffffff00000000000000000000000000000000000000001692909116919091179055600101610375565b506001810180547fffffffffffffffffffffff0000000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617740100000000000000000000000000000000000000001790556040517fd192688003c02a257d1ee3ef083c31f3ba31e400ad8655bf4257081255c91568906105329086908690611f4e565b60405180910390a150505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016105bb576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6105cb3447611ec7565b9050848061010001511561060b576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8580610120015115610649576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8661066c8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156106a3576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036106e0576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361071d576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61072f88608001518960c00151610e39565b6107398888610a17565b504791505081811115610755576107555f846102c38585611ec7565b50505f909155505050565b610768610dc4565b7f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca4547f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca39074010000000000000000000000000000000000000000900460ff166107fd576040517f87138d5c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661084a576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8381165f818152602084815260409182902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169487169485179055905192835290917f8ba151f3405c32cff2d4c159409e00b97b0b46fbcbe59438e7f62c1283f80638910160405180910390a2505050565b5f8280820361090f576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f858561091d600185611ec7565b81811061092c5761092c611eff565b905060200281019061093e9190611fd0565b61094f906080810190606001611f2c565b90505f61095b82610eed565b905073ffffffffffffffffffffffffffffffffffffffff8216610985576109823482611ec7565b90505b5f6109908888610f37565b905061099c8888611041565b6109a98a898989856110ad565b5f826109b485610eed565b6109be9190611ec7565b905089811015610a09576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b608082015173ffffffffffffffffffffffffffffffffffffffff9081165f9081527f3054da8d868a64d042338c7baf39c5a0a735f3268ce50536bb45aeaa077c8ca360208190526040822054909216908115610a735781610a8f565b600183015473ffffffffffffffffffffffffffffffffffffffff165b9050610ab3856080015173ffffffffffffffffffffffffffffffffffffffff161590565b15610b875760c085015160a086015173ffffffffffffffffffffffffffffffffffffffff831691639a2ac6d591610af06040890160208a0161200c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015263ffffffff166024820152606060448201525f60648201526084015f604051808303818588803b158015610b6b575f5ffd5b505af1158015610b7d573d5f5f3e3d5ffd5b5050505050610d51565b610b9a8560800151828760c00151611458565b610baa606085016040860161202f565b15610c5c5760a085015160c08601516040517fffaad6a500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169263ffaad6a592610c2a9260040173ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b5f604051808303815f87803b158015610c41575f5ffd5b505af1158015610c53573d5f5f3e3d5ffd5b50505050610d51565b608085015173ffffffffffffffffffffffffffffffffffffffff82169063838b252090610c8c6020880188611f2c565b60a089015160c08a0151610ca660408b0160208c0161200c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff95861660048201529385166024850152939091166044830152606482015263ffffffff91909116608482015260c060a48201525f60c482015260e4015f604051808303815f87803b158015610d3a575f5ffd5b505af1158015610d4c573d5f5f3e3d5ffd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f185604051610d809190612094565b60405180910390a15050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610db957610db48282611484565b505050565b610db48383836114f1565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314610e37576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b805f03610e72576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610ecb5780341015610ec7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610ec773ffffffffffffffffffffffffffffffffffffffff831633308461155f565b5f73ffffffffffffffffffffffffffffffffffffffff821615610f2f57610f2a73ffffffffffffffffffffffffffffffffffffffff8316306115b7565b610f31565b475b92915050565b6060815f8167ffffffffffffffff811115610f5457610f54611ad4565b604051908082528060200260200182016040528015610f7d578160200160208202803683370190505b5090505f805b8381101561103657868682818110610f9d57610f9d611eff565b9050602002810190610faf9190611fd0565b610fc0906080810190606001611f2c565b9150610fcb82610eed565b838281518110610fdd57610fdd611eff565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff821661102e573483828151811061101657611016611eff565b6020026020010181815161102a9190611ec7565b9052505b600101610f83565b509095945050505050565b5f5b81811015610db4573683838381811061105e5761105e611eff565b90506020028101906110709190611fd0565b905061108260e0820160c0830161202f565b156110a4576110a461109a6060830160408401611f2c565b8260800135610e39565b50600101611043565b838383838260018114611374575f85856110c8600185611ec7565b8181106110d7576110d7611eff565b90506020028101906110e99190611fd0565b6110fa906080810190606001611f2c565b90505f89815b818110156112a157368d8d8381811061111b5761111b611eff565b905060200281019061112d9190611fd0565b905061115c6111426060830160408401611f2c565b73ffffffffffffffffffffffffffffffffffffffff161590565b806111be57506111be6111756040830160208401611f2c565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156111d557506111d56111756020830183611f2c565b801561125857506112586111ec60a08301836121a7565b6111fa916004915f9161220f565b61120391612236565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61128e576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112988f826115ea565b50600101611100565b505f90505b6112b1600185611ec7565b81101561136c575f8888838181106112cb576112cb611eff565b90506020028101906112dd9190611fd0565b6112ee906080810190606001611f2c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113635785828151811061133557611335611eff565b602002602001015161134682610eed565b6113509190611ec7565b9250821561136357611363818885610d8f565b506001016112a6565b50505061144c565b875f5b8181101561144957368b8b8381811061139257611392611eff565b90506020028101906113a49190611fd0565b90506113b96111426060830160408401611f2c565b806113d257506113d26111756040830160208401611f2c565b80156113e957506113e96111756020830183611f2c565b801561140057506114006111ec60a08301836121a7565b611436576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114408d826115ea565b50600101611377565b50505b50505050505050505050565b610db48383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6118bd565b73ffffffffffffffffffffffffffffffffffffffff82166114d1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ec773ffffffffffffffffffffffffffffffffffffffff8316826119ea565b73ffffffffffffffffffffffffffffffffffffffff821661153e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610db473ffffffffffffffffffffffffffffffffffffffff84168383611a03565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f511417166115aa57637939f4245f526004601cfd5b5f60605260405250505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b6116006115fa6020830183611f2c565b3b151590565b611636576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003611675576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6116896111426060850160408601611f2c565b611693575f611699565b82608001355b90505f6116b46116af6060860160408701611f2c565b610eed565b90505f6116ca6116af6080870160608801611f2c565b9050825f03611700576117006116e66060870160408801611f2c565b6116f66040880160208901611f2c565b8760800135611458565b846080013582101561174b576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610a00565b5f8061175a6020880188611f2c565b73ffffffffffffffffffffffffffffffffffffffff168561177e60a08a018a6121a7565b60405161178c92919061229c565b5f6040518083038185875af1925050503d805f81146117c6576040519150601f19603f3d011682016040523d82523d5f602084013e6117cb565b606091505b5091509150816117de576117de81611a4c565b5f6117f26116af60808a0160608b01611f2c565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961182360208b018b611f2c565b61183360608c0160408d01611f2c565b61184360808d0160608e01611f2c565b8c60800135898711611855578661185f565b61185f8a88611ec7565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156119e45773ffffffffffffffffffffffffffffffffffffffff8316611926576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611999573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119bd91906122ab565b10156119e4576119e473ffffffffffffffffffffffffffffffffffffffff85168483611a56565b50505050565b5f385f3884865af1610ec75763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716611a43576390b8ec185f526004601cfd5b5f603452505050565b8051602082018181fd5b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716611a43575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f51141716611a4357633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff81118282101715611b2557611b25611ad4565b60405290565b5f82601f830112611b3a575f5ffd5b813567ffffffffffffffff811115611b5457611b54611ad4565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff81118282101715611ba157611ba1611ad4565b604052818152838201602001851015611bb8575f5ffd5b816020850160208301375f918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611bf5575f5ffd5b50565b8035611c0381611bd4565b919050565b80358015158114611c03575f5ffd5b5f6101408284031215611c28575f5ffd5b611c30611b01565b823581529050602082013567ffffffffffffffff811115611c4f575f5ffd5b611c5b84828501611b2b565b602083015250604082013567ffffffffffffffff811115611c7a575f5ffd5b611c8684828501611b2b565b604083015250611c9860608301611bf8565b6060820152611ca960808301611bf8565b6080820152611cba60a08301611bf8565b60a082015260c0828101359082015260e08083013590820152611ce06101008301611c08565b610100820152611cf36101208301611c08565b61012082015292915050565b5f60608284031215611d0f575f5ffd5b50919050565b5f5f5f5f60a08587031215611d28575f5ffd5b843567ffffffffffffffff811115611d3e575f5ffd5b611d4a87828801611c17565b945050602085013567ffffffffffffffff811115611d66575f5ffd5b8501601f81018713611d76575f5ffd5b803567ffffffffffffffff811115611d8c575f5ffd5b8760208260051b8401011115611da0575f5ffd5b60209190910193509150611db78660408701611cff565b905092959194509250565b5f5f5f60408486031215611dd4575f5ffd5b833567ffffffffffffffff811115611dea575f5ffd5b8401601f81018613611dfa575f5ffd5b803567ffffffffffffffff811115611e10575f5ffd5b8660208260061b8401011115611e24575f5ffd5b602091820194509250840135611e3981611bd4565b809150509250925092565b5f5f60808385031215611e55575f5ffd5b823567ffffffffffffffff811115611e6b575f5ffd5b611e7785828601611c17565b925050611e878460208501611cff565b90509250929050565b5f5f60408385031215611ea1575f5ffd5b8235611eac81611bd4565b91506020830135611ebc81611bd4565b809150509250929050565b81810381811115610f31577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60208284031215611f3c575f5ffd5b8135611f4781611bd4565b9392505050565b602080825281018290525f8360408301825b85811015611fc6578235611f7381611bd4565b73ffffffffffffffffffffffffffffffffffffffff1682526020830135611f9981611bd4565b73ffffffffffffffffffffffffffffffffffffffff16602083015260409283019290910190600101611f60565b5095945050505050565b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612002575f5ffd5b9190910192915050565b5f6020828403121561201c575f5ffd5b813563ffffffff81168114611f47575f5ffd5b5f6020828403121561203f575f5ffd5b611f4782611c08565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f602083015161014060408401526120bb610160840182612048565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160608501526120f68282612048565b9150506060840151612120608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e084015161010084015261010084015161218f61012085018215159052565b50610120840151801515610140850152509392505050565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126121da575f5ffd5b83018035915067ffffffffffffffff8211156121f4575f5ffd5b602001915036819003821315612208575f5ffd5b9250929050565b5f5f8585111561221d575f5ffd5b83861115612229575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015612295577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b5f602082840312156122bb575f5ffd5b505191905056fea264697066735822122084a1725bf978e92c7a7d030664c21d4626287ad7ad9f2e62f1d33a268779b75f64736f6c634300081d0033";

type OptimismBridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismBridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismBridgeFacet__factory extends ContractFactory {
  constructor(...args: OptimismBridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismBridgeFacet> {
    return super.deploy(overrides || {}) as Promise<OptimismBridgeFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OptimismBridgeFacet {
    return super.attach(address) as OptimismBridgeFacet;
  }
  override connect(signer: Signer): OptimismBridgeFacet__factory {
    return super.connect(signer) as OptimismBridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismBridgeFacetInterface {
    return new utils.Interface(_abi) as OptimismBridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismBridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as OptimismBridgeFacet;
  }
}
