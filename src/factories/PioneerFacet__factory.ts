/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { PioneerFacet, PioneerFacetInterface } from "../PioneerFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_pioneerAddress",
        type: "address",
        internalType: "address payable",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "PIONEER_ADDRESS",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address payable",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "startBridgeTokensViaPioneer",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_pioneerData",
        type: "tuple",
        internalType: "struct PioneerFacet.PioneerData",
        components: [
          {
            name: "refundAddress",
            type: "address",
            internalType: "address payable",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaPioneer",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_pioneerData",
        type: "tuple",
        internalType: "struct PioneerFacet.PioneerData",
        components: [
          {
            name: "refundAddress",
            type: "address",
            internalType: "address payable",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RefundAddress",
    inputs: [
      {
        name: "refundTo",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidConfig",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a0604052348015600e575f5ffd5b50604051611b7f380380611b7f833981016040819052602b916061565b6001600160a01b0381166051576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b0316608052608c565b5f602082840312156070575f5ffd5b81516001600160a01b03811681146085575f5ffd5b9392505050565b608051611ad56100aa5f395f8181604801526106540152611ad55ff3fe608060405260043610610033575f3560e01c80631a7c5c4b146100375780637d09055814610093578063c02fc302146100a8575b5f5ffd5b348015610042575f5ffd5b5061006a7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100a66100a1366004611650565b6100bb565b005b6100a66100b63660046116fd565b6102e8565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610136576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6101463447611749565b905086806101000151610185576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101200151156101c3576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886101e68160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561021d576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f0361025a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610297576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102ab8a5f01518b60c001518b8b33610508565b60c08b01526102ba8a8861064a565b5047915050818111156102db576102db5f846102d68585611749565b61070e565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610363576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6103733447611749565b9050846103988160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103cf576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f0361040c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610449576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8580610100015115610487576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86806101200151156104c5576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104d788608001518960c00151610743565b6104e1888861064a565b5047915050818111156104fd576104fd5f846102d68585611749565b50505f909155505050565b5f82808203610543576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8585610551600185611749565b81811061056057610560611781565b905060200281019061057291906117ae565b6105839060808101906060016117ea565b90505f61058f826107f7565b905073ffffffffffffffffffffffffffffffffffffffff82166105b9576105b63482611749565b90505b5f6105c48888610841565b90506105d0888861094b565b6105dd8a898989856109b7565b5f826105e8856107f7565b6105f29190611749565b90508981101561063c576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b61067d82608001517f00000000000000000000000000000000000000000000000000000000000000008460c0015161070e565b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1826040516106ac9190611858565b60405180910390a17f69d9a1f7b99f5c0c8416e5e60744f92e2927ca1670a7591a36531f63f2f198e06106e260208301836117ea565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff8316610738576107338282610d62565b505050565b610733838383610dcf565b805f0361077c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166107d557803410156107d1576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6107d173ffffffffffffffffffffffffffffffffffffffff8316333084610e3d565b5f73ffffffffffffffffffffffffffffffffffffffff8216156108395761083473ffffffffffffffffffffffffffffffffffffffff831630610e95565b61083b565b475b92915050565b6060815f8167ffffffffffffffff81111561085e5761085e61140f565b604051908082528060200260200182016040528015610887578160200160208202803683370190505b5090505f805b83811015610940578686828181106108a7576108a7611781565b90506020028101906108b991906117ae565b6108ca9060808101906060016117ea565b91506108d5826107f7565b8382815181106108e7576108e7611781565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610938573483828151811061092057610920611781565b602002602001018181516109349190611749565b9052505b60010161088d565b509095945050505050565b5f5b81811015610733573683838381811061096857610968611781565b905060200281019061097a91906117ae565b905061098c60e0820160c0830161196b565b156109ae576109ae6109a460608301604084016117ea565b8260800135610743565b5060010161094d565b838383838260018114610c7e575f85856109d2600185611749565b8181106109e1576109e1611781565b90506020028101906109f391906117ae565b610a049060808101906060016117ea565b90505f89815b81811015610bab57368d8d83818110610a2557610a25611781565b9050602002810190610a3791906117ae565b9050610a66610a4c60608301604084016117ea565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610ac85750610ac8610a7f60408301602084016117ea565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610adf5750610adf610a7f60208301836117ea565b8015610b625750610b62610af660a0830183611984565b610b04916004915f916119ec565b610b0d91611a13565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610b98576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ba28f82610ec8565b50600101610a0a565b505f90505b610bbb600185611749565b811015610c76575f888883818110610bd557610bd5611781565b9050602002810190610be791906117ae565b610bf89060808101906060016117ea565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c6d57858281518110610c3f57610c3f611781565b6020026020010151610c50826107f7565b610c5a9190611749565b92508215610c6d57610c6d81888561070e565b50600101610bb0565b505050610d56565b875f5b81811015610d5357368b8b83818110610c9c57610c9c611781565b9050602002810190610cae91906117ae565b9050610cc3610a4c60608301604084016117ea565b80610cdc5750610cdc610a7f60408301602084016117ea565b8015610cf35750610cf3610a7f60208301836117ea565b8015610d0a5750610d0a610af660a0830183611984565b610d40576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d4a8d82610ec8565b50600101610c81565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216610daf576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107d173ffffffffffffffffffffffffffffffffffffffff831682611138565b73ffffffffffffffffffffffffffffffffffffffff8216610e1c576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61073373ffffffffffffffffffffffffffffffffffffffff84168383611151565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f51141716610e8857637939f4245f526004601cfd5b5f60605260405250505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b610edd610ed860208301836117ea565b61119a565b610f13576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003610f52576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610f66610a4c60608501604086016117ea565b610f70575f610f76565b82608001355b90505f610f91610f8c60808601606087016117ea565b6107f7565b9050815f03610fc757610fc7610fad60608601604087016117ea565b610fbd60408701602088016117ea565b866080013561122e565b5f80610fd660208701876117ea565b73ffffffffffffffffffffffffffffffffffffffff1684610ffa60a0890189611984565b604051611008929190611a79565b5f6040518083038185875af1925050503d805f8114611042576040519150601f19603f3d011682016040523d82523d5f602084013e611047565b606091505b50915091508161105a5761105a8161125a565b5f61106e610f8c6080890160608a016117ea565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861109f60208a018a6117ea565b6110af60608b0160408c016117ea565b6110bf60808c0160608d016117ea565b8b608001358987116110d157866110db565b6110db8a88611749565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b5f385f3884865af16107d15763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716611191576390b8ec185f526004601cfd5b5f603452505050565b6040805160178082528183019092525f9182919060208201818036833701905050905060175f60208301853c60208101517f10ff0000000000000000000000000000000000000000000000000000000000007fffffff000000000000000000000000000000000000000000000000000000000082160161122557506023015160601c3b151592915050565b5050503b151590565b6107338383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611264565b8051602082018181fd5b73ffffffffffffffffffffffffffffffffffffffff84161561138b5773ffffffffffffffffffffffffffffffffffffffff83166112cd576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611340573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113649190611a88565b101561138b5761138b73ffffffffffffffffffffffffffffffffffffffff85168483611391565b50505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716611191575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f5114171661119157633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff811182821017156114605761146061140f565b60405290565b5f82601f830112611475575f5ffd5b813567ffffffffffffffff81111561148f5761148f61140f565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff811182821017156114dc576114dc61140f565b6040528181528382016020018510156114f3575f5ffd5b816020850160208301375f918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611530575f5ffd5b50565b803561153e8161150f565b919050565b8035801515811461153e575f5ffd5b5f6101408284031215611563575f5ffd5b61156b61143c565b823581529050602082013567ffffffffffffffff81111561158a575f5ffd5b61159684828501611466565b602083015250604082013567ffffffffffffffff8111156115b5575f5ffd5b6115c184828501611466565b6040830152506115d360608301611533565b60608201526115e460808301611533565b60808201526115f560a08301611533565b60a082015260c0828101359082015260e0808301359082015261161b6101008301611543565b61010082015261162e6101208301611543565b61012082015292915050565b5f6020828403121561164a575f5ffd5b50919050565b5f5f5f5f60608587031215611663575f5ffd5b843567ffffffffffffffff811115611679575f5ffd5b61168587828801611552565b945050602085013567ffffffffffffffff8111156116a1575f5ffd5b8501601f810187136116b1575f5ffd5b803567ffffffffffffffff8111156116c7575f5ffd5b8760208260051b84010111156116db575f5ffd5b602091909101935091506116f2866040870161163a565b905092959194509250565b5f5f6040838503121561170e575f5ffd5b823567ffffffffffffffff811115611724575f5ffd5b61173085828601611552565b925050611740846020850161163a565b90509250929050565b8181038181111561083b577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126117e0575f5ffd5b9190910192915050565b5f602082840312156117fa575f5ffd5b81356118058161150f565b9392505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f6020830151610140604084015261187f61016084018261180c565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160608501526118ba828261180c565b91505060608401516118e4608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e084015161010084015261010084015161195361012085018215159052565b50610120840151801515610140850152509392505050565b5f6020828403121561197b575f5ffd5b61180582611543565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126119b7575f5ffd5b83018035915067ffffffffffffffff8211156119d1575f5ffd5b6020019150368190038213156119e5575f5ffd5b9250929050565b5f5f858511156119fa575f5ffd5b83861115611a06575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015611a72577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b5f60208284031215611a98575f5ffd5b505191905056fea2646970667358221220175b823c47fa7f0eebf4bea8f53fefc98ca1d51c4bb21793b76cd0043fc88bbd64736f6c634300081d0033";

type PioneerFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PioneerFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PioneerFacet__factory extends ContractFactory {
  constructor(...args: PioneerFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _pioneerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PioneerFacet> {
    return super.deploy(
      _pioneerAddress,
      overrides || {}
    ) as Promise<PioneerFacet>;
  }
  override getDeployTransaction(
    _pioneerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_pioneerAddress, overrides || {});
  }
  override attach(address: string): PioneerFacet {
    return super.attach(address) as PioneerFacet;
  }
  override connect(signer: Signer): PioneerFacet__factory {
    return super.connect(signer) as PioneerFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PioneerFacetInterface {
    return new utils.Interface(_abi) as PioneerFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PioneerFacet {
    return new Contract(address, _abi, signerOrProvider) as PioneerFacet;
  }
}
