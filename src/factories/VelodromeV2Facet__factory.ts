/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  VelodromeV2Facet,
  VelodromeV2FacetInterface,
} from "../VelodromeV2Facet";

const _abi = [
  {
    type: "function",
    name: "swapVelodromeV2",
    inputs: [
      {
        name: "swapData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenIn",
        type: "address",
        internalType: "address",
      },
      {
        name: "amountIn",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "error",
    name: "InvalidCallData",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAnERC20Token",
    inputs: [],
  },
  {
    type: "error",
    name: "WrongPoolReserves",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b506108e48061001c5f395ff3fe60806040526004361061001d575f3560e01c80636be9fa0914610021575b5f5ffd5b61003461002f366004610698565b610036565b005b835160408051602080880182529287018301928101929092528181019052805180516014820180845251601583018085525160299093018452606091821c925f9190911a600114911c8215806100a0575073ffffffffffffffffffffffffffffffffffffffff8116155b156100d7576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83518051600191820186525f1a1473ffffffffffffffffffffffffffffffffffffffff88167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161028e575f5f8573ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561016d573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061019191906107b0565b5091509150815f14806101a2575080155b156101d9576040517fdf683a9800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f856101e557816101e7565b825b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff898116600483015291925082918c16906370a0823190602401602060405180830381865afa158015610256573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061027a91906107db565b61028491906107f2565b98505050506102e4565b3073ffffffffffffffffffffffffffffffffffffffff8916036102bb576102b687858861046d565b6102e4565b3373ffffffffffffffffffffffffffffffffffffffff8916036102e4576102e4873386896104e0565b6040517ff140a35a0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff88811660248301525f919086169063f140a35a90604401602060405180830381865afa158015610358573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061037c91906107db565b90505f8461038a578161038c565b5f5b90505f8561039a575f61039c565b825b90508673ffffffffffffffffffffffffffffffffffffffff1663022c0d9f838388886103d65760405180602001604052805f815250610413565b8e604051602001610403919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b6040516020818303038152906040525b6040518563ffffffff1660e01b81526004016104329493929190610830565b5f604051808303815f87803b158015610449575f5ffd5b505af115801561045b573d5f5f3e3d5ffd5b50505050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff82166104ba576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104db73ffffffffffffffffffffffffffffffffffffffff841683836105a2565b505050565b73ffffffffffffffffffffffffffffffffffffffff841661052d576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661057a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61059c73ffffffffffffffffffffffffffffffffffffffff85168484846105eb565b50505050565b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166105e2576390b8ec185f526004601cfd5b5f603452505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f5114171661063657637939f4245f526004601cfd5b5f60605260405250505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b803573ffffffffffffffffffffffffffffffffffffffff81168114610693575f5ffd5b919050565b5f5f5f5f608085870312156106ab575f5ffd5b843567ffffffffffffffff8111156106c1575f5ffd5b8501601f810187136106d1575f5ffd5b803567ffffffffffffffff8111156106eb576106eb610643565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160116810181811067ffffffffffffffff8211171561075757610757610643565b60405281815282820160200189101561076e575f5ffd5b816020840160208301375f6020838301015280965050505061079260208601610670565b92506107a060408601610670565b9396929550929360600135925050565b5f5f5f606084860312156107c2575f5ffd5b5050815160208301516040909301519094929350919050565b5f602082840312156107eb575f5ffd5b5051919050565b8181038181111561082a577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b92915050565b84815283602082015273ffffffffffffffffffffffffffffffffffffffff83166040820152608060608201525f8251806080840152806020850160a085015e5f60a0828501015260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168401019150509594505050505056fea264697066735822122007e8cd375edfe72cffa2e4667ec05c444d0a51bb9dcf1a0bea5c536498ff0a5f64736f6c634300081d0033";

type VelodromeV2FacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VelodromeV2FacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VelodromeV2Facet__factory extends ContractFactory {
  constructor(...args: VelodromeV2FacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VelodromeV2Facet> {
    return super.deploy(overrides || {}) as Promise<VelodromeV2Facet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VelodromeV2Facet {
    return super.attach(address) as VelodromeV2Facet;
  }
  override connect(signer: Signer): VelodromeV2Facet__factory {
    return super.connect(signer) as VelodromeV2Facet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VelodromeV2FacetInterface {
    return new utils.Interface(_abi) as VelodromeV2FacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VelodromeV2Facet {
    return new Contract(address, _abi, signerOrProvider) as VelodromeV2Facet;
  }
}
