/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  VelodromeV2Facet,
  VelodromeV2FacetInterface,
} from "../VelodromeV2Facet";

const _abi = [
  {
    type: "function",
    name: "swapVelodromeV2",
    inputs: [
      {
        name: "stream",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenIn",
        type: "address",
        internalType: "address",
      },
      {
        name: "amountIn",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "error",
    name: "InvalidCallData",
    inputs: [],
  },
  {
    type: "error",
    name: "WrongPoolReserves",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b50610e6d8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063334b26d91461002d575b5f5ffd5b61004061003b366004610c98565b610052565b60405190815260200160405180910390f35b5f6100916040518060400160405280601681526020017f7377617056656c6f64726f6d655632323220686572650000000000000000000081525061063a565b6100cf6040518060400160405280601681526020017f73747265616d206265666f72652072656164696e673a0000000000000000000081525061063a565b6100f9856040516020016100e591815260200190565b6040516020818303038152906040526106cc565b5f61010a8680516014018051915290565b905061014a6040518060400160405280600781526020017f706f6f6c3232320000000000000000000000000000000000000000000000000081525061063a565b6101538161075b565b5f6101648780516001018051915290565b90506101a46040518060400160405280600c81526020017f646972656374696f6e323232000000000000000000000000000000000000000081525061063a565b6101b08160ff166107fc565b5f6101c18880516014018051915290565b90506102016040518060400160405280600581526020017f746f32323200000000000000000000000000000000000000000000000000000081525061063a565b61020a8161075b565b73ffffffffffffffffffffffffffffffffffffffff83161580610241575073ffffffffffffffffffffffffffffffffffffffff8116155b15610278576040517f1c49f4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f600161028b8a80516001018051915290565b60ff1614905073ffffffffffffffffffffffffffffffffffffffff881661041e575f5f8573ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156102f7573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061031b9190610cd9565b5091509150815f148061032c575080155b15610363576040517fdf683a9800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60ff86166001146103755781610377565b825b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff898116600483015291925082918c16906370a0823190602401602060405180830381865afa1580156103e6573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061040a9190610d04565b6104149190610d1b565b98505050506104a0565b3073ffffffffffffffffffffffffffffffffffffffff8916036104615761045c73ffffffffffffffffffffffffffffffffffffffff8816858861088d565b6104a0565b3373ffffffffffffffffffffffffffffffffffffffff8916036104a0576104a073ffffffffffffffffffffffffffffffffffffffff8816338689610966565b6040517ff140a35a0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff88811660248301525f919086169063f140a35a90604401602060405180830381865afa158015610514573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105389190610d04565b90505f60ff851660011461054c578161054e565b5f5b90505f60ff8616600114610562575f610564565b825b90508673ffffffffffffffffffffffffffffffffffffffff1663022c0d9f8383888861059e5760405180602001604052805f8152506105db565b8e6040516020016105cb919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b6040516020818303038152906040525b6040518563ffffffff1660e01b81526004016105fa9493929190610da5565b5f604051808303815f87803b158015610611575f5ffd5b505af1158015610623573d5f5f3e3d5ffd5b505050505f9750505050505050505b949350505050565b6106c98160405160240161064e9190610de9565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac000000000000000000000000000000000000000000000000000000001790526109ca565b50565b6106c9816040516024016106e09190610de9565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0be77f56000000000000000000000000000000000000000000000000000000001790526109ca565b60405173ffffffffffffffffffffffffffffffffffffffff821660248201526106c990604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f2c2ecbc2000000000000000000000000000000000000000000000000000000001790526109ca565b6106c98160405160240161081291815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ff82c50f1000000000000000000000000000000000000000000000000000000001790526109ca565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526109619084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526109d3565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526109c49085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016108df565b50505050565b6106c981610ae5565b5f610a34826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610b059092919063ffffffff16565b905080515f1480610a54575080806020019051810190610a549190610e02565b610961576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b80516a636f6e736f6c652e6c6f67602083015f808483855afa5050505050565b606061063284845f85855f5f8673ffffffffffffffffffffffffffffffffffffffff168587604051610b379190610e21565b5f6040518083038185875af1925050503d805f8114610b71576040519150601f19603f3d011682016040523d82523d5f602084013e610b76565b606091505b5091509150610b8787838387610b92565b979650505050505050565b60608315610c275782515f03610c205773ffffffffffffffffffffffffffffffffffffffff85163b610c20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610adc565b5081610632565b6106328383815115610c3c5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adc9190610de9565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c93575f5ffd5b919050565b5f5f5f5f60808587031215610cab575f5ffd5b84359350610cbb60208601610c70565b9250610cc960408601610c70565b9396929550929360600135925050565b5f5f5f60608486031215610ceb575f5ffd5b5050815160208301516040909301519094929350919050565b5f60208284031215610d14575f5ffd5b5051919050565b81810381811115610d53577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b92915050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b84815283602082015273ffffffffffffffffffffffffffffffffffffffff83166040820152608060608201525f610ddf6080830184610d59565b9695505050505050565b602081525f610dfb6020830184610d59565b9392505050565b5f60208284031215610e12575f5ffd5b81518015158114610dfb575f5ffd5b5f82518060208501845e5f92019182525091905056fea26469706673582212205bf0c03478d6e252aa4c46ea75b98d27f7e5d9172700d726531eff377a3ff07564736f6c634300081d0033";

type VelodromeV2FacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VelodromeV2FacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VelodromeV2Facet__factory extends ContractFactory {
  constructor(...args: VelodromeV2FacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VelodromeV2Facet> {
    return super.deploy(overrides || {}) as Promise<VelodromeV2Facet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VelodromeV2Facet {
    return super.attach(address) as VelodromeV2Facet;
  }
  override connect(signer: Signer): VelodromeV2Facet__factory {
    return super.connect(signer) as VelodromeV2Facet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VelodromeV2FacetInterface {
    return new utils.Interface(_abi) as VelodromeV2FacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VelodromeV2Facet {
    return new Contract(address, _abi, signerOrProvider) as VelodromeV2Facet;
  }
}
