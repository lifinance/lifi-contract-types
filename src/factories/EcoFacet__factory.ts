/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { EcoFacet, EcoFacetInterface } from "../EcoFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_portal",
        type: "address",
        internalType: "contract IEcoPortal",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "PORTAL",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IEcoPortal",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "startBridgeTokensViaEco",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_ecoData",
        type: "tuple",
        internalType: "struct EcoFacet.EcoData",
        components: [
          {
            name: "receiverAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "nonEVMReceiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "prover",
            type: "address",
            internalType: "address",
          },
          {
            name: "rewardDeadline",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "solverReward",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "encodedRoute",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "solanaATA",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaEco",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_ecoData",
        type: "tuple",
        internalType: "struct EcoFacet.EcoData",
        components: [
          {
            name: "receiverAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "nonEVMReceiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "prover",
            type: "address",
            internalType: "address",
          },
          {
            name: "rewardDeadline",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "solverReward",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "encodedRoute",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "solanaATA",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChainBytes32",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidConfig",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60e0604052632b6653dc60a05263536f6c4d60c05234801561001f575f5ffd5b5060405161293e38038061293e83398101604081905261003e91610076565b6001600160a01b038116610065576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b03166080526100a3565b5f60208284031215610086575f5ffd5b81516001600160a01b038116811461009c575f5ffd5b9392505050565b60805160a05160c0516128646100da5f395f6112d901525f6112a401525f8181604801528181610a620152610a8901526128645ff3fe608060405260043610610033575f3560e01c80630ff754ea1461003757806320560477146100935780639ab12459146100a8575b5f5ffd5b348015610042575f5ffd5b5061006a7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100a66100a1366004611f0b565b6100bb565b005b6100a66100b6366004611fd1565b61034d565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610136576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6101463447612063565b905086806101000151610185576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101a88160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101df576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f0361021c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610259576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8880610120015115610297576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102a18a886105aa565b5f6102c48b6080015173ffffffffffffffffffffffffffffffffffffffff161590565b90505f816102d2575f6102d8565b88608001355b90506102ef8c5f01518d60c001518d8d338661085c565b60c08d0152816103135788608001358c60c0015161030d9190612063565b60c08d01525b61031d8c8a6109f8565b5047935050505081811115610340576103405f8461033b8585612063565b610b54565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016103c8576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6103d83447612063565b9050846103fd8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610434576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610471576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104ae576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156104ec576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868061012001511561052a576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61053488886105aa565b60c0880151608089015173ffffffffffffffffffffffffffffffffffffffff161561056a57610567608089013582612076565b90505b610578896080015182610b89565b61058289896109f8565b5047925050508181111561059f5761059f5f8461033b8585612063565b50505f909155505050565b60a08281015160e08401519091660416edef1601be909114906105cf90840184612089565b90505f03610609576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffffffffffffffffffffee0eee0eee0eee0eee0eee0eee0eee0eee0eee0f73ffffffffffffffffffffffffffffffffffffffff8316016106e7576106536020840184612089565b90505f0361068d576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80801561069c575060c0830135155b156106d3576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80156106e2576106e283610c3d565b610856565b6106f460208401846120f1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610758576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015610790576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61079e60a0850185612089565b8101906107ab91906122e4565b60a081015180519192505f916107c390600190612063565b815181106107d3576107d36123b1565b60200260200101516020015190505f602482015190508660a0015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610852576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505b50505050565b5f83808203610897576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f86866108a5600185612063565b8181106108b4576108b46123b1565b90506020028101906108c691906123de565b6108d79060808101906060016120f1565b90505f6108e382610d4c565b905073ffffffffffffffffffffffffffffffffffffffff821661090d5761090a3482612063565b90505b5f6109188989610d96565b90506109248989610ea0565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff8916602082015290810187905261095f818b8b85610f0c565b5f8361096a86610d4c565b6109749190612063565b905073ffffffffffffffffffffffffffffffffffffffff851661099e5761099b8882612063565b90505b8b8110156109e6576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d90526024810182905260440160405180910390fd5b955050505050505b9695505050505050565b5f610a1b836080015173ffffffffffffffffffffffffffffffffffffffff161590565b90505f82608001358460c00151610a329190612076565b90505f610a41858585856110dc565b90505f610a518660e00151611292565b905083610a8757610a8786608001517f000000000000000000000000000000000000000000000000000000000000000085611343565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663df00f8fa85610ace575f610ad0565b845b83610ade60a08a018a612089565b875f6040518763ffffffff1660e01b8152600401610b00959493929190612461565b604080518083038185885af1158015610b1b573d5f5f3e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190610b409190612565565b5050610b4c868661136f565b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610b7e57610b798282611441565b505050565b610b798383836114ae565b805f03610bc2576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610c1b5780341015610c17576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610c1773ffffffffffffffffffffffffffffffffffffffff831633308461151c565b610c4a6020820182612089565b15905080610c665750602c610c626020830183612089565b9050115b15610c9d576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610caa60a0820182612089565b905061013f14610ce6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610cf460a0830183612089565b610d049161011b9160fb91612593565b610d0d916125ba565b9050808260c0013514610c17576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff821615610d8e57610d8973ffffffffffffffffffffffffffffffffffffffff831630611574565b610d90565b475b92915050565b6060815f8167ffffffffffffffff811115610db357610db3611c42565b604051908082528060200260200182016040528015610ddc578160200160208202803683370190505b5090505f5f5b83811015610e9557868682818110610dfc57610dfc6123b1565b9050602002810190610e0e91906123de565b610e1f9060808101906060016120f1565b9150610e2a82610d4c565b838281518110610e3c57610e3c6123b1565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610e8d5734838281518110610e7557610e756123b1565b60200260200101818151610e899190612063565b9052505b600101610de2565b509095945050505050565b5f5b81811015610b795736838383818110610ebd57610ebd6123b1565b9050602002810190610ecf91906123de565b9050610ee160e0820160c083016125f6565b15610f0357610f03610ef960608301604084016120f1565b8260800135610b89565b50600101610ea2565b60208401516040850151849184918490835f5b818110156110c257368a8a83818110610f3a57610f3a6123b1565b9050602002810190610f4c91906123de565b9050610f7b610f6160608301604084016120f1565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610fdd5750610fdd610f9460408301602084016120f1565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610ff45750610ff4610f9460208301836120f1565b8015611077575061107761100b60a0830183612089565b611019916004915f91612593565b6110229161260f565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6110ad576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b516110b990826115a7565b50600101610f1f565b50506110d1858585858561181a565b505050505050505050565b6111406040518060a001604052805f67ffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f8152602001606081525090565b6060836111d55760408051600180825281830190925290816020015b604080518082019091525f808252602082015281526020019060019003908161115c5790505090506040518060400160405280876080015173ffffffffffffffffffffffffffffffffffffffff16815260200184815250815f815181106111c5576111c56123b1565b6020026020010181905250611214565b604080515f8082526020820190925290611210565b604080518082019091525f80825260208201528152602001906001900390816111ea5790505b5090505b6040805160a08101909152806112306080880160608901612675565b67ffffffffffffffff16815233602082015260409081019061125890606089019089016120f1565b73ffffffffffffffffffffffffffffffffffffffff1681526020018561127e575f611280565b845b81526020019190915295945050505050565b5f6606b2787ad08cbc82036112c857507f0000000000000000000000000000000000000000000000000000000000000000919050565b660416edef1601be82036112fd57507f0000000000000000000000000000000000000000000000000000000000000000919050565b67ffffffffffffffff82111561133f576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5090565b610b798383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611a31565b7311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff16036114065760e082015182517ff9b69f466270c99522169d563c0a430e88c52865ec33b1cc36ee2a4a6ea5170b6113ef6020850185612089565b6040516113fd92919061268e565b60405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161143591906126f5565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff821661148e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c1773ffffffffffffffffffffffffffffffffffffffff831682611b58565b73ffffffffffffffffffffffffffffffffffffffff82166114fb576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b7973ffffffffffffffffffffffffffffffffffffffff84168383611b71565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f5114171661156757637939f4245f526004601cfd5b5f60605260405250505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b6115bf6115b760208301836120f1565b6017903b1190565b6115f5576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003611634576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f611648610f6160608501604086016120f1565b611652575f611658565b82608001355b90505f61167361166e60808601606087016120f1565b610d4c565b9050815f036116a9576116a961168f60608601604087016120f1565b61169f60408701602088016120f1565b8660800135611343565b5f806116b860208701876120f1565b73ffffffffffffffffffffffffffffffffffffffff16846116dc60a0890189612089565b6040516116ea929190612808565b5f6040518083038185875af1925050503d805f8114611724576040519150601f19603f3d011682016040523d82523d5f602084013e611729565b606091505b50915091508161173c5761173c81611bba565b5f61175061166e6080890160608a016120f1565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861178160208a018a6120f1565b61179160608b0160408c016120f1565b6117a160808c0160608d016120f1565b8b608001358987116117b357866117bd565b6117bd8a88612063565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f8682611829600182612063565b818110611838576118386123b1565b905060200281019061184a91906123de565b61185b9060808101906060016120f1565b90505f5f5f5f5f5f5f5b88811015611a215761187860018a612063565b81108015611887575088600114155b15611962578d8d8281811061189e5761189e6123b1565b90506020028101906118b091906123de565b6118c19060808101906060016120f1565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611962578a8181518110611908576119086123b1565b602002602001015161191987610d4c565b6119239190612063565b965073ffffffffffffffffffffffffffffffffffffffff861615611947575f611949565b895b93508387111561196257611962868d61033b878b612063565b8d8d82818110611974576119746123b1565b905060200281019061198691906123de565b6119979060608101906040016120f1565b94506119a285610d4c565b925073ffffffffffffffffffffffffffffffffffffffff8516156119c6575f6119c8565b895b91508183118015611a0557508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b15611a1957611a19858d61033b8587612063565b600101611865565b5050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156108565773ffffffffffffffffffffffffffffffffffffffff8316611a9a576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611b0d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b319190612817565b10156108565761085673ffffffffffffffffffffffffffffffffffffffff85168483611bc4565b5f385f3884865af1610c175763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716611bb1576390b8ec185f526004601cfd5b5f603452505050565b8051602082018181fd5b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716611bb1575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f51141716611bb157633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff81118282101715611c9357611c93611c42565b60405290565b6040805190810167ffffffffffffffff81118282101715611c9357611c93611c42565b60405160c0810167ffffffffffffffff81118282101715611c9357611c93611c42565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611d2657611d26611c42565b604052919050565b5f5f67ffffffffffffffff841115611d4857611d48611c42565b50601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016602001611d7b81611cdf565b915050828152838383011115611d8f575f5ffd5b828260208301375f602084830101529392505050565b5f82601f830112611db4575f5ffd5b611dc383833560208501611d2e565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611deb575f5ffd5b50565b8035611df981611dca565b919050565b80358015158114611df9575f5ffd5b5f6101408284031215611e1e575f5ffd5b611e26611c6f565b823581529050602082013567ffffffffffffffff811115611e45575f5ffd5b611e5184828501611da5565b602083015250604082013567ffffffffffffffff811115611e70575f5ffd5b611e7c84828501611da5565b604083015250611e8e60608301611dee565b6060820152611e9f60808301611dee565b6080820152611eb060a08301611dee565b60a082015260c0828101359082015260e08083013590820152611ed66101008301611dfe565b610100820152611ee96101208301611dfe565b61012082015292915050565b5f60e08284031215611f05575f5ffd5b50919050565b5f5f5f5f60608587031215611f1e575f5ffd5b843567ffffffffffffffff811115611f34575f5ffd5b611f4087828801611e0d565b945050602085013567ffffffffffffffff811115611f5c575f5ffd5b8501601f81018713611f6c575f5ffd5b803567ffffffffffffffff811115611f82575f5ffd5b8760208260051b8401011115611f96575f5ffd5b60209190910193509150604085013567ffffffffffffffff811115611fb9575f5ffd5b611fc587828801611ef5565b91505092959194509250565b5f5f60408385031215611fe2575f5ffd5b823567ffffffffffffffff811115611ff8575f5ffd5b61200485828601611e0d565b925050602083013567ffffffffffffffff811115612020575f5ffd5b61202c85828601611ef5565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b81810381811115610d9057610d90612036565b80820180821115610d9057610d90612036565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126120bc575f5ffd5b83018035915067ffffffffffffffff8211156120d6575f5ffd5b6020019150368190038213156120ea575f5ffd5b9250929050565b5f60208284031215612101575f5ffd5b8135611dc381611dca565b803567ffffffffffffffff81168114611df9575f5ffd5b5f67ffffffffffffffff82111561213c5761213c611c42565b5060051b60200190565b5f82601f830112612155575f5ffd5b813561216861216382612123565b611cdf565b8082825260208201915060208360061b860101925085831115612189575f5ffd5b602085015b838110156121d457604081880312156121a5575f5ffd5b6121ad611c99565b81356121b881611dca565b815260208281013581830152908452929092019160400161218e565b5095945050505050565b5f82601f8301126121ed575f5ffd5b81356121fb61216382612123565b8082825260208201915060208360051b86010192508583111561221c575f5ffd5b602085015b838110156121d457803567ffffffffffffffff81111561223f575f5ffd5b860160408189037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0011215612272575f5ffd5b61227a611c99565b602082013561228881611dca565b8152604082013567ffffffffffffffff8111156122a3575f5ffd5b60208184010192505088601f8301126122ba575f5ffd5b6122c989833560208501611d2e565b60208201528085525050602083019250602081019050612221565b5f602082840312156122f4575f5ffd5b813567ffffffffffffffff81111561230a575f5ffd5b820160c0818503121561231b575f5ffd5b612323611cbc565b813581526123336020830161210c565b602082015261234460408301611dee565b604082015260608281013590820152608082013567ffffffffffffffff81111561236c575f5ffd5b61237886828501612146565b60808301525060a082013567ffffffffffffffff811115612397575f5ffd5b6123a3868285016121de565b60a083015250949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612410575f5ffd5b9190910192915050565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b67ffffffffffffffff86168152608060208201525f61248460808301868861241a565b828103604084015260a0810167ffffffffffffffff865116825273ffffffffffffffffffffffffffffffffffffffff602087015116602083015273ffffffffffffffffffffffffffffffffffffffff604087015116604083015260608601516060830152608086015160a0608084015281815180845260c0850191506020830194505f93505b80841015612551578451925073ffffffffffffffffffffffffffffffffffffffff83511682526020830151602083015260408201915060208501945060018401935061250a565b50861515606087015293506109ee92505050565b5f5f60408385031215612576575f5ffd5b82519150602083015161258881611dca565b809150509250929050565b5f5f858511156125a1575f5ffd5b838611156125ad575f5ffd5b5050820193919092039150565b80356020831015610d90577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b5f60208284031215612606575f5ffd5b611dc382611dfe565b80357fffffffff00000000000000000000000000000000000000000000000000000000811690600484101561266e577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b5f60208284031215612685575f5ffd5b611dc38261210c565b602081525f6126a160208301848661241a565b949350505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f6020830151610140604084015261271c6101608401826126a9565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084830301606085015261275782826126a9565b9150506060840151612781608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e08401516101008401526101008401516127f061012085018215159052565b50610120840151801515610140850152509392505050565b818382375f9101908152919050565b5f60208284031215612827575f5ffd5b505191905056fea264697066735822122038584e00757e9e570c30c666d2ea78f682c6a6b01966a128a730ca0ce5fa6a7964736f6c634300081d0033";

type EcoFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EcoFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EcoFacet__factory extends ContractFactory {
  constructor(...args: EcoFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _portal: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EcoFacet> {
    return super.deploy(_portal, overrides || {}) as Promise<EcoFacet>;
  }
  override getDeployTransaction(
    _portal: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_portal, overrides || {});
  }
  override attach(address: string): EcoFacet {
    return super.attach(address) as EcoFacet;
  }
  override connect(signer: Signer): EcoFacet__factory {
    return super.connect(signer) as EcoFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EcoFacetInterface {
    return new utils.Interface(_abi) as EcoFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EcoFacet {
    return new Contract(address, _abi, signerOrProvider) as EcoFacet;
  }
}
