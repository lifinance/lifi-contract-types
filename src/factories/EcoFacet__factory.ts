/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { EcoFacet, EcoFacetInterface } from "../EcoFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_portal",
        type: "address",
        internalType: "contract IEcoPortal",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "PORTAL",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IEcoPortal",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "startBridgeTokensViaEco",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_ecoData",
        type: "tuple",
        internalType: "struct EcoFacet.EcoData",
        components: [
          {
            name: "nonEVMReceiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "prover",
            type: "address",
            internalType: "address",
          },
          {
            name: "rewardDeadline",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "encodedRoute",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "solanaATA",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "refundRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaEco",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_ecoData",
        type: "tuple",
        internalType: "struct EcoFacet.EcoData",
        components: [
          {
            name: "nonEVMReceiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "prover",
            type: "address",
            internalType: "address",
          },
          {
            name: "rewardDeadline",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "encodedRoute",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "solanaATA",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "refundRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChainBytes32",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "IntentAlreadyFunded",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidConfig",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NativeAssetNotSupported",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a060405234801561000f575f5ffd5b50604051612ad7380380612ad783398101604081905261002e91610066565b6001600160a01b038116610055576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b0316608052610093565b5f60208284031215610076575f5ffd5b81516001600160a01b038116811461008c575f5ffd5b9392505050565b608051612a186100bf5f395f8181604801528181610b3c01528181610c0c0152610c480152612a185ff3fe608060405260043610610033575f3560e01c80630ff754ea146100375780637e56b7b0146100935780639e75aa95146100b4575b5f5ffd5b348015610042575f5ffd5b5061006a7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b34801561009e575f5ffd5b506100b26100ad366004612072565b6100c7565b005b6100b26100c23660046120d7565b61031b565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610142576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815560a0830151839073ffffffffffffffffffffffffffffffffffffffff16610199576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036101d6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610213576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8380610100015115610251576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b848061012001511561028f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856102b2816080015173ffffffffffffffffffffffffffffffffffffffff161590565b156102e9576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102f387876105ed565b61030587608001518860c001516109a3565b61030f8787610a57565b50505f90925550505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610396576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6103a6344761219d565b9050868061010001516103e5576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876104088160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561043f576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f0361047c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104b9576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b88806101200151156104f7576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8961051a816080015173ffffffffffffffffffffffffffffffffffffffff161590565b15610551576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61055b8b896105ed565b5f6105708c5f01518d60c001518d8d33610d78565b90508b60c001518111156105b3575f8c60c001518261058f919061219d565b60808e01519091506105b1906105ab60c08d0160a08e016121d5565b83610eba565b505b6105bd8c8a610a57565b50479350505050818111156105e0576105e05f846105db858561219d565b610f2d565b50505f9091555050505050565b5f6105fe60408301602084016121d5565b73ffffffffffffffffffffffffffffffffffffffff160361064b576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61065c60c0830160a084016121d5565b73ffffffffffffffffffffffffffffffffffffffff16036106a9576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b426106ba6060830160408401612207565b67ffffffffffffffff16116106fb576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a082015160e0830151660416edef1601be147fffffffffffffffffffffffffee0eee0eee0eee0eee0eee0eee0eee0eee0eee0f73ffffffffffffffffffffffffffffffffffffffff8316016108585780610782576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61078c8380612220565b90505f036107c6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080830135610801576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61013f6108116060850185612220565b90501461084a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61085383610f5d565b61099d565b6108656060840184612220565b90505f0361089f576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80156108d7576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6108e56060850185612220565b8101906108f29190612449565b60a081015180519192505f9161090a9060019061219d565b8151811061091a5761091a612516565b60200260200101516020015190505f602482015190508660a0015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610999576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505b50505050565b805f036109dc576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610a355780341015610a31576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610a3173ffffffffffffffffffffffffffffffffffffffff831633308461101f565b60c08201515f610a68848484611077565b90505f6606b2787ad08cbc8560e0015103610a885750632b6653dc610af2565b660416edef1601be8560e0015103610aa5575063536f6c4d610af2565b60e085015167ffffffffffffffff1015610aeb576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060e08401515b5f610b0a82610b046060880188612220565b866111fd565b90505f6040517f1299d617000000000000000000000000000000000000000000000000000000008152600481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690631299d61790602401602060405180830381865afa158015610b96573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bba9190612570565b6003811115610bcb57610bcb612543565b14610c02576040517fe431e17800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c3186608001517f0000000000000000000000000000000000000000000000000000000000000000866112c0565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663df00f8fa83610c7b6060890189612220565b875f6040518663ffffffff1660e01b8152600401610c9d95949392919061269a565b60408051808303815f875af1158015610cb8573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cdc91906126e4565b5050660416edef1601be8660e0015103610d395760e086015186517ff9b69f466270c99522169d563c0a430e88c52865ec33b1cc36ee2a4a6ea5170b610d228880612220565b604051610d30929190612712565b60405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f186604051610d689190612779565b60405180910390a1505050505050565b5f82808203610db3576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8585610dc160018561219d565b818110610dd057610dd0612516565b9050602002810190610de2919061288c565b610df39060808101906060016121d5565b90505f610dff826112ec565b905073ffffffffffffffffffffffffffffffffffffffff8216610e2957610e26348261219d565b90505b5f610e348888611336565b9050610e408888611440565b610e4d8a898989856114ac565b5f82610e58856112ec565b610e62919061219d565b905089811015610eac576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216610f07576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f2873ffffffffffffffffffffffffffffffffffffffff8416838361166e565b505050565b73ffffffffffffffffffffffffffffffffffffffff8316610f5257610f2882826116b7565b610f28838383610eba565b6020610f698280612220565b90501080610f825750602c610f7e8280612220565b9050115b15610fb9576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610fc76060830183612220565b610fd79161011b9160fb916128c8565b610fe0916128ef565b905080826080013514610a31576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f5114171661106a57637939f4245f526004601cfd5b5f60605260405250505050565b6110db6040518060a001604052805f67ffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f8152602001606081525090565b6040805160018082528183019092525f91816020015b604080518082019091525f80825260208201528152602001906001900390816110f15790505090506040518060400160405280866080015173ffffffffffffffffffffffffffffffffffffffff16815260200184815250815f8151811061115a5761115a612516565b60200260200101819052506040518060a001604052808560400160208101906111839190612207565b67ffffffffffffffff1681526020016111a260c0870160a088016121d5565b73ffffffffffffffffffffffffffffffffffffffff1681526020018560200160208101906111d091906121d5565b73ffffffffffffffffffffffffffffffffffffffff1681525f602082015260400191909152949350505050565b5f5f848460405161120f92919061292b565b604051809103902090505f8360405160200161122b919061293a565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018152828252805160209182012060c09a909a1b7fffffffffffffffff000000000000000000000000000000000000000000000000168184015260288301949094526048808301999099528051808303909901895260689091019052508551950194909420949350505050565b610f288383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611724565b5f73ffffffffffffffffffffffffffffffffffffffff82161561132e5761132973ffffffffffffffffffffffffffffffffffffffff83163061184b565b611330565b475b92915050565b6060815f8167ffffffffffffffff81111561135357611353611da9565b60405190808252806020026020018201604052801561137c578160200160208202803683370190505b5090505f5f5b838110156114355786868281811061139c5761139c612516565b90506020028101906113ae919061288c565b6113bf9060808101906060016121d5565b91506113ca826112ec565b8382815181106113dc576113dc612516565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff821661142d573483828151811061141557611415612516565b60200260200101818151611429919061219d565b9052505b600101611382565b509095945050505050565b5f5b81811015610f28573683838381811061145d5761145d612516565b905060200281019061146f919061288c565b905061148160e0820160c0830161294c565b156114a3576114a361149960608301604084016121d5565b82608001356109a3565b50600101611442565b83838383825f5b8181101561165457368a8a838181106114ce576114ce612516565b90506020028101906114e0919061288c565b905061150f6114f560608301604084016121d5565b73ffffffffffffffffffffffffffffffffffffffff161590565b80611571575061157161152860408301602084016121d5565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015611588575061158861152860208301836121d5565b801561160b575061160b61159f60a0830183612220565b6115ad916004915f916128c8565b6115b691612965565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611641576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61164b8c8261187e565b506001016114b3565b5050611663848484845f611af1565b505050505050505050565b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166116ae576390b8ec185f526004601cfd5b5f603452505050565b73ffffffffffffffffffffffffffffffffffffffff8216611704576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a3173ffffffffffffffffffffffffffffffffffffffff831682611d08565b73ffffffffffffffffffffffffffffffffffffffff84161561099d5773ffffffffffffffffffffffffffffffffffffffff831661178d576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611800573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061182491906129cb565b101561099d5761099d73ffffffffffffffffffffffffffffffffffffffff85168483611d21565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b61189661188e60208301836121d5565b6017903b1190565b6118cc576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f81900361190b576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61191f6114f560608501604086016121d5565b611929575f61192f565b82608001355b90505f61194a61194560808601606087016121d5565b6112ec565b9050815f036119805761198061196660608601604087016121d5565b61197660408701602088016121d5565b86608001356112c0565b5f8061198f60208701876121d5565b73ffffffffffffffffffffffffffffffffffffffff16846119b360a0890189612220565b6040516119c192919061292b565b5f6040518083038185875af1925050503d805f81146119fb576040519150601f19603f3d011682016040523d82523d5f602084013e611a00565b606091505b509150915081611a1357611a1381611d9f565b5f611a276119456080890160608a016121d5565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3888611a5860208a018a6121d5565b611a6860608b0160408c016121d5565b611a7860808c0160608d016121d5565b8b60800135898711611a8a5786611a94565b611a948a8861219d565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f8682611b0060018261219d565b818110611b0f57611b0f612516565b9050602002810190611b21919061288c565b611b329060808101906060016121d5565b90505f5f5f5f5f5f5f5b88811015611cf857611b4f60018a61219d565b81108015611b5e575088600114155b15611c39578d8d82818110611b7557611b75612516565b9050602002810190611b87919061288c565b611b989060808101906060016121d5565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611c39578a8181518110611bdf57611bdf612516565b6020026020010151611bf0876112ec565b611bfa919061219d565b965073ffffffffffffffffffffffffffffffffffffffff861615611c1e575f611c20565b895b935083871115611c3957611c39868d6105db878b61219d565b8d8d82818110611c4b57611c4b612516565b9050602002810190611c5d919061288c565b611c6e9060608101906040016121d5565b9450611c79856112ec565b925073ffffffffffffffffffffffffffffffffffffffff851615611c9d575f611c9f565b895b91508183118015611cdc57508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b15611cf057611cf0858d6105db858761219d565b600101611b3c565b5050505050505050505050505050565b5f385f3884865af1610a315763b12d13eb5f526004601cfd5b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f511417166116ae575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f511417166116ae57633e3f8f735f526004601cfd5b8051602082018181fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff81118282101715611dfa57611dfa611da9565b60405290565b6040805190810167ffffffffffffffff81118282101715611dfa57611dfa611da9565b60405160c0810167ffffffffffffffff81118282101715611dfa57611dfa611da9565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611e8d57611e8d611da9565b604052919050565b5f5f67ffffffffffffffff841115611eaf57611eaf611da9565b50601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016602001611ee281611e46565b915050828152838383011115611ef6575f5ffd5b828260208301375f602084830101529392505050565b5f82601f830112611f1b575f5ffd5b611f2a83833560208501611e95565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611f52575f5ffd5b50565b8035611f6081611f31565b919050565b80358015158114611f60575f5ffd5b5f6101408284031215611f85575f5ffd5b611f8d611dd6565b823581529050602082013567ffffffffffffffff811115611fac575f5ffd5b611fb884828501611f0c565b602083015250604082013567ffffffffffffffff811115611fd7575f5ffd5b611fe384828501611f0c565b604083015250611ff560608301611f55565b606082015261200660808301611f55565b608082015261201760a08301611f55565b60a082015260c0828101359082015260e0808301359082015261203d6101008301611f65565b6101008201526120506101208301611f65565b61012082015292915050565b5f60c0828403121561206c575f5ffd5b50919050565b5f5f60408385031215612083575f5ffd5b823567ffffffffffffffff811115612099575f5ffd5b6120a585828601611f74565b925050602083013567ffffffffffffffff8111156120c1575f5ffd5b6120cd8582860161205c565b9150509250929050565b5f5f5f5f606085870312156120ea575f5ffd5b843567ffffffffffffffff811115612100575f5ffd5b61210c87828801611f74565b945050602085013567ffffffffffffffff811115612128575f5ffd5b8501601f81018713612138575f5ffd5b803567ffffffffffffffff81111561214e575f5ffd5b8760208260051b8401011115612162575f5ffd5b60209190910193509150604085013567ffffffffffffffff811115612185575f5ffd5b6121918782880161205c565b91505092959194509250565b81810381811115611330577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f602082840312156121e5575f5ffd5b8135611f2a81611f31565b803567ffffffffffffffff81168114611f60575f5ffd5b5f60208284031215612217575f5ffd5b611f2a826121f0565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612253575f5ffd5b83018035915067ffffffffffffffff82111561226d575f5ffd5b602001915036819003821315612281575f5ffd5b9250929050565b5f67ffffffffffffffff8211156122a1576122a1611da9565b5060051b60200190565b5f82601f8301126122ba575f5ffd5b81356122cd6122c882612288565b611e46565b8082825260208201915060208360061b8601019250858311156122ee575f5ffd5b602085015b83811015612339576040818803121561230a575f5ffd5b612312611e00565b813561231d81611f31565b81526020828101358183015290845292909201916040016122f3565b5095945050505050565b5f82601f830112612352575f5ffd5b81356123606122c882612288565b8082825260208201915060208360051b860101925085831115612381575f5ffd5b602085015b8381101561233957803567ffffffffffffffff8111156123a4575f5ffd5b860160408189037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00112156123d7575f5ffd5b6123df611e00565b60208201356123ed81611f31565b8152604082013567ffffffffffffffff811115612408575f5ffd5b60208184010192505088601f83011261241f575f5ffd5b61242e89833560208501611e95565b60208201528085525050602083019250602081019050612386565b5f60208284031215612459575f5ffd5b813567ffffffffffffffff81111561246f575f5ffd5b820160c08185031215612480575f5ffd5b612488611e23565b81358152612498602083016121f0565b60208201526124a960408301611f55565b604082015260608281013590820152608082013567ffffffffffffffff8111156124d1575f5ffd5b6124dd868285016122ab565b60808301525060a082013567ffffffffffffffff8111156124fc575f5ffd5b61250886828501612343565b60a083015250949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f60208284031215612580575f5ffd5b815160048110611f2a575f5ffd5b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b5f60a0830167ffffffffffffffff835116845273ffffffffffffffffffffffffffffffffffffffff602084015116602085015273ffffffffffffffffffffffffffffffffffffffff604084015116604085015260608301516060850152608083015160a0608086015281815180845260c0870191506020830193505f92505b8083101561233957835173ffffffffffffffffffffffffffffffffffffffff81511683526020810151602084015250604082019150602084019350600183019250612654565b67ffffffffffffffff86168152608060208201525f6126bd60808301868861258e565b82810360408401526126cf81866125d5565b91505082151560608301529695505050505050565b5f5f604083850312156126f5575f5ffd5b82519150602083015161270781611f31565b809150509250929050565b602081525f61272560208301848661258e565b949350505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f602083015161014060408401526127a061016084018261272d565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160608501526127db828261272d565b9150506060840151612805608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e084015161010084015261010084015161287461012085018215159052565b50610120840151801515610140850152509392505050565b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126128be575f5ffd5b9190910192915050565b5f5f858511156128d6575f5ffd5b838611156128e2575f5ffd5b5050820193919092039150565b80356020831015611330577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b818382375f9101908152919050565b602081525f611f2a60208301846125d5565b5f6020828403121561295c575f5ffd5b611f2a82611f65565b80357fffffffff0000000000000000000000000000000000000000000000000000000081169060048410156129c4577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b5f602082840312156129db575f5ffd5b505191905056fea2646970667358221220eeb4c489bff74e031169750628d263d4c05c84206bf4669d90305ca96c8c68e164736f6c634300081d0033";

type EcoFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EcoFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EcoFacet__factory extends ContractFactory {
  constructor(...args: EcoFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _portal: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EcoFacet> {
    return super.deploy(_portal, overrides || {}) as Promise<EcoFacet>;
  }
  override getDeployTransaction(
    _portal: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_portal, overrides || {});
  }
  override attach(address: string): EcoFacet {
    return super.attach(address) as EcoFacet;
  }
  override connect(signer: Signer): EcoFacet__factory {
    return super.connect(signer) as EcoFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EcoFacetInterface {
    return new utils.Interface(_abi) as EcoFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EcoFacet {
    return new Contract(address, _abi, signerOrProvider) as EcoFacet;
  }
}
