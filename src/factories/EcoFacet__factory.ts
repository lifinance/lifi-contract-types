/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { EcoFacet, EcoFacetInterface } from "../EcoFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_portal",
        type: "address",
        internalType: "contract IEcoPortal",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "PORTAL",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IEcoPortal",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "startBridgeTokensViaEco",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_ecoData",
        type: "tuple",
        internalType: "struct EcoFacet.EcoData",
        components: [
          {
            name: "receiverAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "nonEVMReceiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "prover",
            type: "address",
            internalType: "address",
          },
          {
            name: "rewardDeadline",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "solverReward",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "encodedRoute",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaEco",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_ecoData",
        type: "tuple",
        internalType: "struct EcoFacet.EcoData",
        components: [
          {
            name: "receiverAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "nonEVMReceiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "prover",
            type: "address",
            internalType: "address",
          },
          {
            name: "rewardDeadline",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "solverReward",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "encodedRoute",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChainBytes32",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidConfig",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60e0604052632b6653dc60a05263536f6c4d60c05234801561001f575f5ffd5b506040516129cd3803806129cd83398101604081905261003e91610076565b6001600160a01b038116610065576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b03166080526100a3565b5f60208284031215610086575f5ffd5b81516001600160a01b038116811461009c575f5ffd5b9392505050565b60805160a05160c0516128f36100da5f395f6112bc01525f61128701525f818160480152818161094c015261097301526128f35ff3fe608060405260043610610033575f3560e01c80630ff754ea146100375780632c6c215e14610093578063b8b161bc146100a8575b5f5ffd5b348015610042575f5ffd5b5061006a7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100a66100a1366004611fbb565b6100bb565b005b6100a66100b6366004612081565b610363565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610136576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6101463447612113565b905086806101000151610185576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101a88160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101df576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f0361021c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610259576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8880610120015115610297576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102a18a886105c0565b5f6102c48b6080015173ffffffffffffffffffffffffffffffffffffffff161590565b6102ce575f6102d4565b87608001355b90506102eb8b5f01518c60c001518c8c3386610746565b60c08c015260808b015173ffffffffffffffffffffffffffffffffffffffff161561032a5787608001358b60c001516103249190612113565b60c08c01525b6103348b896108e2565b50479250505081811115610356576103565f846103518585612113565b610a3e565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016103de576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6103ee3447612113565b9050846104138160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561044a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610487576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104c4576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8580610100015115610502576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610540576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61054a88886105c0565b60c0880151608089015173ffffffffffffffffffffffffffffffffffffffff16156105805761057d608089013582612126565b90505b61058e896080015182610a73565b61059889896108e2565b504792505050818111156105b5576105b55f846103518585612113565b50505f909155505050565b6105cd60a0820182612139565b90505f03610607576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a082015173ffffffffffffffffffffffffffffffffffffffff167311f111f111f111f111f111f111f111f111f111f1148015610650575061064c6020820182612139565b1590505b15610687576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a082015173ffffffffffffffffffffffffffffffffffffffff167311f111f111f111f111f111f111f111f111f111f11480159061070157506106cd60208201826121a1565b73ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff1614155b15610738576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107428282610b23565b5050565b5f83808203610781576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f868661078f600185612113565b81811061079e5761079e6121bc565b90506020028101906107b091906121e9565b6107c19060808101906060016121a1565b90505f6107cd82610d2f565b905073ffffffffffffffffffffffffffffffffffffffff82166107f7576107f43482612113565b90505b5f6108028989610d79565b905061080e8989610e83565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff89166020820152908101879052610849818b8b85610eef565b5f8361085486610d2f565b61085e9190612113565b905073ffffffffffffffffffffffffffffffffffffffff8516610888576108858882612113565b90505b8b8110156108d0576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d90526024810182905260440160405180910390fd5b955050505050505b9695505050505050565b5f610905836080015173ffffffffffffffffffffffffffffffffffffffff161590565b90505f82608001358460c0015161091c9190612126565b90505f61092b858585856110bf565b90505f61093b8660e00151611275565b9050836109715761097186608001517f000000000000000000000000000000000000000000000000000000000000000085611326565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663df00f8fa856109b8575f6109ba565b845b836109c860a08a018a612139565b875f6040518763ffffffff1660e01b81526004016109ea95949392919061226c565b604080518083038185885af1158015610a05573d5f5f3e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190610a2a9190612370565b5050610a368686611352565b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610a6857610a638282611424565b505050565b610a63838383611491565b805f03610aac576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610b015780341015610742576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61074273ffffffffffffffffffffffffffffffffffffffff83163330846114ff565b7311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff1603610b8957660416edef1601be8260e00151036107425761074281611557565b610b968260e00151611603565b15610742575f610ba960a0830183612139565b810190610bb69190612576565b60a081015180519192505f91610bce90600190612113565b81518110610bde57610bde6121bc565b60200260200101516020015190505f602067ffffffffffffffff811115610c0757610c07611cf5565b6040519080825280601f01601f191660200182016040528015610c31576020820181803683370190505b5090505f5b6020811015610cae5782610c4b826004612126565b81518110610c5b57610c5b6121bc565b602001015160f81c60f81b828281518110610c7857610c786121bc565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600101610c36565b505f81806020019051810190610cc49190612643565b90508560a0015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a36576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff821615610d7157610d6c73ffffffffffffffffffffffffffffffffffffffff831630611621565b610d73565b475b92915050565b6060815f8167ffffffffffffffff811115610d9657610d96611cf5565b604051908082528060200260200182016040528015610dbf578160200160208202803683370190505b5090505f5f5b83811015610e7857868682818110610ddf57610ddf6121bc565b9050602002810190610df191906121e9565b610e029060808101906060016121a1565b9150610e0d82610d2f565b838281518110610e1f57610e1f6121bc565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610e705734838281518110610e5857610e586121bc565b60200260200101818151610e6c9190612113565b9052505b600101610dc5565b509095945050505050565b5f5b81811015610a635736838383818110610ea057610ea06121bc565b9050602002810190610eb291906121e9565b9050610ec460e0820160c0830161265e565b15610ee657610ee6610edc60608301604084016121a1565b8260800135610a73565b50600101610e85565b60208401516040850151849184918490835f5b818110156110a557368a8a83818110610f1d57610f1d6121bc565b9050602002810190610f2f91906121e9565b9050610f5e610f4460608301604084016121a1565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610fc05750610fc0610f7760408301602084016121a1565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610fd75750610fd7610f7760208301836121a1565b801561105a575061105a610fee60a0830183612139565b610ffc916004915f91612677565b6110059161269e565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611090576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b5161109c9082611654565b50600101610f02565b50506110b485858585856118c7565b505050505050505050565b6111236040518060a001604052805f67ffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f8152602001606081525090565b6060836111b85760408051600180825281830190925290816020015b604080518082019091525f808252602082015281526020019060019003908161113f5790505090506040518060400160405280876080015173ffffffffffffffffffffffffffffffffffffffff16815260200184815250815f815181106111a8576111a86121bc565b60200260200101819052506111f7565b604080515f80825260208201909252906111f3565b604080518082019091525f80825260208201528152602001906001900390816111cd5790505b5090505b6040805160a08101909152806112136080880160608901612704565b67ffffffffffffffff16815233602082015260409081019061123b90606089019089016121a1565b73ffffffffffffffffffffffffffffffffffffffff16815260200185611261575f611263565b845b81526020019190915295945050505050565b5f6606b2787ad08cbc82036112ab57507f0000000000000000000000000000000000000000000000000000000000000000919050565b660416edef1601be82036112e057507f0000000000000000000000000000000000000000000000000000000000000000919050565b67ffffffffffffffff821115611322576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5090565b610a638383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611ade565b7311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff16036113e95760e082015182517ff9b69f466270c99522169d563c0a430e88c52865ec33b1cc36ee2a4a6ea5170b6113d26020850185612139565b6040516113e092919061271d565b60405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1826040516114189190612784565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff8216611471576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61074273ffffffffffffffffffffffffffffffffffffffff831682611c0b565b73ffffffffffffffffffffffffffffffffffffffff82166114de576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a6373ffffffffffffffffffffffffffffffffffffffff84168383611c24565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f5114171661154a57637939f4245f526004601cfd5b5f60605260405250505050565b6115646020820182612139565b159050806115805750602c61157c6020830183612139565b9050115b156115b7576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115c460a0820182612139565b905061013f14611600576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b5f660416edef1601be820361161957505f919050565b506001919050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b61166c61166460208301836121a1565b6017903b1190565b6116a2576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f8190036116e1576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6116f5610f4460608501604086016121a1565b6116ff575f611705565b82608001355b90505f61172061171b60808601606087016121a1565b610d2f565b9050815f036117565761175661173c60608601604087016121a1565b61174c60408701602088016121a1565b8660800135611326565b5f8061176560208701876121a1565b73ffffffffffffffffffffffffffffffffffffffff168461178960a0890189612139565b604051611797929190612897565b5f6040518083038185875af1925050503d805f81146117d1576040519150601f19603f3d011682016040523d82523d5f602084013e6117d6565b606091505b5091509150816117e9576117e981611c6d565b5f6117fd61171b6080890160608a016121a1565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861182e60208a018a6121a1565b61183e60608b0160408c016121a1565b61184e60808c0160608d016121a1565b8b60800135898711611860578661186a565b61186a8a88612113565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f86826118d6600182612113565b8181106118e5576118e56121bc565b90506020028101906118f791906121e9565b6119089060808101906060016121a1565b90505f5f5f5f5f5f5f5b88811015611ace5761192560018a612113565b81108015611934575088600114155b15611a0f578d8d8281811061194b5761194b6121bc565b905060200281019061195d91906121e9565b61196e9060808101906060016121a1565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611a0f578a81815181106119b5576119b56121bc565b60200260200101516119c687610d2f565b6119d09190612113565b965073ffffffffffffffffffffffffffffffffffffffff8616156119f4575f6119f6565b895b935083871115611a0f57611a0f868d610351878b612113565b8d8d82818110611a2157611a216121bc565b9050602002810190611a3391906121e9565b611a449060608101906040016121a1565b9450611a4f85610d2f565b925073ffffffffffffffffffffffffffffffffffffffff851615611a73575f611a75565b895b91508183118015611ab257508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b15611ac657611ac6858d6103518587612113565b600101611912565b5050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff841615611c055773ffffffffffffffffffffffffffffffffffffffff8316611b47576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611bba573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611bde91906128a6565b1015611c0557611c0573ffffffffffffffffffffffffffffffffffffffff85168483611c77565b50505050565b5f385f3884865af16107425763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716611c64576390b8ec185f526004601cfd5b5f603452505050565b8051602082018181fd5b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716611c64575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f51141716611c6457633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff81118282101715611d4657611d46611cf5565b60405290565b6040805190810167ffffffffffffffff81118282101715611d4657611d46611cf5565b60405160c0810167ffffffffffffffff81118282101715611d4657611d46611cf5565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611dd957611dd9611cf5565b604052919050565b5f5f67ffffffffffffffff841115611dfb57611dfb611cf5565b50601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016602001611e2e81611d92565b915050828152838383011115611e42575f5ffd5b828260208301375f602084830101529392505050565b5f82601f830112611e67575f5ffd5b611e7683833560208501611de1565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611600575f5ffd5b8035611ea981611e7d565b919050565b80358015158114611ea9575f5ffd5b5f6101408284031215611ece575f5ffd5b611ed6611d22565b823581529050602082013567ffffffffffffffff811115611ef5575f5ffd5b611f0184828501611e58565b602083015250604082013567ffffffffffffffff811115611f20575f5ffd5b611f2c84828501611e58565b604083015250611f3e60608301611e9e565b6060820152611f4f60808301611e9e565b6080820152611f6060a08301611e9e565b60a082015260c0828101359082015260e08083013590820152611f866101008301611eae565b610100820152611f996101208301611eae565b61012082015292915050565b5f60c08284031215611fb5575f5ffd5b50919050565b5f5f5f5f60608587031215611fce575f5ffd5b843567ffffffffffffffff811115611fe4575f5ffd5b611ff087828801611ebd565b945050602085013567ffffffffffffffff81111561200c575f5ffd5b8501601f8101871361201c575f5ffd5b803567ffffffffffffffff811115612032575f5ffd5b8760208260051b8401011115612046575f5ffd5b60209190910193509150604085013567ffffffffffffffff811115612069575f5ffd5b61207587828801611fa5565b91505092959194509250565b5f5f60408385031215612092575f5ffd5b823567ffffffffffffffff8111156120a8575f5ffd5b6120b485828601611ebd565b925050602083013567ffffffffffffffff8111156120d0575f5ffd5b6120dc85828601611fa5565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b81810381811115610d7357610d736120e6565b80820180821115610d7357610d736120e6565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261216c575f5ffd5b83018035915067ffffffffffffffff821115612186575f5ffd5b60200191503681900382131561219a575f5ffd5b9250929050565b5f602082840312156121b1575f5ffd5b8135611e7681611e7d565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261221b575f5ffd5b9190910192915050565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b67ffffffffffffffff86168152608060208201525f61228f608083018688612225565b828103604084015260a0810167ffffffffffffffff865116825273ffffffffffffffffffffffffffffffffffffffff602087015116602083015273ffffffffffffffffffffffffffffffffffffffff604087015116604083015260608601516060830152608086015160a0608084015281815180845260c0850191506020830194505f93505b8084101561235c578451925073ffffffffffffffffffffffffffffffffffffffff835116825260208301516020830152604082019150602085019450600184019350612315565b50861515606087015293506108d892505050565b5f5f60408385031215612381575f5ffd5b82519150602083015161239381611e7d565b809150509250929050565b803567ffffffffffffffff81168114611ea9575f5ffd5b5f67ffffffffffffffff8211156123ce576123ce611cf5565b5060051b60200190565b5f82601f8301126123e7575f5ffd5b81356123fa6123f5826123b5565b611d92565b8082825260208201915060208360061b86010192508583111561241b575f5ffd5b602085015b838110156124665760408188031215612437575f5ffd5b61243f611d4c565b813561244a81611e7d565b8152602082810135818301529084529290920191604001612420565b5095945050505050565b5f82601f83011261247f575f5ffd5b813561248d6123f5826123b5565b8082825260208201915060208360051b8601019250858311156124ae575f5ffd5b602085015b8381101561246657803567ffffffffffffffff8111156124d1575f5ffd5b860160408189037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0011215612504575f5ffd5b61250c611d4c565b602082013561251a81611e7d565b8152604082013567ffffffffffffffff811115612535575f5ffd5b60208184010192505088601f83011261254c575f5ffd5b61255b89833560208501611de1565b602082015280855250506020830192506020810190506124b3565b5f60208284031215612586575f5ffd5b813567ffffffffffffffff81111561259c575f5ffd5b820160c081850312156125ad575f5ffd5b6125b5611d6f565b813581526125c56020830161239e565b60208201526125d660408301611e9e565b604082015260608281013590820152608082013567ffffffffffffffff8111156125fe575f5ffd5b61260a868285016123d8565b60808301525060a082013567ffffffffffffffff811115612629575f5ffd5b61263586828501612470565b60a083015250949350505050565b5f60208284031215612653575f5ffd5b8151611e7681611e7d565b5f6020828403121561266e575f5ffd5b611e7682611eae565b5f5f85851115612685575f5ffd5b83861115612691575f5ffd5b5050820193919092039150565b80357fffffffff0000000000000000000000000000000000000000000000000000000081169060048410156126fd577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b5f60208284031215612714575f5ffd5b611e768261239e565b602081525f612730602083018486612225565b949350505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f602083015161014060408401526127ab610160840182612738565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160608501526127e68282612738565b9150506060840151612810608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e084015161010084015261010084015161287f61012085018215159052565b50610120840151801515610140850152509392505050565b818382375f9101908152919050565b5f602082840312156128b6575f5ffd5b505191905056fea2646970667358221220766f35508f86bd983e45f8be0713c4f4cd89ae5d8010fdb644a6779847b549a864736f6c634300081d0033";

type EcoFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EcoFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EcoFacet__factory extends ContractFactory {
  constructor(...args: EcoFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _portal: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EcoFacet> {
    return super.deploy(_portal, overrides || {}) as Promise<EcoFacet>;
  }
  override getDeployTransaction(
    _portal: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_portal, overrides || {});
  }
  override attach(address: string): EcoFacet {
    return super.attach(address) as EcoFacet;
  }
  override connect(signer: Signer): EcoFacet__factory {
    return super.connect(signer) as EcoFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EcoFacetInterface {
    return new utils.Interface(_abi) as EcoFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EcoFacet {
    return new Contract(address, _abi, signerOrProvider) as EcoFacet;
  }
}
