/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { EcoFacet, EcoFacetInterface } from "../EcoFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_portal",
        type: "address",
        internalType: "contract IEcoPortal",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "PORTAL",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IEcoPortal",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "startBridgeTokensViaEco",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_ecoData",
        type: "tuple",
        internalType: "struct EcoFacet.EcoData",
        components: [
          {
            name: "nonEVMReceiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "prover",
            type: "address",
            internalType: "address",
          },
          {
            name: "rewardDeadline",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "solverReward",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "encodedRoute",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "solanaATA",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaEco",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_ecoData",
        type: "tuple",
        internalType: "struct EcoFacet.EcoData",
        components: [
          {
            name: "nonEVMReceiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "prover",
            type: "address",
            internalType: "address",
          },
          {
            name: "rewardDeadline",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "solverReward",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "encodedRoute",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "solanaATA",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChainBytes32",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidConfig",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NativeAssetNotSupported",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60e0604052632b6653dc60a05263536f6c4d60c05234801561001f575f5ffd5b5060405161292038038061292083398101604081905261003e91610076565b6001600160a01b038116610065576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b03166080526100a3565b5f60208284031215610086575f5ffd5b81516001600160a01b038116811461009c575f5ffd5b9392505050565b60805160a05160c0516128466100da5f395f610b5f01525f610b2601525f8181604801528181610bda0152610c1601526128465ff3fe608060405260043610610033575f3560e01c80630ff754ea1461003757806392cc167814610093578063bb086ca9146100a8575b5f5ffd5b348015610042575f5ffd5b5061006a7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100a66100a1366004611eed565b6100c7565b005b3480156100b3575f5ffd5b506100a66100c2366004611fb3565b610370565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610142576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6101523447612045565b905086806101000151610191576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101b48160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101eb576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610228576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610265576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b88806101200151156102a3576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b896102c6816080015173ffffffffffffffffffffffffffffffffffffffff161590565b156102fd576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103078b896105d3565b61031c8b5f01518c60c001518c8c335f61094f565b60c08c018190526103329060608a013590612045565b60c08c01526103418b89610aeb565b50479250505081811115610363576103635f8461035e8585612045565b610d45565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016103eb576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815560a0830151839073ffffffffffffffffffffffffffffffffffffffff16610442576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f0361047f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104bc576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83806101000151156104fa576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8480610120015115610538576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8561055b816080015173ffffffffffffffffffffffffffffffffffffffff161590565b15610592576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61059c87876105d3565b6105bd876080015187606001358960c001516105b89190612058565b610d7a565b6105c78787610aeb565b50505f90925550505050565b5f6105e4604083016020840161206b565b73ffffffffffffffffffffffffffffffffffffffff1603610631576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610641606082016040830161209d565b67ffffffffffffffff161580610670575042610663606083016040840161209d565b67ffffffffffffffff1611155b156106a7576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a082015160e0830151660416edef1601be147fffffffffffffffffffffffffee0eee0eee0eee0eee0eee0eee0eee0eee0eee0f73ffffffffffffffffffffffffffffffffffffffff831601610804578061072e576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61073883806120b6565b90505f03610772576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a08301356107ad576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61013f6107bd60808501856120b6565b9050146107f6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107ff83610e2e565b610949565b61081160808401846120b6565b90505f0361084b576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015610883576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61089160808501856120b6565b81019061089e91906122df565b60a081015180519192505f916108b690600190612045565b815181106108c6576108c66123ac565b60200260200101516020015190505f602482015190508660a0015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610945576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505b50505050565b5f8380820361098a576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8686610998600185612045565b8181106109a7576109a76123ac565b90506020028101906109b991906123d9565b6109ca90608081019060600161206b565b90505f6109d682610ef0565b905073ffffffffffffffffffffffffffffffffffffffff8216610a00576109fd3482612045565b90505b5f610a0b8989610f3a565b9050610a178989611044565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff89166020820152908101879052610a52818b8b856110b0565b5f83610a5d86610ef0565b610a679190612045565b905073ffffffffffffffffffffffffffffffffffffffff8516610a9157610a8e8882612045565b90505b8b811015610ad9576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d90526024810182905260440160405180910390fd5b955050505050505b9695505050505050565b5f81606001358360c00151610b009190612058565b90505f610b0e848484611280565b90505f6606b2787ad08cbc8560e0015103610b4a57507f0000000000000000000000000000000000000000000000000000000000000000610bd0565b660416edef1601be8560e0015103610b8357507f0000000000000000000000000000000000000000000000000000000000000000610bd0565b60e085015167ffffffffffffffff1015610bc9576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060e08401515b610bff85608001517f0000000000000000000000000000000000000000000000000000000000000000856113f7565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663df00f8fa82610c4960808801886120b6565b865f6040518663ffffffff1660e01b8152600401610c6b95949392919061245c565b60408051808303815f875af1158015610c86573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610caa9190612560565b5050660416edef1601be8560e0015103610d075760e085015185517ff9b69f466270c99522169d563c0a430e88c52865ec33b1cc36ee2a4a6ea5170b610cf087806120b6565b604051610cfe92919061258e565b60405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f185604051610d3691906125f5565b60405180910390a15050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610d6f57610d6a8282611423565b505050565b610d6a838383611490565b805f03610db3576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610e0c5780341015610e08576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610e0873ffffffffffffffffffffffffffffffffffffffff83163330846114fe565b6020610e3a82806120b6565b90501080610e535750602c610e4f82806120b6565b9050115b15610e8a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610e9860808301836120b6565b610ea89161011b9160fb91612708565b610eb19161272f565b9050808260a0013514610e08576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff821615610f3257610f2d73ffffffffffffffffffffffffffffffffffffffff831630611556565b610f34565b475b92915050565b6060815f8167ffffffffffffffff811115610f5757610f57611c24565b604051908082528060200260200182016040528015610f80578160200160208202803683370190505b5090505f5f5b8381101561103957868682818110610fa057610fa06123ac565b9050602002810190610fb291906123d9565b610fc390608081019060600161206b565b9150610fce82610ef0565b838281518110610fe057610fe06123ac565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff82166110315734838281518110611019576110196123ac565b6020026020010181815161102d9190612045565b9052505b600101610f86565b509095945050505050565b5f5b81811015610d6a5736838383818110611061576110616123ac565b905060200281019061107391906123d9565b905061108560e0820160c0830161276b565b156110a7576110a761109d606083016040840161206b565b8260800135610d7a565b50600101611046565b60208401516040850151849184918490835f5b8181101561126657368a8a838181106110de576110de6123ac565b90506020028101906110f091906123d9565b905061111f611105606083016040840161206b565b73ffffffffffffffffffffffffffffffffffffffff161590565b806111815750611181611138604083016020840161206b565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156111985750611198611138602083018361206b565b801561121b575061121b6111af60a08301836120b6565b6111bd916004915f91612708565b6111c691612784565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611251576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b5161125d9082611589565b506001016110c3565b505061127585858585856117fc565b505050505050505050565b6112e46040518060a001604052805f67ffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f8152602001606081525090565b6040805160018082528183019092525f91816020015b604080518082019091525f80825260208201528152602001906001900390816112fa5790505090506040518060400160405280866080015173ffffffffffffffffffffffffffffffffffffffff16815260200184815250815f81518110611363576113636123ac565b60200260200101819052506040518060a0016040528085604001602081019061138c919061209d565b67ffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018560200160208101906113ca919061206b565b73ffffffffffffffffffffffffffffffffffffffff1681525f602082015260400191909152949350505050565b610d6a8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611a13565b73ffffffffffffffffffffffffffffffffffffffff8216611470576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e0873ffffffffffffffffffffffffffffffffffffffff831682611b3a565b73ffffffffffffffffffffffffffffffffffffffff82166114dd576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d6a73ffffffffffffffffffffffffffffffffffffffff84168383611b53565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f5114171661154957637939f4245f526004601cfd5b5f60605260405250505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b6115a1611599602083018361206b565b6017903b1190565b6115d7576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003611616576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61162a611105606085016040860161206b565b611634575f61163a565b82608001355b90505f611655611650608086016060870161206b565b610ef0565b9050815f0361168b5761168b611671606086016040870161206b565b611681604087016020880161206b565b86608001356113f7565b5f8061169a602087018761206b565b73ffffffffffffffffffffffffffffffffffffffff16846116be60a08901896120b6565b6040516116cc9291906127ea565b5f6040518083038185875af1925050503d805f8114611706576040519150601f19603f3d011682016040523d82523d5f602084013e61170b565b606091505b50915091508161171e5761171e81611b9c565b5f6117326116506080890160608a0161206b565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861176360208a018a61206b565b61177360608b0160408c0161206b565b61178360808c0160608d0161206b565b8b60800135898711611795578661179f565b61179f8a88612045565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f868261180b600182612045565b81811061181a5761181a6123ac565b905060200281019061182c91906123d9565b61183d90608081019060600161206b565b90505f5f5f5f5f5f5f5b88811015611a035761185a60018a612045565b81108015611869575088600114155b15611944578d8d82818110611880576118806123ac565b905060200281019061189291906123d9565b6118a390608081019060600161206b565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611944578a81815181106118ea576118ea6123ac565b60200260200101516118fb87610ef0565b6119059190612045565b965073ffffffffffffffffffffffffffffffffffffffff861615611929575f61192b565b895b93508387111561194457611944868d61035e878b612045565b8d8d82818110611956576119566123ac565b905060200281019061196891906123d9565b61197990606081019060400161206b565b945061198485610ef0565b925073ffffffffffffffffffffffffffffffffffffffff8516156119a8575f6119aa565b895b915081831180156119e757508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b156119fb576119fb858d61035e8587612045565b600101611847565b5050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156109495773ffffffffffffffffffffffffffffffffffffffff8316611a7c576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611aef573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b1391906127f9565b10156109495761094973ffffffffffffffffffffffffffffffffffffffff85168483611ba6565b5f385f3884865af1610e085763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716611b93576390b8ec185f526004601cfd5b5f603452505050565b8051602082018181fd5b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716611b93575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f51141716611b9357633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff81118282101715611c7557611c75611c24565b60405290565b6040805190810167ffffffffffffffff81118282101715611c7557611c75611c24565b60405160c0810167ffffffffffffffff81118282101715611c7557611c75611c24565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611d0857611d08611c24565b604052919050565b5f5f67ffffffffffffffff841115611d2a57611d2a611c24565b50601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016602001611d5d81611cc1565b915050828152838383011115611d71575f5ffd5b828260208301375f602084830101529392505050565b5f82601f830112611d96575f5ffd5b611da583833560208501611d10565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611dcd575f5ffd5b50565b8035611ddb81611dac565b919050565b80358015158114611ddb575f5ffd5b5f6101408284031215611e00575f5ffd5b611e08611c51565b823581529050602082013567ffffffffffffffff811115611e27575f5ffd5b611e3384828501611d87565b602083015250604082013567ffffffffffffffff811115611e52575f5ffd5b611e5e84828501611d87565b604083015250611e7060608301611dd0565b6060820152611e8160808301611dd0565b6080820152611e9260a08301611dd0565b60a082015260c0828101359082015260e08083013590820152611eb86101008301611de0565b610100820152611ecb6101208301611de0565b61012082015292915050565b5f60c08284031215611ee7575f5ffd5b50919050565b5f5f5f5f60608587031215611f00575f5ffd5b843567ffffffffffffffff811115611f16575f5ffd5b611f2287828801611def565b945050602085013567ffffffffffffffff811115611f3e575f5ffd5b8501601f81018713611f4e575f5ffd5b803567ffffffffffffffff811115611f64575f5ffd5b8760208260051b8401011115611f78575f5ffd5b60209190910193509150604085013567ffffffffffffffff811115611f9b575f5ffd5b611fa787828801611ed7565b91505092959194509250565b5f5f60408385031215611fc4575f5ffd5b823567ffffffffffffffff811115611fda575f5ffd5b611fe685828601611def565b925050602083013567ffffffffffffffff811115612002575f5ffd5b61200e85828601611ed7565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b81810381811115610f3457610f34612018565b80820180821115610f3457610f34612018565b5f6020828403121561207b575f5ffd5b8135611da581611dac565b803567ffffffffffffffff81168114611ddb575f5ffd5b5f602082840312156120ad575f5ffd5b611da582612086565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126120e9575f5ffd5b83018035915067ffffffffffffffff821115612103575f5ffd5b602001915036819003821315612117575f5ffd5b9250929050565b5f67ffffffffffffffff82111561213757612137611c24565b5060051b60200190565b5f82601f830112612150575f5ffd5b813561216361215e8261211e565b611cc1565b8082825260208201915060208360061b860101925085831115612184575f5ffd5b602085015b838110156121cf57604081880312156121a0575f5ffd5b6121a8611c7b565b81356121b381611dac565b8152602082810135818301529084529290920191604001612189565b5095945050505050565b5f82601f8301126121e8575f5ffd5b81356121f661215e8261211e565b8082825260208201915060208360051b860101925085831115612217575f5ffd5b602085015b838110156121cf57803567ffffffffffffffff81111561223a575f5ffd5b860160408189037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001121561226d575f5ffd5b612275611c7b565b602082013561228381611dac565b8152604082013567ffffffffffffffff81111561229e575f5ffd5b60208184010192505088601f8301126122b5575f5ffd5b6122c489833560208501611d10565b6020820152808552505060208301925060208101905061221c565b5f602082840312156122ef575f5ffd5b813567ffffffffffffffff811115612305575f5ffd5b820160c08185031215612316575f5ffd5b61231e611c9e565b8135815261232e60208301612086565b602082015261233f60408301611dd0565b604082015260608281013590820152608082013567ffffffffffffffff811115612367575f5ffd5b61237386828501612141565b60808301525060a082013567ffffffffffffffff811115612392575f5ffd5b61239e868285016121d9565b60a083015250949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261240b575f5ffd5b9190910192915050565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b67ffffffffffffffff86168152608060208201525f61247f608083018688612415565b828103604084015260a0810167ffffffffffffffff865116825273ffffffffffffffffffffffffffffffffffffffff602087015116602083015273ffffffffffffffffffffffffffffffffffffffff604087015116604083015260608601516060830152608086015160a0608084015281815180845260c0850191506020830194505f93505b8084101561254c578451925073ffffffffffffffffffffffffffffffffffffffff835116825260208301516020830152604082019150602085019450600184019350612505565b5086151560608701529350610ae192505050565b5f5f60408385031215612571575f5ffd5b82519150602083015161258381611dac565b809150509250929050565b602081525f6125a1602083018486612415565b949350505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f6020830151610140604084015261261c6101608401826125a9565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084830301606085015261265782826125a9565b9150506060840151612681608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e08401516101008401526101008401516126f061012085018215159052565b50610120840151801515610140850152509392505050565b5f5f85851115612716575f5ffd5b83861115612722575f5ffd5b5050820193919092039150565b80356020831015610f34577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b5f6020828403121561277b575f5ffd5b611da582611de0565b80357fffffffff0000000000000000000000000000000000000000000000000000000081169060048410156127e3577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b5f60208284031215612809575f5ffd5b505191905056fea2646970667358221220d6ccc6f0cff7bbea0f3d52b74a71c1fdae42d3b81b4108ad6c7c993b57da22dc64736f6c634300081d0033";

type EcoFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EcoFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EcoFacet__factory extends ContractFactory {
  constructor(...args: EcoFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _portal: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EcoFacet> {
    return super.deploy(_portal, overrides || {}) as Promise<EcoFacet>;
  }
  override getDeployTransaction(
    _portal: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_portal, overrides || {});
  }
  override attach(address: string): EcoFacet {
    return super.attach(address) as EcoFacet;
  }
  override connect(signer: Signer): EcoFacet__factory {
    return super.connect(signer) as EcoFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EcoFacetInterface {
    return new utils.Interface(_abi) as EcoFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EcoFacet {
    return new Contract(address, _abi, signerOrProvider) as EcoFacet;
  }
}
