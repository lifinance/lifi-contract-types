/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { EcoFacet, EcoFacetInterface } from "../EcoFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_portal",
        type: "address",
        internalType: "contract IEcoPortal",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "PORTAL",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IEcoPortal",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "startBridgeTokensViaEco",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_ecoData",
        type: "tuple",
        internalType: "struct EcoFacet.EcoData",
        components: [
          {
            name: "receiverAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "nonEVMReceiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "prover",
            type: "address",
            internalType: "address",
          },
          {
            name: "rewardDeadline",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "solverReward",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "encodedRoute",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaEco",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_ecoData",
        type: "tuple",
        internalType: "struct EcoFacet.EcoData",
        components: [
          {
            name: "receiverAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "nonEVMReceiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "prover",
            type: "address",
            internalType: "address",
          },
          {
            name: "rewardDeadline",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "solverReward",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "encodedRoute",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChainBytes32",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidConfig",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60e0604052632b6653dc60a05263536f6c4d60c05234801561001f575f5ffd5b5060405161290d38038061290d83398101604081905261003e91610076565b6001600160a01b038116610065576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b03166080526100a3565b5f60208284031215610086575f5ffd5b81516001600160a01b038116811461009c575f5ffd5b9392505050565b60805160a05160c0516128336100da5f395f61121701525f6111e201525f818160480152818161094c015261097301526128335ff3fe608060405260043610610033575f3560e01c80630ff754ea146100375780632c6c215e14610093578063b8b161bc146100a8575b5f5ffd5b348015610042575f5ffd5b5061006a7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100a66100a1366004611f16565b6100bb565b005b6100a66100b6366004611fdc565b610363565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610136576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f610146344761206e565b905086806101000151610185576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101a88160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101df576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f0361021c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610259576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8880610120015115610297576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102a18a886105c0565b5f6102c48b6080015173ffffffffffffffffffffffffffffffffffffffff161590565b6102ce575f6102d4565b87608001355b90506102eb8b5f01518c60c001518c8c3386610746565b60c08c015260808b015173ffffffffffffffffffffffffffffffffffffffff161561032a5787608001358b60c00151610324919061206e565b60c08c01525b6103348b896108e2565b50479250505081811115610356576103565f84610351858561206e565b610a3e565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016103de576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6103ee344761206e565b9050846104138160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561044a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610487576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104c4576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8580610100015115610502576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610540576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61054a88886105c0565b60c0880151608089015173ffffffffffffffffffffffffffffffffffffffff16156105805761057d608089013582612081565b90505b61058e896080015182610a73565b61059889896108e2565b504792505050818111156105b5576105b55f84610351858561206e565b50505f909155505050565b6105cd60a0820182612094565b90505f03610607576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a082015173ffffffffffffffffffffffffffffffffffffffff167311f111f111f111f111f111f111f111f111f111f1148015610650575061064c6020820182612094565b1590505b15610687576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a082015173ffffffffffffffffffffffffffffffffffffffff167311f111f111f111f111f111f111f111f111f111f11480159061070157506106cd60208201826120fc565b73ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff1614155b15610738576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107428282610b23565b5050565b5f83808203610781576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f868661078f60018561206e565b81811061079e5761079e612117565b90506020028101906107b09190612144565b6107c19060808101906060016120fc565b90505f6107cd82610c8a565b905073ffffffffffffffffffffffffffffffffffffffff82166107f7576107f4348261206e565b90505b5f6108028989610cd4565b905061080e8989610dde565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff89166020820152908101879052610849818b8b85610e4a565b5f8361085486610c8a565b61085e919061206e565b905073ffffffffffffffffffffffffffffffffffffffff851661088857610885888261206e565b90505b8b8110156108d0576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d90526024810182905260440160405180910390fd5b955050505050505b9695505050505050565b5f610905836080015173ffffffffffffffffffffffffffffffffffffffff161590565b90505f82608001358460c0015161091c9190612081565b90505f61092b8585858561101a565b90505f61093b8660e001516111d0565b9050836109715761097186608001517f000000000000000000000000000000000000000000000000000000000000000085611281565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663df00f8fa856109b8575f6109ba565b845b836109c860a08a018a612094565b875f6040518763ffffffff1660e01b81526004016109ea9594939291906121c7565b604080518083038185885af1158015610a05573d5f5f3e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190610a2a91906122cb565b5050610a3686866112ad565b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610a6857610a63828261137f565b505050565b610a638383836113ec565b805f03610aac576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610b015780341015610742576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61074273ffffffffffffffffffffffffffffffffffffffff831633308461145a565b7311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff1603610b8957660416edef1601be8260e001510361074257610742816114b2565b610b968260e0015161155e565b15610742575f610ba960a0830183612094565b810190610bb691906124d1565b60a081015180519192505f91610bce9060019061206e565b81518110610bde57610bde612117565b6020026020010151602001519050604481511015610c28576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b602481015160a085015173ffffffffffffffffffffffffffffffffffffffff808316911614610c83576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff821615610ccc57610cc773ffffffffffffffffffffffffffffffffffffffff83163061157c565b610cce565b475b92915050565b6060815f8167ffffffffffffffff811115610cf157610cf1611c50565b604051908082528060200260200182016040528015610d1a578160200160208202803683370190505b5090505f5f5b83811015610dd357868682818110610d3a57610d3a612117565b9050602002810190610d4c9190612144565b610d5d9060808101906060016120fc565b9150610d6882610c8a565b838281518110610d7a57610d7a612117565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610dcb5734838281518110610db357610db3612117565b60200260200101818151610dc7919061206e565b9052505b600101610d20565b509095945050505050565b5f5b81811015610a635736838383818110610dfb57610dfb612117565b9050602002810190610e0d9190612144565b9050610e1f60e0820160c0830161259e565b15610e4157610e41610e3760608301604084016120fc565b8260800135610a73565b50600101610de0565b60208401516040850151849184918490835f5b8181101561100057368a8a83818110610e7857610e78612117565b9050602002810190610e8a9190612144565b9050610eb9610e9f60608301604084016120fc565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610f1b5750610f1b610ed260408301602084016120fc565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610f325750610f32610ed260208301836120fc565b8015610fb55750610fb5610f4960a0830183612094565b610f57916004915f916125b7565b610f60916125de565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610feb576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b51610ff790826115af565b50600101610e5d565b505061100f8585858585611822565b505050505050505050565b61107e6040518060a001604052805f67ffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f8152602001606081525090565b6060836111135760408051600180825281830190925290816020015b604080518082019091525f808252602082015281526020019060019003908161109a5790505090506040518060400160405280876080015173ffffffffffffffffffffffffffffffffffffffff16815260200184815250815f8151811061110357611103612117565b6020026020010181905250611152565b604080515f808252602082019092529061114e565b604080518082019091525f80825260208201528152602001906001900390816111285790505b5090505b6040805160a081019091528061116e6080880160608901612644565b67ffffffffffffffff16815233602082015260409081019061119690606089019089016120fc565b73ffffffffffffffffffffffffffffffffffffffff168152602001856111bc575f6111be565b845b81526020019190915295945050505050565b5f6606b2787ad08cbc820361120657507f0000000000000000000000000000000000000000000000000000000000000000919050565b660416edef1601be820361123b57507f0000000000000000000000000000000000000000000000000000000000000000919050565b67ffffffffffffffff82111561127d576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5090565b610a638383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611a39565b7311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff16036113445760e082015182517ff9b69f466270c99522169d563c0a430e88c52865ec33b1cc36ee2a4a6ea5170b61132d6020850185612094565b60405161133b92919061265d565b60405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161137391906126c4565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff82166113cc576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61074273ffffffffffffffffffffffffffffffffffffffff831682611b66565b73ffffffffffffffffffffffffffffffffffffffff8216611439576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a6373ffffffffffffffffffffffffffffffffffffffff84168383611b7f565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f511417166114a557637939f4245f526004601cfd5b5f60605260405250505050565b6114bf6020820182612094565b159050806114db5750602c6114d76020830183612094565b9050115b15611512576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61151f60a0820182612094565b905061013f1461155b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b5f660416edef1601be820361157457505f919050565b506001919050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b6115c76115bf60208301836120fc565b6017903b1190565b6115fd576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f81900361163c576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f611650610e9f60608501604086016120fc565b61165a575f611660565b82608001355b90505f61167b61167660808601606087016120fc565b610c8a565b9050815f036116b1576116b161169760608601604087016120fc565b6116a760408701602088016120fc565b8660800135611281565b5f806116c060208701876120fc565b73ffffffffffffffffffffffffffffffffffffffff16846116e460a0890189612094565b6040516116f29291906127d7565b5f6040518083038185875af1925050503d805f811461172c576040519150601f19603f3d011682016040523d82523d5f602084013e611731565b606091505b5091509150816117445761174481611bc8565b5f6117586116766080890160608a016120fc565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861178960208a018a6120fc565b61179960608b0160408c016120fc565b6117a960808c0160608d016120fc565b8b608001358987116117bb57866117c5565b6117c58a8861206e565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f868261183160018261206e565b81811061184057611840612117565b90506020028101906118529190612144565b6118639060808101906060016120fc565b90505f5f5f5f5f5f5f5b88811015611a295761188060018a61206e565b8110801561188f575088600114155b1561196a578d8d828181106118a6576118a6612117565b90506020028101906118b89190612144565b6118c99060808101906060016120fc565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161461196a578a818151811061191057611910612117565b602002602001015161192187610c8a565b61192b919061206e565b965073ffffffffffffffffffffffffffffffffffffffff86161561194f575f611951565b895b93508387111561196a5761196a868d610351878b61206e565b8d8d8281811061197c5761197c612117565b905060200281019061198e9190612144565b61199f9060608101906040016120fc565b94506119aa85610c8a565b925073ffffffffffffffffffffffffffffffffffffffff8516156119ce575f6119d0565b895b91508183118015611a0d57508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b15611a2157611a21858d610351858761206e565b60010161186d565b5050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff841615611b605773ffffffffffffffffffffffffffffffffffffffff8316611aa2576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611b15573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b3991906127e6565b1015611b6057611b6073ffffffffffffffffffffffffffffffffffffffff85168483611bd2565b50505050565b5f385f3884865af16107425763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716611bbf576390b8ec185f526004601cfd5b5f603452505050565b8051602082018181fd5b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716611bbf575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f51141716611bbf57633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff81118282101715611ca157611ca1611c50565b60405290565b6040805190810167ffffffffffffffff81118282101715611ca157611ca1611c50565b60405160c0810167ffffffffffffffff81118282101715611ca157611ca1611c50565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611d3457611d34611c50565b604052919050565b5f5f67ffffffffffffffff841115611d5657611d56611c50565b50601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016602001611d8981611ced565b915050828152838383011115611d9d575f5ffd5b828260208301375f602084830101529392505050565b5f82601f830112611dc2575f5ffd5b611dd183833560208501611d3c565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461155b575f5ffd5b8035611e0481611dd8565b919050565b80358015158114611e04575f5ffd5b5f6101408284031215611e29575f5ffd5b611e31611c7d565b823581529050602082013567ffffffffffffffff811115611e50575f5ffd5b611e5c84828501611db3565b602083015250604082013567ffffffffffffffff811115611e7b575f5ffd5b611e8784828501611db3565b604083015250611e9960608301611df9565b6060820152611eaa60808301611df9565b6080820152611ebb60a08301611df9565b60a082015260c0828101359082015260e08083013590820152611ee16101008301611e09565b610100820152611ef46101208301611e09565b61012082015292915050565b5f60c08284031215611f10575f5ffd5b50919050565b5f5f5f5f60608587031215611f29575f5ffd5b843567ffffffffffffffff811115611f3f575f5ffd5b611f4b87828801611e18565b945050602085013567ffffffffffffffff811115611f67575f5ffd5b8501601f81018713611f77575f5ffd5b803567ffffffffffffffff811115611f8d575f5ffd5b8760208260051b8401011115611fa1575f5ffd5b60209190910193509150604085013567ffffffffffffffff811115611fc4575f5ffd5b611fd087828801611f00565b91505092959194509250565b5f5f60408385031215611fed575f5ffd5b823567ffffffffffffffff811115612003575f5ffd5b61200f85828601611e18565b925050602083013567ffffffffffffffff81111561202b575f5ffd5b61203785828601611f00565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b81810381811115610cce57610cce612041565b80820180821115610cce57610cce612041565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126120c7575f5ffd5b83018035915067ffffffffffffffff8211156120e1575f5ffd5b6020019150368190038213156120f5575f5ffd5b9250929050565b5f6020828403121561210c575f5ffd5b8135611dd181611dd8565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612176575f5ffd5b9190910192915050565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b67ffffffffffffffff86168152608060208201525f6121ea608083018688612180565b828103604084015260a0810167ffffffffffffffff865116825273ffffffffffffffffffffffffffffffffffffffff602087015116602083015273ffffffffffffffffffffffffffffffffffffffff604087015116604083015260608601516060830152608086015160a0608084015281815180845260c0850191506020830194505f93505b808410156122b7578451925073ffffffffffffffffffffffffffffffffffffffff835116825260208301516020830152604082019150602085019450600184019350612270565b50861515606087015293506108d892505050565b5f5f604083850312156122dc575f5ffd5b8251915060208301516122ee81611dd8565b809150509250929050565b803567ffffffffffffffff81168114611e04575f5ffd5b5f67ffffffffffffffff82111561232957612329611c50565b5060051b60200190565b5f82601f830112612342575f5ffd5b813561235561235082612310565b611ced565b8082825260208201915060208360061b860101925085831115612376575f5ffd5b602085015b838110156123c15760408188031215612392575f5ffd5b61239a611ca7565b81356123a581611dd8565b815260208281013581830152908452929092019160400161237b565b5095945050505050565b5f82601f8301126123da575f5ffd5b81356123e861235082612310565b8082825260208201915060208360051b860101925085831115612409575f5ffd5b602085015b838110156123c157803567ffffffffffffffff81111561242c575f5ffd5b860160408189037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001121561245f575f5ffd5b612467611ca7565b602082013561247581611dd8565b8152604082013567ffffffffffffffff811115612490575f5ffd5b60208184010192505088601f8301126124a7575f5ffd5b6124b689833560208501611d3c565b6020820152808552505060208301925060208101905061240e565b5f602082840312156124e1575f5ffd5b813567ffffffffffffffff8111156124f7575f5ffd5b820160c08185031215612508575f5ffd5b612510611cca565b81358152612520602083016122f9565b602082015261253160408301611df9565b604082015260608281013590820152608082013567ffffffffffffffff811115612559575f5ffd5b61256586828501612333565b60808301525060a082013567ffffffffffffffff811115612584575f5ffd5b612590868285016123cb565b60a083015250949350505050565b5f602082840312156125ae575f5ffd5b611dd182611e09565b5f5f858511156125c5575f5ffd5b838611156125d1575f5ffd5b5050820193919092039150565b80357fffffffff00000000000000000000000000000000000000000000000000000000811690600484101561263d577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b5f60208284031215612654575f5ffd5b611dd1826122f9565b602081525f612670602083018486612180565b949350505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f602083015161014060408401526126eb610160840182612678565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160608501526127268282612678565b9150506060840151612750608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e08401516101008401526101008401516127bf61012085018215159052565b50610120840151801515610140850152509392505050565b818382375f9101908152919050565b5f602082840312156127f6575f5ffd5b505191905056fea2646970667358221220b66aded8ab8b44a28326d1675d1e1e26a568cd2351cff3224a08ac0fcd67148b64736f6c634300081d0033";

type EcoFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EcoFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EcoFacet__factory extends ContractFactory {
  constructor(...args: EcoFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _portal: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EcoFacet> {
    return super.deploy(_portal, overrides || {}) as Promise<EcoFacet>;
  }
  override getDeployTransaction(
    _portal: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_portal, overrides || {});
  }
  override attach(address: string): EcoFacet {
    return super.attach(address) as EcoFacet;
  }
  override connect(signer: Signer): EcoFacet__factory {
    return super.connect(signer) as EcoFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EcoFacetInterface {
    return new utils.Interface(_abi) as EcoFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EcoFacet {
    return new Contract(address, _abi, signerOrProvider) as EcoFacet;
  }
}
