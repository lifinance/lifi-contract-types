/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  GenericSwapFacet,
  GenericSwapFacetInterface,
} from "../GenericSwapFacet";

const _abi = [
  {
    type: "function",
    name: "swapTokensGeneric",
    inputs: [
      {
        name: "_transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_integrator",
        type: "string",
        internalType: "string",
      },
      {
        name: "_referrer",
        type: "string",
        internalType: "string",
      },
      {
        name: "_receiver",
        type: "address",
        internalType: "address payable",
      },
      {
        name: "_minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b506115568061001c5f395ff3fe60806040526004361061001d575f3560e01c80634630a0d814610021575b5f5ffd5b61003461002f366004611151565b610036565b005b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100b1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155845f6100c1344761124c565b905073ffffffffffffffffffffffffffffffffffffffff8716610110576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61011e8d8888888c610242565b90505f868661012e60018261124c565b81811061013d5761013d611284565b905060200281019061014f91906112b1565b6101609060808101906060016112ed565b905061016d818a84610385565b8d7f38eee76fd911eabac79da7af16053e809be0e12c8637f156e77e1af309b995378e8e8e8e8e8d8d5f8181106101a6576101a6611284565b90506020028101906101b891906112b1565b6101c99060608101906040016112ed565b888f8f5f8181106101dc576101dc611284565b90506020028101906101ee91906112b1565b608001358b60405161020899989796959493929190611356565b60405180910390a25047905081811115610230576102305f8461022b858561124c565b610385565b50505f90915550505050505050505050565b5f8280820361027d576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f858561028b60018561124c565b81811061029a5761029a611284565b90506020028101906102ac91906112b1565b6102bd9060808101906060016112ed565b90505f6102c9826103ba565b905073ffffffffffffffffffffffffffffffffffffffff82166102f3576102f0348261124c565b90505b5f6102fe8888610404565b905061030a888861050e565b6103178a8989898561057a565b5f82610322856103ba565b61032c919061124c565b905089811015610377576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166103af576103aa8282610925565b505050565b6103aa838383610996565b5f73ffffffffffffffffffffffffffffffffffffffff8216156103fc576103f773ffffffffffffffffffffffffffffffffffffffff831630610a04565b6103fe565b475b92915050565b6060815f8167ffffffffffffffff811115610421576104216113c0565b60405190808252806020026020018201604052801561044a578160200160208202803683370190505b5090505f805b838110156105035786868281811061046a5761046a611284565b905060200281019061047c91906112b1565b61048d9060808101906060016112ed565b9150610498826103ba565b8382815181106104aa576104aa611284565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff82166104fb57348382815181106104e3576104e3611284565b602002602001018181516104f7919061124c565b9052505b600101610450565b509095945050505050565b5f5b818110156103aa573683838381811061052b5761052b611284565b905060200281019061053d91906112b1565b905061054f60e0820160c083016113ed565b156105715761057161056760608301604084016112ed565b8260800135610a37565b50600101610510565b838383838260018114610841575f858561059560018561124c565b8181106105a4576105a4611284565b90506020028101906105b691906112b1565b6105c79060808101906060016112ed565b90505f89815b8181101561076e57368d8d838181106105e8576105e8611284565b90506020028101906105fa91906112b1565b905061062961060f60608301604084016112ed565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061068b575061068b61064260408301602084016112ed565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156106a257506106a261064260208301836112ed565b801561072557506107256106b960a083018361140c565b6106c7916004915f9161146d565b6106d091611494565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61075b576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107658f82610ae7565b506001016105cd565b505f90505b61077e60018561124c565b811015610839575f88888381811061079857610798611284565b90506020028101906107aa91906112b1565b6107bb9060808101906060016112ed565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108305785828151811061080257610802611284565b6020026020010151610813826103ba565b61081d919061124c565b9250821561083057610830818885610385565b50600101610773565b505050610919565b875f5b8181101561091657368b8b8381811061085f5761085f611284565b905060200281019061087191906112b1565b905061088661060f60608301604084016112ed565b8061089f575061089f61064260408301602084016112ed565b80156108b657506108b661064260208301836112ed565b80156108cd57506108cd6106b960a083018361140c565b610903576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61090d8d82610ae7565b50600101610844565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216610972576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61099273ffffffffffffffffffffffffffffffffffffffff831682610db9565b5050565b73ffffffffffffffffffffffffffffffffffffffff82166109e3576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103aa73ffffffffffffffffffffffffffffffffffffffff84168383610dd2565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b805f03610a70576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610ac55780341015610992576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61099273ffffffffffffffffffffffffffffffffffffffff8316333084610e1b565b610afc610af760208301836112ed565b610e73565b610b32576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003610b71576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610b8561060f60608501604086016112ed565b610b8f575f610b95565b82608001355b90505f610bb0610bab60608601604087016112ed565b6103ba565b90505f610bc6610bab60808701606088016112ed565b9050825f03610bfc57610bfc610be260608701604088016112ed565b610bf260408801602089016112ed565b8760800135610f07565b8460800135821015610c47576040517fcf479181000000000000000000000000000000000000000000000000000000008152608086013560048201526024810183905260440161036e565b5f80610c5660208801886112ed565b73ffffffffffffffffffffffffffffffffffffffff1685610c7a60a08a018a61140c565b604051610c889291906114fa565b5f6040518083038185875af1925050503d805f8114610cc2576040519150601f19603f3d011682016040523d82523d5f602084013e610cc7565b606091505b509150915081610cda57610cda81610f33565b5f610cee610bab60808a0160608b016112ed565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889610d1f60208b018b6112ed565b610d2f60608c0160408d016112ed565b610d3f60808d0160608e016112ed565b8c60800135898711610d515786610d5b565b610d5b8a8861124c565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b5f385f3884865af16109925763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716610e12576390b8ec185f526004601cfd5b5f603452505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f51141716610e6657637939f4245f526004601cfd5b5f60605260405250505050565b6040805160178082528183019092525f9182919060208201818036833701905050905060175f60208301853c60208101517f10ff0000000000000000000000000000000000000000000000000000000000007fffffff0000000000000000000000000000000000000000000000000000000000821601610efe57506023015160601c3b151592915050565b5050503b151590565b6103aa8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610f3d565b8051602082018181fd5b73ffffffffffffffffffffffffffffffffffffffff8416156110645773ffffffffffffffffffffffffffffffffffffffff8316610fa6576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611019573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061103d9190611509565b10156110645761106473ffffffffffffffffffffffffffffffffffffffff8516848361106a565b50505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716610e12575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f51141716610e1257633e3f8f735f526004601cfd5b5f5f83601f8401126110f8575f5ffd5b50813567ffffffffffffffff81111561110f575f5ffd5b602083019150836020828501011115611126575f5ffd5b9250929050565b73ffffffffffffffffffffffffffffffffffffffff8116811461114e575f5ffd5b50565b5f5f5f5f5f5f5f5f5f60c08a8c031215611169575f5ffd5b8935985060208a013567ffffffffffffffff811115611186575f5ffd5b6111928c828d016110e8565b90995097505060408a013567ffffffffffffffff8111156111b1575f5ffd5b6111bd8c828d016110e8565b90975095505060608a01356111d18161112d565b935060808a0135925060a08a013567ffffffffffffffff8111156111f3575f5ffd5b8a015f80601f83018e13611205575f5ffd5b50813567ffffffffffffffff81111561121c575f5ffd5b6020830191508d60208260051b8501011115611236575f5ffd5b8194508093505050509295985092959850929598565b818103818111156103fe577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126112e3575f5ffd5b9190910192915050565b5f602082840312156112fd575f5ffd5b81356113088161112d565b9392505050565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60e081525f61136960e083018b8d61130f565b828103602084015261137c818a8c61130f565b73ffffffffffffffffffffffffffffffffffffffff98891660408501529688166060840152505092909416608083015260a082015260c00191909152949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f602082840312156113fd575f5ffd5b81358015158114611308575f5ffd5b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261143f575f5ffd5b83018035915067ffffffffffffffff821115611459575f5ffd5b602001915036819003821315611126575f5ffd5b5f5f8585111561147b575f5ffd5b83861115611487575f5ffd5b5050820193919092039150565b80357fffffffff0000000000000000000000000000000000000000000000000000000081169060048410156114f3577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b5f60208284031215611519575f5ffd5b505191905056fea264697066735822122008b4b92446b9be4686a02fb0fb04b99e8570ccc05926e2fc9dae5ee29dde2bdc64736f6c634300081d0033";

type GenericSwapFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GenericSwapFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GenericSwapFacet__factory extends ContractFactory {
  constructor(...args: GenericSwapFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GenericSwapFacet> {
    return super.deploy(overrides || {}) as Promise<GenericSwapFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GenericSwapFacet {
    return super.attach(address) as GenericSwapFacet;
  }
  override connect(signer: Signer): GenericSwapFacet__factory {
    return super.connect(signer) as GenericSwapFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GenericSwapFacetInterface {
    return new utils.Interface(_abi) as GenericSwapFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GenericSwapFacet {
    return new Contract(address, _abi, signerOrProvider) as GenericSwapFacet;
  }
}
