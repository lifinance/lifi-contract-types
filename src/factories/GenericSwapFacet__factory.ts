/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  GenericSwapFacet,
  GenericSwapFacetInterface,
} from "../GenericSwapFacet";

const _abi = [
  {
    type: "function",
    name: "swapTokensGeneric",
    inputs: [
      {
        name: "_transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_integrator",
        type: "string",
        internalType: "string",
      },
      {
        name: "_referrer",
        type: "string",
        internalType: "string",
      },
      {
        name: "_receiver",
        type: "address",
        internalType: "address payable",
      },
      {
        name: "_minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b506114f38061001c5f395ff3fe60806040526004361061001d575f3560e01c80634630a0d814610021575b5f5ffd5b61003461002f3660046110ee565b610036565b005b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100b1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155845f6100c134476111e9565b905073ffffffffffffffffffffffffffffffffffffffff8716610110576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61011e8d8888888c610242565b90505f868661012e6001826111e9565b81811061013d5761013d611221565b905060200281019061014f919061124e565b61016090608081019060600161128a565b905061016d818a84610384565b8d7f38eee76fd911eabac79da7af16053e809be0e12c8637f156e77e1af309b995378e8e8e8e8e8d8d5f8181106101a6576101a6611221565b90506020028101906101b8919061124e565b6101c990606081019060400161128a565b888f8f5f8181106101dc576101dc611221565b90506020028101906101ee919061124e565b608001358b604051610208999897969594939291906112f3565b60405180910390a25047905081811115610230576102305f8461022b85856111e9565b610384565b50505f90915550505050505050505050565b5f8280820361027d576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f858561028b6001856111e9565b81811061029a5761029a611221565b90506020028101906102ac919061124e565b6102bd90608081019060600161128a565b90505f6102c9826103b9565b905073ffffffffffffffffffffffffffffffffffffffff82166102f3576102f034826111e9565b90505b5f6102fe8888610403565b905061030a888861050d565b6103178a89898985610579565b5f82610322856103b9565b61032c91906111e9565b905089811015610376576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166103ae576103a98282610924565b505050565b6103a9838383610995565b5f73ffffffffffffffffffffffffffffffffffffffff8216156103fb576103f673ffffffffffffffffffffffffffffffffffffffff831630610a03565b6103fd565b475b92915050565b6060815f8167ffffffffffffffff8111156104205761042061135d565b604051908082528060200260200182016040528015610449578160200160208202803683370190505b5090505f805b838110156105025786868281811061046957610469611221565b905060200281019061047b919061124e565b61048c90608081019060600161128a565b9150610497826103b9565b8382815181106104a9576104a9611221565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff82166104fa57348382815181106104e2576104e2611221565b602002602001018181516104f691906111e9565b9052505b60010161044f565b509095945050505050565b5f5b818110156103a9573683838381811061052a5761052a611221565b905060200281019061053c919061124e565b905061054e60e0820160c0830161138a565b1561057057610570610566606083016040840161128a565b8260800135610a36565b5060010161050f565b838383838260018114610840575f85856105946001856111e9565b8181106105a3576105a3611221565b90506020028101906105b5919061124e565b6105c690608081019060600161128a565b90505f89815b8181101561076d57368d8d838181106105e7576105e7611221565b90506020028101906105f9919061124e565b905061062861060e606083016040840161128a565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061068a575061068a610641604083016020840161128a565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156106a157506106a1610641602083018361128a565b801561072457506107246106b860a08301836113a9565b6106c6916004915f9161140a565b6106cf91611431565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61075a576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107648f82610ae6565b506001016105cc565b505f90505b61077d6001856111e9565b811015610838575f88888381811061079757610797611221565b90506020028101906107a9919061124e565b6107ba90608081019060600161128a565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461082f5785828151811061080157610801611221565b6020026020010151610812826103b9565b61081c91906111e9565b9250821561082f5761082f818885610384565b50600101610772565b505050610918565b875f5b8181101561091557368b8b8381811061085e5761085e611221565b9050602002810190610870919061124e565b905061088561060e606083016040840161128a565b8061089e575061089e610641604083016020840161128a565b80156108b557506108b5610641602083018361128a565b80156108cc57506108cc6106b860a08301836113a9565b610902576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61090c8d82610ae6565b50600101610843565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216610971576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61099173ffffffffffffffffffffffffffffffffffffffff831682610d56565b5050565b73ffffffffffffffffffffffffffffffffffffffff82166109e2576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103a973ffffffffffffffffffffffffffffffffffffffff84168383610d6f565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b805f03610a6f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610ac45780341015610991576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61099173ffffffffffffffffffffffffffffffffffffffff8316333084610db8565b610afb610af6602083018361128a565b610e10565b610b31576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003610b70576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610b8461060e606085016040860161128a565b610b8e575f610b94565b82608001355b90505f610baf610baa608086016060870161128a565b6103b9565b9050815f03610be557610be5610bcb606086016040870161128a565b610bdb604087016020880161128a565b8660800135610ea4565b5f80610bf4602087018761128a565b73ffffffffffffffffffffffffffffffffffffffff1684610c1860a08901896113a9565b604051610c26929190611497565b5f6040518083038185875af1925050503d805f8114610c60576040519150601f19603f3d011682016040523d82523d5f602084013e610c65565b606091505b509150915081610c7857610c7881610ed0565b5f610c8c610baa6080890160608a0161128a565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3888610cbd60208a018a61128a565b610ccd60608b0160408c0161128a565b610cdd60808c0160608d0161128a565b8b60800135898711610cef5786610cf9565b610cf98a886111e9565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b5f385f3884865af16109915763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716610daf576390b8ec185f526004601cfd5b5f603452505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f51141716610e0357637939f4245f526004601cfd5b5f60605260405250505050565b6040805160178082528183019092525f9182919060208201818036833701905050905060175f60208301853c60208101517f10ff0000000000000000000000000000000000000000000000000000000000007fffffff0000000000000000000000000000000000000000000000000000000000821601610e9b57506023015160601c3b151592915050565b5050503b151590565b6103a98383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610eda565b8051602082018181fd5b73ffffffffffffffffffffffffffffffffffffffff8416156110015773ffffffffffffffffffffffffffffffffffffffff8316610f43576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015610fb6573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fda91906114a6565b10156110015761100173ffffffffffffffffffffffffffffffffffffffff85168483611007565b50505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716610daf575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f51141716610daf57633e3f8f735f526004601cfd5b5f5f83601f840112611095575f5ffd5b50813567ffffffffffffffff8111156110ac575f5ffd5b6020830191508360208285010111156110c3575f5ffd5b9250929050565b73ffffffffffffffffffffffffffffffffffffffff811681146110eb575f5ffd5b50565b5f5f5f5f5f5f5f5f5f60c08a8c031215611106575f5ffd5b8935985060208a013567ffffffffffffffff811115611123575f5ffd5b61112f8c828d01611085565b90995097505060408a013567ffffffffffffffff81111561114e575f5ffd5b61115a8c828d01611085565b90975095505060608a013561116e816110ca565b935060808a0135925060a08a013567ffffffffffffffff811115611190575f5ffd5b8a015f80601f83018e136111a2575f5ffd5b50813567ffffffffffffffff8111156111b9575f5ffd5b6020830191508d60208260051b85010111156111d3575f5ffd5b8194508093505050509295985092959850929598565b818103818111156103fd577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611280575f5ffd5b9190910192915050565b5f6020828403121561129a575f5ffd5b81356112a5816110ca565b9392505050565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60e081525f61130660e083018b8d6112ac565b8281036020840152611319818a8c6112ac565b73ffffffffffffffffffffffffffffffffffffffff98891660408501529688166060840152505092909416608083015260a082015260c00191909152949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f6020828403121561139a575f5ffd5b813580151581146112a5575f5ffd5b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126113dc575f5ffd5b83018035915067ffffffffffffffff8211156113f6575f5ffd5b6020019150368190038213156110c3575f5ffd5b5f5f85851115611418575f5ffd5b83861115611424575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015611490577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b5f602082840312156114b6575f5ffd5b505191905056fea26469706673582212205382598dbc0411a9cb6d31a87818de2e479154dbf9d2f44074b42a218fde463564736f6c634300081d0033";

type GenericSwapFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GenericSwapFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GenericSwapFacet__factory extends ContractFactory {
  constructor(...args: GenericSwapFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GenericSwapFacet> {
    return super.deploy(overrides || {}) as Promise<GenericSwapFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GenericSwapFacet {
    return super.attach(address) as GenericSwapFacet;
  }
  override connect(signer: Signer): GenericSwapFacet__factory {
    return super.connect(signer) as GenericSwapFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GenericSwapFacetInterface {
    return new utils.Interface(_abi) as GenericSwapFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GenericSwapFacet {
    return new Contract(address, _abi, signerOrProvider) as GenericSwapFacet;
  }
}
