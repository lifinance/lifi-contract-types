/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  GenericSwapFacet,
  GenericSwapFacetInterface,
} from "../GenericSwapFacet";

const _abi = [
  {
    type: "function",
    name: "swapTokensGeneric",
    inputs: [
      {
        name: "_transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_integrator",
        type: "string",
        internalType: "string",
      },
      {
        name: "_referrer",
        type: "string",
        internalType: "string",
      },
      {
        name: "_receiver",
        type: "address",
        internalType: "address payable",
      },
      {
        name: "_minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506114fd806100206000396000f3fe60806040526004361061001e5760003560e01c80634630a0d814610023575b600080fd5b610036610031366004611106565b610038565b005b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100b3576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181558460006100c434476111f7565b905073ffffffffffffffffffffffffffffffffffffffff8716610113576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006101228d8888888c61024b565b9050600086866101336001826111f7565b81811061014257610142611231565b90506020028101906101549190611260565b61016590608081019060600161129e565b9050610172818a84610393565b8d7f38eee76fd911eabac79da7af16053e809be0e12c8637f156e77e1af309b995378e8e8e8e8e8d8d60008181106101ac576101ac611231565b90506020028101906101be9190611260565b6101cf90606081019060400161129e565b888f8f60008181106101e3576101e3611231565b90506020028101906101f59190611260565b608001358b60405161020f9998979695949392919061130b565b60405180910390a250479050818111156102385761023860008461023385856111f7565b610393565b5050600090915550505050505050505050565b600082808203610287576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856102966001856111f7565b8181106102a5576102a5611231565b90506020028101906102b79190611260565b6102c890608081019060600161129e565b905060006102d5826103c9565b905073ffffffffffffffffffffffffffffffffffffffff82166102ff576102fc34826111f7565b90505b600061030b8888610414565b90506103178888610520565b6103248a8989898561058d565b600082610330856103c9565b61033a91906111f7565b905089811015610385576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316156103bf576103ba83838361093f565b505050565b6103ba82826109ad565b600073ffffffffffffffffffffffffffffffffffffffff82161561040c5761040773ffffffffffffffffffffffffffffffffffffffff831630610a1e565b61040e565b475b92915050565b60608160008167ffffffffffffffff81111561043257610432611376565b60405190808252806020026020018201604052801561045b578160200160208202803683370190505b5090506000805b838110156105155786868281811061047c5761047c611231565b905060200281019061048e9190611260565b61049f90608081019060600161129e565b91506104aa826103c9565b8382815181106104bc576104bc611231565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff821661050d57348382815181106104f5576104f5611231565b6020026020010181815161050991906111f7565b9052505b600101610462565b509095945050505050565b60005b818110156103ba573683838381811061053e5761053e611231565b90506020028101906105509190611260565b905061056260e0820160c083016113a5565b156105845761058461057a606083016040840161129e565b8260800135610a53565b50600101610523565b83838383826001811461085a57600085856105a96001856111f7565b8181106105b8576105b8611231565b90506020028101906105ca9190611260565b6105db90608081019060600161129e565b9050600089815b8181101561078657368d8d838181106105fd576105fd611231565b905060200281019061060f9190611260565b905061063e610624606083016040840161129e565b73ffffffffffffffffffffffffffffffffffffffff161590565b806106a157506106a1610657604083016020840161129e565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156106b857506106b8610657602083018361129e565b801561073d575061073d6106cf60a08301836113c7565b6106de9160049160009161142c565b6106e791611456565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610773576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61077d8f82610b04565b506001016105e2565b505060005b6107966001856111f7565b8110156108525760008888838181106107b1576107b1611231565b90506020028101906107c39190611260565b6107d490608081019060600161129e565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108495785828151811061081b5761081b611231565b602002602001015161082c826103c9565b61083691906111f7565b9250821561084957610849818885610393565b5060010161078b565b505050610933565b8760005b8181101561093057368b8b8381811061087957610879611231565b905060200281019061088b9190611260565b90506108a0610624606083016040840161129e565b806108b957506108b9610657604083016020840161129e565b80156108d057506108d0610657602083018361129e565b80156108e757506108e76106cf60a08301836113c7565b61091d576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109278d82610b04565b5060010161085e565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff821661098c576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103ba73ffffffffffffffffffffffffffffffffffffffff84168383610de1565b73ffffffffffffffffffffffffffffffffffffffff82166109fa576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a1a73ffffffffffffffffffffffffffffffffffffffff831682610e30565b5050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b80600003610a8d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610ae25780341015610a1a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a1a73ffffffffffffffffffffffffffffffffffffffff8316333084610e4c565b610b19610b14602083018361129e565b610ea9565b610b4f576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003610b8f576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610ba4610624606085016040860161129e565b610baf576000610bb5565b82608001355b90506000610bd1610bcc606086016040870161129e565b6103c9565b90506000610be8610bcc608087016060880161129e565b905082600003610c1f57610c1f610c05606087016040880161129e565b610c15604088016020890161129e565b8760800135610ec5565b8460800135821015610c6a576040517fcf479181000000000000000000000000000000000000000000000000000000008152608086013560048201526024810183905260440161037c565b600080610c7a602088018861129e565b73ffffffffffffffffffffffffffffffffffffffff1685610c9e60a08a018a6113c7565b604051610cac92919061149e565b60006040518083038185875af1925050503d8060008114610ce9576040519150601f19603f3d011682016040523d82523d6000602084013e610cee565b606091505b509150915081610d0157610d0181610ef1565b6000610d16610bcc60808a0160608b0161129e565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889610d4760208b018b61129e565b610d5760608c0160408d0161129e565b610d6760808d0160608e0161129e565b8c60800135898711610d795786610d83565b610d838a886111f7565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d156001600051141716610e26576390b8ec186000526004601cfd5b6000603452505050565b60003860003884865af1610a1a5763b12d13eb6000526004601cfd5b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d156001600051141716610e9b57637939f4246000526004601cfd5b600060605260405250505050565b6000813f818115801590610ebd5750808214155b949350505050565b6103ba8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610efb565b8051602082018181fd5b73ffffffffffffffffffffffffffffffffffffffff8316610f48576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015610fbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe191906114ae565b10156110085761100873ffffffffffffffffffffffffffffffffffffffff8516848361100e565b50505050565b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d156001600051141716610e265760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d156001600051141716610e2657633e3f8f736000526004601cfd5b60008083601f8401126110aa57600080fd5b50813567ffffffffffffffff8111156110c257600080fd5b6020830191508360208285010111156110da57600080fd5b9250929050565b73ffffffffffffffffffffffffffffffffffffffff8116811461110357600080fd5b50565b600080600080600080600080600060c08a8c03121561112457600080fd5b8935985060208a013567ffffffffffffffff8082111561114357600080fd5b61114f8d838e01611098565b909a50985060408c013591508082111561116857600080fd5b6111748d838e01611098565b909850965060608c01359150611189826110e1565b90945060808b0135935060a08b013590808211156111a657600080fd5b818c0191508c601f8301126111ba57600080fd5b8135818111156111c957600080fd5b8d60208260051b85010111156111de57600080fd5b6020830194508093505050509295985092959850929598565b8181038181111561040e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261129457600080fd5b9190910192915050565b6000602082840312156112b057600080fd5b81356112bb816110e1565b9392505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60e08152600061131f60e083018b8d6112c2565b8281036020840152611332818a8c6112c2565b73ffffffffffffffffffffffffffffffffffffffff98891660408501529688166060840152505092909416608083015260a082015260c00191909152949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156113b757600080fd5b813580151581146112bb57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126113fc57600080fd5b83018035915067ffffffffffffffff82111561141757600080fd5b6020019150368190038213156110da57600080fd5b6000808585111561143c57600080fd5b8386111561144957600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156114965780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b6000602082840312156114c057600080fd5b505191905056fea26469706673582212207a1eb443e56e9851f37c0274601eef38c2fa31bbead5ce80d52d67f8b646a82a64736f6c63430008110033";

type GenericSwapFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GenericSwapFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GenericSwapFacet__factory extends ContractFactory {
  constructor(...args: GenericSwapFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GenericSwapFacet> {
    return super.deploy(overrides || {}) as Promise<GenericSwapFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GenericSwapFacet {
    return super.attach(address) as GenericSwapFacet;
  }
  override connect(signer: Signer): GenericSwapFacet__factory {
    return super.connect(signer) as GenericSwapFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GenericSwapFacetInterface {
    return new utils.Interface(_abi) as GenericSwapFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GenericSwapFacet {
    return new Contract(address, _abi, signerOrProvider) as GenericSwapFacet;
  }
}
