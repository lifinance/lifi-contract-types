/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  GenericSwapFacet,
  GenericSwapFacetInterface,
} from "../GenericSwapFacet";

const _abi = [
  {
    type: "function",
    name: "swapTokensGeneric",
    inputs: [
      {
        name: "_transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_integrator",
        type: "string",
        internalType: "string",
      },
      {
        name: "_referrer",
        type: "string",
        internalType: "string",
      },
      {
        name: "_receiver",
        type: "address",
        internalType: "address payable",
      },
      {
        name: "_minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061152e806100206000396000f3fe60806040526004361061001e5760003560e01c80634630a0d814610023575b600080fd5b610036610031366004611137565b610038565b005b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100b3576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181558460006100c43447611228565b905073ffffffffffffffffffffffffffffffffffffffff8716610113576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006101228d8888888c61024b565b905060008686610133600182611228565b81811061014257610142611262565b90506020028101906101549190611291565b6101659060808101906060016112cf565b9050610172818a84610392565b8d7f38eee76fd911eabac79da7af16053e809be0e12c8637f156e77e1af309b995378e8e8e8e8e8d8d60008181106101ac576101ac611262565b90506020028101906101be9190611291565b6101cf9060608101906040016112cf565b888f8f60008181106101e3576101e3611262565b90506020028101906101f59190611291565b608001358b60405161020f9998979695949392919061133c565b60405180910390a25047905081811115610238576102386000846102338585611228565b610392565b5050600090915550505050505050505050565b600082808203610287576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610296600185611228565b8181106102a5576102a5611262565b90506020028101906102b79190611291565b6102c89060808101906060016112cf565b905060006102d5826103c7565b905073ffffffffffffffffffffffffffffffffffffffff82166102ff576102fc3482611228565b90505b600061030b8888610412565b9050610317888861051e565b6103248a8989898561058b565b600082610330856103c7565b61033a9190611228565b905089811015610384576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166103bc576103b7828261093d565b505050565b6103b78383836109ae565b600073ffffffffffffffffffffffffffffffffffffffff82161561040a5761040573ffffffffffffffffffffffffffffffffffffffff831630610a1c565b61040c565b475b92915050565b60608160008167ffffffffffffffff811115610430576104306113a7565b604051908082528060200260200182016040528015610459578160200160208202803683370190505b5090506000805b838110156105135786868281811061047a5761047a611262565b905060200281019061048c9190611291565b61049d9060808101906060016112cf565b91506104a8826103c7565b8382815181106104ba576104ba611262565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff821661050b57348382815181106104f3576104f3611262565b602002602001018181516105079190611228565b9052505b600101610460565b509095945050505050565b60005b818110156103b7573683838381811061053c5761053c611262565b905060200281019061054e9190611291565b905061056060e0820160c083016113d6565b156105825761058261057860608301604084016112cf565b8260800135610a51565b50600101610521565b83838383826001811461085857600085856105a7600185611228565b8181106105b6576105b6611262565b90506020028101906105c89190611291565b6105d99060808101906060016112cf565b9050600089815b8181101561078457368d8d838181106105fb576105fb611262565b905060200281019061060d9190611291565b905061063c61062260608301604084016112cf565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061069f575061069f61065560408301602084016112cf565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156106b657506106b661065560208301836112cf565b801561073b575061073b6106cd60a08301836113f8565b6106dc9160049160009161145d565b6106e591611487565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610771576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61077b8f82610b02565b506001016105e0565b505060005b610794600185611228565b8110156108505760008888838181106107af576107af611262565b90506020028101906107c19190611291565b6107d29060808101906060016112cf565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108475785828151811061081957610819611262565b602002602001015161082a826103c7565b6108349190611228565b9250821561084757610847818885610392565b50600101610789565b505050610931565b8760005b8181101561092e57368b8b8381811061087757610877611262565b90506020028101906108899190611291565b905061089e61062260608301604084016112cf565b806108b757506108b761065560408301602084016112cf565b80156108ce57506108ce61065560208301836112cf565b80156108e557506108e56106cd60a08301836113f8565b61091b576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109258d82610b02565b5060010161085c565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff821661098a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109aa73ffffffffffffffffffffffffffffffffffffffff831682610d7c565b5050565b73ffffffffffffffffffffffffffffffffffffffff82166109fb576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103b773ffffffffffffffffffffffffffffffffffffffff84168383610d98565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b80600003610a8b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610ae057803410156109aa576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109aa73ffffffffffffffffffffffffffffffffffffffff8316333084610de7565b610b17610b1260208301836112cf565b610e44565b610b4d576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003610b8d576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610ba261062260608501604086016112cf565b610bad576000610bb3565b82608001355b90506000610bcf610bca60808601606087016112cf565b6103c7565b905081600003610c0657610c06610bec60608601604087016112cf565b610bfc60408701602088016112cf565b8660800135610eda565b600080610c1660208701876112cf565b73ffffffffffffffffffffffffffffffffffffffff1684610c3a60a08901896113f8565b604051610c489291906114cf565b60006040518083038185875af1925050503d8060008114610c85576040519150601f19603f3d011682016040523d82523d6000602084013e610c8a565b606091505b509150915081610c9d57610c9d81610f06565b6000610cb2610bca6080890160608a016112cf565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3888610ce360208a018a6112cf565b610cf360608b0160408c016112cf565b610d0360808c0160608d016112cf565b8b60800135898711610d155786610d1f565b610d1f8a88611228565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b60003860003884865af16109aa5763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d156001600051141716610ddd576390b8ec186000526004601cfd5b6000603452505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d156001600051141716610e3657637939f4246000526004601cfd5b600060605260405250505050565b6040805160178082528183019092526000918291906020820181803683370190505090506017600060208301853c60208101517f10ff0000000000000000000000000000000000000000000000000000000000007fffffff0000000000000000000000000000000000000000000000000000000000821601610ed157506023015160601c3b151592915050565b5050503b151590565b6103b78383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610f10565b8051602082018181fd5b73ffffffffffffffffffffffffffffffffffffffff8416156110395773ffffffffffffffffffffffffffffffffffffffff8316610f79576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015610fee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101291906114df565b10156110395761103973ffffffffffffffffffffffffffffffffffffffff8516848361103f565b50505050565b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d156001600051141716610ddd5760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d156001600051141716610ddd57633e3f8f736000526004601cfd5b60008083601f8401126110db57600080fd5b50813567ffffffffffffffff8111156110f357600080fd5b60208301915083602082850101111561110b57600080fd5b9250929050565b73ffffffffffffffffffffffffffffffffffffffff8116811461113457600080fd5b50565b600080600080600080600080600060c08a8c03121561115557600080fd5b8935985060208a013567ffffffffffffffff8082111561117457600080fd5b6111808d838e016110c9565b909a50985060408c013591508082111561119957600080fd5b6111a58d838e016110c9565b909850965060608c013591506111ba82611112565b90945060808b0135935060a08b013590808211156111d757600080fd5b818c0191508c601f8301126111eb57600080fd5b8135818111156111fa57600080fd5b8d60208260051b850101111561120f57600080fd5b6020830194508093505050509295985092959850929598565b8181038181111561040c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126112c557600080fd5b9190910192915050565b6000602082840312156112e157600080fd5b81356112ec81611112565b9392505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60e08152600061135060e083018b8d6112f3565b8281036020840152611363818a8c6112f3565b73ffffffffffffffffffffffffffffffffffffffff98891660408501529688166060840152505092909416608083015260a082015260c00191909152949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156113e857600080fd5b813580151581146112ec57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261142d57600080fd5b83018035915067ffffffffffffffff82111561144857600080fd5b60200191503681900382131561110b57600080fd5b6000808585111561146d57600080fd5b8386111561147a57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156114c75780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b6000602082840312156114f157600080fd5b505191905056fea2646970667358221220bf7d91ac0617c5cc460b3aac6a3f7680c080acc756a21b8639b79cc367adf1e164736f6c63430008110033";

type GenericSwapFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GenericSwapFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GenericSwapFacet__factory extends ContractFactory {
  constructor(...args: GenericSwapFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GenericSwapFacet> {
    return super.deploy(overrides || {}) as Promise<GenericSwapFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GenericSwapFacet {
    return super.attach(address) as GenericSwapFacet;
  }
  override connect(signer: Signer): GenericSwapFacet__factory {
    return super.connect(signer) as GenericSwapFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GenericSwapFacetInterface {
    return new utils.Interface(_abi) as GenericSwapFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GenericSwapFacet {
    return new Contract(address, _abi, signerOrProvider) as GenericSwapFacet;
  }
}
