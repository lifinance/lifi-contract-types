/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Receiver, ReceiverInterface } from "../Receiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sgRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_amarokRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_recoverGas",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExternalCallFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "NewOwnerMustNotBeSelf",
    type: "error",
  },
  {
    inputs: [],
    name: "NoNullOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NoPendingOwnershipTransfer",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPendingOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "UnAuthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "AmarokRouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address",
      },
    ],
    name: "ExecutorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "recoverGas",
        type: "uint256",
      },
    ],
    name: "RecoverGasSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "StargateRouterSet",
    type: "event",
  },
  {
    inputs: [],
    name: "amarokRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelOwnershipTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmOwnershipTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "executor",
    outputs: [
      {
        internalType: "contract IExecutor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "pullToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "recoverGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_amarokRouter",
        type: "address",
      },
    ],
    name: "setAmarokRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_executor",
        type: "address",
      },
    ],
    name: "setExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_recoverGas",
        type: "uint256",
      },
    ],
    name: "setRecoverGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sgRouter",
        type: "address",
      },
    ],
    name: "setStargateRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountLD",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
    ],
    name: "sgReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sgRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transactionId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
    ],
    name: "swapAndCompleteBridgeTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transferId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
    ],
    name: "xReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200287f3803806200287f833981016040819052620000349162000134565b600080546001600160a01b038088166001600160a01b031992831617835560028054888316908416811790915560058054888416908516179055600380549287169290931691909117909155600483905560405190917f806d08432293677cc7e3e0f9443dcf0459f82567573d5094da6e9e6129dea4ab91a26040516001600160a01b038416907fcc6aaf791b8b7c6167981db821320441082903e27343e380dca76afd5807577d90600090a260405181907ffd178559652d65eca585044f34f8688859896a9bebaa7530dbe97c5c527320d590600090a250505050506200019b565b80516001600160a01b03811681146200012f57600080fd5b919050565b600080600080600060a086880312156200014d57600080fd5b620001588662000117565b9450620001686020870162000117565b9350620001786040870162000117565b9250620001886060870162000117565b9150608086015190509295509295909350565b6126d480620001ab6000396000f3fe6080604052600436106101125760003560e01c80637aacd8f8116100a5578063bcf225e611610074578063e30c397811610059578063e30c39781461031f578063f2fde38b1461034c578063fd614f411461036c57600080fd5b8063bcf225e6146102ce578063c34c08e5146102f257600080fd5b80637aacd8f8146102345780638199c105146102615780638da5cb5b14610281578063ab8236f3146102ae57600080fd5b80633184cc22116100e15780633184cc22146101cc5780634f91bc2b146101ec57806351b78b47146101ff5780637200b8291461021f57600080fd5b80630517cb761461011e5780631c3c0ea81461017557806323452b9c146101975780632e144579146101ac57600080fd5b3661011957005b600080fd5b34801561012a57600080fd5b5060025461014b9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561018157600080fd5b50610195610190366004611d1d565b61038c565b005b3480156101a357600080fd5b5061019561044c565b3480156101b857600080fd5b506101956101c7366004611d41565b610516565b3480156101d857600080fd5b506101956101e7366004611d82565b610648565b6101956101fa366004611f1b565b6106cc565b34801561020b57600080fd5b5061019561021a366004611d1d565b610838565b34801561022b57600080fd5b506101956108f8565b34801561024057600080fd5b5060055461014b9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561026d57600080fd5b5061019561027c366004611d1d565b6109de565b34801561028d57600080fd5b5060005461014b9073ffffffffffffffffffffffffffffffffffffffff1681565b3480156102ba57600080fd5b506101956102c93660046120ad565b610a9e565b3480156102da57600080fd5b506102e460045481565b60405190815260200161016c565b3480156102fe57600080fd5b5060035461014b9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561032b57600080fd5b5060015461014b9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561035857600080fd5b50610195610367366004611d1d565b610bad565b34801561037857600080fd5b50610195610387366004612151565b610d0b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103dd576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f3e3c5e6d5b512eaa5d5a80669846cfbaf8bde70fc6f7a3be9828cffc9ba5f1db90600090a250565b60005473ffffffffffffffffffffffffffffffffffffffff16331461049d576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015473ffffffffffffffffffffffffffffffffffffffff166104ec576040517f75cdea1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610567576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff83166106225760008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146105dc576040519150601f19603f3d011682016040523d82523d6000602084013e6105e1565b606091505b505090508061061c576040517f350c20f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b61064373ffffffffffffffffffffffffffffffffffffffff84168383610e13565b505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610699576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600481905560405181907ffd178559652d65eca585044f34f8688859896a9bebaa7530dbe97c5c527320d590600090a250565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610747576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815573ffffffffffffffffffffffffffffffffffffffff831661077a5761077585858585346000610ee7565b61082e565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815233600482015230602482015260009073ffffffffffffffffffffffffffffffffffffffff85169063dd62ed3e90604401602060405180830381865afa1580156107ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081191906121d4565b905061081d8482611362565b61082c86868686856000610ee7565b505b6000905550505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610889576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f806d08432293677cc7e3e0f9443dcf0459f82567573d5094da6e9e6129dea4ab90600090a250565b60015473ffffffffffffffffffffffffffffffffffffffff1633811461094a576040517f1853971c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a2f576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fcc6aaf791b8b7c6167981db821320441082903e27343e380dca76afd5807577d90600090a250565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610b19576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815560025473ffffffffffffffffffffffffffffffffffffffff163314610b6e576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600084806020019051810190610b8791906123b3565b93505092509250610b9d838389848a6001610ee7565b5050600090915550505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610bfe576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116610c4b576040517f1beca37400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff821603610c9a576040517fbf1ea9fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127890600090a350565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610d86576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815560055473ffffffffffffffffffffffffffffffffffffffff163314610ddb576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008083806020019051810190610df29190612420565b91509150610e05898389848c6000610ee7565b505060009055505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526106439084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526114dd565b600081610ef5576000610ef9565b6004545b905073ffffffffffffffffffffffffffffffffffffffff85166111ac57818015610f225750805a105b156110285760008473ffffffffffffffffffffffffffffffffffffffff168460405160006040518083038185875af1925050503d8060008114610f81576040519150601f19603f3d011682016040523d82523d6000602084013e610f86565b606091505b5050905080610fc1576040517f350c20f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805173ffffffffffffffffffffffffffffffffffffffff80891682528716602082015290810185905242606082015288907f1fbfa988fd46deed0de12c94c7b5dcb537d51b804246d0083f245f7a8997d1709060800160405180910390a2505061135a565b60035473ffffffffffffffffffffffffffffffffffffffff16634f91bc2b84835a61105391906124a1565b908a8a8a8a6040518763ffffffff1660e01b81526004016110779493929190612504565b6000604051808303818589803b15801561109057600080fd5b5088f194505050505080156110a3575060015b6111a75760008473ffffffffffffffffffffffffffffffffffffffff168460405160006040518083038185875af1925050503d8060008114611101576040519150601f19603f3d011682016040523d82523d6000602084013e611106565b606091505b5050905080611141576040517f350c20f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805173ffffffffffffffffffffffffffffffffffffffff80891682528716602082015290810185905242606082015288907f1fbfa988fd46deed0de12c94c7b5dcb537d51b804246d0083f245f7a8997d1709060800160405180910390a250611358565b611358565b60035485906111d69073ffffffffffffffffffffffffffffffffffffffff808416911660006115e9565b8280156111e25750815a105b1561120857610fc173ffffffffffffffffffffffffffffffffffffffff82168686610e13565b60035461122f9073ffffffffffffffffffffffffffffffffffffffff83811691168661176b565b60035473ffffffffffffffffffffffffffffffffffffffff16634f91bc2b835a61125991906124a1565b8a8a8a8a6040518663ffffffff1660e01b815260040161127c9493929190612504565b600060405180830381600088803b15801561129657600080fd5b5087f1935050505080156112a8575060015b61132e576112cd73ffffffffffffffffffffffffffffffffffffffff82168686610e13565b6040805173ffffffffffffffffffffffffffffffffffffffff80891682528716602082015290810185905242606082015288907f1fbfa988fd46deed0de12c94c7b5dcb537d51b804246d0083f245f7a8997d1709060800160405180910390a25b6003546113569073ffffffffffffffffffffffffffffffffffffffff838116911660006115e9565b505b505b505050505050565b8060000361139c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166113f557803410156113f1576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015611462573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148691906121d4565b9050818110156114d1576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b61064383333085611869565b600061153f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611a7b9092919063ffffffff16565b805190915015610643578080602001905181019061155d919061263f565b610643576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016114c8565b80158061168957506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611663573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168791906121d4565b155b611715576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016114c8565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526106439084907f095ea7b30000000000000000000000000000000000000000000000000000000090606401610e65565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156117e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180691906121d4565b611810919061265c565b60405173ffffffffffffffffffffffffffffffffffffffff851660248201526044810182905290915061061c9085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401610e65565b73ffffffffffffffffffffffffffffffffffffffff84166118b6576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611903576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015611974573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199891906121d4565b90506119a682868686611a92565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3a91906121d4565b611a4491906124a1565b1461135a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060611a8a8484600085611af0565b949350505050565b60405173ffffffffffffffffffffffffffffffffffffffff8085166024830152831660448201526064810182905261061c9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401610e65565b606082471015611b82576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016114c8565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611bab919061266f565b60006040518083038185875af1925050503d8060008114611be8576040519150601f19603f3d011682016040523d82523d6000602084013e611bed565b606091505b5091509150611bfe87838387611c09565b979650505050505050565b60608315611c9f578251600003611c985773ffffffffffffffffffffffffffffffffffffffff85163b611c98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016114c8565b5081611a8a565b611a8a8383815115611cb45781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c8919061268b565b73ffffffffffffffffffffffffffffffffffffffff81168114611d0a57600080fd5b50565b8035611d1881611ce8565b919050565b600060208284031215611d2f57600080fd5b8135611d3a81611ce8565b9392505050565b600080600060608486031215611d5657600080fd5b8335611d6181611ce8565b92506020840135611d7181611ce8565b929592945050506040919091013590565b600060208284031215611d9457600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715611ded57611ded611d9b565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611e3a57611e3a611d9b565b604052919050565b600067ffffffffffffffff821115611e5c57611e5c611d9b565b5060051b60200190565b600067ffffffffffffffff821115611e8057611e80611d9b565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112611ebd57600080fd5b8135611ed0611ecb82611e66565b611df3565b818152846020838601011115611ee557600080fd5b816020850160208301376000918101602001919091529392505050565b8015158114611d0a57600080fd5b8035611d1881611f02565b60008060008060808587031215611f3157600080fd5b84359350602085013567ffffffffffffffff80821115611f5057600080fd5b818701915087601f830112611f6457600080fd5b8135611f72611ecb82611e42565b8082825260208201915060208360051b86010192508a831115611f9457600080fd5b602085015b8381101561207f578481351115611faf57600080fd5b8035860160e07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828f03011215611fe557600080fd5b611fed611dca565b611ff960208301611d0d565b815261200760408301611d0d565b602082015261201860608301611d0d565b604082015261202960808301611d0d565b606082015260a0820135608082015260c08201358781111561204a57600080fd5b6120598f602083860101611eac565b60a08301525061206b60e08301611f10565b60c082015284525060209283019201611f99565b50809750505050505061209460408601611d0d565b91506120a260608601611d0d565b905092959194509250565b60008060008060008060c087890312156120c657600080fd5b863561ffff811681146120d857600080fd5b9550602087013567ffffffffffffffff808211156120f557600080fd5b6121018a838b01611eac565b9650604089013595506060890135915061211a82611ce8565b9093506080880135925060a0880135908082111561213757600080fd5b5061214489828a01611eac565b9150509295509295509295565b60008060008060008060c0878903121561216a57600080fd5b8635955060208701359450604087013561218381611ce8565b9350606087013561219381611ce8565b9250608087013563ffffffff811681146121ac57600080fd5b915060a087013567ffffffffffffffff8111156121c857600080fd5b61214489828a01611eac565b6000602082840312156121e657600080fd5b5051919050565b8051611d1881611ce8565b60005b838110156122135781810151838201526020016121fb565b50506000910152565b600082601f83011261222d57600080fd5b815161223b611ecb82611e66565b81815284602083860101111561225057600080fd5b611a8a8260208301602087016121f8565b8051611d1881611f02565b600082601f83011261227d57600080fd5b8151602061228d611ecb83611e42565b82815260059290921b840181019181810190868411156122ac57600080fd5b8286015b848110156123a857805167ffffffffffffffff808211156122d15760008081fd5b818901915060e0807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848d0301121561230a5760008081fd5b612312611dca565b61231d8885016121ed565b8152604061232c8186016121ed565b89830152606061233d8187016121ed565b82840152608091506123508287016121ed565b818401525060a0808601518284015260c0915081860151858111156123755760008081fd5b6123838f8c838a010161221c565b828501525050612394838601612261565b9082015286525050509183019183016122b0565b509695505050505050565b600080600080608085870312156123c957600080fd5b84519350602085015167ffffffffffffffff8111156123e757600080fd5b6123f38782880161226c565b935050604085015161240481611ce8565b606086015190925061241581611ce8565b939692955090935050565b6000806040838503121561243357600080fd5b825167ffffffffffffffff81111561244a57600080fd5b6124568582860161226c565b925050602083015161246781611ce8565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156124b4576124b4612472565b92915050565b600081518084526124d28160208601602086016121f8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600060808083018784526020828186015281885180845260a093508387019150838160051b880101838b0160005b838110156125ef577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608a84030185528151805173ffffffffffffffffffffffffffffffffffffffff9081168552878201518116888601526040808301518216908601526060808301519091169085015288810151898501528781015160e0898601819052906125c3828701826124ba565b91505060c08083015192506125db8187018415159052565b509587019593505090850190600101612532565b505073ffffffffffffffffffffffffffffffffffffffff8a166040890152955061261a945050505050565b73ffffffffffffffffffffffffffffffffffffffff8316606083015295945050505050565b60006020828403121561265157600080fd5b8151611d3a81611f02565b808201808211156124b4576124b4612472565b600082516126818184602087016121f8565b9190910192915050565b602081526000611d3a60208301846124ba56fea2646970667358221220d11ecacfbe5403e141d8dadf90c47ebdebd85258779a228a5e209e3cfa2ab4e064736f6c63430008110033";

type ReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Receiver__factory extends ContractFactory {
  constructor(...args: ReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _sgRouter: PromiseOrValue<string>,
    _amarokRouter: PromiseOrValue<string>,
    _executor: PromiseOrValue<string>,
    _recoverGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Receiver> {
    return super.deploy(
      _owner,
      _sgRouter,
      _amarokRouter,
      _executor,
      _recoverGas,
      overrides || {}
    ) as Promise<Receiver>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _sgRouter: PromiseOrValue<string>,
    _amarokRouter: PromiseOrValue<string>,
    _executor: PromiseOrValue<string>,
    _recoverGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _sgRouter,
      _amarokRouter,
      _executor,
      _recoverGas,
      overrides || {}
    );
  }
  override attach(address: string): Receiver {
    return super.attach(address) as Receiver;
  }
  override connect(signer: Signer): Receiver__factory {
    return super.connect(signer) as Receiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReceiverInterface {
    return new utils.Interface(_abi) as ReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Receiver {
    return new Contract(address, _abi, signerOrProvider) as Receiver;
  }
}
