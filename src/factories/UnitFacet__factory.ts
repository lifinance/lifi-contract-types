/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { UnitFacet, UnitFacetInterface } from "../UnitFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_backendSigner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaUnit",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_unitData",
        type: "tuple",
        internalType: "struct UnitFacet.UnitData",
        components: [
          {
            name: "depositAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaUnit",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_unitData",
        type: "tuple",
        internalType: "struct UnitFacet.UnitData",
        components: [
          {
            name: "depositAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChainBytes32",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidConfig",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidDestinationChain",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSendingToken",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSignature",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
  {
    type: "error",
    name: "SignatureExpired",
    inputs: [],
  },
  {
    type: "error",
    name: "TransactionAlreadyProcessed",
    inputs: [],
  },
  {
    type: "error",
    name: "UnsupportedChain",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620021ef380380620021ef83398101604081905262000034916200006e565b6001600160a01b0381166200005c576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b0316608052620000a0565b6000602082840312156200008157600080fd5b81516001600160a01b03811681146200009957600080fd5b9392505050565b608051612133620000bc60003960006108a601526121336000f3fe6080604052600436106100295760003560e01c806321a3af521461002e57806364261d5814610043575b600080fd5b61004161003c366004611c38565b610056565b005b610041610051366004611cf7565b610331565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e23447611d8a565b905086806101000151610121576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561015f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886101828160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101b9576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101f7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610234576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808a01518a9060009073ffffffffffffffffffffffffffffffffffffffff161561028b576040517f7d6f201300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b610539808260e00151146102cc576040517fb86ac1ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102d68e8c6105fe565b6102eb8e600001518f60c001518f8f33610930565b60c08f01526102fa8e8c610a77565b505050505050506000479050818111156103235761032360008461031e8585611d8a565b610c65565b505060009091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016103ac576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006103bd3447611d8a565b9050846103e28160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610419576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610457576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610494576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156104d2576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610510576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080880151889060009073ffffffffffffffffffffffffffffffffffffffff1615610567576040517f7d6f201300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b89610539808260e00151146105a8576040517fb86ac1ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105b28c8c6105fe565b6105c48c608001518d60c00151610c9a565b6105ce8c8c610a77565b505050505050506000479050818111156105f2576105f260008461031e8585611d8a565b50506000909155505050565b806040013542111561063c576040517f0819bdcd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815160c083015160a08401516000927fe40c93b75fa097357b7b866c9d28e3dba6e987fba2808befeaafebac93b94cba92909161067c6020870187611d9d565b60e0808901516080808b015160408051602081019a909a5289810198909852606089019690965273ffffffffffffffffffffffffffffffffffffffff9485169088015291831660a087015260c08601919091529116908301528301356101008201526101200160405160208183030381529060405280519060200120905060006107ff604080518082018252601081527f4c492e464920556e69742046616365740000000000000000000000000000000060209182015281518083018352600181527f31000000000000000000000000000000000000000000000000000000000000009082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527ff0a02c1921521518850ca78482536905d1a21c781491272fbe7c7d3021953493818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b6040517f1901000000000000000000000000000000000000000000000000000000000000602082015260228101919091526042810183905260620160405160208183030381529060405280519060200120905060006108a2828580602001906108689190611dbf565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d4f92505050565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610929576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b60008280820361096c576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000858561097b600185611d8a565b81811061098a5761098a611e2b565b905060200281019061099c9190611e5a565b6109ad906080810190606001611d9d565b905060006109ba82610df9565b905073ffffffffffffffffffffffffffffffffffffffff82166109e4576109e13482611d8a565b90505b60006109f08888610e44565b90506109fc8888610f58565b610a098a89898985610fc5565b600082610a1585610df9565b610a1f9190611d8a565b905089811015610a69576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b815160009081527ff784c57ea699075f7cf9159bcfe61b2ecdc5f01960f4d7812ed1d1a4079270ee602081905260409091205460ff1615610ae4576040517feb4156ad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8251600090815260208290526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4601610b8e5766b1a2bc2ec500008360c001511015610b89576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c0f565b6126114603610bdd5767d02ab486cedc00008360c001511015610b89576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fd21eab3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c29610c1f6020840184611d9d565b8460c00151611194565b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f183604051610c589190611efc565b60405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff8316610c8f57610c8a8282611194565b505050565b610c8a838383611201565b80600003610cd4576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610d2d5780341015610d29576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610d2973ffffffffffffffffffffffffffffffffffffffff831633308461126f565b6040516001908360005260208301516040526040835103610da457604083015160ff81901c601b016020527f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16606052610dca565b6041835103610dc557606083015160001a6020526040830151606052610dca565b600091505b6020600160806000855afa5191503d610deb57638baa579f6000526004601cfd5b600060605260405292915050565b600073ffffffffffffffffffffffffffffffffffffffff821615610e3c57610e3773ffffffffffffffffffffffffffffffffffffffff8316306112cc565b610e3e565b475b92915050565b60608160008167ffffffffffffffff811115610e6257610e626119fe565b604051908082528060200260200182016040528015610e8b578160200160208202803683370190505b5090506000805b83811015610f4d57868682818110610eac57610eac611e2b565b9050602002810190610ebe9190611e5a565b610ecf906080810190606001611d9d565b9150610eda82610df9565b838281518110610eec57610eec611e2b565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610f3d5734838281518110610f2557610f25611e2b565b60200260200101818151610f399190611d8a565b9052505b610f468161200f565b9050610e92565b509095945050505050565b60005b81811015610c8a5736838383818110610f7657610f76611e2b565b9050602002810190610f889190611e5a565b9050610f9a60e0820160c08301612047565b15610fbc57610fbc610fb26060830160408401611d9d565b8260800135610c9a565b50600101610f5b565b838383838260005b8181101561117957368a8a83818110610fe857610fe8611e2b565b9050602002810190610ffa9190611e5a565b905061102961100f6060830160408401611d9d565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061108c575061108c6110426040830160208401611d9d565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156110a357506110a36110426020830183611d9d565b801561112857506111286110ba60a0830183611dbf565b6110c991600491600091612062565b6110d29161208c565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61115e576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111688c82611301565b506111728161200f565b9050610fcd565b505061118984848484600061157e565b505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff82166111e1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d2973ffffffffffffffffffffffffffffffffffffffff8316826117a4565b73ffffffffffffffffffffffffffffffffffffffff821661124e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c8a73ffffffffffffffffffffffffffffffffffffffff841683836117c0565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d1560016000511417166112be57637939f4246000526004601cfd5b600060605260405250505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b6113196113116020830183611d9d565b6017903b1190565b61134f576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080810135600081900361138f576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006113a461100f6060850160408601611d9d565b6113af5760006113b5565b82608001355b905060006113d16113cc6080860160608701611d9d565b610df9565b905081600003611408576114086113ee6060860160408701611d9d565b6113fe6040870160208801611d9d565b866080013561180f565b6000806114186020870187611d9d565b73ffffffffffffffffffffffffffffffffffffffff168461143c60a0890189611dbf565b60405161144a9291906120d4565b60006040518083038185875af1925050503d8060008114611487576040519150601f19603f3d011682016040523d82523d6000602084013e61148c565b606091505b50915091508161149f5761149f8161183b565b60006114b46113cc6080890160608a01611d9d565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38886114e560208a018a611d9d565b6114f560608b0160408c01611d9d565b61150560808c0160608d01611d9d565b8b608001358987116115175786611521565b6115218a88611d8a565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b836000868261158e600182611d8a565b81811061159d5761159d611e2b565b90506020028101906115af9190611e5a565b6115c0906080810190606001611d9d565b905060008060008060008060005b88811015611794576115e160018a611d8a565b811080156115f0575088600114155b156116cc578d8d8281811061160757611607611e2b565b90506020028101906116199190611e5a565b61162a906080810190606001611d9d565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146116cc578a818151811061167157611671611e2b565b602002602001015161168287610df9565b61168c9190611d8a565b965073ffffffffffffffffffffffffffffffffffffffff8616156116b15760006116b3565b895b9350838711156116cc576116cc868d61031e878b611d8a565b8d8d828181106116de576116de611e2b565b90506020028101906116f09190611e5a565b611701906060810190604001611d9d565b945061170c85610df9565b925073ffffffffffffffffffffffffffffffffffffffff851615611731576000611733565b895b9150818311801561177057508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b1561178457611784858d61031e8587611d8a565b61178d8161200f565b90506115ce565b5050505050505050505050505050565b60003860003884865af1610d295763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d156001600051141716611805576390b8ec186000526004601cfd5b6000603452505050565b610c8a8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611845565b8051602082018181fd5b73ffffffffffffffffffffffffffffffffffffffff84161561196e5773ffffffffffffffffffffffffffffffffffffffff83166118ae576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611923573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194791906120e4565b101561196e5761196e73ffffffffffffffffffffffffffffffffffffffff85168483611974565b50505050565b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d1560016000511417166118055760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d15600160005114171661180557633e3f8f736000526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611a5157611a516119fe565b60405290565b600082601f830112611a6857600080fd5b813567ffffffffffffffff80821115611a8357611a836119fe565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611ac957611ac96119fe565b81604052838152866020858801011115611ae257600080fd5b836020870160208301376000602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611b2657600080fd5b919050565b80358015158114611b2657600080fd5b60006101408284031215611b4e57600080fd5b611b56611a2d565b905081358152602082013567ffffffffffffffff80821115611b7757600080fd5b611b8385838601611a57565b60208401526040840135915080821115611b9c57600080fd5b50611ba984828501611a57565b604083015250611bbb60608301611b02565b6060820152611bcc60808301611b02565b6080820152611bdd60a08301611b02565b60a082015260c082013560c082015260e082013560e0820152610100611c04818401611b2b565b90820152610120611c16838201611b2b565b9082015292915050565b600060608284031215611c3257600080fd5b50919050565b60008060008060608587031215611c4e57600080fd5b843567ffffffffffffffff80821115611c6657600080fd5b611c7288838901611b3b565b95506020870135915080821115611c8857600080fd5b818701915087601f830112611c9c57600080fd5b813581811115611cab57600080fd5b8860208260051b8501011115611cc057600080fd5b602083019550809450506040870135915080821115611cde57600080fd5b50611ceb87828801611c20565b91505092959194509250565b60008060408385031215611d0a57600080fd5b823567ffffffffffffffff80821115611d2257600080fd5b611d2e86838701611b3b565b93506020850135915080821115611d4457600080fd5b50611d5185828601611c20565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610e3e57610e3e611d5b565b600060208284031215611daf57600080fd5b611db882611b02565b9392505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611df457600080fd5b83018035915067ffffffffffffffff821115611e0f57600080fd5b602001915036819003821315611e2457600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611e8e57600080fd5b9190910192915050565b6000815180845260005b81811015611ebe57602081850181015186830182015201611ea2565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081528151602082015260006020830151610140806040850152611f25610160850183611e98565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152611f608382611e98565b9250506060850151611f8a608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120611ffd8187018315159052565b90950151151593019290925250919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361204057612040611d5b565b5060010190565b60006020828403121561205957600080fd5b611db882611b2b565b6000808585111561207257600080fd5b8386111561207f57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156120cc5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b6000602082840312156120f657600080fd5b505191905056fea2646970667358221220e74e47d2e9258d20c2b4a6ff8f16a0e3073eecfe02dd6a7937c5039b540478f564736f6c63430008110033";

type UnitFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnitFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UnitFacet__factory extends ContractFactory {
  constructor(...args: UnitFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _backendSigner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UnitFacet> {
    return super.deploy(_backendSigner, overrides || {}) as Promise<UnitFacet>;
  }
  override getDeployTransaction(
    _backendSigner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_backendSigner, overrides || {});
  }
  override attach(address: string): UnitFacet {
    return super.attach(address) as UnitFacet;
  }
  override connect(signer: Signer): UnitFacet__factory {
    return super.connect(signer) as UnitFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnitFacetInterface {
    return new utils.Interface(_abi) as UnitFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnitFacet {
    return new Contract(address, _abi, signerOrProvider) as UnitFacet;
  }
}
