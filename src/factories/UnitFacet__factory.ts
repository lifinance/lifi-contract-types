/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { UnitFacet, UnitFacetInterface } from "../UnitFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_backendSigner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaUnit",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_unitData",
        type: "tuple",
        internalType: "struct UnitFacet.UnitData",
        components: [
          {
            name: "depositAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaUnit",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_unitData",
        type: "tuple",
        internalType: "struct UnitFacet.UnitData",
        components: [
          {
            name: "depositAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChainBytes32",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidDestinationChain",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidQuote",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSendingToken",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c060405234801561000f575f5ffd5b50604051611be7380380611be783398101604081905261002e916100e1565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527ff0a02c1921521518850ca78482536905d1a21c781491272fbe7c7d3021953493918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f1981840301815291905280516020909101206080526001600160a01b031660a05261010e565b5f602082840312156100f1575f5ffd5b81516001600160a01b0381168114610107575f5ffd5b9392505050565b60805160a051611abe6101295f395f50505f5050611abe5ff3fe608060405260043610610028575f3560e01c80636034c95b1461002c5780639d849e5614610041575b5f5ffd5b61003f61003a366004611609565b610054565b005b61003f61004f36600461166e565b6102e4565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100cf576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6100df3447611734565b9050846101048160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561013b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610178576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101b5576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156101f3576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610231576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608088015188908960e001516103e714158061025257508960e00151600114155b8061026357508960e0015161261114155b1561029a576040517fb86ac1ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102ac8a608001518b60c0015161055a565b6102b68a8a61060e565b50479350505050818111156102d9576102d95f846102d48585611734565b6106a8565b50505f909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161035f576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f61036f3447611734565b9050868061010001516103ae576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101200151156103ec576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8861040f8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610446576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610483576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104c0576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808a01518a908b6103e7808260e0015114610508576040517fb86ac1ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61051c8e5f01518f60c001518f8f336106dd565b60c08f015261052b8e8c61060e565b505050505050505f4790508181111561054d5761054d5f846102d48585611734565b50505f9091555050505050565b805f03610593576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166105ec57803410156105e8576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6105e873ffffffffffffffffffffffffffffffffffffffff831633308461081f565b66b1a2bc2ec500008260c001511015610653576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61066d610663602083018361176c565b8360c00151610877565b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161069c91906117d8565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff83166106d2576106cd8282610877565b505050565b6106cd8383836108e4565b5f82808203610718576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8585610726600185611734565b818110610735576107356118eb565b90506020028101906107479190611918565b61075890608081019060600161176c565b90505f61076482610952565b905073ffffffffffffffffffffffffffffffffffffffff821661078e5761078b3482611734565b90505b5f610799888861099c565b90506107a58888610aa6565b6107b28a89898985610b12565b5f826107bd85610952565b6107c79190611734565b905089811015610811576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f5114171661086a57637939f4245f526004601cfd5b5f60605260405250505050565b73ffffffffffffffffffffffffffffffffffffffff82166108c4576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105e873ffffffffffffffffffffffffffffffffffffffff831682610cd4565b73ffffffffffffffffffffffffffffffffffffffff8216610931576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106cd73ffffffffffffffffffffffffffffffffffffffff84168383610ced565b5f73ffffffffffffffffffffffffffffffffffffffff8216156109945761098f73ffffffffffffffffffffffffffffffffffffffff831630610d36565b610996565b475b92915050565b6060815f8167ffffffffffffffff8111156109b9576109b96113d4565b6040519080825280602002602001820160405280156109e2578160200160208202803683370190505b5090505f5f5b83811015610a9b57868682818110610a0257610a026118eb565b9050602002810190610a149190611918565b610a2590608081019060600161176c565b9150610a3082610952565b838281518110610a4257610a426118eb565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610a935734838281518110610a7b57610a7b6118eb565b60200260200101818151610a8f9190611734565b9052505b6001016109e8565b509095945050505050565b5f5b818110156106cd5736838383818110610ac357610ac36118eb565b9050602002810190610ad59190611918565b9050610ae760e0820160c08301611954565b15610b0957610b09610aff606083016040840161176c565b826080013561055a565b50600101610aa8565b83838383825f5b81811015610cba57368a8a83818110610b3457610b346118eb565b9050602002810190610b469190611918565b9050610b75610b5b606083016040840161176c565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610bd75750610bd7610b8e604083016020840161176c565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610bee5750610bee610b8e602083018361176c565b8015610c715750610c71610c0560a083018361196d565b610c13916004915f916119d5565b610c1c916119fc565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610ca7576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cb18c82610d69565b50600101610b19565b5050610cc9848484845f610fdc565b505050505050505050565b5f385f3884865af16105e85763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716610d2d576390b8ec185f526004601cfd5b5f603452505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b610d81610d79602083018361176c565b6017903b1190565b610db7576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003610df6576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610e0a610b5b606085016040860161176c565b610e14575f610e1a565b82608001355b90505f610e35610e30608086016060870161176c565b610952565b9050815f03610e6b57610e6b610e51606086016040870161176c565b610e61604087016020880161176c565b86608001356111f3565b5f80610e7a602087018761176c565b73ffffffffffffffffffffffffffffffffffffffff1684610e9e60a089018961196d565b604051610eac929190611a62565b5f6040518083038185875af1925050503d805f8114610ee6576040519150601f19603f3d011682016040523d82523d5f602084013e610eeb565b606091505b509150915081610efe57610efe8161121f565b5f610f12610e306080890160608a0161176c565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3888610f4360208a018a61176c565b610f5360608b0160408c0161176c565b610f6360808c0160608d0161176c565b8b60800135898711610f755786610f7f565b610f7f8a88611734565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f8682610feb600182611734565b818110610ffa57610ffa6118eb565b905060200281019061100c9190611918565b61101d90608081019060600161176c565b90505f5f5f5f5f5f5f5b888110156111e35761103a60018a611734565b81108015611049575088600114155b15611124578d8d82818110611060576110606118eb565b90506020028101906110729190611918565b61108390608081019060600161176c565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611124578a81815181106110ca576110ca6118eb565b60200260200101516110db87610952565b6110e59190611734565b965073ffffffffffffffffffffffffffffffffffffffff861615611109575f61110b565b895b93508387111561112457611124868d6102d4878b611734565b8d8d82818110611136576111366118eb565b90506020028101906111489190611918565b61115990606081019060400161176c565b945061116485610952565b925073ffffffffffffffffffffffffffffffffffffffff851615611188575f61118a565b895b915081831180156111c757508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b156111db576111db858d6102d48587611734565b600101611027565b5050505050505050505050505050565b6106cd8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611229565b8051602082018181fd5b73ffffffffffffffffffffffffffffffffffffffff8416156113505773ffffffffffffffffffffffffffffffffffffffff8316611292576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611305573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113299190611a71565b10156113505761135073ffffffffffffffffffffffffffffffffffffffff85168483611356565b50505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716610d2d575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f51141716610d2d57633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff81118282101715611425576114256113d4565b60405290565b5f82601f83011261143a575f5ffd5b813567ffffffffffffffff811115611454576114546113d4565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff811182821017156114a1576114a16113d4565b6040528181528382016020018510156114b8575f5ffd5b816020850160208301375f918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146114f7575f5ffd5b919050565b803580151581146114f7575f5ffd5b5f610140828403121561151c575f5ffd5b611524611401565b823581529050602082013567ffffffffffffffff811115611543575f5ffd5b61154f8482850161142b565b602083015250604082013567ffffffffffffffff81111561156e575f5ffd5b61157a8482850161142b565b60408301525061158c606083016114d4565b606082015261159d608083016114d4565b60808201526115ae60a083016114d4565b60a082015260c0828101359082015260e080830135908201526115d461010083016114fc565b6101008201526115e761012083016114fc565b61012082015292915050565b5f60408284031215611603575f5ffd5b50919050565b5f5f6040838503121561161a575f5ffd5b823567ffffffffffffffff811115611630575f5ffd5b61163c8582860161150b565b925050602083013567ffffffffffffffff811115611658575f5ffd5b611664858286016115f3565b9150509250929050565b5f5f5f5f60608587031215611681575f5ffd5b843567ffffffffffffffff811115611697575f5ffd5b6116a38782880161150b565b945050602085013567ffffffffffffffff8111156116bf575f5ffd5b8501601f810187136116cf575f5ffd5b803567ffffffffffffffff8111156116e5575f5ffd5b8760208260051b84010111156116f9575f5ffd5b60209190910193509150604085013567ffffffffffffffff81111561171c575f5ffd5b611728878288016115f3565b91505092959194509250565b81810381811115610996577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6020828403121561177c575f5ffd5b611785826114d4565b9392505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f602083015161014060408401526117ff61016084018261178c565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084830301606085015261183a828261178c565b9150506060840151611864608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e08401516101008401526101008401516118d361012085018215159052565b50610120840151801515610140850152509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261194a575f5ffd5b9190910192915050565b5f60208284031215611964575f5ffd5b611785826114fc565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126119a0575f5ffd5b83018035915067ffffffffffffffff8211156119ba575f5ffd5b6020019150368190038213156119ce575f5ffd5b9250929050565b5f5f858511156119e3575f5ffd5b838611156119ef575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015611a5b577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b5f60208284031215611a81575f5ffd5b505191905056fea264697066735822122016c3b62df581c55f41012caf327e049370cb14bc2d974f070bd4ce726b11644964736f6c634300081d0033";

type UnitFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnitFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UnitFacet__factory extends ContractFactory {
  constructor(...args: UnitFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _backendSigner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UnitFacet> {
    return super.deploy(_backendSigner, overrides || {}) as Promise<UnitFacet>;
  }
  override getDeployTransaction(
    _backendSigner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_backendSigner, overrides || {});
  }
  override attach(address: string): UnitFacet {
    return super.attach(address) as UnitFacet;
  }
  override connect(signer: Signer): UnitFacet__factory {
    return super.connect(signer) as UnitFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnitFacetInterface {
    return new utils.Interface(_abi) as UnitFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnitFacet {
    return new Contract(address, _abi, signerOrProvider) as UnitFacet;
  }
}
