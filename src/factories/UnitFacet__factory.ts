/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { UnitFacet, UnitFacetInterface } from "../UnitFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_backendSigner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaUnit",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_unitData",
        type: "tuple",
        internalType: "struct UnitFacet.UnitData",
        components: [
          {
            name: "depositAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaUnit",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_unitData",
        type: "tuple",
        internalType: "struct UnitFacet.UnitData",
        components: [
          {
            name: "depositAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChainBytes32",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidDestinationChain",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSendingToken",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSignature",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a0604052348015600e575f5ffd5b50604051611fc1380380611fc1833981016040819052602b91603b565b6001600160a01b03166080526066565b5f60208284031215604a575f5ffd5b81516001600160a01b0381168114605f575f5ffd5b9392505050565b608051611f4361007e5f395f6109ad0152611f435ff3fe608060405260043610610028575f3560e01c80636034c95b1461002c5780639d849e5614610041575b5f5ffd5b61003f61003a366004611a8e565b610054565b005b61003f61004f366004611af3565b6102c7565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100cf576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6100df3447611bb9565b9050846101048160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561013b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610178576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101b5576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156101f3576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610231576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808801518890896103e7808260e0015114610279576040517fb86ac1ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61028b8c608001518d60c0015161053d565b6102958c8c6105f1565b505050505050505f479050818111156102bc576102bc5f846102b78585611bb9565b610a89565b50505f909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610342576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6103523447611bb9565b905086806101000151610391576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101200151156103cf576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886103f28160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610429576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610466576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104a3576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808a01518a908b6103e7808260e00151146104eb576040517fb86ac1ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104ff8e5f01518f60c001518f8f33610abe565b60c08f015261050e8e8c6105f1565b505050505050505f47905081811115610530576105305f846102b78585611bb9565b50505f9091555050505050565b805f03610576576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166105cf57803410156105cb576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6105cb73ffffffffffffffffffffffffffffffffffffffff8316333084610c00565b466001036106435766b1a2bc2ec500008260c00151101561063e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610692565b46612611036106925767d02ab486cedc00008260c001511015610692576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61069f6020820182611bf1565b73ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff1614610707576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051608081019091525f90806107226020850185611bf1565b73ffffffffffffffffffffffffffffffffffffffff1681526020014681526020018460e001518152602001846080015173ffffffffffffffffffffffffffffffffffffffff1681525090505f7fa16cbca8b31407a5924d59ae6804250b7502de409873d1cb0c0fd609008b33a25f1b825f01518360200151846040015185606001516040516020016107ec95949392919094855273ffffffffffffffffffffffffffffffffffffffff93841660208601526040850192909252606084015216608082015260a00190565b6040516020818303038152906040528051906020012090505f610908604080518082018252601081527f4c492e464920556e69742046616365740000000000000000000000000000000060209182015281518083018352600181527f31000000000000000000000000000000000000000000000000000000000000009082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527ff0a02c1921521518850ca78482536905d1a21c781491272fbe7c7d3021953493818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201526022810191909152604281018390526062016040516020818303038152906040528051906020012090505f6109a9828680602001906109709190611c11565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610c5892505050565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a30576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a4a610a406020870187611bf1565b8760c00151610cfc565b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f186604051610a799190611cc5565b60405180910390a1505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610ab357610aae8282610cfc565b505050565b610aae838383610d69565b5f82808203610af9576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8585610b07600185611bb9565b818110610b1657610b16611dd8565b9050602002810190610b289190611e05565b610b39906080810190606001611bf1565b90505f610b4582610dd7565b905073ffffffffffffffffffffffffffffffffffffffff8216610b6f57610b6c3482611bb9565b90505b5f610b7a8888610e21565b9050610b868888610f2b565b610b938a89898985610f97565b5f82610b9e85610dd7565b610ba89190611bb9565b905089811015610bf2576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f51141716610c4b57637939f4245f526004601cfd5b5f60605260405250505050565b604051600190835f5260208301516040526040835103610cac57604083015160ff81901c601b016020527f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16606052610cd0565b6041835103610ccc5760608301515f1a6020526040830151606052610cd0565b5f91505b6020600160805f855afa5191503d610cef57638baa579f5f526004601cfd5b5f60605260405292915050565b73ffffffffffffffffffffffffffffffffffffffff8216610d49576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105cb73ffffffffffffffffffffffffffffffffffffffff831682611159565b73ffffffffffffffffffffffffffffffffffffffff8216610db6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610aae73ffffffffffffffffffffffffffffffffffffffff84168383611172565b5f73ffffffffffffffffffffffffffffffffffffffff821615610e1957610e1473ffffffffffffffffffffffffffffffffffffffff8316306111bb565b610e1b565b475b92915050565b6060815f8167ffffffffffffffff811115610e3e57610e3e611859565b604051908082528060200260200182016040528015610e67578160200160208202803683370190505b5090505f5f5b83811015610f2057868682818110610e8757610e87611dd8565b9050602002810190610e999190611e05565b610eaa906080810190606001611bf1565b9150610eb582610dd7565b838281518110610ec757610ec7611dd8565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610f185734838281518110610f0057610f00611dd8565b60200260200101818151610f149190611bb9565b9052505b600101610e6d565b509095945050505050565b5f5b81811015610aae5736838383818110610f4857610f48611dd8565b9050602002810190610f5a9190611e05565b9050610f6c60e0820160c08301611e41565b15610f8e57610f8e610f846060830160408401611bf1565b826080013561053d565b50600101610f2d565b83838383825f5b8181101561113f57368a8a83818110610fb957610fb9611dd8565b9050602002810190610fcb9190611e05565b9050610ffa610fe06060830160408401611bf1565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061105c575061105c6110136040830160208401611bf1565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561107357506110736110136020830183611bf1565b80156110f657506110f661108a60a0830183611c11565b611098916004915f91611e5a565b6110a191611e81565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61112c576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111368c826111ee565b50600101610f9e565b505061114e848484845f611461565b505050505050505050565b5f385f3884865af16105cb5763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166111b2576390b8ec185f526004601cfd5b5f603452505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b6112066111fe6020830183611bf1565b6017903b1190565b61123c576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f81900361127b576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61128f610fe06060850160408601611bf1565b611299575f61129f565b82608001355b90505f6112ba6112b56080860160608701611bf1565b610dd7565b9050815f036112f0576112f06112d66060860160408701611bf1565b6112e66040870160208801611bf1565b8660800135611678565b5f806112ff6020870187611bf1565b73ffffffffffffffffffffffffffffffffffffffff168461132360a0890189611c11565b604051611331929190611ee7565b5f6040518083038185875af1925050503d805f811461136b576040519150601f19603f3d011682016040523d82523d5f602084013e611370565b606091505b50915091508161138357611383816116a4565b5f6113976112b56080890160608a01611bf1565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38886113c860208a018a611bf1565b6113d860608b0160408c01611bf1565b6113e860808c0160608d01611bf1565b8b608001358987116113fa5786611404565b6114048a88611bb9565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f8682611470600182611bb9565b81811061147f5761147f611dd8565b90506020028101906114919190611e05565b6114a2906080810190606001611bf1565b90505f5f5f5f5f5f5f5b88811015611668576114bf60018a611bb9565b811080156114ce575088600114155b156115a9578d8d828181106114e5576114e5611dd8565b90506020028101906114f79190611e05565b611508906080810190606001611bf1565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146115a9578a818151811061154f5761154f611dd8565b602002602001015161156087610dd7565b61156a9190611bb9565b965073ffffffffffffffffffffffffffffffffffffffff86161561158e575f611590565b895b9350838711156115a9576115a9868d6102b7878b611bb9565b8d8d828181106115bb576115bb611dd8565b90506020028101906115cd9190611e05565b6115de906060810190604001611bf1565b94506115e985610dd7565b925073ffffffffffffffffffffffffffffffffffffffff85161561160d575f61160f565b895b9150818311801561164c57508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b1561166057611660858d6102b78587611bb9565b6001016114ac565b5050505050505050505050505050565b610aae8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6116ae565b8051602082018181fd5b73ffffffffffffffffffffffffffffffffffffffff8416156117d55773ffffffffffffffffffffffffffffffffffffffff8316611717576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa15801561178a573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117ae9190611ef6565b10156117d5576117d573ffffffffffffffffffffffffffffffffffffffff851684836117db565b50505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f511417166111b2575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f511417166111b257633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff811182821017156118aa576118aa611859565b60405290565b5f82601f8301126118bf575f5ffd5b813567ffffffffffffffff8111156118d9576118d9611859565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff8111828210171561192657611926611859565b60405281815283820160200185101561193d575f5ffd5b816020850160208301375f918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461197c575f5ffd5b919050565b8035801515811461197c575f5ffd5b5f61014082840312156119a1575f5ffd5b6119a9611886565b823581529050602082013567ffffffffffffffff8111156119c8575f5ffd5b6119d4848285016118b0565b602083015250604082013567ffffffffffffffff8111156119f3575f5ffd5b6119ff848285016118b0565b604083015250611a1160608301611959565b6060820152611a2260808301611959565b6080820152611a3360a08301611959565b60a082015260c0828101359082015260e08083013590820152611a596101008301611981565b610100820152611a6c6101208301611981565b61012082015292915050565b5f60408284031215611a88575f5ffd5b50919050565b5f5f60408385031215611a9f575f5ffd5b823567ffffffffffffffff811115611ab5575f5ffd5b611ac185828601611990565b925050602083013567ffffffffffffffff811115611add575f5ffd5b611ae985828601611a78565b9150509250929050565b5f5f5f5f60608587031215611b06575f5ffd5b843567ffffffffffffffff811115611b1c575f5ffd5b611b2887828801611990565b945050602085013567ffffffffffffffff811115611b44575f5ffd5b8501601f81018713611b54575f5ffd5b803567ffffffffffffffff811115611b6a575f5ffd5b8760208260051b8401011115611b7e575f5ffd5b60209190910193509150604085013567ffffffffffffffff811115611ba1575f5ffd5b611bad87828801611a78565b91505092959194509250565b81810381811115610e1b577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f60208284031215611c01575f5ffd5b611c0a82611959565b9392505050565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611c44575f5ffd5b83018035915067ffffffffffffffff821115611c5e575f5ffd5b602001915036819003821315611c72575f5ffd5b9250929050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f60208301516101406040840152611cec610160840182611c79565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611d278282611c79565b9150506060840151611d51608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e0840151610100840152610100840151611dc061012085018215159052565b50610120840151801515610140850152509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611e37575f5ffd5b9190910192915050565b5f60208284031215611e51575f5ffd5b611c0a82611981565b5f5f85851115611e68575f5ffd5b83861115611e74575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015611ee0577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b5f60208284031215611f06575f5ffd5b505191905056fea264697066735822122001f57ceae956d45d3e3ac91ef325bc77412b3e8fc169772adf6fb6cdc4f05e8864736f6c634300081d0033";

type UnitFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnitFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UnitFacet__factory extends ContractFactory {
  constructor(...args: UnitFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _backendSigner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UnitFacet> {
    return super.deploy(_backendSigner, overrides || {}) as Promise<UnitFacet>;
  }
  override getDeployTransaction(
    _backendSigner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_backendSigner, overrides || {});
  }
  override attach(address: string): UnitFacet {
    return super.attach(address) as UnitFacet;
  }
  override connect(signer: Signer): UnitFacet__factory {
    return super.connect(signer) as UnitFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnitFacetInterface {
    return new utils.Interface(_abi) as UnitFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnitFacet {
    return new Contract(address, _abi, signerOrProvider) as UnitFacet;
  }
}
