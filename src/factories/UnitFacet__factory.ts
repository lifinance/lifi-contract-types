/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { UnitFacet, UnitFacetInterface } from "../UnitFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_backendSigner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaUnit",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_unitData",
        type: "tuple",
        internalType: "struct UnitFacet.UnitData",
        components: [
          {
            name: "depositAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaUnit",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_unitData",
        type: "tuple",
        internalType: "struct UnitFacet.UnitData",
        components: [
          {
            name: "depositAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChainBytes32",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidConfig",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidDestinationChain",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSendingToken",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSignature",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
  {
    type: "error",
    name: "SignatureExpired",
    inputs: [],
  },
  {
    type: "error",
    name: "TransactionAlreadyProcessed",
    inputs: [],
  },
  {
    type: "error",
    name: "UnsupportedChain",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a0604052348015600e575f5ffd5b5060405161211b38038061211b833981016040819052602b916061565b6001600160a01b0381166051576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b0316608052608c565b5f602082840312156070575f5ffd5b81516001600160a01b03811681146085575f5ffd5b9392505050565b6080516120776100a45f395f61089301526120775ff3fe608060405260043610610028575f3560e01c806321a3af521461002c57806364261d5814610041575b5f5ffd5b61003f61003a366004611bc2565b610054565b005b61003f61004f366004611c88565b610328565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100cf576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6100df3447611ced565b90508680610100015161011e576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561015c576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8861017f8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101b6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036101f3576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610230576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808a01518a905f9073ffffffffffffffffffffffffffffffffffffffff1615610286576040517f7d6f201300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b610539808260e00151146102c7576040517fb86ac1ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102d18e8c6105ef565b6102e58e5f01518f60c001518f8f3361091d565b60c08f01526102f48e8c610a5f565b505050505050505f4790508181111561031b5761031b5f846103168585611ced565b610c4b565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016103a3576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6103b33447611ced565b9050846103d88160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561040f576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f0361044c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610489576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156104c7576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610505576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608088015188905f9073ffffffffffffffffffffffffffffffffffffffff161561055b576040517f7d6f201300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b89610539808260e001511461059c576040517fb86ac1ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105a68c8c6105ef565b6105b88c608001518d60c00151610c80565b6105c28c8c610a5f565b505050505050505f479050818111156105e4576105e45f846103168585611ced565b50505f909155505050565b806040013542111561062d576040517f0819bdcd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815160c083015160a08401515f927fe40c93b75fa097357b7b866c9d28e3dba6e987fba2808befeaafebac93b94cba92909161066c6020870187611d25565b60e0808901516080808b015160408051602081019a909a5289810198909852606089019690965273ffffffffffffffffffffffffffffffffffffffff9485169088015291831660a087015260c0860191909152911690830152830135610100820152610120016040516020818303038152906040528051906020012090505f6107ee604080518082018252601081527f4c492e464920556e69742046616365740000000000000000000000000000000060209182015281518083018352600181527f31000000000000000000000000000000000000000000000000000000000000009082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527ff0a02c1921521518850ca78482536905d1a21c781491272fbe7c7d3021953493818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201526022810191909152604281018390526062016040516020818303038152906040528051906020012090505f61088f828580602001906108569190611d45565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610d3492505050565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610916576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b5f82808203610958576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8585610966600185611ced565b81811061097557610975611dad565b90506020028101906109879190611dda565b610998906080810190606001611d25565b90505f6109a482610dd8565b905073ffffffffffffffffffffffffffffffffffffffff82166109ce576109cb3482611ced565b90505b5f6109d98888610e22565b90506109e58888610f2c565b6109f28a89898985610f98565b5f826109fd85610dd8565b610a079190611ced565b905089811015610a51576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b81515f9081527ff784c57ea699075f7cf9159bcfe61b2ecdc5f01960f4d7812ed1d1a4079270ee602081905260409091205460ff1615610acb576040517feb4156ad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82515f90815260208290526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4601610b745766b1a2bc2ec500008360c001511015610b6f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bf5565b6126114603610bc35767d02ab486cedc00008360c001511015610b6f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fd21eab3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c0f610c056020840184611d25565b8460c0015161115a565b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f183604051610c3e9190611e62565b60405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff8316610c7557610c70828261115a565b505050565b610c708383836111c7565b805f03610cb9576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610d125780341015610d0e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610d0e73ffffffffffffffffffffffffffffffffffffffff8316333084611235565b604051600190835f5260208301516040526040835103610d8857604083015160ff81901c601b016020527f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16606052610dac565b6041835103610da85760608301515f1a6020526040830151606052610dac565b5f91505b6020600160805f855afa5191503d610dcb57638baa579f5f526004601cfd5b5f60605260405292915050565b5f73ffffffffffffffffffffffffffffffffffffffff821615610e1a57610e1573ffffffffffffffffffffffffffffffffffffffff83163061128d565b610e1c565b475b92915050565b6060815f8167ffffffffffffffff811115610e3f57610e3f61198d565b604051908082528060200260200182016040528015610e68578160200160208202803683370190505b5090505f5f5b83811015610f2157868682818110610e8857610e88611dad565b9050602002810190610e9a9190611dda565b610eab906080810190606001611d25565b9150610eb682610dd8565b838281518110610ec857610ec8611dad565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610f195734838281518110610f0157610f01611dad565b60200260200101818151610f159190611ced565b9052505b600101610e6e565b509095945050505050565b5f5b81811015610c705736838383818110610f4957610f49611dad565b9050602002810190610f5b9190611dda565b9050610f6d60e0820160c08301611f75565b15610f8f57610f8f610f856060830160408401611d25565b8260800135610c80565b50600101610f2e565b83838383825f5b8181101561114057368a8a83818110610fba57610fba611dad565b9050602002810190610fcc9190611dda565b9050610ffb610fe16060830160408401611d25565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061105d575061105d6110146040830160208401611d25565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561107457506110746110146020830183611d25565b80156110f757506110f761108b60a0830183611d45565b611099916004915f91611f8e565b6110a291611fb5565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61112d576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111378c826112c0565b50600101610f9f565b505061114f848484845f611533565b505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff82166111a7576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d0e73ffffffffffffffffffffffffffffffffffffffff83168261174a565b73ffffffffffffffffffffffffffffffffffffffff8216611214576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c7073ffffffffffffffffffffffffffffffffffffffff84168383611763565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f5114171661128057637939f4245f526004601cfd5b5f60605260405250505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b6112d86112d06020830183611d25565b6017903b1190565b61130e576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f81900361134d576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f611361610fe16060850160408601611d25565b61136b575f611371565b82608001355b90505f61138c6113876080860160608701611d25565b610dd8565b9050815f036113c2576113c26113a86060860160408701611d25565b6113b86040870160208801611d25565b86608001356117ac565b5f806113d16020870187611d25565b73ffffffffffffffffffffffffffffffffffffffff16846113f560a0890189611d45565b60405161140392919061201b565b5f6040518083038185875af1925050503d805f811461143d576040519150601f19603f3d011682016040523d82523d5f602084013e611442565b606091505b50915091508161145557611455816117d8565b5f6114696113876080890160608a01611d25565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861149a60208a018a611d25565b6114aa60608b0160408c01611d25565b6114ba60808c0160608d01611d25565b8b608001358987116114cc57866114d6565b6114d68a88611ced565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f8682611542600182611ced565b81811061155157611551611dad565b90506020028101906115639190611dda565b611574906080810190606001611d25565b90505f5f5f5f5f5f5f5b8881101561173a5761159160018a611ced565b811080156115a0575088600114155b1561167b578d8d828181106115b7576115b7611dad565b90506020028101906115c99190611dda565b6115da906080810190606001611d25565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161461167b578a818151811061162157611621611dad565b602002602001015161163287610dd8565b61163c9190611ced565b965073ffffffffffffffffffffffffffffffffffffffff861615611660575f611662565b895b93508387111561167b5761167b868d610316878b611ced565b8d8d8281811061168d5761168d611dad565b905060200281019061169f9190611dda565b6116b0906060810190604001611d25565b94506116bb85610dd8565b925073ffffffffffffffffffffffffffffffffffffffff8516156116df575f6116e1565b895b9150818311801561171e57508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b1561173257611732858d6103168587611ced565b60010161157e565b5050505050505050505050505050565b5f385f3884865af1610d0e5763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166117a3576390b8ec185f526004601cfd5b5f603452505050565b610c708383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6117e2565b8051602082018181fd5b73ffffffffffffffffffffffffffffffffffffffff8416156119095773ffffffffffffffffffffffffffffffffffffffff831661184b576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa1580156118be573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118e2919061202a565b10156119095761190973ffffffffffffffffffffffffffffffffffffffff8516848361190f565b50505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f511417166117a3575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f511417166117a357633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff811182821017156119de576119de61198d565b60405290565b5f82601f8301126119f3575f5ffd5b813567ffffffffffffffff811115611a0d57611a0d61198d565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff81118282101715611a5a57611a5a61198d565b604052818152838201602001851015611a71575f5ffd5b816020850160208301375f918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611ab0575f5ffd5b919050565b80358015158114611ab0575f5ffd5b5f6101408284031215611ad5575f5ffd5b611add6119ba565b823581529050602082013567ffffffffffffffff811115611afc575f5ffd5b611b08848285016119e4565b602083015250604082013567ffffffffffffffff811115611b27575f5ffd5b611b33848285016119e4565b604083015250611b4560608301611a8d565b6060820152611b5660808301611a8d565b6080820152611b6760a08301611a8d565b60a082015260c0828101359082015260e08083013590820152611b8d6101008301611ab5565b610100820152611ba06101208301611ab5565b61012082015292915050565b5f60608284031215611bbc575f5ffd5b50919050565b5f5f5f5f60608587031215611bd5575f5ffd5b843567ffffffffffffffff811115611beb575f5ffd5b611bf787828801611ac4565b945050602085013567ffffffffffffffff811115611c13575f5ffd5b8501601f81018713611c23575f5ffd5b803567ffffffffffffffff811115611c39575f5ffd5b8760208260051b8401011115611c4d575f5ffd5b60209190910193509150604085013567ffffffffffffffff811115611c70575f5ffd5b611c7c87828801611bac565b91505092959194509250565b5f5f60408385031215611c99575f5ffd5b823567ffffffffffffffff811115611caf575f5ffd5b611cbb85828601611ac4565b925050602083013567ffffffffffffffff811115611cd7575f5ffd5b611ce385828601611bac565b9150509250929050565b81810381811115610e1c577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f60208284031215611d35575f5ffd5b611d3e82611a8d565b9392505050565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611d78575f5ffd5b83018035915067ffffffffffffffff821115611d92575f5ffd5b602001915036819003821315611da6575f5ffd5b9250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611e0c575f5ffd5b9190910192915050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f60208301516101406040840152611e89610160840182611e16565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611ec48282611e16565b9150506060840151611eee608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e0840151610100840152610100840151611f5d61012085018215159052565b50610120840151801515610140850152509392505050565b5f60208284031215611f85575f5ffd5b611d3e82611ab5565b5f5f85851115611f9c575f5ffd5b83861115611fa8575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015612014577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b5f6020828403121561203a575f5ffd5b505191905056fea2646970667358221220e7451d16e18637577e038dffb8152270840c1d67b339a1e858931256ea1a20b464736f6c634300081d0033";

type UnitFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnitFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UnitFacet__factory extends ContractFactory {
  constructor(...args: UnitFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _backendSigner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UnitFacet> {
    return super.deploy(_backendSigner, overrides || {}) as Promise<UnitFacet>;
  }
  override getDeployTransaction(
    _backendSigner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_backendSigner, overrides || {});
  }
  override attach(address: string): UnitFacet {
    return super.attach(address) as UnitFacet;
  }
  override connect(signer: Signer): UnitFacet__factory {
    return super.connect(signer) as UnitFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnitFacetInterface {
    return new utils.Interface(_abi) as UnitFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnitFacet {
    return new Contract(address, _abi, signerOrProvider) as UnitFacet;
  }
}
