/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ICurve,
  ICurveInterface,
} from "../../LiFiDEXAggregator.sol/ICurve";

const _abi = [
  {
    type: "function",
    name: "exchange",
    inputs: [
      {
        name: "i",
        type: "int128",
        internalType: "int128",
      },
      {
        name: "j",
        type: "int128",
        internalType: "int128",
      },
      {
        name: "dx",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "min_dy",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
] as const;

export class ICurve__factory {
  static readonly abi = _abi;
  static createInterface(): ICurveInterface {
    return new utils.Interface(_abi) as ICurveInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ICurve {
    return new Contract(address, _abi, signerOrProvider) as ICurve;
  }
}
