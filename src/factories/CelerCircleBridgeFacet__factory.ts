/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CelerCircleBridgeFacet,
  CelerCircleBridgeFacetInterface,
} from "../CelerCircleBridgeFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_circleBridgeProxy",
        type: "address",
        internalType: "contract ICircleBridgeProxy",
      },
      {
        name: "_usdc",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaCelerCircleBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaCelerCircleBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSendingToken",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001f3f38038062001f3f833981016040819052620000349162000065565b6001600160a01b039182166080521660a052620000a4565b6001600160a01b03811681146200006257600080fd5b50565b600080604083850312156200007957600080fd5b825162000086816200004c565b602084015190925062000099816200004c565b809150509250929050565b60805160a051611e52620000ed600039600081816102440152818161050b01528181610598015281816107ee01526108a501526000818161080f01526108cd0152611e526000f3fe6080604052600436106100295760003560e01c80638fab06631461002e578063bab657d814610043575b600080fd5b61004161003c36600461195e565b610063565b005b34801561004f57600080fd5b5061004161005e3660046119f8565b610320565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100de576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100ef3447611a3b565b90508580610100015161012e576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868061012001511561016c576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8761018f8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101c6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610204576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610241576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b887f00000000000000000000000000000000000000000000000000000000000000008073ffffffffffffffffffffffffffffffffffffffff16826080015173ffffffffffffffffffffffffffffffffffffffff16146102cc576040517f7d6f201300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102e18b600001518c60c001518c8c336105df565b60c08c01526102ef8b610727565b50479350505050818111156103135761031360008461030e8585611a3b565b610975565b5050600090915550505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161039b576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181556103a882611a75565b806101000151156103e5576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103ee83611a75565b8061012001511561042b576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043484611a75565b60a081015173ffffffffffffffffffffffffffffffffffffffff16610485576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036104c3576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610500576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61050985611a75565b7f00000000000000000000000000000000000000000000000000000000000000008073ffffffffffffffffffffffffffffffffffffffff16826080015173ffffffffffffffffffffffffffffffffffffffff1614610593576040517f7d6f201300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105c17f00000000000000000000000000000000000000000000000000000000000000008860c001356109aa565b6105d26105cd88611a75565b610727565b5050600090935550505050565b60008280820361061b576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000858561062a600185611a3b565b81811061063957610639611a81565b905060200281019061064b9190611ab0565b61065c906080810190606001611aee565b9050600061066982610a5f565b905073ffffffffffffffffffffffffffffffffffffffff8216610693576106903482611a3b565b90505b600061069f8888610aaa565b90506106ab8888610bb6565b6106b88a89898985610c23565b6000826106c485610a5f565b6106ce9190611a3b565b905089811015610719576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b60e081015167ffffffffffffffff10156107e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f5f627269646765446174612e64657374696e6174696f6e436861696e4964207060448201527f617373656420697320746f6f2062696720746f2066697420696e2075696e743660648201527f3400000000000000000000000000000000000000000000000000000000000000608482015260a401610710565b6108387f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008360c00151610fd5565b60c081015160e082015160a08301516040517f2fbb00ac000000000000000000000000000000000000000000000000000000008152600481019390935267ffffffffffffffff909116602483015273ffffffffffffffffffffffffffffffffffffffff90811660448301527f0000000000000000000000000000000000000000000000000000000000000000811660648301527f00000000000000000000000000000000000000000000000000000000000000001690632fbb00ac906084016020604051808303816000875af1158015610916573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093a9190611b09565b507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18160405161096a9190611b97565b60405180910390a150565b73ffffffffffffffffffffffffffffffffffffffff831661099f5761099a8282611001565b505050565b61099a83838361106e565b806000036109e4576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610a3d5780341015610a39576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610a3973ffffffffffffffffffffffffffffffffffffffff83163330846110dc565b600073ffffffffffffffffffffffffffffffffffffffff821615610aa257610a9d73ffffffffffffffffffffffffffffffffffffffff831630611139565b610aa4565b475b92915050565b60608160008167ffffffffffffffff811115610ac857610ac861173c565b604051908082528060200260200182016040528015610af1578160200160208202803683370190505b5090506000805b83811015610bab57868682818110610b1257610b12611a81565b9050602002810190610b249190611ab0565b610b35906080810190606001611aee565b9150610b4082610a5f565b838281518110610b5257610b52611a81565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610ba35734838281518110610b8b57610b8b611a81565b60200260200101818151610b9f9190611a3b565b9052505b600101610af8565b509095945050505050565b60005b8181101561099a5736838383818110610bd457610bd4611a81565b9050602002810190610be69190611ab0565b9050610bf860e0820160c08301611caa565b15610c1a57610c1a610c106060830160408401611aee565b82608001356109aa565b50600101610bb9565b838383838260018114610ef05760008585610c3f600185611a3b565b818110610c4e57610c4e611a81565b9050602002810190610c609190611ab0565b610c71906080810190606001611aee565b9050600089815b81811015610e1c57368d8d83818110610c9357610c93611a81565b9050602002810190610ca59190611ab0565b9050610cd4610cba6060830160408401611aee565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610d375750610d37610ced6040830160208401611aee565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610d4e5750610d4e610ced6020830183611aee565b8015610dd35750610dd3610d6560a0830183611cc5565b610d7491600491600091611d31565b610d7d91611d5b565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610e09576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e138f8261116e565b50600101610c78565b505060005b610e2c600185611a3b565b811015610ee8576000888883818110610e4757610e47611a81565b9050602002810190610e599190611ab0565b610e6a906080810190606001611aee565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610edf57858281518110610eb157610eb1611a81565b6020026020010151610ec282610a5f565b610ecc9190611a3b565b92508215610edf57610edf818885610975565b50600101610e21565b505050610fc9565b8760005b81811015610fc657368b8b83818110610f0f57610f0f611a81565b9050602002810190610f219190611ab0565b9050610f36610cba6060830160408401611aee565b80610f4f5750610f4f610ced6040830160208401611aee565b8015610f665750610f66610ced6020830183611aee565b8015610f7d5750610f7d610d6560a0830183611cc5565b610fb3576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610fbd8d8261116e565b50600101610ef4565b50505b50505050505050505050565b61099a8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61144b565b73ffffffffffffffffffffffffffffffffffffffff821661104e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a3973ffffffffffffffffffffffffffffffffffffffff83168261155e565b73ffffffffffffffffffffffffffffffffffffffff82166110bb576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61099a73ffffffffffffffffffffffffffffffffffffffff8416838361157a565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d15600160005114171661112b57637939f4246000526004601cfd5b600060605260405250505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b61118361117e6020830183611aee565b6115c9565b6111b9576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036111f9576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061120e610cba6060850160408601611aee565b61121957600061121f565b82608001355b9050600061123b6112366060860160408701611aee565b610a5f565b905060006112526112366080870160608801611aee565b9050826000036112895761128961126f6060870160408801611aee565b61127f6040880160208901611aee565b8760800135610fd5565b84608001358210156112d4576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610710565b6000806112e46020880188611aee565b73ffffffffffffffffffffffffffffffffffffffff168561130860a08a018a611cc5565b604051611316929190611da3565b60006040518083038185875af1925050503d8060008114611353576040519150601f19603f3d011682016040523d82523d6000602084013e611358565b606091505b50915091508161136b5761136b816116a8565b600061138061123660808a0160608b01611aee565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896113b160208b018b611aee565b6113c160608c0160408d01611aee565b6113d160808d0160608e01611aee565b8c608001358987116113e357866113ed565b6113ed8a88611a3b565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316611498576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa15801561150d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115319190611db3565b10156115585761155873ffffffffffffffffffffffffffffffffffffffff851684836116b2565b50505050565b60003860003884865af1610a395763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d1560016000511417166115bf576390b8ec186000526004601cfd5b6000603452505050565b604080516003808252818301909252600091829182917fef0100000000000000000000000000000000000000000000000000000000000091839160208201818036833701905050863b945090507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4706003600060208401893c863f9350600061165083611dcc565b90507fffffff00000000000000000000000000000000000000000000000000000000008085169082160361168c57506001979650505050505050565b60008611801561169c5750818514155b98975050505050505050565b8051602082018181fd5b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d1560016000511417166115bf5760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d1560016000511417166115bf57633e3f8f736000526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561178f5761178f61173c565b60405290565b600082601f8301126117a657600080fd5b813567ffffffffffffffff808211156117c1576117c161173c565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156118075761180761173c565b8160405283815286602085880101111561182057600080fd5b836020870160208301376000602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461186457600080fd5b919050565b8035801515811461186457600080fd5b6000610140828403121561188c57600080fd5b61189461176b565b905081358152602082013567ffffffffffffffff808211156118b557600080fd5b6118c185838601611795565b602084015260408401359150808211156118da57600080fd5b506118e784828501611795565b6040830152506118f960608301611840565b606082015261190a60808301611840565b608082015261191b60a08301611840565b60a082015260c082013560c082015260e082013560e0820152610100611942818401611869565b90820152610120611954838201611869565b9082015292915050565b60008060006040848603121561197357600080fd5b833567ffffffffffffffff8082111561198b57600080fd5b61199787838801611879565b945060208601359150808211156119ad57600080fd5b818601915086601f8301126119c157600080fd5b8135818111156119d057600080fd5b8760208260051b85010111156119e557600080fd5b6020830194508093505050509250925092565b600060208284031215611a0a57600080fd5b813567ffffffffffffffff811115611a2157600080fd5b82016101408185031215611a3457600080fd5b9392505050565b81810381811115610aa4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa43683611879565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611ae457600080fd5b9190910192915050565b600060208284031215611b0057600080fd5b611a3482611840565b600060208284031215611b1b57600080fd5b815167ffffffffffffffff81168114611a3457600080fd5b6000815180845260005b81811015611b5957602081850181015186830182015201611b3d565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081528151602082015260006020830151610140806040850152611bc0610160850183611b33565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152611bfb8382611b33565b9250506060850151611c25608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120611c988187018315159052565b90950151151593019290925250919050565b600060208284031215611cbc57600080fd5b611a3482611869565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611cfa57600080fd5b83018035915067ffffffffffffffff821115611d1557600080fd5b602001915036819003821315611d2a57600080fd5b9250929050565b60008085851115611d4157600080fd5b83861115611d4e57600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015611d9b5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b600060208284031215611dc557600080fd5b5051919050565b6000815160208301517fffffff000000000000000000000000000000000000000000000000000000000080821693506003831015611e145780818460030360031b1b83161693505b50505091905056fea2646970667358221220ca3a2818d32c16db22755fb0b1c71178df92afd8309ebeb2b40349211e5e90b664736f6c63430008110033";

type CelerCircleBridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CelerCircleBridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CelerCircleBridgeFacet__factory extends ContractFactory {
  constructor(...args: CelerCircleBridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _circleBridgeProxy: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CelerCircleBridgeFacet> {
    return super.deploy(
      _circleBridgeProxy,
      _usdc,
      overrides || {}
    ) as Promise<CelerCircleBridgeFacet>;
  }
  override getDeployTransaction(
    _circleBridgeProxy: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _circleBridgeProxy,
      _usdc,
      overrides || {}
    );
  }
  override attach(address: string): CelerCircleBridgeFacet {
    return super.attach(address) as CelerCircleBridgeFacet;
  }
  override connect(signer: Signer): CelerCircleBridgeFacet__factory {
    return super.connect(signer) as CelerCircleBridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CelerCircleBridgeFacetInterface {
    return new utils.Interface(_abi) as CelerCircleBridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CelerCircleBridgeFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CelerCircleBridgeFacet;
  }
}
