/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CelerCircleBridgeFacet,
  CelerCircleBridgeFacetInterface,
} from "../CelerCircleBridgeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICircleBridgeProxy",
        name: "_circleBridgeProxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotBridgeToSameNetwork",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSendingToken",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaCelerCircleBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
    ],
    name: "swapAndStartBridgeTokensViaCelerCircleBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002a2038038062002a20833981016040819052620000349162000065565b6001600160a01b039182166080521660a052620000a4565b6001600160a01b03811681146200006257600080fd5b50565b600080604083850312156200007957600080fd5b825162000086816200004c565b602084015190925062000099816200004c565b809150509250929050565b60805160a051612933620000ed600039600081816102440152818161051e015281816105ab015281816107db01526108920152600081816107fc01526108ba01526129336000f3fe6080604052600436106100295760003560e01c80638fab06631461002e578063bab657d814610043575b600080fd5b61004161003c36600461232e565b610063565b005b34801561004f57600080fd5b5061004161005e3660046123c8565b610333565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100de576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100ef3447612433565b90508580610100015161012e576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868061012001511561016c576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8761018f8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101c6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610204576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610241576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b887f00000000000000000000000000000000000000000000000000000000000000008073ffffffffffffffffffffffffffffffffffffffff16826080015173ffffffffffffffffffffffffffffffffffffffff16146102cc576040517f7d6f201300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102e18b600001518c60c001518c8c336105f2565b60c08c01526102ef8b61073a565b50479350600092505050828211610307576000610311565b6103118383612433565b905080156103255761032560008583610962565b505060009092555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016103ae576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181556103bb82612446565b806101000151156103f8576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040183612446565b8061012001511561043e576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61044784612446565b60a081015173ffffffffffffffffffffffffffffffffffffffff16610498576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036104d6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610513576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61051c85612446565b7f00000000000000000000000000000000000000000000000000000000000000008073ffffffffffffffffffffffffffffffffffffffff16826080015173ffffffffffffffffffffffffffffffffffffffff16146105a6576040517f7d6f201300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105d47f00000000000000000000000000000000000000000000000000000000000000008860c00135610998565b6105e56105e088612446565b61073a565b5050600090935550505050565b60008280820361062e576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000858561063d600185612433565b81811061064c5761064c612452565b905060200281019061065e9190612481565b61066f9060808101906060016124bf565b9050600061067c82610b0e565b905073ffffffffffffffffffffffffffffffffffffffff82166106a6576106a33482612433565b90505b60006106b28888610bc7565b90506106be8888610cd3565b6106cb8a89898985610d34565b6000826106d785610b0e565b6106e19190612433565b90508981101561072c576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b60e081015167ffffffffffffffff10156107d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f44657374696e6174696f6e436861696e49642070617373656420697320746f6f60448201527f2062696720746f2066697420696e2075696e74363400000000000000000000006064820152608401610723565b6108257f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008360c001516110e6565b60c081015160e082015160a08301516040517f2fbb00ac000000000000000000000000000000000000000000000000000000008152600481019390935267ffffffffffffffff909116602483015273ffffffffffffffffffffffffffffffffffffffff90811660448301527f0000000000000000000000000000000000000000000000000000000000000000811660648301527f00000000000000000000000000000000000000000000000000000000000000001690632fbb00ac906084016020604051808303816000875af1158015610903573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092791906124da565b507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1816040516109579190612572565b60405180910390a150565b73ffffffffffffffffffffffffffffffffffffffff83161561098e57610989838383611231565b505050565b6109898282611360565b73ffffffffffffffffffffffffffffffffffffffff82166109f157803410156109ed576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610a2b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610a98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abc9190612685565b905081811015610b02576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610723565b6109898333308561148a565b600073ffffffffffffffffffffffffffffffffffffffff821615610bbf576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610b96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bba9190612685565b610bc1565b475b92915050565b60608160008167ffffffffffffffff811115610be557610be561209d565b604051908082528060200260200182016040528015610c0e578160200160208202803683370190505b5090506000805b83811015610cc857868682818110610c2f57610c2f612452565b9050602002810190610c419190612481565b610c529060808101906060016124bf565b9150610c5d82610b0e565b838281518110610c6f57610c6f612452565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610cc05734838281518110610ca857610ca8612452565b60200260200101818151610cbc9190612433565b9052505b600101610c15565b509095945050505050565b60005b81811015610989576000838383818110610cf257610cf2612452565b9050602002810190610d049190612481565b610d0d9061269e565b90508060c0015115610d2b57610d2b81604001518260800151610998565b50600101610cd6565b8383838382600181146110015760008585610d50600185612433565b818110610d5f57610d5f612452565b9050602002810190610d719190612481565b610d829060808101906060016124bf565b9050600089815b81811015610f2d57368d8d83818110610da457610da4612452565b9050602002810190610db69190612481565b9050610de5610dcb60608301604084016124bf565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610e485750610e48610dfe60408301602084016124bf565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610e5f5750610e5f610dfe60208301836124bf565b8015610ee45750610ee4610e7660a0830183612743565b610e85916004916000916127af565b610e8e916127d9565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610f1a576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f248f826116a4565b50600101610d89565b505060005b610f3d600185612433565b811015610ff9576000888883818110610f5857610f58612452565b9050602002810190610f6a9190612481565b610f7b9060808101906060016124bf565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ff057858281518110610fc257610fc2612452565b6020026020010151610fd382610b0e565b610fdd9190612433565b92508215610ff057610ff0818885610962565b50600101610f32565b5050506110da565b8760005b818110156110d757368b8b8381811061102057611020612452565b90506020028101906110329190612481565b9050611047610dcb60608301604084016124bf565b806110605750611060610dfe60408301602084016124bf565b80156110775750611077610dfe60208301836124bf565b801561108e575061108e610e7660a0830183612743565b6110c4576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110ce8d826116a4565b50600101611005565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661110657505050565b73ffffffffffffffffffffffffffffffffffffffff8216611153576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa1580156111c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ed9190612685565b90508181101561122b5761122b8484611226847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612433565b6119ba565b50505050565b73ffffffffffffffffffffffffffffffffffffffff831661127e576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa1580156112eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130f9190612685565b905080821115611355576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610723565b61122b848484611b36565b73ffffffffffffffffffffffffffffffffffffffff82166113ad576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156113f0576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610723565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461144a576040519150601f19603f3d011682016040523d82523d6000602084013e61144f565b606091505b5050905080610989576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff84166114d7576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611524576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015611595573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b99190612685565b90506115c782868686611b8c565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611637573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165b9190612685565b6116659190612433565b1461169c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b6116ba6116b460208301836124bf565b3b151590565b6116f0576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611730576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611745610dcb60608501604086016124bf565b611750576000611756565b82608001355b9050600061177261176d60608601604087016124bf565b610b0e565b9050600061178961176d60808701606088016124bf565b9050826000036117c0576117c06117a660608701604088016124bf565b6117b660408801602089016124bf565b87608001356110e6565b846080013582101561180b576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610723565b60008061181b60208801886124bf565b73ffffffffffffffffffffffffffffffffffffffff168561183f60a08a018a612743565b60405161184d929190612821565b60006040518083038185875af1925050503d806000811461188a576040519150601f19603f3d011682016040523d82523d6000602084013e61188f565b606091505b5091509150816118da5760006118a482611bea565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107239190612831565b60006118ef61176d60808a0160608b016124bf565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961192060208b018b6124bf565b61193060608c0160408d016124bf565b61194060808d0160608e016124bf565b8c60800135898711611952578661195c565b61195c8a88612433565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611a31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a559190612685565b611a5f9190612844565b60405173ffffffffffffffffffffffffffffffffffffffff851660248201526044810182905290915061122b9085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611c68565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526109899084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611ab4565b60405173ffffffffffffffffffffffffffffffffffffffff8085166024830152831660448201526064810182905261122b9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611ab4565b6060604482511015611c2f57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611c4b6004808551611c439190612433565b859190611d74565b905080806020019051810190611c619190612857565b9392505050565b6000611cca826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611e8e9092919063ffffffff16565b8051909150156109895780806020019051810190611ce891906128ce565b610989576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610723565b606081611d8281601f612844565b1015611dba576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611dc48284612844565b84511015611dfe576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611e1d5760405191506000825260208201604052611e85565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611e56578051835260209283019201611e3e565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6060611e9d8484600085611ea5565b949350505050565b606082471015611f37576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610723565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611f6091906128eb565b60006040518083038185875af1925050503d8060008114611f9d576040519150601f19603f3d011682016040523d82523d6000602084013e611fa2565b606091505b5091509150611fb387838387611fbe565b979650505050505050565b6060831561205457825160000361204d5773ffffffffffffffffffffffffffffffffffffffff85163b61204d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610723565b5081611e9d565b611e9d83838151156120695781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107239190612831565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156120f0576120f061209d565b60405290565b60405160e0810167ffffffffffffffff811182821017156120f0576120f061209d565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156121605761216061209d565b604052919050565b600067ffffffffffffffff8211156121825761218261209d565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126121bf57600080fd5b81356121d26121cd82612168565b612119565b8181528460208386010111156121e757600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461222857600080fd5b919050565b801515811461223b57600080fd5b50565b80356122288161222d565b6000610140828403121561225c57600080fd5b6122646120cc565b905081358152602082013567ffffffffffffffff8082111561228557600080fd5b612291858386016121ae565b602084015260408401359150808211156122aa57600080fd5b506122b7848285016121ae565b6040830152506122c960608301612204565b60608201526122da60808301612204565b60808201526122eb60a08301612204565b60a082015260c082013560c082015260e082013560e082015261010061231281840161223e565b9082015261012061232483820161223e565b9082015292915050565b60008060006040848603121561234357600080fd5b833567ffffffffffffffff8082111561235b57600080fd5b61236787838801612249565b9450602086013591508082111561237d57600080fd5b818601915086601f83011261239157600080fd5b8135818111156123a057600080fd5b8760208260051b85010111156123b557600080fd5b6020830194508093505050509250925092565b6000602082840312156123da57600080fd5b813567ffffffffffffffff8111156123f157600080fd5b82016101408185031215611c6157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610bc157610bc1612404565b6000610bc13683612249565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126124b557600080fd5b9190910192915050565b6000602082840312156124d157600080fd5b611c6182612204565b6000602082840312156124ec57600080fd5b815167ffffffffffffffff81168114611c6157600080fd5b60005b8381101561251f578181015183820152602001612507565b50506000910152565b60008151808452612540816020860160208601612504565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152815160208201526000602083015161014080604085015261259b610160850183612528565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526125d68382612528565b9250506060850151612600608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206126738187018315159052565b90950151151593019290925250919050565b60006020828403121561269757600080fd5b5051919050565b600060e082360312156126b057600080fd5b6126b86120f6565b6126c183612204565b81526126cf60208401612204565b60208201526126e060408401612204565b60408201526126f160608401612204565b60608201526080830135608082015260a083013567ffffffffffffffff81111561271a57600080fd5b612726368286016121ae565b60a08301525061273860c0840161223e565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261277857600080fd5b83018035915067ffffffffffffffff82111561279357600080fd5b6020019150368190038213156127a857600080fd5b9250929050565b600080858511156127bf57600080fd5b838611156127cc57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156128195780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b602081526000611c616020830184612528565b80820180821115610bc157610bc1612404565b60006020828403121561286957600080fd5b815167ffffffffffffffff81111561288057600080fd5b8201601f8101841361289157600080fd5b805161289f6121cd82612168565b8181528560208385010111156128b457600080fd5b6128c5826020830160208601612504565b95945050505050565b6000602082840312156128e057600080fd5b8151611c618161222d565b600082516124b581846020870161250456fea2646970667358221220bd86f3bae6046e778b2a710b44c26100037e6130e072ceaa6be64dcbcda0eb5c64736f6c63430008110033";

type CelerCircleBridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CelerCircleBridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CelerCircleBridgeFacet__factory extends ContractFactory {
  constructor(...args: CelerCircleBridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _circleBridgeProxy: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CelerCircleBridgeFacet> {
    return super.deploy(
      _circleBridgeProxy,
      _usdc,
      overrides || {}
    ) as Promise<CelerCircleBridgeFacet>;
  }
  override getDeployTransaction(
    _circleBridgeProxy: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _circleBridgeProxy,
      _usdc,
      overrides || {}
    );
  }
  override attach(address: string): CelerCircleBridgeFacet {
    return super.attach(address) as CelerCircleBridgeFacet;
  }
  override connect(signer: Signer): CelerCircleBridgeFacet__factory {
    return super.connect(signer) as CelerCircleBridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CelerCircleBridgeFacetInterface {
    return new utils.Interface(_abi) as CelerCircleBridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CelerCircleBridgeFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CelerCircleBridgeFacet;
  }
}
