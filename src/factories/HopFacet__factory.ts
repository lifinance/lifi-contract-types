/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { HopFacet, HopFacetInterface } from "../HopFacet";

const _abi = [
  {
    type: "function",
    name: "initHop",
    inputs: [
      {
        name: "configs",
        type: "tuple[]",
        internalType: "struct HopFacet.Config[]",
        components: [
          {
            name: "assetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "bridge",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "registerBridge",
    inputs: [
      {
        name: "assetId",
        type: "address",
        internalType: "address",
      },
      {
        name: "bridge",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaHop",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_hopData",
        type: "tuple",
        internalType: "struct HopFacet.HopData",
        components: [
          {
            name: "bonderFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationAmountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nativeFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaHop",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_hopData",
        type: "tuple",
        internalType: "struct HopFacet.HopData",
        components: [
          {
            name: "bonderFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationAmountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nativeFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "HopBridgeRegistered",
    inputs: [
      {
        name: "assetId",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "bridge",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "HopInitialized",
    inputs: [
      {
        name: "configs",
        type: "tuple[]",
        indexed: false,
        internalType: "struct HopFacet.Config[]",
        components: [
          {
            name: "assetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "bridge",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidConfig",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyContractOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061222d806100206000396000f3fe60806040526004361061003f5760003560e01c80633961d1ed1461004457806367fdd71e14610066578063a01fe78414610086578063b3b6358714610099575b600080fd5b34801561005057600080fd5b5061006461005f366004611a25565b6100ac565b005b34801561007257600080fd5b50610064610081366004611a58565b6101ad565b610064610094366004611cdf565b610356565b6100646100a7366004611d8c565b61058d565b6100b46107b1565b7f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b873ffffffffffffffffffffffffffffffffffffffff8216610122576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8381166000818152602084815260409182902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169487169485179055905192835290917fcf56a25ddc5c325bc2d2557f7eee90d061f2e19b7294a6ef738f86f2c3d9280c910160405180910390a2505050565b6101b56107b1565b7f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b860005b828110156103175760008484838181106101f5576101f5611dd3565b905060400201602001602081019061020d9190611e02565b73ffffffffffffffffffffffffffffffffffffffff160361025a576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83838281811061026c5761026c611dd3565b90506040020160200160208101906102849190611e02565b82600086868581811061029957610299611dd3565b6102af9260206040909202019081019150611e02565b73ffffffffffffffffffffffffffffffffffffffff9081168252602082019290925260400160002080547fffffffffffffffffffffffff000000000000000000000000000000000000000016929091169190911790558061030f81611e53565b9150506101d9565b507f5910f57b2fdae9f2f45a1d913c63f55985d0f77d120de8aab63e686ff670dde38383604051610349929190611e8b565b60405180910390a1505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016103d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006103e23447611efa565b905086806101000151610421576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561045f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886104828160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156104b9576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036104f7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610534576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61054e8a600001518b60c001518b8b338c60e00135610826565b60c08b015261055d8a886109c5565b50479150508181111561057f5761057f60008461057a8585611efa565b610c86565b505060009091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610608576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006106193447611efa565b90508480610100015115610659576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8580610120015115610697576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866106ba8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156106f1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361072f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361076c576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61077e88608001518960c00151610cbb565b61078888886109c5565b5047915050818111156107a5576107a560008461057a8585611efa565b50506000909155505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314610824576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600083808203610862576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008686610871600185611efa565b81811061088057610880611dd3565b90506020028101906108929190611f0d565b6108a3906080810190606001611e02565b905060006108b082610d70565b905073ffffffffffffffffffffffffffffffffffffffff82166108da576108d73482611efa565b90505b60006108e68989610dbb565b90506108f28989610ec7565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff8916602082015290810187905261092d818b8b85610f34565b60008361093986610d70565b6109439190611efa565b905073ffffffffffffffffffffffffffffffffffffffff851661096d5761096a8882611efa565b90505b8b8110156109b5576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d90526024810182905260440160405180910390fd5b9c9b505050505050505050505050565b608082015173ffffffffffffffffffffffffffffffffffffffff80821660008181527f6d21be7f069eba22e6227bbf0972cf4a3ee2f0ce81ad8bd8004228e83b4830b860208190526040909120549092169015610a2b57610a2b83828760c00151611325565b600073ffffffffffffffffffffffffffffffffffffffff841615610a53578460e00135610a66565b60c0860151610a669060e0870135611f4b565b90504660011480610a775750466005145b15610b75578173ffffffffffffffffffffffffffffffffffffffff1663deace8f5828860e001518960a001518a60c001518a606001358b608001358c60a0016020810190610ac59190611e02565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e08a901b168152600481019690965273ffffffffffffffffffffffffffffffffffffffff94851660248701526044860193909352606485019190915260848401521660a482015260c089013560c482015260e4016000604051808303818588803b158015610b5757600080fd5b505af1158015610b6b573d6000803e3d6000fd5b5050505050610c47565b60e086015160a087015160c0880151604080517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019490945273ffffffffffffffffffffffffffffffffffffffff92831660248501526044840191909152873560648401526020880135608484015287013560a4830152606087013560c4830152608087013560e483015283169063eea0d7b2908390610104016000604051808303818588803b158015610c2d57600080fd5b505af1158015610c41573d6000803e3d6000fd5b50505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f186604051610c769190611fc2565b60405180910390a1505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610cb057610cab8282611351565b505050565b610cab8383836113be565b80600003610cf5576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610d4e5780341015610d4a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610d4a73ffffffffffffffffffffffffffffffffffffffff831633308461142c565b600073ffffffffffffffffffffffffffffffffffffffff821615610db357610dae73ffffffffffffffffffffffffffffffffffffffff831630611489565b610db5565b475b92915050565b60608160008167ffffffffffffffff811115610dd957610dd9611acd565b604051908082528060200260200182016040528015610e02578160200160208202803683370190505b5090506000805b83811015610ebc57868682818110610e2357610e23611dd3565b9050602002810190610e359190611f0d565b610e46906080810190606001611e02565b9150610e5182610d70565b838281518110610e6357610e63611dd3565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610eb45734838281518110610e9c57610e9c611dd3565b60200260200101818151610eb09190611efa565b9052505b600101610e09565b509095945050505050565b60005b81811015610cab5736838383818110610ee557610ee5611dd3565b9050602002810190610ef79190611f0d565b9050610f0960e0820160c083016120d5565b15610f2b57610f2b610f216060830160408401611e02565b8260800135610cbb565b50600101610eca565b60208401516040850151849184918490836001811461123e5760008686610f5c600185611efa565b818110610f6b57610f6b611dd3565b9050602002810190610f7d9190611f0d565b610f8e906080810190606001611e02565b9050600089815b8181101561113b57368d8d83818110610fb057610fb0611dd3565b9050602002810190610fc29190611f0d565b9050610ff1610fd76060830160408401611e02565b73ffffffffffffffffffffffffffffffffffffffff161590565b80611054575061105461100a6040830160208401611e02565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561106b575061106b61100a6020830183611e02565b80156110f057506110f061108260a08301836120f0565b6110919160049160009161215c565b61109a91612186565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611126576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e5161113290826114be565b50600101610f95565b505060005b61114b600185611efa565b81101561123657600089898381811061116657611166611dd3565b90506020028101906111789190611f0d565b611189906080810190606001611e02565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461122d578682815181106111d0576111d0611dd3565b60200260200101516111e182610d70565b6111eb9190611efa565b9250600073ffffffffffffffffffffffffffffffffffffffff821615611212576000611214565b865b9050831561122b5761122b828a61057a8488611efa565b505b50600101611140565b505050611319565b8760005b8181101561131657368b8b8381811061125d5761125d611dd3565b905060200281019061126f9190611f0d565b9050611284610fd76060830160408401611e02565b8061129d575061129d61100a6040830160208401611e02565b80156112b457506112b461100a6020830183611e02565b80156112cb57506112cb61108260a08301836120f0565b611301576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c5161130d90826114be565b50600101611242565b50505b50505050505050505050565b610cab8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611738565b73ffffffffffffffffffffffffffffffffffffffff821661139e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d4a73ffffffffffffffffffffffffffffffffffffffff831682611867565b73ffffffffffffffffffffffffffffffffffffffff821661140b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cab73ffffffffffffffffffffffffffffffffffffffff84168383611883565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d15600160005114171661147b57637939f4246000526004601cfd5b600060605260405250505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b6114d36114ce6020830183611e02565b6118d2565b611509576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611549576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061155e610fd76060850160408601611e02565b61156957600061156f565b82608001355b9050600061158b6115866080860160608701611e02565b610d70565b9050816000036115c2576115c26115a86060860160408701611e02565b6115b86040870160208801611e02565b8660800135611325565b6000806115d26020870187611e02565b73ffffffffffffffffffffffffffffffffffffffff16846115f660a08901896120f0565b6040516116049291906121ce565b60006040518083038185875af1925050503d8060008114611641576040519150601f19603f3d011682016040523d82523d6000602084013e611646565b606091505b5091509150816116595761165981611968565b600061166e6115866080890160608a01611e02565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861169f60208a018a611e02565b6116af60608b0160408c01611e02565b6116bf60808c0160608d01611e02565b8b608001358987116116d157866116db565b6116db8a88611efa565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156118615773ffffffffffffffffffffffffffffffffffffffff83166117a1576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611816573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183a91906121de565b10156118615761186173ffffffffffffffffffffffffffffffffffffffff85168483611972565b50505050565b60003860003884865af1610d4a5763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d1560016000511417166118c8576390b8ec186000526004601cfd5b6000603452505050565b6040805160178082528183019092526000918291906020820181803683370190505090506017600060208301853c60208101517f10ff0000000000000000000000000000000000000000000000000000000000007fffffff000000000000000000000000000000000000000000000000000000000082160161195f57506023015160601c3b151592915050565b5050503b151590565b8051602082018181fd5b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d1560016000511417166118c85760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d1560016000511417166118c857633e3f8f736000526004601cfd5b803573ffffffffffffffffffffffffffffffffffffffff81168114611a2057600080fd5b919050565b60008060408385031215611a3857600080fd5b611a41836119fc565b9150611a4f602084016119fc565b90509250929050565b60008060208385031215611a6b57600080fd5b823567ffffffffffffffff80821115611a8357600080fd5b818501915085601f830112611a9757600080fd5b813581811115611aa657600080fd5b8660208260061b8501011115611abb57600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611b2057611b20611acd565b60405290565b600082601f830112611b3757600080fd5b813567ffffffffffffffff80821115611b5257611b52611acd565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611b9857611b98611acd565b81604052838152866020858801011115611bb157600080fd5b836020870160208301376000602085830101528094505050505092915050565b80358015158114611a2057600080fd5b60006101408284031215611bf457600080fd5b611bfc611afc565b905081358152602082013567ffffffffffffffff80821115611c1d57600080fd5b611c2985838601611b26565b60208401526040840135915080821115611c4257600080fd5b50611c4f84828501611b26565b604083015250611c61606083016119fc565b6060820152611c72608083016119fc565b6080820152611c8360a083016119fc565b60a082015260c082013560c082015260e082013560e0820152610100611caa818401611bd1565b90820152610120611cbc838201611bd1565b9082015292915050565b60006101008284031215611cd957600080fd5b50919050565b6000806000806101408587031215611cf657600080fd5b843567ffffffffffffffff80821115611d0e57600080fd5b611d1a88838901611be1565b95506020870135915080821115611d3057600080fd5b818701915087601f830112611d4457600080fd5b813581811115611d5357600080fd5b8860208260051b8501011115611d6857600080fd5b602083019550809450505050611d818660408701611cc6565b905092959194509250565b6000806101208385031215611da057600080fd5b823567ffffffffffffffff811115611db757600080fd5b611dc385828601611be1565b925050611a4f8460208501611cc6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215611e1457600080fd5b611e1d826119fc565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e8457611e84611e24565b5060010190565b6020808252818101839052600090604080840186845b87811015611eed5773ffffffffffffffffffffffffffffffffffffffff80611ec8846119fc565b16845280611ed78785016119fc565b1684870152509183019190830190600101611ea1565b5090979650505050505050565b81810381811115610db557610db5611e24565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611f4157600080fd5b9190910192915050565b80820180821115610db557610db5611e24565b6000815180845260005b81811015611f8457602081850181015186830182015201611f68565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081528151602082015260006020830151610140806040850152611feb610160850183611f5e565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526120268382611f5e565b9250506060850151612050608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206120c38187018315159052565b90950151151593019290925250919050565b6000602082840312156120e757600080fd5b611e1d82611bd1565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261212557600080fd5b83018035915067ffffffffffffffff82111561214057600080fd5b60200191503681900382131561215557600080fd5b9250929050565b6000808585111561216c57600080fd5b8386111561217957600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156121c65780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b6000602082840312156121f057600080fd5b505191905056fea2646970667358221220959c68cb54fcee105624b08285a31f18e6a63ef2bd71221e8451cee4cf7b161164736f6c63430008110033";

type HopFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HopFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HopFacet__factory extends ContractFactory {
  constructor(...args: HopFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HopFacet> {
    return super.deploy(overrides || {}) as Promise<HopFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HopFacet {
    return super.attach(address) as HopFacet;
  }
  override connect(signer: Signer): HopFacet__factory {
    return super.connect(signer) as HopFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HopFacetInterface {
    return new utils.Interface(_abi) as HopFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HopFacet {
    return new Contract(address, _abi, signerOrProvider) as HopFacet;
  }
}
