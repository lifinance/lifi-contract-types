/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CelerIMFacet,
  CelerIMFacetInterface,
} from "../../CelerIMFacet.sol/CelerIMFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IMessageBus",
        name: "_messageBus",
        type: "address",
      },
      {
        internalType: "contract RelayerCelerIM",
        name: "_relayer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_cfUSDC",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotBridgeToSameNetwork",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "maxSlippage",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "callTo",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "messageBusFee",
            type: "uint256",
          },
          {
            internalType: "enum MsgDataTypes.BridgeSendType",
            name: "bridgeType",
            type: "uint8",
          },
        ],
        internalType: "struct CelerIMFacet.CelerIMData",
        name: "_celerIMData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaCelerIM",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "maxSlippage",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "callTo",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "messageBusFee",
            type: "uint256",
          },
          {
            internalType: "enum MsgDataTypes.BridgeSendType",
            name: "bridgeType",
            type: "uint8",
          },
        ],
        internalType: "struct CelerIMFacet.CelerIMData",
        name: "_celerIMData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaCelerIM",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b506040516200315f3803806200315f83398101604081905262000034916200006b565b6001600160a01b0392831660805290821660a0521660c052620000bf565b6001600160a01b03811681146200006857600080fd5b50565b6000806000606084860312156200008157600080fd5b83516200008e8162000052565b6020850151909350620000a18162000052565b6040850151909250620000b48162000052565b809150509250925092565b60805160a05160c05161303b6200012460003960006108b001526000818161026d015281816102ef0152818161035a0152818161067b015281816106fc0152818161076701528181610ae001528181610b7f0152610c3101526000505061303b6000f3fe6080604052600436106100295760003560e01c806305095ded1461002e578063b06c52da14610043575b600080fd5b61004161003c36600461283d565b610056565b005b6100416100513660046128a1565b61044b565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e2344761298f565b90508480610100015115610122576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856101458160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561017c576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101ba576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101f7576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102018787610855565b608087015173ffffffffffffffffffffffffffffffffffffffff161561041457600061023088608001516108ac565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660048301529192506000918316906370a0823190602401602060405180830381865afa1580156102c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e691906129a2565b905061031882337f00000000000000000000000000000000000000000000000000000000000000008c60c00151610980565b60c08901516040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660048301528391908516906370a0823190602401602060405180830381865afa1580156103ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d091906129a2565b6103da919061298f565b14610411576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505b61041e8787610a62565b504790508181111561043f5761043f60008461043a858561298f565b610d37565b50506000909155505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016104c6576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006104d7344761298f565b905086806101000151610516576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876105398160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610570576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036105ae576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036105eb576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105f58987610855565b61060a89600001518a60c001518a8a33610d6d565b60c08a0152608089015173ffffffffffffffffffffffffffffffffffffffff161561082157600061063e8a608001516108ac565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660048301529192506000918316906370a0823190602401602060405180830381865afa1580156106d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f491906129a2565b9050610725827f00000000000000000000000000000000000000000000000000000000000000008d60c00151610eb5565b60c08b01516040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660048301528391908516906370a0823190602401602060405180830381865afa1580156107b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dd91906129a2565b6107e7919061298f565b1461081e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505b61082b8987610a62565b50479050818111156108475761084760008461043a858561298f565b505060009091555050505050565b6101208201511515600061086c60608401846129bb565b9050111515146108a8576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610978578173ffffffffffffffffffffffffffffffffffffffff166326afaadd6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561094e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109729190612a27565b92915050565b50805b919050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610a5c9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610f0b565b50505050565b6000610a86836080015173ffffffffffffffffffffffffffffffffffffffff161590565b610a91576000610a97565b8260c001515b9050826101200151610b62576040517f75b4c00500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906375b4c005908390610b199087908790600401612c9e565b604080518083038185885af1158015610b36573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b5b9190612d71565b5050610cfb565b60a08301805173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016918290526040517f75b4c00500000000000000000000000000000000000000000000000000000000815290916000918291906375b4c005908690610be9908a908a90600401612c9e565b604080518083038185885af1158015610c06573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610c2b9190612d71565b915091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c2aad68f8660800135858960e0015185878b8060600190610c8891906129bb565b6040518863ffffffff1660e01b8152600401610ca996959493929190612da1565b6000604051808303818588803b158015610cc257600080fd5b505af1158015610cd6573d6000803e3d6000fd5b50505073ffffffffffffffffffffffffffffffffffffffff90941660a0880152505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f183604051610d2a9190612dfd565b60405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff831615610d6357610d5e838383611017565b505050565b610d5e8282611193565b600082808203610da9576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610db860018561298f565b818110610dc757610dc7612e10565b9050602002810190610dd99190612e3f565b610dea906080810190606001612e7d565b90506000610df7826112bd565b905073ffffffffffffffffffffffffffffffffffffffff8216610e2157610e1e348261298f565b90505b6000610e2d8888611375565b9050610e398888611481565b610e468a898989856114ee565b600082610e52856112bd565b610e5c919061298f565b905089811015610ea7576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610d5e9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016109da565b6000610f6d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166118a09092919063ffffffff16565b805190915015610d5e5780806020019051810190610f8b9190612e9a565b610d5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610e9e565b73ffffffffffffffffffffffffffffffffffffffff8316611064576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166110b1576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa15801561111e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114291906129a2565b905080821115611188576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610e9e565b610a5c848484610eb5565b73ffffffffffffffffffffffffffffffffffffffff82166111e0576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611223576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610e9e565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461127d576040519150601f19603f3d011682016040523d82523d6000602084013e611282565b606091505b5050905080610d5e576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff82161561136e576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611345573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136991906129a2565b610972565b4792915050565b60608160008167ffffffffffffffff811115611393576113936125b3565b6040519080825280602002602001820160405280156113bc578160200160208202803683370190505b5090506000805b83811015611476578686828181106113dd576113dd612e10565b90506020028101906113ef9190612e3f565b611400906080810190606001612e7d565b915061140b826112bd565b83828151811061141d5761141d612e10565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff821661146e573483828151811061145657611456612e10565b6020026020010181815161146a919061298f565b9052505b6001016113c3565b509095945050505050565b60005b81811015610d5e573683838381811061149f5761149f612e10565b90506020028101906114b19190612e3f565b90506114c360e0820160c08301612eb7565b156114e5576114e56114db6060830160408401612e7d565b82608001356118b7565b50600101611484565b8383838382600181146117bb576000858561150a60018561298f565b81811061151957611519612e10565b905060200281019061152b9190612e3f565b61153c906080810190606001612e7d565b9050600089815b818110156116e757368d8d8381811061155e5761155e612e10565b90506020028101906115709190612e3f565b905061159f6115856060830160408401612e7d565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061160257506116026115b86040830160208401612e7d565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561161957506116196115b86020830183612e7d565b801561169e575061169e61163060a08301836129bb565b61163f91600491600091612ed4565b61164891612efe565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6116d4576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116de8f82611a29565b50600101611543565b505060005b6116f760018561298f565b8110156117b357600088888381811061171257611712612e10565b90506020028101906117249190612e3f565b611735906080810190606001612e7d565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146117aa5785828151811061177c5761177c612e10565b602002602001015161178d826112bd565b611797919061298f565b925082156117aa576117aa818885610d37565b506001016116ec565b505050611894565b8760005b8181101561189157368b8b838181106117da576117da612e10565b90506020028101906117ec9190612e3f565b90506118016115856060830160408401612e7d565b8061181a575061181a6115b86040830160208401612e7d565b801561183157506118316115b86020830183612e7d565b8015611848575061184861163060a08301836129bb565b61187e576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6118888d82611a29565b506001016117bf565b50505b50505050505050505050565b60606118af8484600085611d3f565b949350505050565b806000036118f1576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661194657803410156108a8576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156119b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d791906129a2565b905081811015611a1d576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610e9e565b610d5e83333085611e58565b611a3f611a396020830183612e7d565b3b151590565b611a75576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611ab5576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611aca6115856060850160408601612e7d565b611ad5576000611adb565b82608001355b90506000611af7611af26060860160408701612e7d565b6112bd565b90506000611b0e611af26080870160608801612e7d565b905082600003611b4557611b45611b2b6060870160408801612e7d565b611b3b6040880160208901612e7d565b8760800135612072565b8460800135821015611b90576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610e9e565b600080611ba06020880188612e7d565b73ffffffffffffffffffffffffffffffffffffffff1685611bc460a08a018a6129bb565b604051611bd2929190612f46565b60006040518083038185875af1925050503d8060008114611c0f576040519150601f19603f3d011682016040523d82523d6000602084013e611c14565b606091505b509150915081611c5f576000611c29826121b5565b9050806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9e9190612f56565b6000611c74611af260808a0160608b01612e7d565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611ca560208b018b612e7d565b611cb560608c0160408d01612e7d565b611cc560808d0160608e01612e7d565b8c60800135898711611cd75786611ce1565b611ce18a8861298f565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b606082471015611dd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610e9e565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611dfa9190612f69565b60006040518083038185875af1925050503d8060008114611e37576040519150601f19603f3d011682016040523d82523d6000602084013e611e3c565b606091505b5091509150611e4d87838387612233565b979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416611ea5576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611ef2576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015611f63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f8791906129a2565b9050611f9582868686610980565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015612005573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061202991906129a2565b612033919061298f565b1461206a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661209257505050565b73ffffffffffffffffffffffffffffffffffffffff82166120df576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015612154573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061217891906129a2565b1015610d5e5761218a838360006122d3565b610d5e83837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6122d3565b60606044825110156121fa57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000612216600480855161220e919061298f565b859190612455565b90508080602001905181019061222c9190612f7b565b9392505050565b606083156122c95782516000036122c25773ffffffffffffffffffffffffffffffffffffffff85163b6122c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e9e565b50816118af565b6118af838361256f565b80158061237357506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa15801561234d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061237191906129a2565b155b6123ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610e9e565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610d5e9084907f095ea7b300000000000000000000000000000000000000000000000000000000906064016109da565b60608161246381601f612ff2565b101561249b576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6124a58284612ff2565b845110156124df576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060821580156124fe5760405191506000825260208201604052612566565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561253757805183526020928301920161251f565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b81511561257f5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9e9190612f56565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715612606576126066125b3565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612653576126536125b3565b604052919050565b600067ffffffffffffffff821115612675576126756125b3565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126126b257600080fd5b81356126c56126c08261265b565b61260c565b8181528460208386010111156126da57600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461271957600080fd5b50565b803561097b816126f7565b801515811461271957600080fd5b803561097b81612727565b6000610140828403121561275357600080fd5b61275b6125e2565b905081358152602082013567ffffffffffffffff8082111561277c57600080fd5b612788858386016126a1565b602084015260408401359150808211156127a157600080fd5b506127ae848285016126a1565b6040830152506127c06060830161271c565b60608201526127d16080830161271c565b60808201526127e260a0830161271c565b60a082015260c082013560c082015260e082013560e0820152610100612809818401612735565b9082015261012061281b838201612735565b9082015292915050565b600060c0828403121561283757600080fd5b50919050565b6000806040838503121561285057600080fd5b823567ffffffffffffffff8082111561286857600080fd5b61287486838701612740565b9350602085013591508082111561288a57600080fd5b5061289785828601612825565b9150509250929050565b600080600080606085870312156128b757600080fd5b843567ffffffffffffffff808211156128cf57600080fd5b6128db88838901612740565b955060208701359150808211156128f157600080fd5b818701915087601f83011261290557600080fd5b81358181111561291457600080fd5b8860208260051b850101111561292957600080fd5b60208301955080945050604087013591508082111561294757600080fd5b5061295487828801612825565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561097257610972612960565b6000602082840312156129b457600080fd5b5051919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126129f057600080fd5b83018035915067ffffffffffffffff821115612a0b57600080fd5b602001915036819003821315612a2057600080fd5b9250929050565b600060208284031215612a3957600080fd5b815161222c816126f7565b60005b83811015612a5f578181015183820152602001612a47565b50506000910152565b60008151808452612a80816020860160208601612a44565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000610140825184526020830151816020860152612ad282860182612a68565b91505060408301518482036040860152612aec8282612a68565b9150506060830151612b16606086018273ffffffffffffffffffffffffffffffffffffffff169052565b506080830151612b3e608086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a0830151612b6660a086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c083015160c085015260e083015160e085015261010080840151612b8f8287018215159052565b50506101209283015115159390920192909252919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612bdc57600080fd5b830160208101925035905067ffffffffffffffff811115612bfc57600080fd5b803603821315612a2057600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b80356007811061097b57600080fd5b60078110612c9a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b604081526000612cb16040830185612ab2565b8281036020840152833563ffffffff8116808214612cce57600080fd5b825250602084013567ffffffffffffffff81168114612cec57600080fd5b67ffffffffffffffff166020820152612d086040850185612ba7565b60c06040840152612d1d60c084018284612c0b565b915050612d2d6060860186612ba7565b8383036060850152612d40838284612c0b565b9250505060808501356080830152612d5a60a08601612c54565b612d6760a0840182612c63565b5095945050505050565b60008060408385031215612d8457600080fd5b825191506020830151612d96816126f7565b809150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff808916835267ffffffffffffffff8816602084015280871660408401525084606083015260a06080830152612df160a083018486612c0b565b98975050505050505050565b60208152600061222c6020830184612ab2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612e7357600080fd5b9190910192915050565b600060208284031215612e8f57600080fd5b813561222c816126f7565b600060208284031215612eac57600080fd5b815161222c81612727565b600060208284031215612ec957600080fd5b813561222c81612727565b60008085851115612ee457600080fd5b83861115612ef157600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612f3e5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b60208152600061222c6020830184612a68565b60008251612e73818460208701612a44565b600060208284031215612f8d57600080fd5b815167ffffffffffffffff811115612fa457600080fd5b8201601f81018413612fb557600080fd5b8051612fc36126c08261265b565b818152856020838501011115612fd857600080fd5b612fe9826020830160208601612a44565b95945050505050565b808201808211156109725761097261296056fea2646970667358221220d4df54a4a292c79a1aac6b61dcc543b3f67ea378d18d2f1b2a58f642dabef2b964736f6c63430008110033";

type CelerIMFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CelerIMFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CelerIMFacet__factory extends ContractFactory {
  constructor(...args: CelerIMFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _messageBus: PromiseOrValue<string>,
    _relayer: PromiseOrValue<string>,
    _cfUSDC: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CelerIMFacet> {
    return super.deploy(
      _messageBus,
      _relayer,
      _cfUSDC,
      overrides || {}
    ) as Promise<CelerIMFacet>;
  }
  override getDeployTransaction(
    _messageBus: PromiseOrValue<string>,
    _relayer: PromiseOrValue<string>,
    _cfUSDC: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _messageBus,
      _relayer,
      _cfUSDC,
      overrides || {}
    );
  }
  override attach(address: string): CelerIMFacet {
    return super.attach(address) as CelerIMFacet;
  }
  override connect(signer: Signer): CelerIMFacet__factory {
    return super.connect(signer) as CelerIMFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CelerIMFacetInterface {
    return new utils.Interface(_abi) as CelerIMFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CelerIMFacet {
    return new Contract(address, _abi, signerOrProvider) as CelerIMFacet;
  }
}
