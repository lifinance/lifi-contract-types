/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AcrossFacetPacked,
  AcrossFacetPackedInterface,
} from "../AcrossFacetPacked";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_spokePool",
        type: "address",
        internalType: "contract IAcrossSpokePool",
      },
      {
        name: "_wrappedNative",
        type: "address",
        internalType: "address",
      },
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "ACROSS_REFERRER_DELIMITER",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "cancelOwnershipTransfer",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "confirmOwnershipTransfer",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "containsReferrerId",
    inputs: [
      {
        name: "callData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "decode_startBridgeTokensViaAcrossERC20Packed",
    inputs: [
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "acrossData",
        type: "tuple",
        internalType: "struct AcrossFacet.AcrossData",
        components: [
          {
            name: "relayerFeePct",
            type: "int64",
            internalType: "int64",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "maxCount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "decode_startBridgeTokensViaAcrossNativePacked",
    inputs: [
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "acrossData",
        type: "tuple",
        internalType: "struct AcrossFacet.AcrossData",
        components: [
          {
            name: "relayerFeePct",
            type: "int64",
            internalType: "int64",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "maxCount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "encode_startBridgeTokensViaAcrossERC20Packed",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "sendingAssetId",
        type: "address",
        internalType: "address",
      },
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "relayerFeePct",
        type: "int64",
        internalType: "int64",
      },
      {
        name: "quoteTimestamp",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "maxCount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "encode_startBridgeTokensViaAcrossNativePacked",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "destinationChainId",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "relayerFeePct",
        type: "int64",
        internalType: "int64",
      },
      {
        name: "quoteTimestamp",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "maxCount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setApprovalForBridge",
    inputs: [
      {
        name: "tokensToApprove",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAcrossERC20Min",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "sendingAssetId",
        type: "address",
        internalType: "address",
      },
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "destinationChainId",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "relayerFeePct",
        type: "int64",
        internalType: "int64",
      },
      {
        name: "quoteTimestamp",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "maxCount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAcrossERC20Packed",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAcrossNativeMin",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "relayerFeePct",
        type: "int64",
        internalType: "int64",
      },
      {
        name: "quoteTimestamp",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "maxCount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAcrossNativePacked",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "_newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "LiFiAcrossTransfer",
    inputs: [
      {
        name: "_transactionId",
        type: "bytes8",
        indexed: false,
        internalType: "bytes8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferRequested",
    inputs: [
      {
        name: "_from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "NewOwnerMustNotBeSelf",
    inputs: [],
  },
  {
    type: "error",
    name: "NoNullOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "NoPendingOwnershipTransfer",
    inputs: [],
  },
  {
    type: "error",
    name: "NotPendingOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "UnAuthorized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200291738038062002917833981016040819052620000349162000079565b600080546001600160a01b0319166001600160a01b039283161790559182166080521660a052620000cd565b6001600160a01b03811681146200007657600080fd5b50565b6000806000606084860312156200008f57600080fd5b83516200009c8162000060565b6020850151909350620000af8162000060565b6040850151909250620000c28162000060565b809150509250925092565b60805160a0516128016200011660003960008181610b370152610d2301526000818161062d0152818161091101528181610a7201528181610af40152610cf201526128016000f3fe6080604052600436106100f35760003560e01c80638da5cb5b1161008a578063b4f3937811610059578063b4f3937814610280578063cf73f711146102c9578063e30c3978146102e9578063f2fde38b1461031657600080fd5b80638da5cb5b146101b15780639429916614610203578063acc53eb814610233578063ae6c70601461026057600080fd5b80634c478642116100c65780634c478642146101615780635a39b10a146101815780635eedcbd6146101895780637200b8291461019c57600080fd5b80631cf9fd2f146100f85780632340ab8f1461012f57806323452b9c146101395780634c128e601461014e575b600080fd5b34801561010457600080fd5b50610118610113366004611d06565b610336565b604051610126929190611dfc565b60405180910390f35b6101376105a9565b005b34801561014557600080fd5b506101376107e8565b61013761015c366004611f97565b6108b2565b34801561016d57600080fd5b5061013761017c36600461204f565b6109ea565b610137610ace565b6101376101973660046120c4565b610cb5565b3480156101a857600080fd5b50610137610df1565b3480156101bd57600080fd5b506000546101de9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610126565b34801561020f57600080fd5b5061022361021e366004611d06565b610ed7565b6040519015158152602001610126565b34801561023f57600080fd5b5061025361024e366004612154565b61101e565b60405161012691906121ae565b34801561026c57600080fd5b5061011861027b366004611d06565b6111b4565b34801561028c57600080fd5b506102536040518060400160405280600881526020017fd00dfeeddeadbeef00000000000000000000000000000000000000000000000081525081565b3480156102d557600080fd5b506102536102e43660046121c8565b6113a2565b3480156102f557600080fd5b506001546101de9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561032257600080fd5b50610137610331366004612261565b6114ae565b6040805161014081018252600080825260606020808401829052838501829052818401839052608080850184905260a0850184905260c0850184905260e085018490526101008501849052610120850184905285519081018652838152908101839052938401819052830152906090831015610439576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f696e76616c69642063616c6c6461746120286d7573742068617665206c656e6760448201527f7468203e2031343429000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000610446601c856122ab565b9050610456600c600486886122be565b61045f916122e8565b7fffffffffffffffff0000000000000000000000000000000000000000000000001683526104916020600c86886122be565b61049a91612330565b60601c60a08401526104b06034602086886122be565b6104b991612330565b60601c60808401526104cf6044603486886122be565b6104d891612376565b60801c60c08401526104ee6048604486886122be565b6104f7916123bc565b60e090811c9084015261050e6050604886886122be565b610517916122e8565b60c01d60070b825261052d6054605086886122be565b610536916123bc565b60e01c602083015261054c6074605486886122be565b61055591612402565b606083015261056781607486886122be565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050506040830152505b9250929050565b60006105b96034602036846122be565b6105c291612330565b60601c905060006105d76044603436846122be565b6105e091612376565b60801c905061060773ffffffffffffffffffffffffffffffffffffffff831633308461160c565b6000610614601c366122ab565b905073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016631186ec336106616020600c3660006122be565b61066a91612330565b60601c61067c603460203660006122be565b61068591612330565b60601c85610698604860443660006122be565b6106a1916123bc565b60e01c6106b3605060483660006122be565b6106bc916122e8565b60c01c6106ce605460503660006122be565b6106d7916123bc565b60e01c6106e88960743660006122be565b6106f7607460543660006122be565b61070091612402565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e08c901b16815261074199989796959493929190600401612487565b600060405180830381600087803b15801561075b57600080fd5b505af115801561076f573d6000803e3d6000fd5b507fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c13392506107a69150600c905060043660006122be565b6107af916122e8565b6040517fffffffffffffffff000000000000000000000000000000000000000000000000909116815260200160405180910390a1505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610839576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015473ffffffffffffffffffffffffffffffffffffffff16610888576040517f75cdea1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b6108d473ffffffffffffffffffffffffffffffffffffffff8a1633308b61160c565b6040517f1186ec3300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690631186ec3390610956908a908d908d908c908c908c908c908c908c90600401612487565b600060405180830381600087803b15801561097057600080fd5b505af1158015610984573d6000803e3d6000fd5b50506040517fffffffffffffffff0000000000000000000000000000000000000000000000008d1681527fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c1339250602001905060405180910390a150505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a3b576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b81811015610ac957610ab7838383818110610a5b57610a5b612504565b9050602002016020810190610a709190612261565b7f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6116d2565b80610ac181612533565b915050610a3e565b505050565b6000610adb601c366122ab565b905073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016631186ec3334610b296020600c3660006122be565b610b3291612330565b60601c7f000000000000000000000000000000000000000000000000000000000000000034610b66602460203660006122be565b610b6f916123bc565b60e01c610b81602c60243660006122be565b610b8a916122e8565b60c01c610b9c6030602c3660006122be565b610ba5916123bc565b60e01c610bb68a60503660006122be565b610bc5605060303660006122be565b610bce91612402565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e08d901b168152610c0f99989796959493929190600401612487565b6000604051808303818588803b158015610c2857600080fd5b505af1158015610c3c573d6000803e3d6000fd5b507fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c1339350610c759250600c9150600490503660006122be565b610c7e916122e8565b6040517fffffffffffffffff000000000000000000000000000000000000000000000000909116815260200160405180910390a150565b6040517f1186ec3300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690631186ec33903490610d59908b907f00000000000000000000000000000000000000000000000000000000000000009084908d908d908d908d908d908d9060040161256b565b6000604051808303818588803b158015610d7257600080fd5b505af1158015610d86573d6000803e3d6000fd5b50506040517fffffffffffffffff0000000000000000000000000000000000000000000000008c1681527fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c13393506020019150610ddf9050565b60405180910390a15050505050505050565b60015473ffffffffffffffffffffffffffffffffffffffff16338114610e43576040517f1853971c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b6000601c821015610eea57506000611018565b6000610ef7601c846122ab565b905060005b6040518060400160405280600881526020017fd00dfeeddeadbeef00000000000000000000000000000000000000000000000081525051811015611011576040518060400160405280600881526020017fd00dfeeddeadbeef0000000000000000000000000000000000000000000000008152508181518110610f8157610f81612504565b01602001517fff00000000000000000000000000000000000000000000000000000000000000168585610fb484866125c7565b818110610fc357610fc3612504565b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610fff57600092505050611018565b8061100981612533565b915050610efc565b5060019150505b92915050565b606063ffffffff8711156110b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f64657374696e6174696f6e436861696e49642076616c7565207061737365642060448201527f746f6f2062696720746f2066697420696e2075696e74333200000000000000006064820152608401610430565b6fffffffffffffffffffffffffffffffff881115611154576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f6d696e416d6f756e742076616c75652070617373656420746f6f20626967207460448201527f6f2066697420696e2075696e74313238000000000000000000000000000000006064820152608401610430565b632340ab8f60e01b8b8b60601b8b60601b8b60801b8b60e01b8b60c01b8b60e01b8960001b8c8c6040516020016111959b9a999897969594939291906125da565b60405160208183030381529060405290509a9950505050505050505050565b6040805161014081018252600080825260606020808401829052838501829052818401839052608080850184905260a0850184905260c0850184905260e08501849052610100850184905261012085018490528551908101865283815290810183905293840181905283015290606c8310156112b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f696e76616c69642063616c6c6461746120286d7573742068617665206c656e6760448201527f7468203e203130382900000000000000000000000000000000000000000000006064820152608401610430565b60006112bf601c856122ab565b90506112cf600c600486886122be565b6112d8916122e8565b7fffffffffffffffff00000000000000000000000000000000000000000000000016835261130a6020600c86886122be565b61131391612330565b60601c60a08401526113296024602086886122be565b611332916123bc565b60e090811c90840152611349602c602486886122be565b611352916122e8565b60c01d60070b82526113686030602c86886122be565b611371916123bc565b60e01c60208301526113876050603086886122be565b61139091612402565b606083015261056781605086886122be565b606063ffffffff67ffffffffffffffff88161115611442576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f64657374696e6174696f6e436861696e49642076616c7565207061737365642060448201527f746f6f2062696720746f2066697420696e2075696e74333200000000000000006064820152608401610430565b604051611491907f5a39b10a00000000000000000000000000000000000000000000000000000000908b9060608c901b9060e08c811b9160c08d901b918c901b908b908b908b906020016126c0565b604051602081830303815290604052905098975050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146114ff576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811661154c576040517f1beca37400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff82160361159b576040517fbf1ea9fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127890600090a350565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806116cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610430565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff83166116f257505050565b73ffffffffffffffffffffffffffffffffffffffff821661173f576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa1580156117b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d89190612774565b1015610ac9576117ea83836000611811565b610ac983837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b8015806118b157506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa15801561188b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118af9190612774565b155b61193d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610430565b6040805173ffffffffffffffffffffffffffffffffffffffff848116602483015260448083018590528351808403909101815260649092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152610ac992869291600091611a08918516908490611ab5565b9050805160001480611a29575080806020019051810190611a29919061278d565b610ac9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610430565b6060611ac48484600085611acc565b949350505050565b606082471015611b5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610430565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611b8791906127af565b60006040518083038185875af1925050503d8060008114611bc4576040519150601f19603f3d011682016040523d82523d6000602084013e611bc9565b606091505b5091509150611bda87838387611be5565b979650505050505050565b60608315611c7b578251600003611c745773ffffffffffffffffffffffffffffffffffffffff85163b611c74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610430565b5081611ac4565b611ac48383815115611c905781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043091906121ae565b60008083601f840112611cd657600080fd5b50813567ffffffffffffffff811115611cee57600080fd5b6020830191508360208285010111156105a257600080fd5b60008060208385031215611d1957600080fd5b823567ffffffffffffffff811115611d3057600080fd5b611d3c85828601611cc4565b90969095509350505050565b60005b83811015611d63578181015183820152602001611d4b565b50506000910152565b60008151808452611d84816020860160208601611d48565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b805160070b825263ffffffff60208201511660208301526000604082015160806040850152611de86080850182611d6c565b606093840151949093019390935250919050565b604081528251604082015260006020840151610140806060850152611e25610180850183611d6c565b915060408601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0858403016080860152611e608382611d6c565b9250506060860151611e8a60a086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608086015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060a086015173ffffffffffffffffffffffffffffffffffffffff811660e08601525060c0860151610100818187015260e088015191506101208281880152818901519250611efe8488018415159052565b8801518015156101608801529250611f14915050565b508281036020840152611f278185611db6565b95945050505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611f5457600080fd5b919050565b803567ffffffffffffffff81168114611f5457600080fd5b8035600781900b8114611f5457600080fd5b803563ffffffff81168114611f5457600080fd5b6000806000806000806000806000806101208b8d031215611fb757600080fd5b8a359950611fc760208c01611f30565b985060408b01359750611fdc60608c01611f30565b9650611fea60808c01611f59565b9550611ff860a08c01611f71565b945061200660c08c01611f83565b935060e08b013567ffffffffffffffff81111561202257600080fd5b61202e8d828e01611cc4565b915080945050809250506101008b013590509295989b9194979a5092959850565b6000806020838503121561206257600080fd5b823567ffffffffffffffff8082111561207a57600080fd5b818501915085601f83011261208e57600080fd5b81358181111561209d57600080fd5b8660208260051b85010111156120b257600080fd5b60209290920196919550909350505050565b60008060008060008060008060e0898b0312156120e057600080fd5b883597506120f060208a01611f30565b96506040890135955061210560608a01611f71565b945061211360808a01611f83565b935060a089013567ffffffffffffffff81111561212f57600080fd5b61213b8b828c01611cc4565b999c989b50969995989497949560c00135949350505050565b6000806000806000806000806000806101208b8d03121561217457600080fd5b8a35995061218460208c01611f30565b985061219260408c01611f30565b975060608b0135965060808b01359550611ff860a08c01611f71565b6020815260006121c16020830184611d6c565b9392505050565b60008060008060008060008060e0898b0312156121e457600080fd5b883597506121f460208a01611f30565b965061220260408a01611f59565b955061221060608a01611f71565b945061221e60808a01611f83565b935060a0890135925060c089013567ffffffffffffffff81111561224157600080fd5b61224d8b828c01611cc4565b999c989b5096995094979396929594505050565b60006020828403121561227357600080fd5b6121c182611f30565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156110185761101861227c565b600080858511156122ce57600080fd5b838611156122db57600080fd5b5050820193919092039150565b7fffffffffffffffff00000000000000000000000000000000000000000000000081358181169160088510156123285780818660080360031b1b83161692505b505092915050565b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000081358181169160148510156123285760149490940360031b84901b1690921692915050565b7fffffffffffffffffffffffffffffffff0000000000000000000000000000000081358181169160108510156123285760109490940360031b84901b1690921692915050565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156123285760049490940360031b84901b1690921692915050565b80356020831015611018577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600061010073ffffffffffffffffffffffffffffffffffffffff808d168452808c1660208501525089604084015267ffffffffffffffff891660608401528760070b608084015263ffffffff871660a08401528060c08401526124ed818401868861243e565b9150508260e08301529a9950505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036125645761256461227c565b5060010190565b600061010073ffffffffffffffffffffffffffffffffffffffff808d168452808c166020850152508960408401528860608401528760070b608084015263ffffffff871660a08401528060c08401526124ed818401868861243e565b808201808211156110185761101861227c565b7fffffffff000000000000000000000000000000000000000000000000000000008c811682527fffffffffffffffff0000000000000000000000000000000000000000000000008c811660048401527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008c8116600c8501528b1660208401527fffffffffffffffffffffffffffffffff000000000000000000000000000000008a166034840152888216604484015287166048830152851660508201526054810184905260008284607484013750600091016074019081529a9950505050505050505050565b7fffffffff000000000000000000000000000000000000000000000000000000008a811682527fffffffffffffffff0000000000000000000000000000000000000000000000008a811660048401527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008a16600c8401528882166020840152871660248301528516602c82015260308101849052600082846050840137506000910160500190815298975050505050505050565b60006020828403121561278657600080fd5b5051919050565b60006020828403121561279f57600080fd5b815180151581146121c157600080fd5b600082516127c1818460208701611d48565b919091019291505056fea2646970667358221220950b9cb37c14cf3cd9b81d81a94bdb9c1d0c0aa8180522e7e3fef43ab63f90a864736f6c63430008110033";

type AcrossFacetPackedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AcrossFacetPackedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AcrossFacetPacked__factory extends ContractFactory {
  constructor(...args: AcrossFacetPackedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _spokePool: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AcrossFacetPacked> {
    return super.deploy(
      _spokePool,
      _wrappedNative,
      _owner,
      overrides || {}
    ) as Promise<AcrossFacetPacked>;
  }
  override getDeployTransaction(
    _spokePool: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _spokePool,
      _wrappedNative,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): AcrossFacetPacked {
    return super.attach(address) as AcrossFacetPacked;
  }
  override connect(signer: Signer): AcrossFacetPacked__factory {
    return super.connect(signer) as AcrossFacetPacked__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AcrossFacetPackedInterface {
    return new utils.Interface(_abi) as AcrossFacetPackedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AcrossFacetPacked {
    return new Contract(address, _abi, signerOrProvider) as AcrossFacetPacked;
  }
}
