/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AllBridgeFacet,
  AllBridgeFacetInterface,
} from "../AllBridgeFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_allBridge",
        type: "address",
        internalType: "contract IAllBridge",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAllBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_allBridgeData",
        type: "tuple",
        internalType: "struct AllBridgeFacet.AllBridgeData",
        components: [
          {
            name: "recipient",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "fees",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "receiveToken",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "messenger",
            type: "uint8",
            internalType: "enum IAllBridge.MessengerProtocol",
          },
          {
            name: "payFeeWithSendingAsset",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaAllBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_allBridgeData",
        type: "tuple",
        internalType: "struct AllBridgeFacet.AllBridgeData",
        components: [
          {
            name: "recipient",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "fees",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "receiveToken",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "messenger",
            type: "uint8",
            internalType: "enum IAllBridge.MessengerProtocol",
          },
          {
            name: "payFeeWithSendingAsset",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChainBytes32",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidConfig",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidNonEVMReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
  {
    type: "error",
    name: "UnsupportedAllBridgeChainId",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a060405234801561000f575f5ffd5b50604051611f19380380611f1983398101604081905261002e91610066565b6001600160a01b038116610055576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b0316608052610093565b5f60208284031215610076575f5ffd5b81516001600160a01b038116811461008c575f5ffd5b9392505050565b608051611e606100b95f395f818161072c0152818161076c01526108460152611e605ff3fe608060405260043610610028575f3560e01c8063632674691461002c5780636a51e9a914610041575b5f5ffd5b61003f61003a36600461193c565b610054565b005b61003f61004f3660046119ea565b610281565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100cf576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6100df3447611a36565b90508680610100015161011e576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561015c576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8861017f8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101b6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036101f3576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610230576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102448a5f01518b60c001518b8b336104a1565b60c08b01526102538a886105e3565b504791505081811115610274576102745f8461026f8585611a36565b610958565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102fc576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f61030c3447611a36565b9050846103318160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610368576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036103a5576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036103e2576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8580610100015115610420576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868061012001511561045e576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61047088608001518960c0015161098d565b61047a88886105e3565b504791505081811115610496576104965f8461026f8585611a36565b50505f909155505050565b5f828082036104dc576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f85856104ea600185611a36565b8181106104f9576104f9611a6e565b905060200281019061050b9190611a9b565b61051c906080810190606001611ad7565b90505f61052882610a41565b905073ffffffffffffffffffffffffffffffffffffffff82166105525761054f3482611a36565b90505b5f61055d8888610a8b565b90506105698888610b95565b6105768a89898985610c01565b5f8261058185610a41565b61058b9190611a36565b9050898110156105d5576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b5f6105f18360e00151610dc3565b90507311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168360a0015173ffffffffffffffffffffffffffffffffffffffff16036106b4578135610676576040517f58b0510000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8251604051833581528291907f815cd8dc72093a13fe3577112c391b6279303956526382ab98772d0239dbf78c9060200160405180910390a3610722565b815f01355f1c73ffffffffffffffffffffffffffffffffffffffff168360a0015173ffffffffffffffffffffffffffffffffffffffff1614610722576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61075583608001517f00000000000000000000000000000000000000000000000000000000000000008560c00151610ed9565b61076560c0830160a08401611af7565b15610844577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634cd480bd846080015173ffffffffffffffffffffffffffffffffffffffff165f1b8560c00151855f013585876040013588606001358960800160208101906107ea9190611b10565b8a602001356040518963ffffffff1660e01b8152600401610812989796959493929190611b67565b5f604051808303815f87803b158015610829575f5ffd5b505af115801561083b573d5f5f3e3d5ffd5b5050505061091c565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634cd480bd8360200135856080015173ffffffffffffffffffffffffffffffffffffffff165f1b8660c00151865f013586886040013589606001358a60800160208101906108c99190611b10565b5f6040518a63ffffffff1660e01b81526004016108ed989796959493929190611b67565b5f604051808303818588803b158015610904575f5ffd5b505af1158015610916573d5f5f3e3d5ffd5b50505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18360405161094b9190611bfc565b60405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff83166109825761097d8282610f05565b505050565b61097d838383610f72565b805f036109c6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610a1f5780341015610a1b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610a1b73ffffffffffffffffffffffffffffffffffffffff8316333084610fe0565b5f73ffffffffffffffffffffffffffffffffffffffff821615610a8357610a7e73ffffffffffffffffffffffffffffffffffffffff831630611038565b610a85565b475b92915050565b6060815f8167ffffffffffffffff811115610aa857610aa861170c565b604051908082528060200260200182016040528015610ad1578160200160208202803683370190505b5090505f5f5b83811015610b8a57868682818110610af157610af1611a6e565b9050602002810190610b039190611a9b565b610b14906080810190606001611ad7565b9150610b1f82610a41565b838281518110610b3157610b31611a6e565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610b825734838281518110610b6a57610b6a611a6e565b60200260200101818151610b7e9190611a36565b9052505b600101610ad7565b509095945050505050565b5f5b8181101561097d5736838383818110610bb257610bb2611a6e565b9050602002810190610bc49190611a9b565b9050610bd660e0820160c08301611af7565b15610bf857610bf8610bee6060830160408401611ad7565b826080013561098d565b50600101610b97565b83838383825f5b81811015610da957368a8a83818110610c2357610c23611a6e565b9050602002810190610c359190611a9b565b9050610c64610c4a6060830160408401611ad7565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610cc65750610cc6610c7d6040830160208401611ad7565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610cdd5750610cdd610c7d6020830183611ad7565b8015610d605750610d60610cf460a0830183611d0f565b610d02916004915f91611d77565b610d0b91611d9e565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610d96576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610da08c8261106b565b50600101610c08565b5050610db8848484845f6112de565b505050505050505050565b5f6001821480610dd35750600a82145b15610ddc575090565b60388203610dec57506002919050565b6606b2787ad08cbc8203610e0257506003919050565b660416edef1601be8203610e1857506004919050565b60898203610e2857506005919050565b61a4b18203610e3957506006919050565b61a86a8203610e4a57506008919050565b6121058203610e5b57506009919050565b61a4ec8203610e6c5750600b919050565b6620ef04111160008203610e825750600d919050565b60928203610e925750600c919050565b60828203610ea25750600e919050565b6040517f22df402100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b61097d8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6114f5565b73ffffffffffffffffffffffffffffffffffffffff8216610f52576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a1b73ffffffffffffffffffffffffffffffffffffffff831682611622565b73ffffffffffffffffffffffffffffffffffffffff8216610fbf576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61097d73ffffffffffffffffffffffffffffffffffffffff8416838361163b565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f5114171661102b57637939f4245f526004601cfd5b5f60605260405250505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b61108361107b6020830183611ad7565b6017903b1190565b6110b9576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f8190036110f8576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61110c610c4a6060850160408601611ad7565b611116575f61111c565b82608001355b90505f6111376111326080860160608701611ad7565b610a41565b9050815f0361116d5761116d6111536060860160408701611ad7565b6111636040870160208801611ad7565b8660800135610ed9565b5f8061117c6020870187611ad7565b73ffffffffffffffffffffffffffffffffffffffff16846111a060a0890189611d0f565b6040516111ae929190611e04565b5f6040518083038185875af1925050503d805f81146111e8576040519150601f19603f3d011682016040523d82523d5f602084013e6111ed565b606091505b5091509150816112005761120081611684565b5f6112146111326080890160608a01611ad7565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861124560208a018a611ad7565b61125560608b0160408c01611ad7565b61126560808c0160608d01611ad7565b8b608001358987116112775786611281565b6112818a88611a36565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f86826112ed600182611a36565b8181106112fc576112fc611a6e565b905060200281019061130e9190611a9b565b61131f906080810190606001611ad7565b90505f5f5f5f5f5f5f5b888110156114e55761133c60018a611a36565b8110801561134b575088600114155b15611426578d8d8281811061136257611362611a6e565b90506020028101906113749190611a9b565b611385906080810190606001611ad7565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611426578a81815181106113cc576113cc611a6e565b60200260200101516113dd87610a41565b6113e79190611a36565b965073ffffffffffffffffffffffffffffffffffffffff86161561140b575f61140d565b895b93508387111561142657611426868d61026f878b611a36565b8d8d8281811061143857611438611a6e565b905060200281019061144a9190611a9b565b61145b906060810190604001611ad7565b945061146685610a41565b925073ffffffffffffffffffffffffffffffffffffffff85161561148a575f61148c565b895b915081831180156114c957508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b156114dd576114dd858d61026f8587611a36565b600101611329565b5050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff84161561161c5773ffffffffffffffffffffffffffffffffffffffff831661155e576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa1580156115d1573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115f59190611e13565b101561161c5761161c73ffffffffffffffffffffffffffffffffffffffff8516848361168e565b50505050565b5f385f3884865af1610a1b5763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f5114171661167b576390b8ec185f526004601cfd5b5f603452505050565b8051602082018181fd5b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f5114171661167b575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f5114171661167b57633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff8111828210171561175d5761175d61170c565b60405290565b5f82601f830112611772575f5ffd5b813567ffffffffffffffff81111561178c5761178c61170c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff811182821017156117d9576117d961170c565b6040528181528382016020018510156117f0575f5ffd5b816020850160208301375f918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610ed4575f5ffd5b80358015158114610ed4575f5ffd5b5f610140828403121561184f575f5ffd5b611857611739565b823581529050602082013567ffffffffffffffff811115611876575f5ffd5b61188284828501611763565b602083015250604082013567ffffffffffffffff8111156118a1575f5ffd5b6118ad84828501611763565b6040830152506118bf6060830161180c565b60608201526118d06080830161180c565b60808201526118e160a0830161180c565b60a082015260c0828101359082015260e08083013590820152611907610100830161182f565b61010082015261191a610120830161182f565b61012082015292915050565b5f60c08284031215611936575f5ffd5b50919050565b5f5f5f5f6101008587031215611950575f5ffd5b843567ffffffffffffffff811115611966575f5ffd5b6119728782880161183e565b945050602085013567ffffffffffffffff81111561198e575f5ffd5b8501601f8101871361199e575f5ffd5b803567ffffffffffffffff8111156119b4575f5ffd5b8760208260051b84010111156119c8575f5ffd5b602091909101935091506119df8660408701611926565b905092959194509250565b5f5f60e083850312156119fb575f5ffd5b823567ffffffffffffffff811115611a11575f5ffd5b611a1d8582860161183e565b925050611a2d8460208501611926565b90509250929050565b81810381811115610a85577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611acd575f5ffd5b9190910192915050565b5f60208284031215611ae7575f5ffd5b611af08261180c565b9392505050565b5f60208284031215611b07575f5ffd5b611af08261182f565b5f60208284031215611b20575f5ffd5b813560048110611af0575f5ffd5b60048110611b63577f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b9052565b5f610100820190508982528860208301528760408301528660608301528560808301528460a0830152611b9d60c0830185611b2e565b8260e08301529998505050505050505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f60208301516101406040840152611c23610160840182611bb0565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611c5e8282611bb0565b9150506060840151611c88608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e0840151610100840152610100840151611cf761012085018215159052565b50610120840151801515610140850152509392505050565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611d42575f5ffd5b83018035915067ffffffffffffffff821115611d5c575f5ffd5b602001915036819003821315611d70575f5ffd5b9250929050565b5f5f85851115611d85575f5ffd5b83861115611d91575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015611dfd577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b5f60208284031215611e23575f5ffd5b505191905056fea26469706673582212204275b046ca56b8677d1ba98d0084fa2fb23bd9ecf6a6df94fae6158d0d3c114964736f6c634300081d0033";

type AllBridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AllBridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AllBridgeFacet__factory extends ContractFactory {
  constructor(...args: AllBridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _allBridge: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AllBridgeFacet> {
    return super.deploy(_allBridge, overrides || {}) as Promise<AllBridgeFacet>;
  }
  override getDeployTransaction(
    _allBridge: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_allBridge, overrides || {});
  }
  override attach(address: string): AllBridgeFacet {
    return super.attach(address) as AllBridgeFacet;
  }
  override connect(signer: Signer): AllBridgeFacet__factory {
    return super.connect(signer) as AllBridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AllBridgeFacetInterface {
    return new utils.Interface(_abi) as AllBridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AllBridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as AllBridgeFacet;
  }
}
