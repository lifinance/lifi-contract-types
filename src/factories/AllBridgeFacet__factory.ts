/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AllBridgeFacet,
  AllBridgeFacetInterface,
} from "../AllBridgeFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_allBridge",
        type: "address",
        internalType: "contract IAllBridge",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAllBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_allBridgeData",
        type: "tuple",
        internalType: "struct AllBridgeFacet.AllBridgeData",
        components: [
          {
            name: "fees",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "recipient",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "receiveToken",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "messenger",
            type: "uint8",
            internalType: "enum IAllBridge.MessengerProtocol",
          },
          {
            name: "payFeeWithSendingAsset",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaAllBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_allBridgeData",
        type: "tuple",
        internalType: "struct AllBridgeFacet.AllBridgeData",
        components: [
          {
            name: "fees",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "recipient",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "receiveToken",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "messenger",
            type: "uint8",
            internalType: "enum IAllBridge.MessengerProtocol",
          },
          {
            name: "payFeeWithSendingAsset",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051611d8c380380611d8c83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051611cf3610099600039600081816105fe0152818161063e015261073d0152611cf36000f3fe6080604052600436106100295760003560e01c8063a74ccb351461002e578063e40f246014610043575b600080fd5b61004161003c3660046117b8565b610056565b005b610041610051366004611865565b610288565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e234476118b5565b905086806101000151610121576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561015f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886101828160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101b9576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101f7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610234576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102498a600001518b60c001518b8b336104ac565b60c08b01526102588a886105f4565b50479150508181111561027a5761027a60008461027585856118b5565b610859565b505060009091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610303576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061031434476118b5565b9050846103398160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610370576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036103ae576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036103eb576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8580610100015115610429576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610467576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61047988608001518960c0015161088f565b61048388886105f4565b5047915050818111156104a0576104a060008461027585856118b5565b50506000909155505050565b6000828082036104e8576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856104f76001856118b5565b818110610506576105066118ef565b9050602002810190610518919061191e565b61052990608081019060600161195c565b9050600061053682610944565b905073ffffffffffffffffffffffffffffffffffffffff82166105605761055d34826118b5565b90505b600061056c888861098f565b90506105788888610a9b565b6105858a89898985610b08565b60008261059185610944565b61059b91906118b5565b9050898110156105e6576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b61062782608001517f00000000000000000000000000000000000000000000000000000000000000008460c00151610eba565b61063760e0820160c0830161197e565b1561073b577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634cd480bd836080015173ffffffffffffffffffffffffffffffffffffffff1660001b8460c0015184602001358560400135866060013587608001358860a00160208101906106c29190611999565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e08a901b16815261070497969594939291908b35906004016119f5565b600060405180830381600087803b15801561071e57600080fd5b505af1158015610732573d6000803e3d6000fd5b5050505061081e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634cd480bd8260000135846080015173ffffffffffffffffffffffffffffffffffffffff1660001b8560c0015185602001358660400135876060013588608001358960a00160208101906107c69190611999565b60006040518a63ffffffff1660e01b81526004016107eb9897969594939291906119f5565b6000604051808303818588803b15801561080457600080fd5b505af1158015610818573d6000803e3d6000fd5b50505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161084d9190611aa3565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff83161561088557610880838383610ee6565b505050565b6108808282610f54565b806000036108c9576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610922578034101561091e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61091e73ffffffffffffffffffffffffffffffffffffffff8316333084610fc1565b600073ffffffffffffffffffffffffffffffffffffffff8216156109875761098273ffffffffffffffffffffffffffffffffffffffff83163061101e565b610989565b475b92915050565b60608160008167ffffffffffffffff8111156109ad576109ad61157e565b6040519080825280602002602001820160405280156109d6578160200160208202803683370190505b5090506000805b83811015610a90578686828181106109f7576109f76118ef565b9050602002810190610a09919061191e565b610a1a90608081019060600161195c565b9150610a2582610944565b838281518110610a3757610a376118ef565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610a885734838281518110610a7057610a706118ef565b60200260200101818151610a8491906118b5565b9052505b6001016109dd565b509095945050505050565b60005b818110156108805736838383818110610ab957610ab96118ef565b9050602002810190610acb919061191e565b9050610add60e0820160c0830161197e565b15610aff57610aff610af5606083016040840161195c565b826080013561088f565b50600101610a9e565b838383838260018114610dd55760008585610b246001856118b5565b818110610b3357610b336118ef565b9050602002810190610b45919061191e565b610b5690608081019060600161195c565b9050600089815b81811015610d0157368d8d83818110610b7857610b786118ef565b9050602002810190610b8a919061191e565b9050610bb9610b9f606083016040840161195c565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610c1c5750610c1c610bd2604083016020840161195c565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610c335750610c33610bd2602083018361195c565b8015610cb85750610cb8610c4a60a0830183611bb6565b610c5991600491600091611c22565b610c6291611c4c565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610cee576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cf88f82611053565b50600101610b5d565b505060005b610d116001856118b5565b811015610dcd576000888883818110610d2c57610d2c6118ef565b9050602002810190610d3e919061191e565b610d4f90608081019060600161195c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610dc457858281518110610d9657610d966118ef565b6020026020010151610da782610944565b610db191906118b5565b92508215610dc457610dc4818885610859565b50600101610d06565b505050610eae565b8760005b81811015610eab57368b8b83818110610df457610df46118ef565b9050602002810190610e06919061191e565b9050610e1b610b9f606083016040840161195c565b80610e345750610e34610bd2604083016020840161195c565b8015610e4b5750610e4b610bd2602083018361195c565b8015610e625750610e62610c4a60a0830183611bb6565b610e98576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ea28d82611053565b50600101610dd9565b50505b50505050505050505050565b6108808383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611330565b73ffffffffffffffffffffffffffffffffffffffff8216610f33576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61088073ffffffffffffffffffffffffffffffffffffffff84168383611443565b73ffffffffffffffffffffffffffffffffffffffff8216610fa1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61091e73ffffffffffffffffffffffffffffffffffffffff831682611492565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d15600160005114171661101057637939f4246000526004601cfd5b600060605260405250505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b611068611063602083018361195c565b6114ae565b61109e576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036110de576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006110f3610b9f606085016040860161195c565b6110fe576000611104565b82608001355b9050600061112061111b606086016040870161195c565b610944565b9050600061113761111b608087016060880161195c565b90508260000361116e5761116e611154606087016040880161195c565b611164604088016020890161195c565b8760800135610eba565b84608001358210156111b9576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016105dd565b6000806111c9602088018861195c565b73ffffffffffffffffffffffffffffffffffffffff16856111ed60a08a018a611bb6565b6040516111fb929190611c94565b60006040518083038185875af1925050503d8060008114611238576040519150601f19603f3d011682016040523d82523d6000602084013e61123d565b606091505b50915091508161125057611250816114ea565b600061126561111b60808a0160608b0161195c565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961129660208b018b61195c565b6112a660608c0160408d0161195c565b6112b660808d0160608e0161195c565b8c608001358987116112c857866112d2565b6112d28a886118b5565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661137d576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa1580156113f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114169190611ca4565b101561143d5761143d73ffffffffffffffffffffffffffffffffffffffff851684836114f4565b50505050565b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d156001600051141716611488576390b8ec186000526004601cfd5b6000603452505050565b60003860003884865af161091e5763b12d13eb6000526004601cfd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906114e25750808214155b949350505050565b8051602082018181fd5b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d1560016000511417166114885760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d15600160005114171661148857633e3f8f736000526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156115d1576115d161157e565b60405290565b600082601f8301126115e857600080fd5b813567ffffffffffffffff808211156116035761160361157e565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156116495761164961157e565b8160405283815286602085880101111561166257600080fd5b836020870160208301376000602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146116a657600080fd5b919050565b803580151581146116a657600080fd5b600061014082840312156116ce57600080fd5b6116d66115ad565b905081358152602082013567ffffffffffffffff808211156116f757600080fd5b611703858386016115d7565b6020840152604084013591508082111561171c57600080fd5b50611729848285016115d7565b60408301525061173b60608301611682565b606082015261174c60808301611682565b608082015261175d60a08301611682565b60a082015260c082013560c082015260e082013560e08201526101006117848184016116ab565b908201526101206117968382016116ab565b9082015292915050565b600060e082840312156117b257600080fd5b50919050565b60008060008061012085870312156117cf57600080fd5b843567ffffffffffffffff808211156117e757600080fd5b6117f3888389016116bb565b9550602087013591508082111561180957600080fd5b818701915087601f83011261181d57600080fd5b81358181111561182c57600080fd5b8860208260051b850101111561184157600080fd5b60208301955080945050505061185a86604087016117a0565b905092959194509250565b600080610100838503121561187957600080fd5b823567ffffffffffffffff81111561189057600080fd5b61189c858286016116bb565b9250506118ac84602085016117a0565b90509250929050565b81810381811115610989577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261195257600080fd5b9190910192915050565b60006020828403121561196e57600080fd5b61197782611682565b9392505050565b60006020828403121561199057600080fd5b611977826116ab565b6000602082840312156119ab57600080fd5b81356004811061197757600080fd5b600481106119f1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000610100820190508982528860208301528760408301528660608301528560808301528460a0830152611a2c60c08301856119ba565b8260e08301529998505050505050505050565b6000815180845260005b81811015611a6557602081850181015186830182015201611a49565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081528151602082015260006020830151610140806040850152611acc610160850183611a3f565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152611b078382611a3f565b9250506060850151611b31608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120611ba48187018315159052565b90950151151593019290925250919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611beb57600080fd5b83018035915067ffffffffffffffff821115611c0657600080fd5b602001915036819003821315611c1b57600080fd5b9250929050565b60008085851115611c3257600080fd5b83861115611c3f57600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015611c8c5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b600060208284031215611cb657600080fd5b505191905056fea26469706673582212209bae25040ea8c784716d68f9134641cc2b53b9daac507b63233ad35555a598cc64736f6c63430008110033";

type AllBridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AllBridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AllBridgeFacet__factory extends ContractFactory {
  constructor(...args: AllBridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _allBridge: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AllBridgeFacet> {
    return super.deploy(_allBridge, overrides || {}) as Promise<AllBridgeFacet>;
  }
  override getDeployTransaction(
    _allBridge: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_allBridge, overrides || {});
  }
  override attach(address: string): AllBridgeFacet {
    return super.attach(address) as AllBridgeFacet;
  }
  override connect(signer: Signer): AllBridgeFacet__factory {
    return super.connect(signer) as AllBridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AllBridgeFacetInterface {
    return new utils.Interface(_abi) as AllBridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AllBridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as AllBridgeFacet;
  }
}
