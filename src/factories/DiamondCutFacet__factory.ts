/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DiamondCutFacet,
  DiamondCutFacetInterface,
} from "../DiamondCutFacet";

const _abi = [
  {
    type: "function",
    name: "diamondCut",
    inputs: [
      {
        name: "_diamondCut",
        type: "tuple[]",
        internalType: "struct LibDiamond.FacetCut[]",
        components: [
          {
            name: "facetAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "action",
            type: "uint8",
            internalType: "enum LibDiamond.FacetCutAction",
          },
          {
            name: "functionSelectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
      {
        name: "_init",
        type: "address",
        internalType: "address",
      },
      {
        name: "_calldata",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "DiamondCut",
    inputs: [
      {
        name: "_diamondCut",
        type: "tuple[]",
        indexed: false,
        internalType: "struct LibDiamond.FacetCut[]",
        components: [
          {
            name: "facetAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "action",
            type: "uint8",
            internalType: "enum LibDiamond.FacetCutAction",
          },
          {
            name: "functionSelectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
      {
        name: "_init",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "_calldata",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CalldataEmptyButInitNotZero",
    inputs: [],
  },
  {
    type: "error",
    name: "FacetAddressIsNotZero",
    inputs: [],
  },
  {
    type: "error",
    name: "FacetAddressIsZero",
    inputs: [],
  },
  {
    type: "error",
    name: "FacetContainsNoCode",
    inputs: [],
  },
  {
    type: "error",
    name: "FunctionAlreadyExists",
    inputs: [],
  },
  {
    type: "error",
    name: "FunctionDoesNotExist",
    inputs: [],
  },
  {
    type: "error",
    name: "FunctionIsImmutable",
    inputs: [],
  },
  {
    type: "error",
    name: "IncorrectFacetCutAction",
    inputs: [],
  },
  {
    type: "error",
    name: "InitReverted",
    inputs: [],
  },
  {
    type: "error",
    name: "InitZeroButCalldataNotEmpty",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSelectorsInFace",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyContractOwner",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b506116838061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c80631f931c1c1461002d575b5f5ffd5b61004061003b3660046110cf565b610042565b005b61004a61009a565b6100936100578587611247565b8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061010f92505050565b5050505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff16331461010d576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f5b835181101561029f575f84828151811061012d5761012d61139a565b60200260200101516020015190505f600281111561014d5761014d6113c7565b81600281111561015f5761015f6113c7565b036101ac576101a78583815181106101795761017961139a565b60200260200101515f01518684815181106101965761019661139a565b6020026020010151604001516102ea565b610296565b60018160028111156101c0576101c06113c7565b03610208576101a78583815181106101da576101da61139a565b60200260200101515f01518684815181106101f7576101f761139a565b60200260200101516040015161057d565b600281600281111561021c5761021c6113c7565b03610264576101a78583815181106102365761023661139a565b60200260200101515f01518684815181106102535761025361139a565b602002602001015160400151610820565b6040517fe548e6b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50600101610111565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516102d393929190611440565b60405180910390a16102e58282610958565b505050565b80515f03610324576040517f7bc5595000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c73ffffffffffffffffffffffffffffffffffffffff8316610392576040517fc68ec83a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff83165f908152600182016020526040812054906bffffffffffffffffffffffff821690036103d9576103d98285610af4565b5f5b8351811015610093575f8482815181106103f7576103f761139a565b6020908102919091018101517fffffffff0000000000000000000000000000000000000000000000000000000081165f9081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff168015610485576040517fa023275d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffff0000000000000000000000000000000000000000000000000000000082165f81815260208781526040808320805473ffffffffffffffffffffffffffffffffffffffff908116740100000000000000000000000000000000000000006bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281547fffffffffffffffffffffffff0000000000000000000000000000000000000000161790555050600191820191016103db565b80515f036105b7576040517f7bc5595000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c73ffffffffffffffffffffffffffffffffffffffff8316610625576040517fc68ec83a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff83165f908152600182016020526040812054906bffffffffffffffffffffffff8216900361066c5761066c8285610af4565b5f5b8351811015610093575f84828151811061068a5761068a61139a565b6020908102919091018101517fffffffff0000000000000000000000000000000000000000000000000000000081165f9081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716810361071d576040517fa023275d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610728858284610b69565b7fffffffff0000000000000000000000000000000000000000000000000000000082165f81815260208781526040808320805473ffffffffffffffffffffffffffffffffffffffff908116740100000000000000000000000000000000000000006bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281547fffffffffffffffffffffffff00000000000000000000000000000000000000001617905550506001918201910161066e565b80515f0361085a576040517f7bc5595000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c73ffffffffffffffffffffffffffffffffffffffff8316156108c9576040517f79c9df2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b8251811015610952575f8382815181106108e7576108e761139a565b6020908102919091018101517fffffffff0000000000000000000000000000000000000000000000000000000081165f9081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16610948848284610b69565b50506001016108cb565b50505050565b73ffffffffffffffffffffffffffffffffffffffff82166109b0578051156109ac576040517f9811686000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80515f036109ea576040517f4220056600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82163014610a1057610a1082611026565b5f5f8373ffffffffffffffffffffffffffffffffffffffff1683604051610a3791906115b3565b5f60405180830381855af49150503d805f8114610a6f576040519150601f19603f3d011682016040523d82523d5f602084013e610a74565b606091505b50915091508161095257805115610ac257806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab991906115c9565b60405180910390fd5b6040517fc53ebed500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610afd81611026565b60028201805473ffffffffffffffffffffffffffffffffffffffff9092165f8181526001948501602090815260408220860185905594840183559182529290200180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b73ffffffffffffffffffffffffffffffffffffffff8216610bb6576040517fa9ad62f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff831603610c05576040517fc3c5ec3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081165f908152602084815260408083205473ffffffffffffffffffffffffffffffffffffffff86168452600180880190935290832054740100000000000000000000000000000000000000009091046bffffffffffffffffffffffff169291610c8e916115e2565b9050808214610dd25773ffffffffffffffffffffffffffffffffffffffff84165f9081526001860160205260408120805483908110610ccf57610ccf61139a565b5f918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610d2c57610d2c61139a565b5f91825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff0000000000000000000000000000000000000000000000000000000092909216825286905260409020805473ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000006bffffffffffffffffffffffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff84165f9081526001860160205260409020805480610e0757610e07611620565b5f828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff0000000000000000000000000000000000000000000000000000000085168252869052604081208190558190036100935760028501545f90610e9e906001906115e2565b73ffffffffffffffffffffffffffffffffffffffff86165f908152600180890160205260409091200154909150808214610f88575f876002018381548110610ee857610ee861139a565b5f9182526020909120015460028901805473ffffffffffffffffffffffffffffffffffffffff9092169250829184908110610f2557610f2561139a565b5f91825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff948516179055929091168152600189810190925260409020018190555b86600201805480610f9b57610f9b611620565b5f828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff88168252600189810190915260408220015550505050505050565b803b5f8190036109ac576040517fe350060000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b803573ffffffffffffffffffffffffffffffffffffffff81168114611085575f5ffd5b919050565b5f5f83601f84011261109a575f5ffd5b50813567ffffffffffffffff8111156110b1575f5ffd5b6020830191508360208285010111156110c8575f5ffd5b9250929050565b5f5f5f5f5f606086880312156110e3575f5ffd5b853567ffffffffffffffff8111156110f9575f5ffd5b8601601f81018813611109575f5ffd5b803567ffffffffffffffff81111561111f575f5ffd5b8860208260051b8401011115611133575f5ffd5b602091820196509450611147908701611062565b9250604086013567ffffffffffffffff811115611162575f5ffd5b61116e8882890161108a565b969995985093965092949392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040516060810167ffffffffffffffff811182821017156111cf576111cf61117f565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561121c5761121c61117f565b604052919050565b5f67ffffffffffffffff82111561123d5761123d61117f565b5060051b60200190565b5f61125961125484611224565b6111d5565b8381526020810190600585901b840136811115611274575f5ffd5b845b8181101561138f57803567ffffffffffffffff811115611294575f5ffd5b860160603682900312156112a6575f5ffd5b6112ae6111ac565b6112b782611062565b81526020820135600381106112ca575f5ffd5b6020820152604082013567ffffffffffffffff8111156112e8575f5ffd5b919091019036601f8301126112fb575f5ffd5b813561130961125482611224565b8082825260208201915060208360051b86010192503683111561132a575f5ffd5b6020850194505b828510156113795784357fffffffff0000000000000000000000000000000000000000000000000000000081168114611368575f5ffd5b825260209485019490910190611331565b6040840152505085525060209384019301611276565b509095945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b5f606082016060835280865180835260808501915060808160051b8601019250602088015f5b82811015611577577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8087860301845281516060860173ffffffffffffffffffffffffffffffffffffffff82511687526020820151600381106114ef577f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b8060208901525060408201519150606060408801528082518083526080890191506020840193505f92505b8083101561155f577fffffffff00000000000000000000000000000000000000000000000000000000845116825260208201915060208401935060018301925061151a565b50965050506020938401939190910190600101611466565b50505073ffffffffffffffffffffffffffffffffffffffff861660208501525082810360408401526115a981856113f4565b9695505050505050565b5f82518060208501845e5f920191825250919050565b602081525f6115db60208301846113f4565b9392505050565b8181038181111561161a577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfea26469706673582212204b8b2eedda36da2894290332df19687a425fd678adf14fd449ead1ac4f0de31b64736f6c634300081d0033";

type DiamondCutFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondCutFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondCutFacet__factory extends ContractFactory {
  constructor(...args: DiamondCutFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondCutFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondCutFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondCutFacet {
    return super.attach(address) as DiamondCutFacet;
  }
  override connect(signer: Signer): DiamondCutFacet__factory {
    return super.connect(signer) as DiamondCutFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCutFacetInterface {
    return new utils.Interface(_abi) as DiamondCutFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondCutFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondCutFacet;
  }
}
