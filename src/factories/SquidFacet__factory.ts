/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { SquidFacet, SquidFacetInterface } from "../SquidFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISquidRouter",
        name: "_squidRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotBridgeToSameNetwork",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "integrator",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "referrer",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fromAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "toAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toAmount",
        type: "uint256",
      },
    ],
    name: "LiFiGenericSwapCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "integrator",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "referrer",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fromAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "toAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toAmount",
        type: "uint256",
      },
    ],
    name: "LiFiSwappedGeneric",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    inputs: [],
    name: "squidRouter",
    outputs: [
      {
        internalType: "contract ISquidRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum SquidFacet.RouteType",
            name: "routeType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "destinationChain",
            type: "string",
          },
          {
            internalType: "string",
            name: "bridgedTokenSymbol",
            type: "string",
          },
          {
            components: [
              {
                internalType: "enum ISquidMulticall.CallType",
                name: "callType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
            ],
            internalType: "struct ISquidMulticall.Call[]",
            name: "sourceCalls",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ISquidMulticall.CallType",
                name: "callType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
            ],
            internalType: "struct ISquidMulticall.Call[]",
            name: "destinationCalls",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "forecallEnabled",
            type: "bool",
          },
        ],
        internalType: "struct SquidFacet.SquidData",
        name: "_squidData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaSquid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum SquidFacet.RouteType",
            name: "routeType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "destinationChain",
            type: "string",
          },
          {
            internalType: "string",
            name: "bridgedTokenSymbol",
            type: "string",
          },
          {
            components: [
              {
                internalType: "enum ISquidMulticall.CallType",
                name: "callType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
            ],
            internalType: "struct ISquidMulticall.Call[]",
            name: "sourceCalls",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ISquidMulticall.CallType",
                name: "callType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
            ],
            internalType: "struct ISquidMulticall.Call[]",
            name: "destinationCalls",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "forecallEnabled",
            type: "bool",
          },
        ],
        internalType: "struct SquidFacet.SquidData",
        name: "_squidData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaSquid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620031b3380380620031b3833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b608051613104620000af60003960008181604b015281816106e001528181610725015281816107f201526108a801526131046000f3fe6080604052600436106100345760003560e01c80633b71bbc1146100395780636a0f3cbd14610096578063f85856af146100ab575b600080fd5b34801561004557600080fd5b5061006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100a96100a4366004612813565b6100be565b005b6100a96100b93660046128d2565b61030b565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610139576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061014a3447612965565b905086806101000151610189576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101ac8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101e3576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610221576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361025e576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101208901516080870151511515901515146102a6576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102bb89600001518a60c001518a8a33610557565b60c08a01526102ca898761069f565b5047905060008282116102de5760006102e8565b6102e88383612965565b905080156102fc576102fc6000858361099e565b50506000909255505050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610386576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006103973447612965565b9050846103bc8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103f3576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610431576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361046e576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101008601516060860151511515901515146104b6576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101208601516080860151511515901515146104fe576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61051086608001518760c001516109d4565b61051a868661069f565b5047600082821161052c576000610536565b6105368383612965565b9050801561054a5761054a6000858361099e565b5050600090925550505050565b600082808203610593576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856105a2600185612965565b8181106105b1576105b1612978565b90506020028101906105c391906129a7565b6105d49060808101906060016129e5565b905060006105e182610b4a565b905073ffffffffffffffffffffffffffffffffffffffff821661060b576106083482612965565b90505b60006106178888610c03565b90506106238888610d0f565b6106308a89898985610d70565b60008261063c85610b4a565b6106469190612965565b905089811015610691576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b608082015160a082015173ffffffffffffffffffffffffffffffffffffffff82166106da5760c08401516106d39082612a00565b9050610709565b610709827f00000000000000000000000000000000000000000000000000000000000000008660c00151611122565b60008351600281111561071e5761071e612a13565b036107d6577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633c65974182856020015186604001518860c0015188608001518a60a001518a60c001516040518863ffffffff1660e01b815260040161079f96959493929190612b9a565b6000604051808303818588803b1580156107b857600080fd5b505af11580156107cc573d6000803e3d6000fd5b5050505050610961565b6001835160028111156107eb576107eb612a13565b0361088c577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f35af1f88286608001518760c0015187602001516108618a60a0015173ffffffffffffffffffffffffffffffffffffffff16601461126d565b89604001518a606001516040518863ffffffff1660e01b815260040161079f96959493929190612c0a565b6002835160028111156108a1576108a1612a13565b03610961577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638ca3bf688286608001518760c001518760200151886040015189606001518a608001518c60a001518c60c001516040518a63ffffffff1660e01b815260040161092e989796959493929190612c86565b6000604051808303818588803b15801561094757600080fd5b505af115801561095b573d6000803e3d6000fd5b50505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1846040516109909190612d15565b60405180910390a150505050565b73ffffffffffffffffffffffffffffffffffffffff8316156109ca576109c58383836114b7565b505050565b6109c582826115e6565b73ffffffffffffffffffffffffffffffffffffffff8216610a2d5780341015610a29576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610a67576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610ad4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af89190612e28565b905081811015610b3e576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610688565b6109c583333085611710565b600073ffffffffffffffffffffffffffffffffffffffff821615610bfb576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf69190612e28565b610bfd565b475b92915050565b60608160008167ffffffffffffffff811115610c2157610c2161231c565b604051908082528060200260200182016040528015610c4a578160200160208202803683370190505b5090506000805b83811015610d0457868682818110610c6b57610c6b612978565b9050602002810190610c7d91906129a7565b610c8e9060808101906060016129e5565b9150610c9982610b4a565b838281518110610cab57610cab612978565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610cfc5734838281518110610ce457610ce4612978565b60200260200101818151610cf89190612965565b9052505b600101610c51565b509095945050505050565b60005b818110156109c5576000838383818110610d2e57610d2e612978565b9050602002810190610d4091906129a7565b610d4990612e41565b90508060c0015115610d6757610d67816040015182608001516109d4565b50600101610d12565b83838383826001811461103d5760008585610d8c600185612965565b818110610d9b57610d9b612978565b9050602002810190610dad91906129a7565b610dbe9060808101906060016129e5565b9050600089815b81811015610f6957368d8d83818110610de057610de0612978565b9050602002810190610df291906129a7565b9050610e21610e0760608301604084016129e5565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610e845750610e84610e3a60408301602084016129e5565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610e9b5750610e9b610e3a60208301836129e5565b8015610f205750610f20610eb260a0830183612edb565b610ec191600491600091612f47565b610eca91612f71565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610f56576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f608f8261192a565b50600101610dc5565b505060005b610f79600185612965565b811015611035576000888883818110610f9457610f94612978565b9050602002810190610fa691906129a7565b610fb79060808101906060016129e5565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461102c57858281518110610ffe57610ffe612978565b602002602001015161100f82610b4a565b6110199190612965565b9250821561102c5761102c81888561099e565b50600101610f6e565b505050611116565b8760005b8181101561111357368b8b8381811061105c5761105c612978565b905060200281019061106e91906129a7565b9050611083610e0760608301604084016129e5565b8061109c575061109c610e3a60408301602084016129e5565b80156110b357506110b3610e3a60208301836129e5565b80156110ca57506110ca610eb260a0830183612edb565b611100576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61110a8d8261192a565b50600101611041565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661114257505050565b73ffffffffffffffffffffffffffffffffffffffff821661118f576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015611205573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112299190612e28565b905081811015611267576112678484611262847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612965565b611c40565b50505050565b6060600061127c836002612fb9565b611287906002612a00565b67ffffffffffffffff81111561129f5761129f61231c565b6040519080825280601f01601f1916602001820160405280156112c9576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061130057611300612978565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061136357611363612978565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600061139f846002612fb9565b6113aa906001612a00565b90505b6001811115611447577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106113eb576113eb612978565b1a60f81b82828151811061140157611401612978565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c9361144081612fd0565b90506113ad565b5083156114b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610688565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8316611504576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611571573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115959190612e28565b9050808211156115db576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610688565b611267848484611dbc565b73ffffffffffffffffffffffffffffffffffffffff8216611633576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611676576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610688565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146116d0576040519150601f19603f3d011682016040523d82523d6000602084013e6116d5565b606091505b50509050806109c5576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841661175d576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166117aa576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa15801561181b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183f9190612e28565b905061184d82868686611e12565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa1580156118bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e19190612e28565b6118eb9190612965565b14611922576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b61194061193a60208301836129e5565b3b151590565b611976576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036119b6576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006119cb610e0760608501604086016129e5565b6119d65760006119dc565b82608001355b905060006119f86119f360608601604087016129e5565b610b4a565b90506000611a0f6119f360808701606088016129e5565b905082600003611a4657611a46611a2c60608701604088016129e5565b611a3c60408801602089016129e5565b8760800135611122565b8460800135821015611a91576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610688565b600080611aa160208801886129e5565b73ffffffffffffffffffffffffffffffffffffffff1685611ac560a08a018a612edb565b604051611ad3929190613005565b60006040518083038185875af1925050503d8060008114611b10576040519150601f19603f3d011682016040523d82523d6000602084013e611b15565b606091505b509150915081611b60576000611b2a82611e70565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106889190613015565b6000611b756119f360808a0160608b016129e5565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611ba660208b018b6129e5565b611bb660608c0160408d016129e5565b611bc660808d0160608e016129e5565b8c60800135898711611bd85786611be2565b611be28a88612965565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611cb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cdb9190612e28565b611ce59190612a00565b60405173ffffffffffffffffffffffffffffffffffffffff85166024820152604481018290529091506112679085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611ee7565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526109c59084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611d3a565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526112679085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611d3a565b6060604482511015611eb557505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611ed16004808551611ec99190612965565b859190611ff3565b9050808060200190518101906114b09190613028565b6000611f49826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661210d9092919063ffffffff16565b8051909150156109c55780806020019051810190611f67919061309f565b6109c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610688565b60608161200181601f612a00565b1015612039576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120438284612a00565b8451101561207d576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608215801561209c5760405191506000825260208201604052612104565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156120d55780518352602092830192016120bd565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b606061211c8484600085612124565b949350505050565b6060824710156121b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610688565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516121df91906130bc565b60006040518083038185875af1925050503d806000811461221c576040519150601f19603f3d011682016040523d82523d6000602084013e612221565b606091505b50915091506122328783838761223d565b979650505050505050565b606083156122d35782516000036122cc5773ffffffffffffffffffffffffffffffffffffffff85163b6122cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610688565b508161211c565b61211c83838151156122e85781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106889190613015565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561236f5761236f61231c565b60405290565b60405160a0810167ffffffffffffffff8111828210171561236f5761236f61231c565b60405160e0810167ffffffffffffffff8111828210171561236f5761236f61231c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156124025761240261231c565b604052919050565b600067ffffffffffffffff8211156124245761242461231c565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261246157600080fd5b813561247461246f8261240a565b6123bb565b81815284602083860101111561248957600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146124ca57600080fd5b919050565b80151581146124dd57600080fd5b50565b80356124ca816124cf565b600061014082840312156124fe57600080fd5b61250661234b565b905081358152602082013567ffffffffffffffff8082111561252757600080fd5b61253385838601612450565b6020840152604084013591508082111561254c57600080fd5b5061255984828501612450565b60408301525061256b606083016124a6565b606082015261257c608083016124a6565b608082015261258d60a083016124a6565b60a082015260c082013560c082015260e082013560e08201526101006125b48184016124e0565b908201526101206125c68382016124e0565b9082015292915050565b8035600381106124ca57600080fd5b600082601f8301126125f057600080fd5b8135602067ffffffffffffffff8083111561260d5761260d61231c565b8260051b61261c8382016123bb565b938452858101830193838101908886111561263657600080fd5b84880192505b85831015612722578235848111156126545760008081fd5b880160a0818b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181131561268a5760008081fd5b612692612375565b87830135600481106126a45760008081fd5b815260406126b38482016124a6565b89830152606080850135828401526080915081850135898111156126d75760008081fd5b6126e58f8c83890101612450565b828501525050828401359250878311156126ff5760008081fd5b61270d8d8a85870101612450565b9082015284525050918401919084019061263c565b98975050505050505050565b600060e0828403121561274057600080fd5b612748612398565b9050612753826125d0565b8152602082013567ffffffffffffffff8082111561277057600080fd5b61277c85838601612450565b6020840152604084013591508082111561279557600080fd5b6127a185838601612450565b604084015260608401359150808211156127ba57600080fd5b6127c6858386016125df565b606084015260808401359150808211156127df57600080fd5b506127ec848285016125df565b60808301525060a082013560a082015261280860c083016124e0565b60c082015292915050565b6000806000806060858703121561282957600080fd5b843567ffffffffffffffff8082111561284157600080fd5b61284d888389016124eb565b9550602087013591508082111561286357600080fd5b818701915087601f83011261287757600080fd5b81358181111561288657600080fd5b8860208260051b850101111561289b57600080fd5b6020830195508094505060408701359150808211156128b957600080fd5b506128c68782880161272e565b91505092959194509250565b600080604083850312156128e557600080fd5b823567ffffffffffffffff808211156128fd57600080fd5b612909868387016124eb565b9350602085013591508082111561291f57600080fd5b5061292c8582860161272e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610bfd57610bfd612936565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126129db57600080fd5b9190910192915050565b6000602082840312156129f757600080fd5b6114b0826124a6565b80820180821115610bfd57610bfd612936565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60005b83811015612a5d578181015183820152602001612a45565b50506000910152565b60008151808452612a7e816020860160208601612a42565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501808196508360051b810191508286016000805b86811015612b8c578385038a52825160a081516004808210612b17577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b5087528188015173ffffffffffffffffffffffffffffffffffffffff168888015260408083015190880152606080830151818901839052612b5a838a0182612a66565b9250505060808083015192508782038189015250612b788183612a66565b9b88019b9650505091850191600101612acf565b509298975050505050505050565b60c081526000612bad60c0830189612a66565b8281036020840152612bbf8189612a66565b90508660408401528281036060840152612bd98187612ab0565b73ffffffffffffffffffffffffffffffffffffffff959095166080840152505090151560a090910152949350505050565b73ffffffffffffffffffffffffffffffffffffffff8716815285602082015260c060408201526000612c3f60c0830187612a66565b8281036060840152612c518187612a66565b90508281036080840152612c658186612a66565b905082810360a0840152612c798185612ab0565b9998505050505050505050565b600061010073ffffffffffffffffffffffffffffffffffffffff808c1684528a6020850152816040850152612cbd8285018b612a66565b91508382036060850152612cd1828a612a66565b91508382036080850152612ce58289612ab0565b915083820360a0850152612cf98288612ab0565b951660c0840152505090151560e0909101529695505050505050565b602081528151602082015260006020830151610140806040850152612d3e610160850183612a66565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152612d798382612a66565b9250506060850151612da3608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120612e168187018315159052565b90950151151593019290925250919050565b600060208284031215612e3a57600080fd5b5051919050565b600060e08236031215612e5357600080fd5b612e5b612398565b612e64836124a6565b8152612e72602084016124a6565b6020820152612e83604084016124a6565b6040820152612e94606084016124a6565b60608201526080830135608082015260a083013567ffffffffffffffff811115612ebd57600080fd5b612ec936828601612450565b60a08301525061280860c084016124e0565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612f1057600080fd5b83018035915067ffffffffffffffff821115612f2b57600080fd5b602001915036819003821315612f4057600080fd5b9250929050565b60008085851115612f5757600080fd5b83861115612f6457600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612fb15780818660040360031b1b83161692505b505092915050565b8082028115828204841417610bfd57610bfd612936565b600081612fdf57612fdf612936565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b8183823760009101908152919050565b6020815260006114b06020830184612a66565b60006020828403121561303a57600080fd5b815167ffffffffffffffff81111561305157600080fd5b8201601f8101841361306257600080fd5b805161307061246f8261240a565b81815285602083850101111561308557600080fd5b613096826020830160208601612a42565b95945050505050565b6000602082840312156130b157600080fd5b81516114b0816124cf565b600082516129db818460208701612a4256fea26469706673582212201dc45a4f7b8852cb45ce6885836619307510fe2b02db6cfca97777b3e94260ad64736f6c63430008110033";

type SquidFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SquidFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SquidFacet__factory extends ContractFactory {
  constructor(...args: SquidFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _squidRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SquidFacet> {
    return super.deploy(_squidRouter, overrides || {}) as Promise<SquidFacet>;
  }
  override getDeployTransaction(
    _squidRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_squidRouter, overrides || {});
  }
  override attach(address: string): SquidFacet {
    return super.attach(address) as SquidFacet;
  }
  override connect(signer: Signer): SquidFacet__factory {
    return super.connect(signer) as SquidFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SquidFacetInterface {
    return new utils.Interface(_abi) as SquidFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SquidFacet {
    return new Contract(address, _abi, signerOrProvider) as SquidFacet;
  }
}
