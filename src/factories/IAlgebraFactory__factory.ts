/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IAlgebraFactory,
  IAlgebraFactoryInterface,
} from "../IAlgebraFactory";

const _abi = [
  {
    type: "function",
    name: "createPool",
    inputs: [
      {
        name: "tokenA",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenB",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "pool",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

export class IAlgebraFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IAlgebraFactoryInterface {
    return new utils.Interface(_abi) as IAlgebraFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAlgebraFactory {
    return new Contract(address, _abi, signerOrProvider) as IAlgebraFactory;
  }
}
