/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  GnosisBridgeFacet,
  GnosisBridgeFacetInterface,
} from "../GnosisBridgeFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_gnosisBridgeRouter",
        type: "address",
        internalType: "contract IGnosisBridgeRouter",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaGnosisBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaGnosisBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidConfig",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidDestinationChain",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSendingToken",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405162001d4f38038062001d4f83398101604081905261003191610069565b6001600160a01b038116610058576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b0316608052610099565b60006020828403121561007b57600080fd5b81516001600160a01b038116811461009257600080fd5b9392505050565b608051611c93620000bc6000396000818161083c01526108c60152611c936000f3fe6080604052600436106100295760003560e01c80637bf96e0a1461002e578063f66fe51914610043575b600080fd5b61004161003c366004611824565b610063565b005b34801561004f57600080fd5b5061004161005e3660046118be565b610405565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100de576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100ef34476118fb565b90508580610100015161012e576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868061012001511561016c576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8761018f8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101c6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610204576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610241576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b88606467ffffffffffffffff16808260e001511461028b576040517fb86ac1ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808b015173ffffffffffffffffffffffffffffffffffffffff16736b175474e89094c44da98b954eedeac495271d0f148015906102f7575060808b015173ffffffffffffffffffffffffffffffffffffffff1673dc035d45d973e3ec169d2276ddab16f1e407384f14155b8061037a5750881580159061037a575089896103146001826118fb565b81811061032357610323611935565b90506020028101906103359190611964565b6103469060808101906060016119a2565b73ffffffffffffffffffffffffffffffffffffffff168b6080015173ffffffffffffffffffffffffffffffffffffffff1614155b156103b1576040517f7d6f201300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103c68b600001518c60c001518c8c336106eb565b60c08c01526103d48b610832565b50479350505050818111156103f8576103f86000846103f385856118fb565b61095e565b5050600090915550505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610480576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181556101008201518290156104c3576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8280610120015115610501576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b836105248160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561055b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610599576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036105d6576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84606467ffffffffffffffff16808260e0015114610620576040517fb86ac1ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608087015173ffffffffffffffffffffffffffffffffffffffff16736b175474e89094c44da98b954eedeac495271d0f1480159061068c5750608087015173ffffffffffffffffffffffffffffffffffffffff1673dc035d45d973e3ec169d2276ddab16f1e407384f14155b156106c3576040517f7d6f201300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106d587608001518860c00151610993565b6106de87610832565b5050600090935550505050565b600082808203610727576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856107366001856118fb565b81811061074557610745611935565b90506020028101906107579190611964565b6107689060808101906060016119a2565b9050600061077582610a48565b905073ffffffffffffffffffffffffffffffffffffffff821661079f5761079c34826118fb565b90505b60006107ab8888610a93565b90506107b78888610b9f565b6107c48a89898985610c0c565b6000826107d085610a48565b6107da91906118fb565b905089811015610824576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b61086581608001517f00000000000000000000000000000000000000000000000000000000000000008360c00151610fbe565b608081015160a082015160c08301516040517fad58bdd100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152918316602483015260448201527f00000000000000000000000000000000000000000000000000000000000000009091169063ad58bdd190606401600060405180830381600087803b15801561090c57600080fd5b505af1158015610920573d6000803e3d6000fd5b505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1816040516109539190611a28565b60405180910390a150565b73ffffffffffffffffffffffffffffffffffffffff8316610988576109838282610fea565b505050565b610983838383611057565b806000036109cd576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610a265780341015610a22576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610a2273ffffffffffffffffffffffffffffffffffffffff83163330846110c5565b600073ffffffffffffffffffffffffffffffffffffffff821615610a8b57610a8673ffffffffffffffffffffffffffffffffffffffff831630611122565b610a8d565b475b92915050565b60608160008167ffffffffffffffff811115610ab157610ab1611602565b604051908082528060200260200182016040528015610ada578160200160208202803683370190505b5090506000805b83811015610b9457868682818110610afb57610afb611935565b9050602002810190610b0d9190611964565b610b1e9060808101906060016119a2565b9150610b2982610a48565b838281518110610b3b57610b3b611935565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610b8c5734838281518110610b7457610b74611935565b60200260200101818151610b8891906118fb565b9052505b600101610ae1565b509095945050505050565b60005b818110156109835736838383818110610bbd57610bbd611935565b9050602002810190610bcf9190611964565b9050610be160e0820160c08301611b3b565b15610c0357610c03610bf960608301604084016119a2565b8260800135610993565b50600101610ba2565b838383838260018114610ed95760008585610c286001856118fb565b818110610c3757610c37611935565b9050602002810190610c499190611964565b610c5a9060808101906060016119a2565b9050600089815b81811015610e0557368d8d83818110610c7c57610c7c611935565b9050602002810190610c8e9190611964565b9050610cbd610ca360608301604084016119a2565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610d205750610d20610cd660408301602084016119a2565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610d375750610d37610cd660208301836119a2565b8015610dbc5750610dbc610d4e60a0830183611b56565b610d5d91600491600091611bc2565b610d6691611bec565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610df2576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610dfc8f82611157565b50600101610c61565b505060005b610e156001856118fb565b811015610ed1576000888883818110610e3057610e30611935565b9050602002810190610e429190611964565b610e539060808101906060016119a2565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ec857858281518110610e9a57610e9a611935565b6020026020010151610eab82610a48565b610eb591906118fb565b92508215610ec857610ec881888561095e565b50600101610e0a565b505050610fb2565b8760005b81811015610faf57368b8b83818110610ef857610ef8611935565b9050602002810190610f0a9190611964565b9050610f1f610ca360608301604084016119a2565b80610f385750610f38610cd660408301602084016119a2565b8015610f4f5750610f4f610cd660208301836119a2565b8015610f665750610f66610d4e60a0830183611b56565b610f9c576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610fa68d82611157565b50600101610edd565b50505b50505050505050505050565b6109838383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6113d4565b73ffffffffffffffffffffffffffffffffffffffff8216611037576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a2273ffffffffffffffffffffffffffffffffffffffff831682611503565b73ffffffffffffffffffffffffffffffffffffffff82166110a4576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61098373ffffffffffffffffffffffffffffffffffffffff8416838361151f565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d15600160005114171661111457637939f4246000526004601cfd5b600060605260405250505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b61116f61116760208301836119a2565b6017903b1190565b6111a5576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036111e5576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006111fa610ca360608501604086016119a2565b61120557600061120b565b82608001355b9050600061122761122260808601606087016119a2565b610a48565b90508160000361125e5761125e61124460608601604087016119a2565b61125460408701602088016119a2565b8660800135610fbe565b60008061126e60208701876119a2565b73ffffffffffffffffffffffffffffffffffffffff168461129260a0890189611b56565b6040516112a0929190611c34565b60006040518083038185875af1925050503d80600081146112dd576040519150601f19603f3d011682016040523d82523d6000602084013e6112e2565b606091505b5091509150816112f5576112f58161156e565b600061130a6112226080890160608a016119a2565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861133b60208a018a6119a2565b61134b60608b0160408c016119a2565b61135b60808c0160608d016119a2565b8b6080013589871161136d5786611377565b6113778a886118fb565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156114fd5773ffffffffffffffffffffffffffffffffffffffff831661143d576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa1580156114b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d69190611c44565b10156114fd576114fd73ffffffffffffffffffffffffffffffffffffffff85168483611578565b50505050565b60003860003884865af1610a225763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d156001600051141716611564576390b8ec186000526004601cfd5b6000603452505050565b8051602082018181fd5b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d1560016000511417166115645760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d15600160005114171661156457633e3f8f736000526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561165557611655611602565b60405290565b600082601f83011261166c57600080fd5b813567ffffffffffffffff8082111561168757611687611602565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156116cd576116cd611602565b816040528381528660208588010111156116e657600080fd5b836020870160208301376000602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461172a57600080fd5b919050565b8035801515811461172a57600080fd5b6000610140828403121561175257600080fd5b61175a611631565b905081358152602082013567ffffffffffffffff8082111561177b57600080fd5b6117878583860161165b565b602084015260408401359150808211156117a057600080fd5b506117ad8482850161165b565b6040830152506117bf60608301611706565b60608201526117d060808301611706565b60808201526117e160a08301611706565b60a082015260c082013560c082015260e082013560e082015261010061180881840161172f565b9082015261012061181a83820161172f565b9082015292915050565b60008060006040848603121561183957600080fd5b833567ffffffffffffffff8082111561185157600080fd5b61185d8783880161173f565b9450602086013591508082111561187357600080fd5b818601915086601f83011261188757600080fd5b81358181111561189657600080fd5b8760208260051b85010111156118ab57600080fd5b6020830194508093505050509250925092565b6000602082840312156118d057600080fd5b813567ffffffffffffffff8111156118e757600080fd5b6118f38482850161173f565b949350505050565b81810381811115610a8d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261199857600080fd5b9190910192915050565b6000602082840312156119b457600080fd5b6119bd82611706565b9392505050565b6000815180845260005b818110156119ea576020818501810151868301820152016119ce565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081528151602082015260006020830151610140806040850152611a516101608501836119c4565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152611a8c83826119c4565b9250506060850151611ab6608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120611b298187018315159052565b90950151151593019290925250919050565b600060208284031215611b4d57600080fd5b6119bd8261172f565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611b8b57600080fd5b83018035915067ffffffffffffffff821115611ba657600080fd5b602001915036819003821315611bbb57600080fd5b9250929050565b60008085851115611bd257600080fd5b83861115611bdf57600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015611c2c5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b600060208284031215611c5657600080fd5b505191905056fea2646970667358221220b6eca522e43836d73bad28685c5649b361c133a20862e8a19b5d86c058a51d0964736f6c63430008110033";

type GnosisBridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GnosisBridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GnosisBridgeFacet__factory extends ContractFactory {
  constructor(...args: GnosisBridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gnosisBridgeRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GnosisBridgeFacet> {
    return super.deploy(
      _gnosisBridgeRouter,
      overrides || {}
    ) as Promise<GnosisBridgeFacet>;
  }
  override getDeployTransaction(
    _gnosisBridgeRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gnosisBridgeRouter, overrides || {});
  }
  override attach(address: string): GnosisBridgeFacet {
    return super.attach(address) as GnosisBridgeFacet;
  }
  override connect(signer: Signer): GnosisBridgeFacet__factory {
    return super.connect(signer) as GnosisBridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GnosisBridgeFacetInterface {
    return new utils.Interface(_abi) as GnosisBridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GnosisBridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as GnosisBridgeFacet;
  }
}
