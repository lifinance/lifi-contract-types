/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  GnosisBridgeFacet,
  GnosisBridgeFacetInterface,
} from "../GnosisBridgeFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_xDaiBridge",
        type: "address",
        internalType: "contract IXDaiBridge",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaXDaiBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaXDaiBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidDestinationChain",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSendingToken",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a0604052348015600e575f5ffd5b50604051611db1380380611db1833981016040819052602b91603b565b6001600160a01b03166080526066565b5f60208284031215604a575f5ffd5b81516001600160a01b0381168114605f575f5ffd5b9392505050565b608051611d2c6100855f395f81816106fa015261076a0152611d2c5ff3fe608060405260043610610028575f3560e01c806302cba4a31461002c578063a9d0550f1461004d575b5f5ffd5b348015610037575f5ffd5b5061004b610046366004611861565b610060565b005b61004b61005b36600461189b565b610332565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100db576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815561010082015182901561011e576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828061012001511561015c576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8361017f8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101b6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036101f3576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610230576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84606467ffffffffffffffff16808260e001511461027a576040517fb86ac1ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86736b175474e89094c44da98b954eedeac495271d0f8073ffffffffffffffffffffffffffffffffffffffff16826080015173ffffffffffffffffffffffffffffffffffffffff16146102f9576040517f7d6f201300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61031b736b175474e89094c44da98b954eedeac495271d0f8a60c0015161062c565b610324896106e0565b50505f909555505050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016103ad576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6103bd3447611936565b9050858061010001516103fc576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868061012001511561043a576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8761045d8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610494576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036104d1576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361050e576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b88606467ffffffffffffffff16808260e0015114610558576040517fb86ac1ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8a736b175474e89094c44da98b954eedeac495271d0f8073ffffffffffffffffffffffffffffffffffffffff16826080015173ffffffffffffffffffffffffffffffffffffffff16146105d7576040517f7d6f201300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105eb8d5f01518e60c001518e8e33610825565b60c08e01526105f98d6106e0565b505050505050505f47905081811115610620576106205f8461061b8585611936565b610968565b50505f90915550505050565b805f03610665576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166106be57803410156106ba576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6106ba73ffffffffffffffffffffffffffffffffffffffff831633308461099d565b610723736b175474e89094c44da98b954eedeac495271d0f7f00000000000000000000000000000000000000000000000000000000000000008360c001516109f5565b60a081015160c08201516040517f01e4f53a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016926301e4f53a926107be9260040173ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b5f604051808303815f87803b1580156107d5575f5ffd5b505af11580156107e7573d5f5f3e3d5ffd5b505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18160405161081a91906119ba565b60405180910390a150565b5f82808203610860576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f858561086e600185611936565b81811061087d5761087d611acd565b905060200281019061088f9190611afa565b6108a0906080810190606001611b36565b90505f6108ac82610a21565b905073ffffffffffffffffffffffffffffffffffffffff82166108d6576108d33482611936565b90505b5f6108e18888610a6b565b90506108ed8888610b75565b6108fa8a89898985610be1565b5f8261090585610a21565b61090f9190611936565b90508981101561095a576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166109925761098d8282610f8c565b505050565b61098d838383610ff9565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f511417166109e857637939f4245f526004601cfd5b5f60605260405250505050565b61098d8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611067565b5f73ffffffffffffffffffffffffffffffffffffffff821615610a6357610a5e73ffffffffffffffffffffffffffffffffffffffff831630611178565b610a65565b475b92915050565b6060815f8167ffffffffffffffff811115610a8857610a88611642565b604051908082528060200260200182016040528015610ab1578160200160208202803683370190505b5090505f805b83811015610b6a57868682818110610ad157610ad1611acd565b9050602002810190610ae39190611afa565b610af4906080810190606001611b36565b9150610aff82610a21565b838281518110610b1157610b11611acd565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610b625734838281518110610b4a57610b4a611acd565b60200260200101818151610b5e9190611936565b9052505b600101610ab7565b509095945050505050565b5f5b8181101561098d5736838383818110610b9257610b92611acd565b9050602002810190610ba49190611afa565b9050610bb660e0820160c08301611b56565b15610bd857610bd8610bce6060830160408401611b36565b826080013561062c565b50600101610b77565b838383838260018114610ea8575f8585610bfc600185611936565b818110610c0b57610c0b611acd565b9050602002810190610c1d9190611afa565b610c2e906080810190606001611b36565b90505f89815b81811015610dd557368d8d83818110610c4f57610c4f611acd565b9050602002810190610c619190611afa565b9050610c90610c766060830160408401611b36565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610cf25750610cf2610ca96040830160208401611b36565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610d095750610d09610ca96020830183611b36565b8015610d8c5750610d8c610d2060a0830183611b6f565b610d2e916004915f91611bd7565b610d3791611bfe565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610dc2576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610dcc8f826111ab565b50600101610c34565b505f90505b610de5600185611936565b811015610ea0575f888883818110610dff57610dff611acd565b9050602002810190610e119190611afa565b610e22906080810190606001611b36565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e9757858281518110610e6957610e69611acd565b6020026020010151610e7a82610a21565b610e849190611936565b92508215610e9757610e97818885610968565b50600101610dda565b505050610f80565b875f5b81811015610f7d57368b8b83818110610ec657610ec6611acd565b9050602002810190610ed89190611afa565b9050610eed610c766060830160408401611b36565b80610f065750610f06610ca96040830160208401611b36565b8015610f1d5750610f1d610ca96020830183611b36565b8015610f345750610f34610d2060a0830183611b6f565b610f6a576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f748d826111ab565b50600101610eab565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216610fd9576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106ba73ffffffffffffffffffffffffffffffffffffffff83168261147d565b73ffffffffffffffffffffffffffffffffffffffff8216611046576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61098d73ffffffffffffffffffffffffffffffffffffffff84168383611496565b73ffffffffffffffffffffffffffffffffffffffff83166110b4576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611127573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061114b9190611c64565b10156111725761117273ffffffffffffffffffffffffffffffffffffffff851684836114df565b50505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b6111c06111bb6020830183611b36565b61155d565b6111f6576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003611235576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f611249610c766060850160408601611b36565b611253575f611259565b82608001355b90505f61127461126f6060860160408701611b36565b610a21565b90505f61128a61126f6080870160608801611b36565b9050825f036112c0576112c06112a66060870160408801611b36565b6112b66040880160208901611b36565b87608001356109f5565b846080013582101561130b576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610951565b5f8061131a6020880188611b36565b73ffffffffffffffffffffffffffffffffffffffff168561133e60a08a018a611b6f565b60405161134c929190611c7b565b5f6040518083038185875af1925050503d805f8114611386576040519150601f19603f3d011682016040523d82523d5f602084013e61138b565b606091505b50915091508161139e5761139e81611638565b5f6113b261126f60808a0160608b01611b36565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896113e360208b018b611b36565b6113f360608c0160408d01611b36565b61140360808d0160608e01611b36565b8c60800135898711611415578661141f565b61141f8a88611936565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b5f385f3884865af16106ba5763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166114d6576390b8ec185f526004601cfd5b5f603452505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f511417166114d6575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f511417166114d657633e3f8f735f526004601cfd5b6040805160038082528183019092525f91829182917fef0100000000000000000000000000000000000000000000000000000000000091839160208201818036833701905050863b945090507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060035f60208401893c863f93505f6115e183611c8a565b90507fffffff00000000000000000000000000000000000000000000000000000000008085169082160361161d57506001979650505050505050565b5f8611801561162c5750818514155b98975050505050505050565b8051602082018181fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff8111828210171561169357611693611642565b60405290565b5f82601f8301126116a8575f5ffd5b813567ffffffffffffffff8111156116c2576116c2611642565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff8111828210171561170f5761170f611642565b604052818152838201602001851015611726575f5ffd5b816020850160208301375f918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611765575f5ffd5b919050565b80358015158114611765575f5ffd5b5f610140828403121561178a575f5ffd5b61179261166f565b823581529050602082013567ffffffffffffffff8111156117b1575f5ffd5b6117bd84828501611699565b602083015250604082013567ffffffffffffffff8111156117dc575f5ffd5b6117e884828501611699565b6040830152506117fa60608301611742565b606082015261180b60808301611742565b608082015261181c60a08301611742565b60a082015260c0828101359082015260e08083013590820152611842610100830161176a565b610100820152611855610120830161176a565b61012082015292915050565b5f60208284031215611871575f5ffd5b813567ffffffffffffffff811115611887575f5ffd5b61189384828501611779565b949350505050565b5f5f5f604084860312156118ad575f5ffd5b833567ffffffffffffffff8111156118c3575f5ffd5b6118cf86828701611779565b935050602084013567ffffffffffffffff8111156118eb575f5ffd5b8401601f810186136118fb575f5ffd5b803567ffffffffffffffff811115611911575f5ffd5b8660208260051b8401011115611925575f5ffd5b939660209190910195509293505050565b81810381811115610a65577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f602083015161014060408401526119e161016084018261196e565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611a1c828261196e565b9150506060840151611a46608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e0840151610100840152610100840151611ab561012085018215159052565b50610120840151801515610140850152509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611b2c575f5ffd5b9190910192915050565b5f60208284031215611b46575f5ffd5b611b4f82611742565b9392505050565b5f60208284031215611b66575f5ffd5b611b4f8261176a565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611ba2575f5ffd5b83018035915067ffffffffffffffff821115611bbc575f5ffd5b602001915036819003821315611bd0575f5ffd5b9250929050565b5f5f85851115611be5575f5ffd5b83861115611bf1575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015611c5d577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b5f60208284031215611c74575f5ffd5b5051919050565b818382375f9101908152919050565b805160208201517fffffff0000000000000000000000000000000000000000000000000000000000811691906003821015611cef577fffffff0000000000000000000000000000000000000000000000000000000000808360030360031b1b82161692505b505091905056fea2646970667358221220d66014c9d86e5d54b22a56cf6e56634b899b63c7b5b1334c4130a2a0afaa0b9264736f6c634300081d0033";

type GnosisBridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GnosisBridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GnosisBridgeFacet__factory extends ContractFactory {
  constructor(...args: GnosisBridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _xDaiBridge: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GnosisBridgeFacet> {
    return super.deploy(
      _xDaiBridge,
      overrides || {}
    ) as Promise<GnosisBridgeFacet>;
  }
  override getDeployTransaction(
    _xDaiBridge: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_xDaiBridge, overrides || {});
  }
  override attach(address: string): GnosisBridgeFacet {
    return super.attach(address) as GnosisBridgeFacet;
  }
  override connect(signer: Signer): GnosisBridgeFacet__factory {
    return super.connect(signer) as GnosisBridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GnosisBridgeFacetInterface {
    return new utils.Interface(_abi) as GnosisBridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GnosisBridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as GnosisBridgeFacet;
  }
}
