/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DeBridgeDlnFacet,
  DeBridgeDlnFacetInterface,
} from "../DeBridgeDlnFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_dlnSource",
        type: "address",
        internalType: "contract IDlnSource",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "dlnSource",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IDlnSource",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "startBridgeTokensViaDeBridgeDln",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_deBridgeDlnData",
        type: "tuple",
        internalType: "struct DeBridgeDlnFacet.DeBridgeDlnData",
        components: [
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "minAmountOut",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaDeBridgeDln",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_deBridgeDlnData",
        type: "tuple",
        internalType: "struct DeBridgeDlnFacet.DeBridgeDlnData",
        components: [
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "minAmountOut",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NativeAssetTransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NoTransferToNullAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAnERC20Token",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
  {
    type: "error",
    name: "SliceOutOfBounds",
    inputs: [],
  },
  {
    type: "error",
    name: "SliceOverflow",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002d4038038062002d40833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b608051612c98620000a86000396000818160730152818161081e0152818161088401526109470152612c986000f3fe6080604052600436106100345760003560e01c806348cb3d3514610039578063615fc4751461004e5780638f4bef1c14610061575b600080fd5b61004c610047366004612536565b6100be565b005b61004c61005c3660046125f5565b6102f0565b34801561006d57600080fd5b506100957f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610139576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061014a3447612688565b905086806101000151610189576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101200151156101c7576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886101ea8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610221576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361025f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361029c576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102b18a600001518b60c001518b8b33610514565b60c08b01526102c08a8861065c565b5047915050818111156102e2576102e26000846102dd8585612688565b610a97565b505060009091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161036b576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061037c3447612688565b9050846103a18160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103d8576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610416576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610453576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8580610100015115610491576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86806101200151156104cf576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e188608001518960c00151610acd565b6104eb888861065c565b504791505081811115610508576105086000846102dd8585612688565b50506000909155505050565b600082808203610550576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000858561055f600185612688565b81811061056e5761056e61269b565b905060200281019061058091906126ca565b610591906080810190606001612708565b9050600061059e82610c43565b905073ffffffffffffffffffffffffffffffffffffffff82166105c8576105c53482612688565b90505b60006105d48888610cfc565b90506105e08888610e08565b6105ed8a89898985610e75565b6000826105f985610c43565b6106039190612688565b90508981101561064e576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b6000604051806101600160405280846080015173ffffffffffffffffffffffffffffffffffffffff1681526020018460c0015181526020018360000160208101906106a79190612708565b6040516020016106e2919060609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b6040516020818303038152906040528152602001836040013581526020018460e00151815260200183806020019061071a9190612723565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060a085015173ffffffffffffffffffffffffffffffffffffffff1660208083019190915260409091019061078790850185612723565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250506040805160208082018352848252808601919091528151808201835284815282860152815190810190915291825250606090910152608084015190915073ffffffffffffffffffffffffffffffffffffffff16156109055761084783608001517f00000000000000000000000000000000000000000000000000000000000000008560c00151611227565b6040517ffbe16ca700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063fbe16ca7906108bc9084906000906004016127fd565b6020604051808303816000875af11580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff9190612987565b506109c4565b60c08301516040517ffbe16ca700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163fbe16ca79161097f9085906000906004016127fd565b60206040518083038185885af115801561099d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109c29190612987565b505b7311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168360a0015173ffffffffffffffffffffffffffffffffffffffff1603610a5b5760e083015183517ff9b69f466270c99522169d563c0a430e88c52865ec33b1cc36ee2a4a6ea5170b610a446020860186612723565b604051610a529291906129a0565b60405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f183604051610a8a91906129ed565b60405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff831615610ac357610abe83838361136a565b505050565b610abe82826114ec565b80600003610b07576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610b605780341015610b5c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610bcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf19190612987565b905081811015610c37576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610645565b610abe83333085611616565b600073ffffffffffffffffffffffffffffffffffffffff821615610cf4576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610ccb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cef9190612987565b610cf6565b475b92915050565b60608160008167ffffffffffffffff811115610d1a57610d1a6122b0565b604051908082528060200260200182016040528015610d43578160200160208202803683370190505b5090506000805b83811015610dfd57868682818110610d6457610d6461269b565b9050602002810190610d7691906126ca565b610d87906080810190606001612708565b9150610d9282610c43565b838281518110610da457610da461269b565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610df55734838281518110610ddd57610ddd61269b565b60200260200101818151610df19190612688565b9052505b600101610d4a565b509095945050505050565b60005b81811015610abe5736838383818110610e2657610e2661269b565b9050602002810190610e3891906126ca565b9050610e4a60e0820160c08301612b00565b15610e6c57610e6c610e626060830160408401612708565b8260800135610acd565b50600101610e0b565b8383838382600181146111425760008585610e91600185612688565b818110610ea057610ea061269b565b9050602002810190610eb291906126ca565b610ec3906080810190606001612708565b9050600089815b8181101561106e57368d8d83818110610ee557610ee561269b565b9050602002810190610ef791906126ca565b9050610f26610f0c6060830160408401612708565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610f895750610f89610f3f6040830160208401612708565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610fa05750610fa0610f3f6020830183612708565b80156110255750611025610fb760a0830183612723565b610fc691600491600091612b1d565b610fcf91612b47565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61105b576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110658f82611830565b50600101610eca565b505060005b61107e600185612688565b81101561113a5760008888838181106110995761109961269b565b90506020028101906110ab91906126ca565b6110bc906080810190606001612708565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611131578582815181106111035761110361269b565b602002602001015161111482610c43565b61111e9190612688565b9250821561113157611131818885610a97565b50600101611073565b50505061121b565b8760005b8181101561121857368b8b838181106111615761116161269b565b905060200281019061117391906126ca565b9050611188610f0c6060830160408401612708565b806111a157506111a1610f3f6040830160208401612708565b80156111b857506111b8610f3f6020830183612708565b80156111cf57506111cf610fb760a0830183612723565b611205576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61120f8d82611830565b50600101611146565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661124757505050565b73ffffffffffffffffffffffffffffffffffffffff8216611294576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015611309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132d9190612987565b1015610abe5761133f83836000611b46565b610abe83837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611b46565b73ffffffffffffffffffffffffffffffffffffffff83166113b7576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611404576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114959190612987565b9050808211156114db576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610645565b6114e6848484611d46565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216611539576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4781111561157c576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610645565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146115d6576040519150601f19603f3d011682016040523d82523d6000602084013e6115db565b606091505b5050905080610abe576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416611663576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166116b0576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015611721573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117459190612987565b905061175382868686611d9c565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa1580156117c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e79190612987565b6117f19190612688565b14611828576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b6118466118406020830183612708565b3b151590565b61187c576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036118bc576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006118d1610f0c6060850160408601612708565b6118dc5760006118e2565b82608001355b905060006118fe6118f96060860160408701612708565b610c43565b905060006119156118f96080870160608801612708565b90508260000361194c5761194c6119326060870160408801612708565b6119426040880160208901612708565b8760800135611227565b8460800135821015611997576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610645565b6000806119a76020880188612708565b73ffffffffffffffffffffffffffffffffffffffff16856119cb60a08a018a612723565b6040516119d9929190612b8f565b60006040518083038185875af1925050503d8060008114611a16576040519150601f19603f3d011682016040523d82523d6000602084013e611a1b565b606091505b509150915081611a66576000611a3082611dfa565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106459190612b9f565b6000611a7b6118f960808a0160608b01612708565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611aac60208b018b612708565b611abc60608c0160408d01612708565b611acc60808d0160608e01612708565b8c60800135898711611ade5786611ae8565b611ae88a88612688565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b801580611be657506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611bc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be49190612987565b155b611c72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610645565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610abe9084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611e78565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610abe9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611cc4565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526114e69085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611cc4565b6060604482511015611e3f57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611e5b6004808551611e539190612688565b859190611f87565b905080806020019051810190611e719190612bb2565b9392505050565b6000611eda826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166120a19092919063ffffffff16565b9050805160001480611efb575080806020019051810190611efb9190612c20565b610abe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610645565b606081611f9581601f612c3d565b1015611fcd576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611fd78284612c3d565b84511015612011576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060821580156120305760405191506000825260208201604052612098565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015612069578051835260209283019201612051565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60606120b084846000856120b8565b949350505050565b60608247101561214a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610645565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516121739190612c50565b60006040518083038185875af1925050503d80600081146121b0576040519150601f19603f3d011682016040523d82523d6000602084013e6121b5565b606091505b50915091506121c6878383876121d1565b979650505050505050565b606083156122675782516000036122605773ffffffffffffffffffffffffffffffffffffffff85163b612260576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610645565b50816120b0565b6120b0838381511561227c5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106459190612b9f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715612303576123036122b0565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612350576123506122b0565b604052919050565b600067ffffffffffffffff821115612372576123726122b0565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126123af57600080fd5b81356123c26123bd82612358565b612309565b8181528460208386010111156123d757600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461241857600080fd5b919050565b801515811461242b57600080fd5b50565b80356124188161241d565b6000610140828403121561244c57600080fd5b6124546122df565b905081358152602082013567ffffffffffffffff8082111561247557600080fd5b6124818583860161239e565b6020840152604084013591508082111561249a57600080fd5b506124a78482850161239e565b6040830152506124b9606083016123f4565b60608201526124ca608083016123f4565b60808201526124db60a083016123f4565b60a082015260c082013560c082015260e082013560e082015261010061250281840161242e565b9082015261012061251483820161242e565b9082015292915050565b60006060828403121561253057600080fd5b50919050565b6000806000806060858703121561254c57600080fd5b843567ffffffffffffffff8082111561256457600080fd5b61257088838901612439565b9550602087013591508082111561258657600080fd5b818701915087601f83011261259a57600080fd5b8135818111156125a957600080fd5b8860208260051b85010111156125be57600080fd5b6020830195508094505060408701359150808211156125dc57600080fd5b506125e98782880161251e565b91505092959194509250565b6000806040838503121561260857600080fd5b823567ffffffffffffffff8082111561262057600080fd5b61262c86838701612439565b9350602085013591508082111561264257600080fd5b5061264f8582860161251e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610cf657610cf6612659565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126126fe57600080fd5b9190910192915050565b60006020828403121561271a57600080fd5b611e71826123f4565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261275857600080fd5b83018035915067ffffffffffffffff82111561277357600080fd5b60200191503681900382131561278857600080fd5b9250929050565b60005b838110156127aa578181015183820152602001612792565b50506000910152565b600081518084526127cb81602086016020860161278f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6080815261282460808201845173ffffffffffffffffffffffffffffffffffffffff169052565b602083015160a0820152600060408401516101608060c085015261284c6101e08501836127b3565b9150606086015160e08501526080860151610100818187015260a088015191507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff806101208188870301818901526128a386856127b3565b955060c08a015193506101406128d0818a018673ffffffffffffffffffffffffffffffffffffffff169052565b60e08b015194508289880301868a01526128ea87866127b3565b9650838b0151955082898803016101808a015261290787876127b3565b9650818b0151955082898803016101a08a015261292487876127b3565b9650808b01519550505080878603016101c088015250505061294682826127b3565b915050828103602084015261295f816000815260200190565b63ffffffff851660408501529050828103606084015260008152602081015b95945050505050565b60006020828403121561299957600080fd5b5051919050565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b602081528151602082015260006020830151610140806040850152612a166101608501836127b3565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152612a5183826127b3565b9250506060850151612a7b608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120612aee8187018315159052565b90950151151593019290925250919050565b600060208284031215612b1257600080fd5b8135611e718161241d565b60008085851115612b2d57600080fd5b83861115612b3a57600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612b875780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b602081526000611e7160208301846127b3565b600060208284031215612bc457600080fd5b815167ffffffffffffffff811115612bdb57600080fd5b8201601f81018413612bec57600080fd5b8051612bfa6123bd82612358565b818152856020838501011115612c0f57600080fd5b61297e82602083016020860161278f565b600060208284031215612c3257600080fd5b8151611e718161241d565b80820180821115610cf657610cf6612659565b600082516126fe81846020870161278f56fea26469706673582212205419bda051f141210bbc96b9885e851f9e8864e5a8690aa3e7ba5b8a557567ab64736f6c63430008110033";

type DeBridgeDlnFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeBridgeDlnFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeBridgeDlnFacet__factory extends ContractFactory {
  constructor(...args: DeBridgeDlnFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _dlnSource: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DeBridgeDlnFacet> {
    return super.deploy(
      _dlnSource,
      overrides || {}
    ) as Promise<DeBridgeDlnFacet>;
  }
  override getDeployTransaction(
    _dlnSource: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_dlnSource, overrides || {});
  }
  override attach(address: string): DeBridgeDlnFacet {
    return super.attach(address) as DeBridgeDlnFacet;
  }
  override connect(signer: Signer): DeBridgeDlnFacet__factory {
    return super.connect(signer) as DeBridgeDlnFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeBridgeDlnFacetInterface {
    return new utils.Interface(_abi) as DeBridgeDlnFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeBridgeDlnFacet {
    return new Contract(address, _abi, signerOrProvider) as DeBridgeDlnFacet;
  }
}
