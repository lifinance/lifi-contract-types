/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DeBridgeDlnFacet,
  DeBridgeDlnFacetInterface,
} from "../DeBridgeDlnFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_dlnSource",
        type: "address",
        internalType: "contract IDlnSource",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "dlnSource",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IDlnSource",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDeBridgeChainId",
    inputs: [
      {
        name: "_chainId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initDeBridgeDln",
    inputs: [
      {
        name: "chainIdConfigs",
        type: "tuple[]",
        internalType: "struct DeBridgeDlnFacet.ChainIdConfig[]",
        components: [
          {
            name: "chainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deBridgeChainId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDeBridgeChainId",
    inputs: [
      {
        name: "_chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_deBridgeChainId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaDeBridgeDln",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_deBridgeData",
        type: "tuple",
        internalType: "struct DeBridgeDlnFacet.DeBridgeDlnData",
        components: [
          {
            name: "receivingAssetId",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "receiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "orderAuthorityDst",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "minAmountOut",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaDeBridgeDln",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_deBridgeData",
        type: "tuple",
        internalType: "struct DeBridgeDlnFacet.DeBridgeDlnData",
        components: [
          {
            name: "receivingAssetId",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "receiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "orderAuthorityDst",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "minAmountOut",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DeBridgeChainIdSet",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "deBridgeChainId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DeBridgeInitialized",
    inputs: [
      {
        name: "chainIdConfigs",
        type: "tuple[]",
        indexed: false,
        internalType: "struct DeBridgeDlnFacet.ChainIdConfig[]",
        components: [
          {
            name: "chainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deBridgeChainId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DlnOrderCreated",
    inputs: [
      {
        name: "orderId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "EmptyNonEVMAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidConfig",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyContractOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
  {
    type: "error",
    name: "UnknownDeBridgeChain",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620028bc380380620028bc833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b608051612806620000b66000396000818160d701528181610389015281816106df01528181610d9301528181610df90152610ed501526128066000f3fe6080604052600436106100655760003560e01c80638f4bef1c116100435780638f4bef1c146100c55780639f5e58f51461011e578063f2455b711461013e57600080fd5b80632c7d2db01461006a5780634004633e1461007f5780635df39dde14610092575b600080fd5b61007d610078366004612047565b61015e565b005b61007d61008d366004612106565b61049e565b34801561009e57600080fd5b506100b26100ad36600461216a565b61079d565b6040519081526020015b60405180910390f35b3480156100d157600080fd5b506100f97f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100bc565b34801561012a57600080fd5b5061007d610139366004612183565b61080d565b34801561014a57600080fd5b5061007d6101593660046121f8565b61094a565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016101d9576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006101ea3447612249565b905086806101000151610229576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8780610120015115610267576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8861028a8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156102c1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036102ff576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361033c576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8661034a602082018261225c565b9050600003610385576040517f7a7ed98f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166335087f0a6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156103f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041891906122c8565b60808d01518d5160c08f0151929350909161045a91908e8e3373ffffffffffffffffffffffffffffffffffffffff8716156104535787610a19565b6000610a19565b60c08e015261046a8d8b84610bb9565b504794505050508282111590506104905761049060008461048b8585612249565b611054565b505060009091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610519576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061052a3447612249565b90508461054f8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610586576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036105c4576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610601576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8461060f602082018261225c565b905060000361064a576040517f7a7ed98f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610100015115610688576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101200151156106c6576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106d889608001518a60c0015161108a565b61077389897f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166335087f0a6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561074a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076e91906122c8565b610bb9565b504792505050818111156107915761079160008461048b8585612249565b50506000909155505050565b60008181527fddf87bcc92bf634bfc8852f5a61f9209ce340952b463e87b4242394f116ee96b60208190526040822054808303610806576040517f9322741e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b6000819003610848576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61085061113f565b7fddf87bcc92bf634bfc8852f5a61f9209ce340952b463e87b4242394f116ee96b60005b828110156108dc5783838281811061088e5761088e6122e1565b905060400201602001358260000160008686858181106108b0576108b06122e1565b6040908102929092013583525060208201929092520160002055806108d481612310565b915050610874565b50600181810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690911790556040517f0cd20b776bdd48fad561fb65af5b002cf62ca0e0d5e89f165a9364d9da52a21b9061093d9085908590612348565b60405180910390a1505050565b61095261113f565b7fddf87bcc92bf634bfc8852f5a61f9209ce340952b463e87b4242394f116ee96c547fddf87bcc92bf634bfc8852f5a61f9209ce340952b463e87b4242394f116ee96b9060ff166109cf576040517f87138d5c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008381526020828152604091829020849055905183815284917fdc55a9203281afff9f6c3a20ab84a4858a398d4b5050c87a02ca78e573d8b34b910160405180910390a2505050565b600083808203610a55576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008686610a64600185612249565b818110610a7357610a736122e1565b9050602002810190610a85919061238f565b610a969060808101906060016123cd565b90506000610aa3826111b4565b905073ffffffffffffffffffffffffffffffffffffffff8216610acd57610aca3482612249565b90505b6000610ad989896111ff565b9050610ae5898961130b565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff89166020820152908101879052610b20818b8b85611378565b600083610b2c866111b4565b610b369190612249565b905073ffffffffffffffffffffffffffffffffffffffff8516610b6057610b5d8882612249565b90505b8b811015610ba9576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d9052602481018290526044015b60405180910390fd5b9c9b505050505050505050505050565b6040805161016081018252608085015173ffffffffffffffffffffffffffffffffffffffff16815260c085015160208201526000918101610bfa858061225c565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506060850135602082015260e0860151604090910190610c4f9061079d565b8152602001848060200190610c64919061225c565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250336020820152604090810190610cb39086018661225c565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050604080516020818101835284825280860191909152815180820183529384528185019390935251606090930192610d4d923392500160609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b60405160208183030381529060405281525090506000610d85856080015173ffffffffffffffffffffffffffffffffffffffff161590565b610e7e57610dbc85608001517f00000000000000000000000000000000000000000000000000000000000000008760c00151611769565b6040517ffbe16ca700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063fbe16ca7908590610e349086906178099060040161244c565b60206040518083038185885af1158015610e52573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610e7791906122c8565b9050610f54565b828260200151610e8e9190612249565b602083015260c08501516040517ffbe16ca700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163fbe16ca791610f0e9086906178099060040161244c565b60206040518083038185885af1158015610f2c573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610f5191906122c8565b90505b60405181907ff19318a6980c94fb206f1e506fa7017ed9dd61959634e8fa128a38df4e527db790600090a27311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168560a0015173ffffffffffffffffffffffffffffffffffffffff16036110165760e085015185517ff9b69f466270c99522169d563c0a430e88c52865ec33b1cc36ee2a4a6ea5170b610fff602088018861225c565b60405161100d9291906125d3565b60405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1856040516110459190612620565b60405180910390a15050505050565b73ffffffffffffffffffffffffffffffffffffffff8316156110805761107b838383611795565b505050565b61107b8282611803565b806000036110c4576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661111d5780341015611119576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61111973ffffffffffffffffffffffffffffffffffffffff8316333084611870565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff1633146111b2576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff8216156111f7576111f273ffffffffffffffffffffffffffffffffffffffff8316306118cd565b6111f9565b475b92915050565b60608160008167ffffffffffffffff81111561121d5761121d611e0d565b604051908082528060200260200182016040528015611246578160200160208202803683370190505b5090506000805b8381101561130057868682818110611267576112676122e1565b9050602002810190611279919061238f565b61128a9060808101906060016123cd565b9150611295826111b4565b8382815181106112a7576112a76122e1565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff82166112f857348382815181106112e0576112e06122e1565b602002602001018181516112f49190612249565b9052505b60010161124d565b509095945050505050565b60005b8181101561107b5736838383818110611329576113296122e1565b905060200281019061133b919061238f565b905061134d60e0820160c08301612733565b1561136f5761136f61136560608301604084016123cd565b826080013561108a565b5060010161130e565b60208401516040850151849184918490836001811461168257600086866113a0600185612249565b8181106113af576113af6122e1565b90506020028101906113c1919061238f565b6113d29060808101906060016123cd565b9050600089815b8181101561157f57368d8d838181106113f4576113f46122e1565b9050602002810190611406919061238f565b905061143561141b60608301604084016123cd565b73ffffffffffffffffffffffffffffffffffffffff161590565b80611498575061149861144e60408301602084016123cd565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156114af57506114af61144e60208301836123cd565b801561153457506115346114c660a083018361225c565b6114d59160049160009161274e565b6114de91612778565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b61156a576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e516115769082611902565b506001016113d9565b505060005b61158f600185612249565b81101561167a5760008989838181106115aa576115aa6122e1565b90506020028101906115bc919061238f565b6115cd9060808101906060016123cd565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461167157868281518110611614576116146122e1565b6020026020010151611625826111b4565b61162f9190612249565b9250600073ffffffffffffffffffffffffffffffffffffffff821615611656576000611658565b865b9050831561166f5761166f828a61048b8488612249565b505b50600101611584565b50505061175d565b8760005b8181101561175a57368b8b838181106116a1576116a16122e1565b90506020028101906116b3919061238f565b90506116c861141b60608301604084016123cd565b806116e157506116e161144e60408301602084016123cd565b80156116f857506116f861144e60208301836123cd565b801561170f575061170f6114c660a083018361225c565b611745576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c516117519082611902565b50600101611686565b50505b50505050505050505050565b61107b8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611bdf565b73ffffffffffffffffffffffffffffffffffffffff82166117e2576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61107b73ffffffffffffffffffffffffffffffffffffffff84168383611cf2565b73ffffffffffffffffffffffffffffffffffffffff8216611850576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61111973ffffffffffffffffffffffffffffffffffffffff831682611d41565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d1560016000511417166118bf57637939f4246000526004601cfd5b600060605260405250505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b61191761191260208301836123cd565b611d5d565b61194d576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080810135600081900361198d576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006119a261141b60608501604086016123cd565b6119ad5760006119b3565b82608001355b905060006119cf6119ca60608601604087016123cd565b6111b4565b905060006119e66119ca60808701606088016123cd565b905082600003611a1d57611a1d611a0360608701604088016123cd565b611a1360408801602089016123cd565b8760800135611769565b8460800135821015611a68576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610ba0565b600080611a7860208801886123cd565b73ffffffffffffffffffffffffffffffffffffffff1685611a9c60a08a018a61225c565b604051611aaa9291906127c0565b60006040518083038185875af1925050503d8060008114611ae7576040519150601f19603f3d011682016040523d82523d6000602084013e611aec565b606091505b509150915081611aff57611aff81611d79565b6000611b146119ca60808a0160608b016123cd565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611b4560208b018b6123cd565b611b5560608c0160408d016123cd565b611b6560808d0160608e016123cd565b8c60800135898711611b775786611b81565b611b818a88612249565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316611c2c576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611ca1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc591906122c8565b1015611cec57611cec73ffffffffffffffffffffffffffffffffffffffff85168483611d83565b50505050565b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d156001600051141716611d37576390b8ec186000526004601cfd5b6000603452505050565b60003860003884865af16111195763b12d13eb6000526004601cfd5b6000813f818115801590611d715750808214155b949350505050565b8051602082018181fd5b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d156001600051141716611d375760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d156001600051141716611d3757633e3f8f736000526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611e6057611e60611e0d565b60405290565b600082601f830112611e7757600080fd5b813567ffffffffffffffff80821115611e9257611e92611e0d565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611ed857611ed8611e0d565b81604052838152866020858801011115611ef157600080fd5b836020870160208301376000602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611f3557600080fd5b919050565b80358015158114611f3557600080fd5b60006101408284031215611f5d57600080fd5b611f65611e3c565b905081358152602082013567ffffffffffffffff80821115611f8657600080fd5b611f9285838601611e66565b60208401526040840135915080821115611fab57600080fd5b50611fb884828501611e66565b604083015250611fca60608301611f11565b6060820152611fdb60808301611f11565b6080820152611fec60a08301611f11565b60a082015260c082013560c082015260e082013560e0820152610100612013818401611f3a565b90820152610120612025838201611f3a565b9082015292915050565b60006080828403121561204157600080fd5b50919050565b6000806000806060858703121561205d57600080fd5b843567ffffffffffffffff8082111561207557600080fd5b61208188838901611f4a565b9550602087013591508082111561209757600080fd5b818701915087601f8301126120ab57600080fd5b8135818111156120ba57600080fd5b8860208260051b85010111156120cf57600080fd5b6020830195508094505060408701359150808211156120ed57600080fd5b506120fa8782880161202f565b91505092959194509250565b6000806040838503121561211957600080fd5b823567ffffffffffffffff8082111561213157600080fd5b61213d86838701611f4a565b9350602085013591508082111561215357600080fd5b506121608582860161202f565b9150509250929050565b60006020828403121561217c57600080fd5b5035919050565b6000806020838503121561219657600080fd5b823567ffffffffffffffff808211156121ae57600080fd5b818501915085601f8301126121c257600080fd5b8135818111156121d157600080fd5b8660208260061b85010111156121e657600080fd5b60209290920196919550909350505050565b6000806040838503121561220b57600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156111f9576111f961221a565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261229157600080fd5b83018035915067ffffffffffffffff8211156122ac57600080fd5b6020019150368190038213156122c157600080fd5b9250929050565b6000602082840312156122da57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123415761234161221a565b5060010190565b6020808252818101839052600090604080840186845b8781101561238257813583528482013585840152918301919083019060010161235e565b5090979650505050505050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126123c357600080fd5b9190910192915050565b6000602082840312156123df57600080fd5b61080682611f11565b6000815180845260005b8181101561240e576020818501810151868301820152016123f2565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6080815261247360808201845173ffffffffffffffffffffffffffffffffffffffff169052565b602083015160a0820152600060408401516101608060c085015261249b6101e08501836123e8565b9150606086015160e08501526080860151610100818187015260a088015191507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff806101208188870301818901526124f286856123e8565b955060c08a0151935061014061251f818a018673ffffffffffffffffffffffffffffffffffffffff169052565b60e08b015194508289880301868a015261253987866123e8565b9650838b0151955082898803016101808a015261255687876123e8565b9650818b0151955082898803016101a08a015261257387876123e8565b9650808b01519550505080878603016101c088015250505061259582826123e8565b91505082810360208401526125ae816000815260200190565b63ffffffff949094166040840152505080820360609091015260008152602001919050565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b6020815281516020820152600060208301516101408060408501526126496101608501836123e8565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe085840301606086015261268483826123e8565b92505060608501516126ae608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206127218187018315159052565b90950151151593019290925250919050565b60006020828403121561274557600080fd5b61080682611f3a565b6000808585111561275e57600080fd5b8386111561276b57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156127b85780818660040360031b1b83161692505b505092915050565b818382376000910190815291905056fea264697066735822122009cc6d133d575013968c3d81c3bb82763f95c4fbbc8d448043cb6d30bafed50764736f6c63430008110033";

type DeBridgeDlnFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeBridgeDlnFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeBridgeDlnFacet__factory extends ContractFactory {
  constructor(...args: DeBridgeDlnFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _dlnSource: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DeBridgeDlnFacet> {
    return super.deploy(
      _dlnSource,
      overrides || {}
    ) as Promise<DeBridgeDlnFacet>;
  }
  override getDeployTransaction(
    _dlnSource: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_dlnSource, overrides || {});
  }
  override attach(address: string): DeBridgeDlnFacet {
    return super.attach(address) as DeBridgeDlnFacet;
  }
  override connect(signer: Signer): DeBridgeDlnFacet__factory {
    return super.connect(signer) as DeBridgeDlnFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeBridgeDlnFacetInterface {
    return new utils.Interface(_abi) as DeBridgeDlnFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeBridgeDlnFacet {
    return new Contract(address, _abi, signerOrProvider) as DeBridgeDlnFacet;
  }
}
