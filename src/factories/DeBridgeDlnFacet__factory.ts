/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DeBridgeDlnFacet,
  DeBridgeDlnFacetInterface,
} from "../DeBridgeDlnFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_dlnSource",
        type: "address",
        internalType: "contract IDlnSource",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "dlnSource",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IDlnSource",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDeBridgeChainId",
    inputs: [
      {
        name: "_chainId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initDeBridgeDln",
    inputs: [
      {
        name: "chainIdConfigs",
        type: "tuple[]",
        internalType: "struct DeBridgeDlnFacet.ChainIdConfig[]",
        components: [
          {
            name: "chainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deBridgeChainId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDeBridgeChainId",
    inputs: [
      {
        name: "_chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_deBridgeChainId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaDeBridgeDln",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_deBridgeData",
        type: "tuple",
        internalType: "struct DeBridgeDlnFacet.DeBridgeDlnData",
        components: [
          {
            name: "receivingAssetId",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "receiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "orderAuthorityDst",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "minAmountOut",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaDeBridgeDln",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_deBridgeData",
        type: "tuple",
        internalType: "struct DeBridgeDlnFacet.DeBridgeDlnData",
        components: [
          {
            name: "receivingAssetId",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "receiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "orderAuthorityDst",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "minAmountOut",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DeBridgeChainIdSet",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "deBridgeChainId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DeBridgeInitialized",
    inputs: [
      {
        name: "chainIdConfigs",
        type: "tuple[]",
        indexed: false,
        internalType: "struct DeBridgeDlnFacet.ChainIdConfig[]",
        components: [
          {
            name: "chainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deBridgeChainId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DlnOrderCreated",
    inputs: [
      {
        name: "orderId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "EmptyNonEVMAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidConfig",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyContractOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
  {
    type: "error",
    name: "UnknownDeBridgeChain",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620028c1380380620028c1833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b60805161280b620000b66000396000818160d701528181610389015281816106df01528181610d9301528181610df90152610ed5015261280b6000f3fe6080604052600436106100655760003560e01c80638f4bef1c116100435780638f4bef1c146100c55780639f5e58f51461011e578063f2455b711461013e57600080fd5b80632c7d2db01461006a5780634004633e1461007f5780635df39dde14610092575b600080fd5b61007d61007836600461204c565b61015e565b005b61007d61008d36600461210b565b61049e565b34801561009e57600080fd5b506100b26100ad36600461216f565b61079d565b6040519081526020015b60405180910390f35b3480156100d157600080fd5b506100f97f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100bc565b34801561012a57600080fd5b5061007d610139366004612188565b61080d565b34801561014a57600080fd5b5061007d6101593660046121fd565b61094a565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016101d9576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006101ea344761224e565b905086806101000151610229576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8780610120015115610267576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8861028a8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156102c1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036102ff576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361033c576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8661034a6020820182612261565b9050600003610385576040517f7a7ed98f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166335087f0a6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156103f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041891906122cd565b60808d01518d5160c08f0151929350909161045a91908e8e3373ffffffffffffffffffffffffffffffffffffffff8716156104535787610a19565b6000610a19565b60c08e015261046a8d8b84610bb9565b504794505050508282111590506104905761049060008461048b858561224e565b611054565b505060009091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610519576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061052a344761224e565b90508461054f8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610586576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036105c4576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610601576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8461060f6020820182612261565b905060000361064a576040517f7a7ed98f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610100015115610688576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101200151156106c6576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106d889608001518a60c00151611089565b61077389897f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166335087f0a6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561074a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076e91906122cd565b610bb9565b504792505050818111156107915761079160008461048b858561224e565b50506000909155505050565b60008181527fddf87bcc92bf634bfc8852f5a61f9209ce340952b463e87b4242394f116ee96b60208190526040822054808303610806576040517f9322741e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b6000819003610848576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61085061113e565b7fddf87bcc92bf634bfc8852f5a61f9209ce340952b463e87b4242394f116ee96b60005b828110156108dc5783838281811061088e5761088e6122e6565b905060400201602001358260000160008686858181106108b0576108b06122e6565b6040908102929092013583525060208201929092520160002055806108d481612315565b915050610874565b50600181810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690911790556040517f0cd20b776bdd48fad561fb65af5b002cf62ca0e0d5e89f165a9364d9da52a21b9061093d908590859061234d565b60405180910390a1505050565b61095261113e565b7fddf87bcc92bf634bfc8852f5a61f9209ce340952b463e87b4242394f116ee96c547fddf87bcc92bf634bfc8852f5a61f9209ce340952b463e87b4242394f116ee96b9060ff166109cf576040517f87138d5c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008381526020828152604091829020849055905183815284917fdc55a9203281afff9f6c3a20ab84a4858a398d4b5050c87a02ca78e573d8b34b910160405180910390a2505050565b600083808203610a55576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008686610a6460018561224e565b818110610a7357610a736122e6565b9050602002810190610a859190612394565b610a969060808101906060016123d2565b90506000610aa3826111b3565b905073ffffffffffffffffffffffffffffffffffffffff8216610acd57610aca348261224e565b90505b6000610ad989896111fe565b9050610ae5898961130a565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff89166020820152908101879052610b20818b8b85611377565b600083610b2c866111b3565b610b36919061224e565b905073ffffffffffffffffffffffffffffffffffffffff8516610b6057610b5d888261224e565b90505b8b811015610ba9576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d9052602481018290526044015b60405180910390fd5b9c9b505050505050505050505050565b6040805161016081018252608085015173ffffffffffffffffffffffffffffffffffffffff16815260c085015160208201526000918101610bfa8580612261565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506060850135602082015260e0860151604090910190610c4f9061079d565b8152602001848060200190610c649190612261565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250336020820152604090810190610cb390860186612261565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050604080516020818101835284825280860191909152815180820183529384528185019390935251606090930192610d4d923392500160609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b60405160208183030381529060405281525090506000610d85856080015173ffffffffffffffffffffffffffffffffffffffff161590565b610e7e57610dbc85608001517f00000000000000000000000000000000000000000000000000000000000000008760c00151611768565b6040517ffbe16ca700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063fbe16ca7908590610e3490869061780990600401612451565b60206040518083038185885af1158015610e52573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610e7791906122cd565b9050610f54565b828260200151610e8e919061224e565b602083015260c08501516040517ffbe16ca700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163fbe16ca791610f0e90869061780990600401612451565b60206040518083038185885af1158015610f2c573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610f5191906122cd565b90505b60405181907ff19318a6980c94fb206f1e506fa7017ed9dd61959634e8fa128a38df4e527db790600090a27311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168560a0015173ffffffffffffffffffffffffffffffffffffffff16036110165760e085015185517ff9b69f466270c99522169d563c0a430e88c52865ec33b1cc36ee2a4a6ea5170b610fff6020880188612261565b60405161100d9291906125d8565b60405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1856040516110459190612625565b60405180910390a15050505050565b73ffffffffffffffffffffffffffffffffffffffff831661107e576110798282611794565b505050565b611079838383611801565b806000036110c3576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661111c5780341015611118576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61111873ffffffffffffffffffffffffffffffffffffffff831633308461186f565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff1633146111b1576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff8216156111f6576111f173ffffffffffffffffffffffffffffffffffffffff8316306118cc565b6111f8565b475b92915050565b60608160008167ffffffffffffffff81111561121c5761121c611e12565b604051908082528060200260200182016040528015611245578160200160208202803683370190505b5090506000805b838110156112ff57868682818110611266576112666122e6565b90506020028101906112789190612394565b6112899060808101906060016123d2565b9150611294826111b3565b8382815181106112a6576112a66122e6565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff82166112f757348382815181106112df576112df6122e6565b602002602001018181516112f3919061224e565b9052505b60010161124c565b509095945050505050565b60005b818110156110795736838383818110611328576113286122e6565b905060200281019061133a9190612394565b905061134c60e0820160c08301612738565b1561136e5761136e61136460608301604084016123d2565b8260800135611089565b5060010161130d565b602084015160408501518491849184908360018114611681576000868661139f60018561224e565b8181106113ae576113ae6122e6565b90506020028101906113c09190612394565b6113d19060808101906060016123d2565b9050600089815b8181101561157e57368d8d838181106113f3576113f36122e6565b90506020028101906114059190612394565b905061143461141a60608301604084016123d2565b73ffffffffffffffffffffffffffffffffffffffff161590565b80611497575061149761144d60408301602084016123d2565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156114ae57506114ae61144d60208301836123d2565b801561153357506115336114c560a0830183612261565b6114d491600491600091612753565b6114dd9161277d565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611569576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e516115759082611901565b506001016113d8565b505060005b61158e60018561224e565b8110156116795760008989838181106115a9576115a96122e6565b90506020028101906115bb9190612394565b6115cc9060808101906060016123d2565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461167057868281518110611613576116136122e6565b6020026020010151611624826111b3565b61162e919061224e565b9250600073ffffffffffffffffffffffffffffffffffffffff821615611655576000611657565b865b9050831561166e5761166e828a61048b848861224e565b505b50600101611583565b50505061175c565b8760005b8181101561175957368b8b838181106116a0576116a06122e6565b90506020028101906116b29190612394565b90506116c761141a60608301604084016123d2565b806116e057506116e061144d60408301602084016123d2565b80156116f757506116f761144d60208301836123d2565b801561170e575061170e6114c560a0830183612261565b611744576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c516117509082611901565b50600101611685565b50505b50505050505050505050565b6110798383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611c00565b73ffffffffffffffffffffffffffffffffffffffff82166117e1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61111873ffffffffffffffffffffffffffffffffffffffff831682611d13565b73ffffffffffffffffffffffffffffffffffffffff821661184e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61107973ffffffffffffffffffffffffffffffffffffffff84168383611d2f565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d1560016000511417166118be57637939f4246000526004601cfd5b600060605260405250505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b61193861191160208301836123d2565b3f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470141590565b61196e576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036119ae576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006119c361141a60608501604086016123d2565b6119ce5760006119d4565b82608001355b905060006119f06119eb60608601604087016123d2565b6111b3565b90506000611a076119eb60808701606088016123d2565b905082600003611a3e57611a3e611a2460608701604088016123d2565b611a3460408801602089016123d2565b8760800135611768565b8460800135821015611a89576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610ba0565b600080611a9960208801886123d2565b73ffffffffffffffffffffffffffffffffffffffff1685611abd60a08a018a612261565b604051611acb9291906127c5565b60006040518083038185875af1925050503d8060008114611b08576040519150601f19603f3d011682016040523d82523d6000602084013e611b0d565b606091505b509150915081611b2057611b2081611d7e565b6000611b356119eb60808a0160608b016123d2565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611b6660208b018b6123d2565b611b7660608c0160408d016123d2565b611b8660808d0160608e016123d2565b8c60800135898711611b985786611ba2565b611ba28a8861224e565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316611c4d576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611cc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce691906122cd565b1015611d0d57611d0d73ffffffffffffffffffffffffffffffffffffffff85168483611d88565b50505050565b60003860003884865af16111185763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d156001600051141716611d74576390b8ec186000526004601cfd5b6000603452505050565b8051602082018181fd5b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d156001600051141716611d745760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d156001600051141716611d7457633e3f8f736000526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611e6557611e65611e12565b60405290565b600082601f830112611e7c57600080fd5b813567ffffffffffffffff80821115611e9757611e97611e12565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611edd57611edd611e12565b81604052838152866020858801011115611ef657600080fd5b836020870160208301376000602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611f3a57600080fd5b919050565b80358015158114611f3a57600080fd5b60006101408284031215611f6257600080fd5b611f6a611e41565b905081358152602082013567ffffffffffffffff80821115611f8b57600080fd5b611f9785838601611e6b565b60208401526040840135915080821115611fb057600080fd5b50611fbd84828501611e6b565b604083015250611fcf60608301611f16565b6060820152611fe060808301611f16565b6080820152611ff160a08301611f16565b60a082015260c082013560c082015260e082013560e0820152610100612018818401611f3f565b9082015261012061202a838201611f3f565b9082015292915050565b60006080828403121561204657600080fd5b50919050565b6000806000806060858703121561206257600080fd5b843567ffffffffffffffff8082111561207a57600080fd5b61208688838901611f4f565b9550602087013591508082111561209c57600080fd5b818701915087601f8301126120b057600080fd5b8135818111156120bf57600080fd5b8860208260051b85010111156120d457600080fd5b6020830195508094505060408701359150808211156120f257600080fd5b506120ff87828801612034565b91505092959194509250565b6000806040838503121561211e57600080fd5b823567ffffffffffffffff8082111561213657600080fd5b61214286838701611f4f565b9350602085013591508082111561215857600080fd5b5061216585828601612034565b9150509250929050565b60006020828403121561218157600080fd5b5035919050565b6000806020838503121561219b57600080fd5b823567ffffffffffffffff808211156121b357600080fd5b818501915085601f8301126121c757600080fd5b8135818111156121d657600080fd5b8660208260061b85010111156121eb57600080fd5b60209290920196919550909350505050565b6000806040838503121561221057600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156111f8576111f861221f565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261229657600080fd5b83018035915067ffffffffffffffff8211156122b157600080fd5b6020019150368190038213156122c657600080fd5b9250929050565b6000602082840312156122df57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123465761234661221f565b5060010190565b6020808252818101839052600090604080840186845b87811015612387578135835284820135858401529183019190830190600101612363565b5090979650505050505050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126123c857600080fd5b9190910192915050565b6000602082840312156123e457600080fd5b61080682611f16565b6000815180845260005b81811015612413576020818501810151868301820152016123f7565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6080815261247860808201845173ffffffffffffffffffffffffffffffffffffffff169052565b602083015160a0820152600060408401516101608060c08501526124a06101e08501836123ed565b9150606086015160e08501526080860151610100818187015260a088015191507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff806101208188870301818901526124f786856123ed565b955060c08a01519350610140612524818a018673ffffffffffffffffffffffffffffffffffffffff169052565b60e08b015194508289880301868a015261253e87866123ed565b9650838b0151955082898803016101808a015261255b87876123ed565b9650818b0151955082898803016101a08a015261257887876123ed565b9650808b01519550505080878603016101c088015250505061259a82826123ed565b91505082810360208401526125b3816000815260200190565b63ffffffff949094166040840152505080820360609091015260008152602001919050565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b60208152815160208201526000602083015161014080604085015261264e6101608501836123ed565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe085840301606086015261268983826123ed565b92505060608501516126b3608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206127268187018315159052565b90950151151593019290925250919050565b60006020828403121561274a57600080fd5b61080682611f3f565b6000808585111561276357600080fd5b8386111561277057600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156127bd5780818660040360031b1b83161692505b505092915050565b818382376000910190815291905056fea2646970667358221220c86422613e0b050f60b22e5a49f38ad7ef52acdb096cd5bd76c36bb91a12533c64736f6c63430008110033";

type DeBridgeDlnFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeBridgeDlnFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeBridgeDlnFacet__factory extends ContractFactory {
  constructor(...args: DeBridgeDlnFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _dlnSource: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DeBridgeDlnFacet> {
    return super.deploy(
      _dlnSource,
      overrides || {}
    ) as Promise<DeBridgeDlnFacet>;
  }
  override getDeployTransaction(
    _dlnSource: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_dlnSource, overrides || {});
  }
  override attach(address: string): DeBridgeDlnFacet {
    return super.attach(address) as DeBridgeDlnFacet;
  }
  override connect(signer: Signer): DeBridgeDlnFacet__factory {
    return super.connect(signer) as DeBridgeDlnFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeBridgeDlnFacetInterface {
    return new utils.Interface(_abi) as DeBridgeDlnFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeBridgeDlnFacet {
    return new Contract(address, _abi, signerOrProvider) as DeBridgeDlnFacet;
  }
}
