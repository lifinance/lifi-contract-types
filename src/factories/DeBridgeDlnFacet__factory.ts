/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DeBridgeDlnFacet,
  DeBridgeDlnFacetInterface,
} from "../DeBridgeDlnFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_dlnSource",
        type: "address",
        internalType: "contract IDlnSource",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "dlnSource",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IDlnSource",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDeBridgeChainId",
    inputs: [
      {
        name: "_chainId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initDeBridgeDln",
    inputs: [
      {
        name: "chainIdConfigs",
        type: "tuple[]",
        internalType: "struct DeBridgeDlnFacet.ChainIdConfig[]",
        components: [
          {
            name: "chainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deBridgeChainId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDeBridgeChainId",
    inputs: [
      {
        name: "_chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_deBridgeChainId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaDeBridgeDln",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_deBridgeData",
        type: "tuple",
        internalType: "struct DeBridgeDlnFacet.DeBridgeDlnData",
        components: [
          {
            name: "receivingAssetId",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "receiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "orderAuthorityDst",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "minAmountOut",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaDeBridgeDln",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_deBridgeData",
        type: "tuple",
        internalType: "struct DeBridgeDlnFacet.DeBridgeDlnData",
        components: [
          {
            name: "receivingAssetId",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "receiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "orderAuthorityDst",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "minAmountOut",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DeBridgeChainIdSet",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "deBridgeChainId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DeBridgeInitialized",
    inputs: [
      {
        name: "chainIdConfigs",
        type: "tuple[]",
        indexed: false,
        internalType: "struct DeBridgeDlnFacet.ChainIdConfig[]",
        components: [
          {
            name: "chainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deBridgeChainId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DlnOrderCreated",
    inputs: [
      {
        name: "orderId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "EmptyNonEVMAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidConfig",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyContractOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
  {
    type: "error",
    name: "UnknownDeBridgeChain",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a060405234801561000f575f5ffd5b506040516128eb3803806128eb83398101604081905261002e9161003f565b6001600160a01b031660805261006c565b5f6020828403121561004f575f5ffd5b81516001600160a01b0381168114610065575f5ffd5b9392505050565b6080516128456100a65f395f818160d20152818161037e015281816106cb01528181610d5f01528181610dc50152610e9f01526128455ff3fe608060405260043610610063575f3560e01c80638f4bef1c116100415780638f4bef1c146100c15780639f5e58f514610119578063f2455b7114610138575f5ffd5b80632c7d2db0146100675780634004633e1461007c5780635df39dde1461008f575b5f5ffd5b61007a610075366004612065565b610157565b005b61007a61008a36600461212b565b61048d565b34801561009a575f5ffd5b506100ae6100a9366004612190565b610784565b6040519081526020015b60405180910390f35b3480156100cc575f5ffd5b506100f47f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b8565b348015610124575f5ffd5b5061007a6101333660046121a7565b6107f3565b348015610143575f5ffd5b5061007a610152366004612218565b610921565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016101d2576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6101e23447612238565b905086806101000151610221576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561025f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886102828160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156102b9576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036102f6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610333576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866103416020820182612270565b90505f0361037b576040517f7a7ed98f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166335087f0a6040518163ffffffff1660e01b81526004016020604051808303815f875af11580156103e6573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061040a91906122d8565b60808d01518d5160c08f0151929350909161044b91908e8e3373ffffffffffffffffffffffffffffffffffffffff87161561044557876109ef565b5f6109ef565b60c08e015261045b8d8b84610b8a565b50479450505050828211159050610480576104805f8461047b8585612238565b61101b565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610508576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6105183447612238565b90508461053d8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610574576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036105b1576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036105ee576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846105fc6020820182612270565b90505f03610636576040517f7a7ed98f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610100015115610674576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101200151156106b2576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106c489608001518a60c00151611050565b61075c89897f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166335087f0a6040518163ffffffff1660e01b81526004016020604051808303815f875af1158015610733573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061075791906122d8565b610b8a565b50479250505081811115610779576107795f8461047b8585612238565b50505f909155505050565b5f8181527fddf87bcc92bf634bfc8852f5a61f9209ce340952b463e87b4242394f116ee96b602081905260408220548083036107ec576040517f9322741e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b5f81900361082d576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610835611104565b7fddf87bcc92bf634bfc8852f5a61f9209ce340952b463e87b4242394f116ee96b5f5b828110156108b357838382818110610872576108726122ef565b90506040020160200135825f015f868685818110610892576108926122ef565b604090810292909201358352506020820192909252015f2055600101610858565b50600181810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690911790556040517f0cd20b776bdd48fad561fb65af5b002cf62ca0e0d5e89f165a9364d9da52a21b90610914908590859061231c565b60405180910390a1505050565b610929611104565b7fddf87bcc92bf634bfc8852f5a61f9209ce340952b463e87b4242394f116ee96c547fddf87bcc92bf634bfc8852f5a61f9209ce340952b463e87b4242394f116ee96b9060ff166109a6576040517f87138d5c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8381526020828152604091829020849055905183815284917fdc55a9203281afff9f6c3a20ab84a4858a398d4b5050c87a02ca78e573d8b34b910160405180910390a2505050565b5f83808203610a2a576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8686610a38600185612238565b818110610a4757610a476122ef565b9050602002810190610a599190612360565b610a6a90608081019060600161239c565b90505f610a7682611179565b905073ffffffffffffffffffffffffffffffffffffffff8216610aa057610a9d3482612238565b90505b5f610aab89896111c3565b9050610ab789896112cd565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff89166020820152908101879052610af2818b8b85611339565b5f83610afd86611179565b610b079190612238565b905073ffffffffffffffffffffffffffffffffffffffff8516610b3157610b2e8882612238565b90505b8b811015610b7a576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d9052602481018290526044015b60405180910390fd5b9c9b505050505050505050505050565b6040805161016081018252608085015173ffffffffffffffffffffffffffffffffffffffff16815260c085015160208201525f918101610bca8580612270565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505050908252506060850135602082015260e0860151604090910190610c1e90610784565b8152602001848060200190610c339190612270565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250505090825250336020820152604090810190610c8190860186612270565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201829052509385525050604080516020818101835284825280860191909152815180820183529384528185019390935251606090930192610d1a923392500160609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b60405160208183030381529060405281525090505f610d51856080015173ffffffffffffffffffffffffffffffffffffffff161590565b610e4857610d8885608001517f00000000000000000000000000000000000000000000000000000000000000008760c00151611721565b6040517ffbe16ca700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063fbe16ca7908590610e0090869061780990600401612401565b60206040518083038185885af1158015610e1c573d5f5f3e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190610e4191906122d8565b9050610f1c565b828260200151610e589190612238565b602083015260c08501516040517ffbe16ca700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163fbe16ca791610ed890869061780990600401612401565b60206040518083038185885af1158015610ef4573d5f5f3e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190610f1991906122d8565b90505b60405181907ff19318a6980c94fb206f1e506fa7017ed9dd61959634e8fa128a38df4e527db7905f90a27311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168560a0015173ffffffffffffffffffffffffffffffffffffffff1603610fdd5760e085015185517ff9b69f466270c99522169d563c0a430e88c52865ec33b1cc36ee2a4a6ea5170b610fc66020880188612270565b604051610fd49291906125fb565b60405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18560405161100c9190612647565b60405180910390a15050505050565b73ffffffffffffffffffffffffffffffffffffffff831661104557611040828261174d565b505050565b6110408383836117ba565b805f03611089576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166110e257803410156110de576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6110de73ffffffffffffffffffffffffffffffffffffffff8316333084611828565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314611177576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff8216156111bb576111b673ffffffffffffffffffffffffffffffffffffffff831630611880565b6111bd565b475b92915050565b6060815f8167ffffffffffffffff8111156111e0576111e0611e30565b604051908082528060200260200182016040528015611209578160200160208202803683370190505b5090505f805b838110156112c257868682818110611229576112296122ef565b905060200281019061123b9190612360565b61124c90608081019060600161239c565b915061125782611179565b838281518110611269576112696122ef565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff82166112ba57348382815181106112a2576112a26122ef565b602002602001018181516112b69190612238565b9052505b60010161120f565b509095945050505050565b5f5b8181101561104057368383838181106112ea576112ea6122ef565b90506020028101906112fc9190612360565b905061130e60e0820160c0830161275a565b1561133057611330611326606083016040840161239c565b8260800135611050565b506001016112cf565b60208401516040850151849184918490836001811461163b575f8686611360600185612238565b81811061136f5761136f6122ef565b90506020028101906113819190612360565b61139290608081019060600161239c565b90505f89815b8181101561153b57368d8d838181106113b3576113b36122ef565b90506020028101906113c59190612360565b90506113f46113da606083016040840161239c565b73ffffffffffffffffffffffffffffffffffffffff161590565b80611456575061145661140d604083016020840161239c565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561146d575061146d61140d602083018361239c565b80156114f057506114f061148460a0830183612270565b611492916004915f91612773565b61149b9161279a565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611526576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e5161153290826118b3565b50600101611398565b505f90505b61154b600185612238565b811015611633575f898983818110611565576115656122ef565b90506020028101906115779190612360565b61158890608081019060600161239c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461162a578682815181106115cf576115cf6122ef565b60200260200101516115e082611179565b6115ea9190612238565b92505f73ffffffffffffffffffffffffffffffffffffffff82161561160f575f611611565b865b9050831561162857611628828a61047b8488612238565b505b50600101611540565b505050611715565b875f5b8181101561171257368b8b83818110611659576116596122ef565b905060200281019061166b9190612360565b90506116806113da606083016040840161239c565b80611699575061169961140d604083016020840161239c565b80156116b057506116b061140d602083018361239c565b80156116c757506116c761148460a0830183612270565b6116fd576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c5161170990826118b3565b5060010161163e565b50505b50505050505050505050565b6110408383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611b85565b73ffffffffffffffffffffffffffffffffffffffff821661179a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110de73ffffffffffffffffffffffffffffffffffffffff831682611cb2565b73ffffffffffffffffffffffffffffffffffffffff8216611807576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61104073ffffffffffffffffffffffffffffffffffffffff84168383611ccb565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f5114171661187357637939f4245f526004601cfd5b5f60605260405250505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b6118c86118c3602083018361239c565b611d14565b6118fe576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f81900361193d576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6119516113da606085016040860161239c565b61195b575f611961565b82608001355b90505f61197c611977606086016040870161239c565b611179565b90505f611992611977608087016060880161239c565b9050825f036119c8576119c86119ae606087016040880161239c565b6119be604088016020890161239c565b8760800135611721565b8460800135821015611a13576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610b71565b5f80611a22602088018861239c565b73ffffffffffffffffffffffffffffffffffffffff1685611a4660a08a018a612270565b604051611a54929190612800565b5f6040518083038185875af1925050503d805f8114611a8e576040519150601f19603f3d011682016040523d82523d5f602084013e611a93565b606091505b509150915081611aa657611aa681611da8565b5f611aba61197760808a0160608b0161239c565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611aeb60208b018b61239c565b611afb60608c0160408d0161239c565b611b0b60808d0160608e0161239c565b8c60800135898711611b1d5786611b27565b611b278a88612238565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff841615611cac5773ffffffffffffffffffffffffffffffffffffffff8316611bee576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611c61573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c8591906122d8565b1015611cac57611cac73ffffffffffffffffffffffffffffffffffffffff85168483611db2565b50505050565b5f385f3884865af16110de5763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716611d0b576390b8ec185f526004601cfd5b5f603452505050565b6040805160178082528183019092525f9182919060208201818036833701905050905060175f60208301853c60208101517f10ff0000000000000000000000000000000000000000000000000000000000007fffffff0000000000000000000000000000000000000000000000000000000000821601611d9f57506023015160601c3b151592915050565b5050503b151590565b8051602082018181fd5b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716611d0b575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f51141716611d0b57633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff81118282101715611e8157611e81611e30565b60405290565b5f82601f830112611e96575f5ffd5b813567ffffffffffffffff811115611eb057611eb0611e30565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff81118282101715611efd57611efd611e30565b604052818152838201602001851015611f14575f5ffd5b816020850160208301375f918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611f53575f5ffd5b919050565b80358015158114611f53575f5ffd5b5f6101408284031215611f78575f5ffd5b611f80611e5d565b823581529050602082013567ffffffffffffffff811115611f9f575f5ffd5b611fab84828501611e87565b602083015250604082013567ffffffffffffffff811115611fca575f5ffd5b611fd684828501611e87565b604083015250611fe860608301611f30565b6060820152611ff960808301611f30565b608082015261200a60a08301611f30565b60a082015260c0828101359082015260e080830135908201526120306101008301611f58565b6101008201526120436101208301611f58565b61012082015292915050565b5f6080828403121561205f575f5ffd5b50919050565b5f5f5f5f60608587031215612078575f5ffd5b843567ffffffffffffffff81111561208e575f5ffd5b61209a87828801611f67565b945050602085013567ffffffffffffffff8111156120b6575f5ffd5b8501601f810187136120c6575f5ffd5b803567ffffffffffffffff8111156120dc575f5ffd5b8760208260051b84010111156120f0575f5ffd5b60209190910193509150604085013567ffffffffffffffff811115612113575f5ffd5b61211f8782880161204f565b91505092959194509250565b5f5f6040838503121561213c575f5ffd5b823567ffffffffffffffff811115612152575f5ffd5b61215e85828601611f67565b925050602083013567ffffffffffffffff81111561217a575f5ffd5b6121868582860161204f565b9150509250929050565b5f602082840312156121a0575f5ffd5b5035919050565b5f5f602083850312156121b8575f5ffd5b823567ffffffffffffffff8111156121ce575f5ffd5b8301601f810185136121de575f5ffd5b803567ffffffffffffffff8111156121f4575f5ffd5b8560208260061b8401011115612208575f5ffd5b6020919091019590945092505050565b5f5f60408385031215612229575f5ffd5b50508035926020909101359150565b818103818111156111bd577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126122a3575f5ffd5b83018035915067ffffffffffffffff8211156122bd575f5ffd5b6020019150368190038213156122d1575f5ffd5b9250929050565b5f602082840312156122e8575f5ffd5b5051919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b602080825281018290525f8360408301825b858110156123565782358252602080840135908301526040928301929091019060010161232e565b5095945050505050565b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612392575f5ffd5b9190910192915050565b5f602082840312156123ac575f5ffd5b6107ec82611f30565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6080815261242860808201845173ffffffffffffffffffffffffffffffffffffffff169052565b602083015160a08201525f604084015161016060c084015261244e6101e08401826123b5565b9050606085015160e0840152608085015161010084015260a08501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808483030161012085015261249f82826123b5565b91505060c08501516124ca61014085018273ffffffffffffffffffffffffffffffffffffffff169052565b5060e08501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808483030161016085015261250582826123b5565b9150506101008501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808483030161018085015261254382826123b5565b9150506101208501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80848303016101a085015261258182826123b5565b9150506101408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80848303016101c08501526125bf82826123b5565b91505082810360208401526125d7815f815260200190565b63ffffffff94909416604084015250508082036060909101525f8152602001919050565b60208152816020820152818360408301375f818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b60208152815160208201525f6020830151610140604084015261266e6101608401826123b5565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160608501526126a982826123b5565b91505060608401516126d3608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e084015161010084015261010084015161274261012085018215159052565b50610120840151801515610140850152509392505050565b5f6020828403121561276a575f5ffd5b6107ec82611f58565b5f5f85851115612781575f5ffd5b8386111561278d575f5ffd5b5050820193919092039150565b80357fffffffff0000000000000000000000000000000000000000000000000000000081169060048410156127f9577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f910190815291905056fea2646970667358221220a2afc56fe31eaffda31747d90c09273d6a2019cb0c7486a1094bfc4b0354f76664736f6c634300081d0033";

type DeBridgeDlnFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeBridgeDlnFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeBridgeDlnFacet__factory extends ContractFactory {
  constructor(...args: DeBridgeDlnFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _dlnSource: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DeBridgeDlnFacet> {
    return super.deploy(
      _dlnSource,
      overrides || {}
    ) as Promise<DeBridgeDlnFacet>;
  }
  override getDeployTransaction(
    _dlnSource: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_dlnSource, overrides || {});
  }
  override attach(address: string): DeBridgeDlnFacet {
    return super.attach(address) as DeBridgeDlnFacet;
  }
  override connect(signer: Signer): DeBridgeDlnFacet__factory {
    return super.connect(signer) as DeBridgeDlnFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeBridgeDlnFacetInterface {
    return new utils.Interface(_abi) as DeBridgeDlnFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeBridgeDlnFacet {
    return new Contract(address, _abi, signerOrProvider) as DeBridgeDlnFacet;
  }
}
