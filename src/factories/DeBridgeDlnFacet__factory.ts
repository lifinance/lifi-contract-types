/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DeBridgeDlnFacet,
  DeBridgeDlnFacetInterface,
} from "../DeBridgeDlnFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_dlnSource",
        type: "address",
        internalType: "contract IDlnSource",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "DLN_SOURCE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IDlnSource",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDeBridgeChainId",
    inputs: [
      {
        name: "_chainId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initDeBridgeDln",
    inputs: [
      {
        name: "chainIdConfigs",
        type: "tuple[]",
        internalType: "struct DeBridgeDlnFacet.ChainIdConfig[]",
        components: [
          {
            name: "chainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deBridgeChainId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDeBridgeChainId",
    inputs: [
      {
        name: "_chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_deBridgeChainId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaDeBridgeDln",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_deBridgeData",
        type: "tuple",
        internalType: "struct DeBridgeDlnFacet.DeBridgeDlnData",
        components: [
          {
            name: "receivingAssetId",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "receiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "orderAuthorityDst",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "minAmountOut",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaDeBridgeDln",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_deBridgeData",
        type: "tuple",
        internalType: "struct DeBridgeDlnFacet.DeBridgeDlnData",
        components: [
          {
            name: "receivingAssetId",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "receiver",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "orderAuthorityDst",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "minAmountOut",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BridgeToNonEVMChainBytes32",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DeBridgeChainIdSet",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "deBridgeChainId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DeBridgeInitialized",
    inputs: [
      {
        name: "chainIdConfigs",
        type: "tuple[]",
        indexed: false,
        internalType: "struct DeBridgeDlnFacet.ChainIdConfig[]",
        components: [
          {
            name: "chainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deBridgeChainId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DlnOrderCreated",
    inputs: [
      {
        name: "orderId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "EmptyNonEVMAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidConfig",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyContractOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
  {
    type: "error",
    name: "UnknownDeBridgeChain",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a060405234801561000f575f5ffd5b5060405161281b38038061281b83398101604081905261002e91610066565b6001600160a01b038116610055576040516306b7c75960e31b815260040160405180910390fd5b6001600160a01b0316608052610093565b5f60208284031215610076575f5ffd5b81516001600160a01b038116811461008c575f5ffd5b9392505050565b60805161274e6100cd5f395f818160d20152818161037e015281816106cb01528181610d5e01528181610dc40152610e9e015261274e5ff3fe608060405260043610610063575f3560e01c80639eaeb24f116100415780639eaeb24f146100c15780639f5e58f514610119578063f2455b7114610138575f5ffd5b80632c7d2db0146100675780634004633e1461007c5780635df39dde1461008f575b5f5ffd5b61007a610075366004611f6e565b610157565b005b61007a61008a366004612034565b61048d565b34801561009a575f5ffd5b506100ae6100a9366004612099565b610784565b6040519081526020015b60405180910390f35b3480156100cc575f5ffd5b506100f47f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b8565b348015610124575f5ffd5b5061007a6101333660046120b0565b6107f3565b348015610143575f5ffd5b5061007a610152366004612121565b610921565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016101d2576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6101e23447612141565b905086806101000151610221576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878061012001511561025f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886102828160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156102b9576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036102f6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610333576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b866103416020820182612179565b90505f0361037b576040517f7a7ed98f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166335087f0a6040518163ffffffff1660e01b81526004016020604051808303815f875af11580156103e6573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061040a91906121e1565b60808d01518d5160c08f0151929350909161044b91908e8e3373ffffffffffffffffffffffffffffffffffffffff87161561044557876109ef565b5f6109ef565b60c08e015261045b8d8b84610b89565b50479450505050828211159050610480576104805f8461047b8585612141565b61101a565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610508576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6105183447612141565b90508461053d8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610574576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036105b1576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036105ee576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846105fc6020820182612179565b90505f03610636576040517f7a7ed98f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610100015115610674576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87806101200151156106b2576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106c489608001518a60c0015161104f565b61075c89897f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166335087f0a6040518163ffffffff1660e01b81526004016020604051808303815f875af1158015610733573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061075791906121e1565b610b89565b50479250505081811115610779576107795f8461047b8585612141565b50505f909155505050565b5f8181527fddf87bcc92bf634bfc8852f5a61f9209ce340952b463e87b4242394f116ee96b602081905260408220548083036107ec576040517f9322741e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b5f81900361082d576040517f35be3ac800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610835611103565b7fddf87bcc92bf634bfc8852f5a61f9209ce340952b463e87b4242394f116ee96b5f5b828110156108b357838382818110610872576108726121f8565b90506040020160200135825f015f868685818110610892576108926121f8565b604090810292909201358352506020820192909252015f2055600101610858565b50600181810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690911790556040517f0cd20b776bdd48fad561fb65af5b002cf62ca0e0d5e89f165a9364d9da52a21b906109149085908590612225565b60405180910390a1505050565b610929611103565b7fddf87bcc92bf634bfc8852f5a61f9209ce340952b463e87b4242394f116ee96c547fddf87bcc92bf634bfc8852f5a61f9209ce340952b463e87b4242394f116ee96b9060ff166109a6576040517f87138d5c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8381526020828152604091829020849055905183815284917fdc55a9203281afff9f6c3a20ab84a4858a398d4b5050c87a02ca78e573d8b34b910160405180910390a2505050565b5f83808203610a2a576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8686610a38600185612141565b818110610a4757610a476121f8565b9050602002810190610a599190612269565b610a6a9060808101906060016122a5565b90505f610a7682611178565b905073ffffffffffffffffffffffffffffffffffffffff8216610aa057610a9d3482612141565b90505b5f610aab89896111c2565b9050610ab789896112cc565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff89166020820152908101879052610af2818b8b85611338565b5f83610afd86611178565b610b079190612141565b905073ffffffffffffffffffffffffffffffffffffffff8516610b3157610b2e8882612141565b90505b8b811015610b79576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d90526024810182905260440160405180910390fd5b9c9b505050505050505050505050565b6040805161016081018252608085015173ffffffffffffffffffffffffffffffffffffffff16815260c085015160208201525f918101610bc98580612179565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505050908252506060850135602082015260e0860151604090910190610c1d90610784565b8152602001848060200190610c329190612179565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250505090825250336020820152604090810190610c8090860186612179565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201829052509385525050604080516020818101835284825280860191909152815180820183529384528185019390935251606090930192610d19923392500160609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b60405160208183030381529060405281525090505f610d50856080015173ffffffffffffffffffffffffffffffffffffffff161590565b610e4757610d8785608001517f00000000000000000000000000000000000000000000000000000000000000008760c00151611506565b6040517ffbe16ca700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063fbe16ca7908590610dff9086906178099060040161230a565b60206040518083038185885af1158015610e1b573d5f5f3e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190610e4091906121e1565b9050610f1b565b828260200151610e579190612141565b602083015260c08501516040517ffbe16ca700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163fbe16ca791610ed79086906178099060040161230a565b60206040518083038185885af1158015610ef3573d5f5f3e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190610f1891906121e1565b90505b60405181907ff19318a6980c94fb206f1e506fa7017ed9dd61959634e8fa128a38df4e527db7905f90a27311f111f111f111f111f111f111f111f111f111f173ffffffffffffffffffffffffffffffffffffffff168560a0015173ffffffffffffffffffffffffffffffffffffffff1603610fdc5760e085015185517ff9b69f466270c99522169d563c0a430e88c52865ec33b1cc36ee2a4a6ea5170b610fc56020880188612179565b604051610fd3929190612504565b60405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18560405161100b9190612550565b60405180910390a15050505050565b73ffffffffffffffffffffffffffffffffffffffff83166110445761103f8282611532565b505050565b61103f83838361159f565b805f03611088576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166110e157803410156110dd576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6110dd73ffffffffffffffffffffffffffffffffffffffff831633308461160d565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314611176576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff8216156111ba576111b573ffffffffffffffffffffffffffffffffffffffff831630611665565b6111bc565b475b92915050565b6060815f8167ffffffffffffffff8111156111df576111df611d39565b604051908082528060200260200182016040528015611208578160200160208202803683370190505b5090505f5f5b838110156112c157868682818110611228576112286121f8565b905060200281019061123a9190612269565b61124b9060808101906060016122a5565b915061125682611178565b838281518110611268576112686121f8565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff82166112b957348382815181106112a1576112a16121f8565b602002602001018181516112b59190612141565b9052505b60010161120e565b509095945050505050565b5f5b8181101561103f57368383838181106112e9576112e96121f8565b90506020028101906112fb9190612269565b905061130d60e0820160c08301612663565b1561132f5761132f61132560608301604084016122a5565b826080013561104f565b506001016112ce565b60208401516040850151849184918490835f5b818110156114ec57368a8a83818110611366576113666121f8565b90506020028101906113789190612269565b90506113a761138d60608301604084016122a5565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061140857506114086113c060408301602084016122a5565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f216020526040902054151590565b801561141f575061141f6113c060208301836122a5565b80156114a157506114a161143660a0830183612179565b611444916004915f9161267c565b61144d916126a3565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f226020526040902054151590565b6114d7576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b516114e39082611698565b5060010161134b565b50506114fb858585858561190b565b505050505050505050565b61103f8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611b22565b73ffffffffffffffffffffffffffffffffffffffff821661157f576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110dd73ffffffffffffffffffffffffffffffffffffffff831682611c4f565b73ffffffffffffffffffffffffffffffffffffffff82166115ec576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61103f73ffffffffffffffffffffffffffffffffffffffff84168383611c68565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f5114171661165857637939f4245f526004601cfd5b5f60605260405250505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b6116b06116a860208301836122a5565b6017903b1190565b6116e6576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003611725576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61173961138d60608501604086016122a5565b611743575f611749565b82608001355b90505f61176461175f60808601606087016122a5565b611178565b9050815f0361179a5761179a61178060608601604087016122a5565b61179060408701602088016122a5565b8660800135611506565b5f806117a960208701876122a5565b73ffffffffffffffffffffffffffffffffffffffff16846117cd60a0890189612179565b6040516117db929190612709565b5f6040518083038185875af1925050503d805f8114611815576040519150601f19603f3d011682016040523d82523d5f602084013e61181a565b606091505b50915091508161182d5761182d81611cb1565b5f61184161175f6080890160608a016122a5565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861187260208a018a6122a5565b61188260608b0160408c016122a5565b61189260808c0160608d016122a5565b8b608001358987116118a457866118ae565b6118ae8a88612141565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f868261191a600182612141565b818110611929576119296121f8565b905060200281019061193b9190612269565b61194c9060808101906060016122a5565b90505f5f5f5f5f5f5f5b88811015611b125761196960018a612141565b81108015611978575088600114155b15611a53578d8d8281811061198f5761198f6121f8565b90506020028101906119a19190612269565b6119b29060808101906060016122a5565b95508773ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611a53578a81815181106119f9576119f96121f8565b6020026020010151611a0a87611178565b611a149190612141565b965073ffffffffffffffffffffffffffffffffffffffff861615611a38575f611a3a565b895b935083871115611a5357611a53868d61047b878b612141565b8d8d82818110611a6557611a656121f8565b9050602002810190611a779190612269565b611a889060608101906040016122a5565b9450611a9385611178565b925073ffffffffffffffffffffffffffffffffffffffff851615611ab7575f611ab9565b895b91508183118015611af657508773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b15611b0a57611b0a858d61047b8587612141565b600101611956565b5050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff841615611c495773ffffffffffffffffffffffffffffffffffffffff8316611b8b576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611bfe573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c2291906121e1565b1015611c4957611c4973ffffffffffffffffffffffffffffffffffffffff85168483611cbb565b50505050565b5f385f3884865af16110dd5763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716611ca8576390b8ec185f526004601cfd5b5f603452505050565b8051602082018181fd5b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716611ca8575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f51141716611ca857633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff81118282101715611d8a57611d8a611d39565b60405290565b5f82601f830112611d9f575f5ffd5b813567ffffffffffffffff811115611db957611db9611d39565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff81118282101715611e0657611e06611d39565b604052818152838201602001851015611e1d575f5ffd5b816020850160208301375f918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611e5c575f5ffd5b919050565b80358015158114611e5c575f5ffd5b5f6101408284031215611e81575f5ffd5b611e89611d66565b823581529050602082013567ffffffffffffffff811115611ea8575f5ffd5b611eb484828501611d90565b602083015250604082013567ffffffffffffffff811115611ed3575f5ffd5b611edf84828501611d90565b604083015250611ef160608301611e39565b6060820152611f0260808301611e39565b6080820152611f1360a08301611e39565b60a082015260c0828101359082015260e08083013590820152611f396101008301611e61565b610100820152611f4c6101208301611e61565b61012082015292915050565b5f60808284031215611f68575f5ffd5b50919050565b5f5f5f5f60608587031215611f81575f5ffd5b843567ffffffffffffffff811115611f97575f5ffd5b611fa387828801611e70565b945050602085013567ffffffffffffffff811115611fbf575f5ffd5b8501601f81018713611fcf575f5ffd5b803567ffffffffffffffff811115611fe5575f5ffd5b8760208260051b8401011115611ff9575f5ffd5b60209190910193509150604085013567ffffffffffffffff81111561201c575f5ffd5b61202887828801611f58565b91505092959194509250565b5f5f60408385031215612045575f5ffd5b823567ffffffffffffffff81111561205b575f5ffd5b61206785828601611e70565b925050602083013567ffffffffffffffff811115612083575f5ffd5b61208f85828601611f58565b9150509250929050565b5f602082840312156120a9575f5ffd5b5035919050565b5f5f602083850312156120c1575f5ffd5b823567ffffffffffffffff8111156120d7575f5ffd5b8301601f810185136120e7575f5ffd5b803567ffffffffffffffff8111156120fd575f5ffd5b8560208260061b8401011115612111575f5ffd5b6020919091019590945092505050565b5f5f60408385031215612132575f5ffd5b50508035926020909101359150565b818103818111156111bc577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126121ac575f5ffd5b83018035915067ffffffffffffffff8211156121c6575f5ffd5b6020019150368190038213156121da575f5ffd5b9250929050565b5f602082840312156121f1575f5ffd5b5051919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b602080825281018290525f8360408301825b8581101561225f57823582526020808401359083015260409283019290910190600101612237565b5095945050505050565b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261229b575f5ffd5b9190910192915050565b5f602082840312156122b5575f5ffd5b6107ec82611e39565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6080815261233160808201845173ffffffffffffffffffffffffffffffffffffffff169052565b602083015160a08201525f604084015161016060c08401526123576101e08401826122be565b9050606085015160e0840152608085015161010084015260a08501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80848303016101208501526123a882826122be565b91505060c08501516123d361014085018273ffffffffffffffffffffffffffffffffffffffff169052565b5060e08501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808483030161016085015261240e82826122be565b9150506101008501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808483030161018085015261244c82826122be565b9150506101208501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80848303016101a085015261248a82826122be565b9150506101408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80848303016101c08501526124c882826122be565b91505082810360208401526124e0815f815260200190565b63ffffffff94909416604084015250508082036060909101525f8152602001919050565b60208152816020820152818360408301375f818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b60208152815160208201525f602083015161014060408401526125776101608401826122be565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160608501526125b282826122be565b91505060608401516125dc608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e084015161010084015261010084015161264b61012085018215159052565b50610120840151801515610140850152509392505050565b5f60208284031215612673575f5ffd5b6107ec82611e61565b5f5f8585111561268a575f5ffd5b83861115612696575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015612702577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f910190815291905056fea2646970667358221220ec8c381f59be5f136cdb2501aba6b220bf34ee13511f333670d610bb5e3f780264736f6c634300081d0033";

type DeBridgeDlnFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeBridgeDlnFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeBridgeDlnFacet__factory extends ContractFactory {
  constructor(...args: DeBridgeDlnFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _dlnSource: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DeBridgeDlnFacet> {
    return super.deploy(
      _dlnSource,
      overrides || {}
    ) as Promise<DeBridgeDlnFacet>;
  }
  override getDeployTransaction(
    _dlnSource: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_dlnSource, overrides || {});
  }
  override attach(address: string): DeBridgeDlnFacet {
    return super.attach(address) as DeBridgeDlnFacet;
  }
  override connect(signer: Signer): DeBridgeDlnFacet__factory {
    return super.connect(signer) as DeBridgeDlnFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeBridgeDlnFacetInterface {
    return new utils.Interface(_abi) as DeBridgeDlnFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeBridgeDlnFacet {
    return new Contract(address, _abi, signerOrProvider) as DeBridgeDlnFacet;
  }
}
