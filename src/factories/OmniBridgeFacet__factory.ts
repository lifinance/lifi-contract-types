/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  OmniBridgeFacet,
  OmniBridgeFacetInterface,
} from "../OmniBridgeFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_foreignOmniBridge",
        type: "address",
        internalType: "contract IOmniBridge",
      },
      {
        name: "_wethOmniBridge",
        type: "address",
        internalType: "contract IOmniBridge",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaOmniBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaOmniBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NativeAssetTransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NoTransferToNullAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAnERC20Token",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c060405234801561000f575f5ffd5b5060405161253038038061253083398101604081905261002e91610060565b6001600160a01b039182166080521660a052610091565b80516001600160a01b038116811461005b575f5ffd5b919050565b5f5f60408385031215610071575f5ffd5b61007a83610045565b915061008860208401610045565b90509250929050565b60805160a0516124776100b95f395f61068701525f81816106f0015261077a01526124775ff3fe608060405260043610610028575f3560e01c8063782621d81461002c5780639572678214610041575b5f5ffd5b61003f61003a366004611fdb565b610054565b005b61003f61004f36600461200d565b610277565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100cf576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6100df34476120a8565b9050838061010001511561011f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b848061012001511561015d576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856101808160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101b7576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036101f4576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610231576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61024387608001518860c0015161049d565b61024c87610619565b50479150508181111561026d5761026d5f8461026885856120a8565b61080e565b50505f9091555050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102f2576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f61030234476120a8565b905085806101000151610341576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868061012001511561037f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876103a28160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103d9576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610416576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610453576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610467895f01518a60c001518a8a3361083f565b60c08a015261047589610619565b504791505081811115610491576104915f8461026885856120a8565b50505f90915550505050565b805f036104d6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661052f578034101561052b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201525f9073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610599573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105bd91906120e0565b905081811015610608576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b6106148333308561097d565b505050565b608081015173ffffffffffffffffffffffffffffffffffffffff166106e65760c081015160a08201516040517ff52cbf0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201527f00000000000000000000000000000000000000000000000000000000000000009091169163f52cbf0e916024015f604051808303818588803b1580156106ca575f5ffd5b505af11580156106dc573d5f5f3e3d5ffd5b50505050506107d4565b61071981608001517f00000000000000000000000000000000000000000000000000000000000000008360c00151610b92565b608081015160a082015160c08301516040517fad58bdd100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152918316602483015260448201527f00000000000000000000000000000000000000000000000000000000000000009091169063ad58bdd1906064015f604051808303815f87803b1580156107bd575f5ffd5b505af11580156107cf573d5f5f3e3d5ffd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1816040516108039190612143565b60405180910390a150565b73ffffffffffffffffffffffffffffffffffffffff83161561083557610614838383610cc7565b6106148282610e46565b5f8280820361087a576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f85856108886001856120a8565b81811061089757610897612256565b90506020028101906108a99190612283565b6108ba9060808101906060016122bf565b90505f6108c682610f6c565b905073ffffffffffffffffffffffffffffffffffffffff82166108f0576108ed34826120a8565b90505b5f6108fb8888611022565b9050610907888861112c565b6109148a89898985611198565b5f8261091f85610f6c565b61092991906120a8565b90508981101561096f576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044016105ff565b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff84166109ca576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610a17576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285915f918316906370a0823190602401602060405180830381865afa158015610a85573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610aa991906120e0565b9050610ab782868686611543565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610b25573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b4991906120e0565b610b5391906120a8565b14610b8a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610bb257505050565b73ffffffffffffffffffffffffffffffffffffffff8216610bff576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015610c72573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c9691906120e0565b10156106145761061483837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61161f565b73ffffffffffffffffffffffffffffffffffffffff8316610d14576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610d61576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201525f9073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610dcb573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610def91906120e0565b905080821115610e35576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016105ff565b610e4084848461170e565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610e93576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115610ed6576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016105ff565b5f8273ffffffffffffffffffffffffffffffffffffffff16826040515f6040518083038185875af1925050503d805f8114610f2c576040519150601f19603f3d011682016040523d82523d5f602084013e610f31565b606091505b5050905080610614576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff82161561101a576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610ff1573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061101591906120e0565b61101c565b475b92915050565b6060815f8167ffffffffffffffff81111561103f5761103f611db0565b604051908082528060200260200182016040528015611068578160200160208202803683370190505b5090505f805b838110156111215786868281811061108857611088612256565b905060200281019061109a9190612283565b6110ab9060808101906060016122bf565b91506110b682610f6c565b8382815181106110c8576110c8612256565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216611119573483828151811061110157611101612256565b6020026020010181815161111591906120a8565b9052505b60010161106e565b509095945050505050565b5f5b81811015610614573683838381811061114957611149612256565b905060200281019061115b9190612283565b905061116d60e0820160c083016122df565b1561118f5761118f61118560608301604084016122bf565b826080013561049d565b5060010161112e565b83838383826001811461145f575f85856111b36001856120a8565b8181106111c2576111c2612256565b90506020028101906111d49190612283565b6111e59060808101906060016122bf565b90505f89815b8181101561138c57368d8d8381811061120657611206612256565b90506020028101906112189190612283565b905061124761122d60608301604084016122bf565b73ffffffffffffffffffffffffffffffffffffffff161590565b806112a957506112a961126060408301602084016122bf565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156112c057506112c061126060208301836122bf565b801561134357506113436112d760a08301836122fa565b6112e5916004915f91612362565b6112ee91612389565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611379576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113838f82611764565b506001016111eb565b505f90505b61139c6001856120a8565b811015611457575f8888838181106113b6576113b6612256565b90506020028101906113c89190612283565b6113d99060808101906060016122bf565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461144e5785828151811061142057611420612256565b602002602001015161143182610f6c565b61143b91906120a8565b9250821561144e5761144e81888561080e565b50600101611391565b505050611537565b875f5b8181101561153457368b8b8381811061147d5761147d612256565b905060200281019061148f9190612283565b90506114a461122d60608301604084016122bf565b806114bd57506114bd61126060408301602084016122bf565b80156114d457506114d461126060208301836122bf565b80156114eb57506114eb6112d760a08301836122fa565b611521576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61152b8d82611764565b50600101611462565b50505b50505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610e409085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526119d5565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790526116ab8482611ae2565b610e405760405173ffffffffffffffffffffffffffffffffffffffff841660248201525f60448201526117049085907f095ea7b3000000000000000000000000000000000000000000000000000000009060640161159d565b610e4084826119d5565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526106149084907fa9059cbb000000000000000000000000000000000000000000000000000000009060640161159d565b61177a61177460208301836122bf565b3b151590565b6117b0576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f8190036117ef576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61180361122d60608501604086016122bf565b61180d575f611813565b82608001355b90505f61182e61182960808601606087016122bf565b610f6c565b9050815f036118645761186461184a60608601604087016122bf565b61185a60408701602088016122bf565b8660800135610b92565b5f8061187360208701876122bf565b73ffffffffffffffffffffffffffffffffffffffff168461189760a08901896122fa565b6040516118a59291906123ef565b5f6040518083038185875af1925050503d805f81146118df576040519150601f19603f3d011682016040523d82523d5f602084013e6118e4565b606091505b5091509150816118f7576118f781611b9d565b5f61190b6118296080890160608a016122bf565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861193c60208a018a6122bf565b61194c60608b0160408c016122bf565b61195c60808c0160608d016122bf565b8b6080013589871161196e5786611978565b6119788a886120a8565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b5f611a36826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611ba79092919063ffffffff16565b905080515f1480611a56575080806020019051810190611a5691906123fe565b610614576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105ff565b5f5f5f8473ffffffffffffffffffffffffffffffffffffffff1684604051611b0a9190612419565b5f604051808303815f865af19150503d805f8114611b43576040519150601f19603f3d011682016040523d82523d5f602084013e611b48565b606091505b5091509150818015611b72575080511580611b72575080806020019051810190611b7291906123fe565b8015611b94575073ffffffffffffffffffffffffffffffffffffffff85163b15155b95945050505050565b8051602082018181fd5b6060611bb584845f85611bbd565b949350505050565b606082471015611c4f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105ff565b5f5f8673ffffffffffffffffffffffffffffffffffffffff168587604051611c779190612419565b5f6040518083038185875af1925050503d805f8114611cb1576040519150601f19603f3d011682016040523d82523d5f602084013e611cb6565b606091505b5091509150611cc787838387611cd2565b979650505050505050565b60608315611d675782515f03611d605773ffffffffffffffffffffffffffffffffffffffff85163b611d60576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105ff565b5081611bb5565b611bb58383815115611d7c5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ff919061242f565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff81118282101715611e0157611e01611db0565b60405290565b5f82601f830112611e16575f5ffd5b813567ffffffffffffffff811115611e3057611e30611db0565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff81118282101715611e7d57611e7d611db0565b604052818152838201602001851015611e94575f5ffd5b816020850160208301375f918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611ed3575f5ffd5b919050565b8015158114611ee5575f5ffd5b50565b8035611ed381611ed8565b5f6101408284031215611f04575f5ffd5b611f0c611ddd565b823581529050602082013567ffffffffffffffff811115611f2b575f5ffd5b611f3784828501611e07565b602083015250604082013567ffffffffffffffff811115611f56575f5ffd5b611f6284828501611e07565b604083015250611f7460608301611eb0565b6060820152611f8560808301611eb0565b6080820152611f9660a08301611eb0565b60a082015260c0828101359082015260e08083013590820152611fbc6101008301611ee8565b610100820152611fcf6101208301611ee8565b61012082015292915050565b5f60208284031215611feb575f5ffd5b813567ffffffffffffffff811115612001575f5ffd5b611bb584828501611ef3565b5f5f5f6040848603121561201f575f5ffd5b833567ffffffffffffffff811115612035575f5ffd5b61204186828701611ef3565b935050602084013567ffffffffffffffff81111561205d575f5ffd5b8401601f8101861361206d575f5ffd5b803567ffffffffffffffff811115612083575f5ffd5b8660208260051b8401011115612097575f5ffd5b939660209190910195509293505050565b8181038181111561101c577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f602082840312156120f0575f5ffd5b5051919050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f6020830151610140604084015261216a6101608401826120f7565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160608501526121a582826120f7565b91505060608401516121cf608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e084015161010084015261010084015161223e61012085018215159052565b50610120840151801515610140850152509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126122b5575f5ffd5b9190910192915050565b5f602082840312156122cf575f5ffd5b6122d882611eb0565b9392505050565b5f602082840312156122ef575f5ffd5b81356122d881611ed8565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261232d575f5ffd5b83018035915067ffffffffffffffff821115612347575f5ffd5b60200191503681900382131561235b575f5ffd5b9250929050565b5f5f85851115612370575f5ffd5b8386111561237c575f5ffd5b5050820193919092039150565b80357fffffffff0000000000000000000000000000000000000000000000000000000081169060048410156123e8577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b5f6020828403121561240e575f5ffd5b81516122d881611ed8565b5f82518060208501845e5f920191825250919050565b602081525f6122d860208301846120f756fea2646970667358221220af4c0d53834feca141a3419ace7c5575ff1242b40cc5772cf4676abf7d2271be64736f6c634300081d0033";

type OmniBridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OmniBridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OmniBridgeFacet__factory extends ContractFactory {
  constructor(...args: OmniBridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _foreignOmniBridge: PromiseOrValue<string>,
    _wethOmniBridge: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OmniBridgeFacet> {
    return super.deploy(
      _foreignOmniBridge,
      _wethOmniBridge,
      overrides || {}
    ) as Promise<OmniBridgeFacet>;
  }
  override getDeployTransaction(
    _foreignOmniBridge: PromiseOrValue<string>,
    _wethOmniBridge: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _foreignOmniBridge,
      _wethOmniBridge,
      overrides || {}
    );
  }
  override attach(address: string): OmniBridgeFacet {
    return super.attach(address) as OmniBridgeFacet;
  }
  override connect(signer: Signer): OmniBridgeFacet__factory {
    return super.connect(signer) as OmniBridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OmniBridgeFacetInterface {
    return new utils.Interface(_abi) as OmniBridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OmniBridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as OmniBridgeFacet;
  }
}
