/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IXSwapQuoterV2,
  IXSwapQuoterV2Interface,
} from "../IXSwapQuoterV2";

const _abi = [
  {
    type: "function",
    name: "quoteExactInputSingle",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct IXSwapQuoterV2.QuoteExactInputSingleParams",
        components: [
          {
            name: "tokenIn",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenOut",
            type: "address",
            internalType: "address",
          },
          {
            name: "amountIn",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "sqrtPriceLimitX96",
            type: "uint160",
            internalType: "uint160",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "amountOut",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "sqrtPriceX96After",
        type: "uint160",
        internalType: "uint160",
      },
      {
        name: "initializedTicksCrossed",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "gasEstimate",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

export class IXSwapQuoterV2__factory {
  static readonly abi = _abi;
  static createInterface(): IXSwapQuoterV2Interface {
    return new utils.Interface(_abi) as IXSwapQuoterV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IXSwapQuoterV2 {
    return new Contract(address, _abi, signerOrProvider) as IXSwapQuoterV2;
  }
}
