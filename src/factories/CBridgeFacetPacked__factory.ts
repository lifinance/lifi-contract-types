/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CBridgeFacetPacked,
  CBridgeFacetPackedInterface,
} from "../CBridgeFacetPacked";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_cBridge",
        type: "address",
        internalType: "contract ICBridge",
      },
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "cancelOwnershipTransfer",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "confirmOwnershipTransfer",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "decode_startBridgeTokensViaCBridgeERC20Packed",
    inputs: [
      {
        name: "_data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct CBridgeFacet.CBridgeData",
        components: [
          {
            name: "maxSlippage",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "nonce",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "decode_startBridgeTokensViaCBridgeNativePacked",
    inputs: [
      {
        name: "_data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct CBridgeFacet.CBridgeData",
        components: [
          {
            name: "maxSlippage",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "nonce",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "encode_startBridgeTokensViaCBridgeERC20Packed",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "destinationChainId",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "sendingAssetId",
        type: "address",
        internalType: "address",
      },
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "nonce",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "maxSlippage",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "encode_startBridgeTokensViaCBridgeNativePacked",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "destinationChainId",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "nonce",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "maxSlippage",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setApprovalForBridge",
    inputs: [
      {
        name: "tokensToApprove",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaCBridgeERC20Min",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "destinationChainId",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "sendingAssetId",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "nonce",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "maxSlippage",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaCBridgeERC20Packed",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaCBridgeNativeMin",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "destinationChainId",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "nonce",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "maxSlippage",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaCBridgeNativePacked",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "_newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "triggerRefund",
    inputs: [
      {
        name: "_callTo",
        type: "address",
        internalType: "address payable",
      },
      {
        name: "_callData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "_assetAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_to",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "CBridgeRefund",
    inputs: [
      {
        name: "_assetAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiCBridgeTransfer",
    inputs: [
      {
        name: "_transactionId",
        type: "bytes8",
        indexed: false,
        internalType: "bytes8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferRequested",
    inputs: [
      {
        name: "_from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "ExternalCallFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerMustNotBeSelf",
    inputs: [],
  },
  {
    type: "error",
    name: "NoNullOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "NoPendingOwnershipTransfer",
    inputs: [],
  },
  {
    type: "error",
    name: "NotPendingOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "UnAuthorized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a060405234801561000f575f5ffd5b5060405161250838038061250883398101604081905261002e91610069565b5f80546001600160a01b0319166001600160a01b03928316179055166080526100a1565b6001600160a01b0381168114610066575f5ffd5b50565b5f5f6040838503121561007a575f5ffd5b825161008581610052565b602084015190925061009681610052565b809150509250929050565b60805161242c6100dc5f395f81816102f5015281816105070152818161062e0152818161092f015281816112a8015261152d015261242c5ff3fe6080604052600436106100e6575f3560e01c8063a2ed560711610087578063e30c397811610057578063e30c397814610260578063f2fde38b1461028c578063f6848697146102ab578063fc852c5a146102bf575f5ffd5b8063a2ed5607146101c9578063aef365ad146101f5578063be8a84ac14610214578063dee4be1b14610241575f5ffd5b806323452b9c116100c257806323452b9c1461012d5780634c478642146101415780637200b829146101605780638da5cb5b14610174575f5ffd5b806278afb6146100f15780630193979f146100fb5780630d19e5191461010e575f5ffd5b366100ed57005b5f5ffd5b6100f96102de565b005b6100f9610109366004611df5565b610496565b348015610119575f5ffd5b506100f9610128366004611e8f565b6105c5565b348015610138575f5ffd5b506100f96107e0565b34801561014c575f5ffd5b506100f961015b366004611f0f565b6108a9565b34801561016b575f5ffd5b506100f9610981565b34801561017f575f5ffd5b505f5461019f9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156101d4575f5ffd5b506101e86101e3366004611df5565b610a65565b6040516101c09190611fcc565b348015610200575f5ffd5b506101e861020f366004611fe5565b610c80565b34801561021f575f5ffd5b5061023361022e36600461205c565b610f6d565b6040516101c092919061209b565b34801561024c575f5ffd5b506100f961025b366004611fe5565b61120e565b34801561026b575f5ffd5b5060015461019f9073ffffffffffffffffffffffffffffffffffffffff1681565b348015610297575f5ffd5b506100f96102a63660046121cc565b61135e565b3480156102b6575f5ffd5b506100f96114ba565b3480156102ca575f5ffd5b506102336102d936600461205c565b6116d4565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016633f2e5fc3346103296020600c365f6121e7565b6103329161220e565b60601c3461034460246020365f6121e7565b61034d91612274565b60e01c61035e60286024365f6121e7565b61036791612274565b60e01c610378602c6028365f6121e7565b61038191612274565b60405160e088811b7fffffffff0000000000000000000000000000000000000000000000000000000016825273ffffffffffffffffffffffffffffffffffffffff969096166004820152602481019490945267ffffffffffffffff92831660448501529116606483015290911c608482015260a4015f604051808303818588803b15801561040d575f5ffd5b505af115801561041f573d5f5f3e3d5ffd5b507fa077806f66785ea82e50e8f766774abda4273ecc52c93187184e0400e50de32193506104579250600c915060049050365f6121e7565b610460916122d9565b6040517fffffffffffffffff000000000000000000000000000000000000000000000000909116815260200160405180910390a1565b6040517f3f2e5fc300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152346024830181905267ffffffffffffffff80871660448501528516606484015263ffffffff841660848401527f000000000000000000000000000000000000000000000000000000000000000090911691633f2e5fc3919060a4015f604051808303818588803b15801561054b575f5ffd5b505af115801561055d573d5f5f3e3d5ffd5b50506040517fffffffffffffffff000000000000000000000000000000000000000000000000891681527fa077806f66785ea82e50e8f766774abda4273ecc52c93187184e0400e50de321935060200191506105b69050565b60405180910390a15050505050565b5f5473ffffffffffffffffffffffffffffffffffffffff163314610615576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff161461069a576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8673ffffffffffffffffffffffffffffffffffffffff1686866040516106c292919061233e565b5f604051808303815f865af19150503d805f81146106fb576040519150601f19603f3d011682016040523d82523d5f602084013e610700565b606091505b5050809150508061073d576040517f350c20f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff8416156107605783610762565b335b905061076f858285611998565b8073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f9779662e766b5675e69e09303bc2f58ae30397b71b8021ab947defd27747b95f856040516107ce91815260200190565b60405180910390a35050505050505050565b5f5473ffffffffffffffffffffffffffffffffffffffff163314610830576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015473ffffffffffffffffffffffffffffffffffffffff1661087f576040517f75cdea1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b5f5473ffffffffffffffffffffffffffffffffffffffff1633146108f9576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b8181101561097c576109748383838181106109185761091861234d565b905060200201602081019061092d91906121cc565b7f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6119c8565b6001016108fb565b505050565b60015473ffffffffffffffffffffffffffffffffffffffff163381146109d3576040517f1853971c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35f805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b606063ffffffff67ffffffffffffffff85161115610b0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f64657374696e6174696f6e436861696e49642076616c7565207061737365642060448201527f746f6f2062696720746f2066697420696e2075696e743332000000000000000060648201526084015b60405180910390fd5b63ffffffff67ffffffffffffffff84161115610ba8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f6e6f6e63652076616c75652070617373656420746f6f2062696720746f20666960448201527f7420696e2075696e7433320000000000000000000000000000000000000000006064820152608401610b01565b50604080517e78afb60000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffff00000000000000000000000000000000000000000000000096909616602487015260609490941b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602c8087019190915260e093841b7fffffffff000000000000000000000000000000000000000000000000000000009081168787015292841b83166044870152921b16604884015281518084039091018152604c909201905290565b606063ffffffff67ffffffffffffffff87161115610d20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f64657374696e6174696f6e436861696e49642076616c7565207061737365642060448201527f746f6f2062696720746f2066697420696e2075696e74333200000000000000006064820152608401610b01565b6fffffffffffffffffffffffffffffffff841115610dc0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f616d6f756e742076616c75652070617373656420746f6f2062696720746f206660448201527f697420696e2075696e74313238000000000000000000000000000000000000006064820152608401610b01565b63ffffffff67ffffffffffffffff84161115610e5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f6e6f6e63652076616c75652070617373656420746f6f2062696720746f20666960448201527f7420696e2075696e7433320000000000000000000000000000000000000000006064820152608401610b01565b50604080517ff68486970000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffff000000000000000000000000000000000000000000000000989098166024890152606096871b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116602c8a015260e096871b7fffffffff000000000000000000000000000000000000000000000000000000009081168a8401529590971b909616604488015260809290921b7fffffffffffffffffffffffffffffffff00000000000000000000000000000000166058870152831b8216606886015290911b16606c830152805180830360500181526070909201905290565b6110016040518061014001604052805f815260200160608152602001606081526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f151581526020015f151581525090565b604080518082019091525f8082526020820152602c8310156110a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f646174612070617373656420696e206973206e6f742074686520636f7272656360448201527f74206c656e6774680000000000000000000000000000000000000000000000006064820152608401610b01565b6111396040518061014001604052805f815260200160608152602001606081526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f151581526020015f151581525090565b604080518082019091525f808252602082015261115a600c600487896121e7565b611163916122d9565b7fffffffffffffffff0000000000000000000000000000000000000000000000001682526111956020600c87896121e7565b61119e9161220e565b60601c60a08301526111b46024602087896121e7565b6111bd91612274565b60e090811c908301526111d46028602487896121e7565b6111dd91612274565b60e01c60208201526111f3602c602887896121e7565b6111fc91612274565b60e01c815290925090505b9250929050565b61123073ffffffffffffffffffffffffffffffffffffffff85163330866119f4565b6040517fa5977fbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015285811660248301526044820185905267ffffffffffffffff80881660648401528416608483015263ffffffff831660a48301527f0000000000000000000000000000000000000000000000000000000000000000169063a5977fbb9060c4015f604051808303815f87803b1580156112e9575f5ffd5b505af11580156112fb573d5f5f3e3d5ffd5b50506040517fffffffffffffffff0000000000000000000000000000000000000000000000008a1681527fa077806f66785ea82e50e8f766774abda4273ecc52c93187184e0400e50de3219250602001905060405180910390a150505050505050565b5f5473ffffffffffffffffffffffffffffffffffffffff1633146113ae576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81166113fb576040517f1beca37400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff82160361144a576040517fbf1ea9fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278905f90a350565b5f6114c96038602436846121e7565b6114d29161220e565b60601c90505f6114e66048603836846121e7565b6114ef9161237a565b60801c905061151673ffffffffffffffffffffffffffffffffffffffff83163330846119f4565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663a5977fbb6115606020600c365f6121e7565b6115699161220e565b60601c848461157c60246020365f6121e7565b61158591612274565b60e01c611596604c6048365f6121e7565b61159f91612274565b60e01c6115b06050604c365f6121e7565b6115b991612274565b60405160e088811b7fffffffff0000000000000000000000000000000000000000000000000000000016825273ffffffffffffffffffffffffffffffffffffffff9788166004830152959096166024870152604486019390935267ffffffffffffffff9182166064860152166084840152901c60a482015260c4015f604051808303815f87803b15801561164b575f5ffd5b505af115801561165d573d5f5f3e3d5ffd5b507fa077806f66785ea82e50e8f766774abda4273ecc52c93187184e0400e50de32192506116939150600c90506004365f6121e7565b61169c916122d9565b6040517fffffffffffffffff000000000000000000000000000000000000000000000000909116815260200160405180910390a15050565b6117686040518061014001604052805f815260200160608152602001606081526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f151581526020015f151581525090565b604080518082019091525f8082526020820152605083101561180c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f6461746120706173736564206973206e6f742074686520636f7272656374206c60448201527f656e6774680000000000000000000000000000000000000000000000000000006064820152608401610b01565b6118a06040518061014001604052805f815260200160608152602001606081526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f151581526020015f151581525090565b604080518082019091525f80825260208201526118c1600c600487896121e7565b6118ca916122d9565b7fffffffffffffffff0000000000000000000000000000000000000000000000001682526118fc6020600c87896121e7565b6119059161220e565b60601c60a083015261191b6024602087896121e7565b61192491612274565b60e090811c9083015261193b6038602487896121e7565b6119449161220e565b60601c608083015261195a6048603887896121e7565b6119639161237a565b60801c60c0830152611979604c604887896121e7565b61198291612274565b60e01c60208201526111f36050604c87896121e7565b73ffffffffffffffffffffffffffffffffffffffff83166119bd5761097c8282611ab6565b61097c838383611b27565b61097c8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611b95565b5f6040517f23b872dd00000000000000000000000000000000000000000000000000000000815284600482015283602482015282604482015260205f6064835f8a5af13d15601f3d1160015f511416171691505080611aaf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610b01565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff8216611b03576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b2373ffffffffffffffffffffffffffffffffffffffff831682611cc2565b5050565b73ffffffffffffffffffffffffffffffffffffffff8216611b74576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61097c73ffffffffffffffffffffffffffffffffffffffff84168383611cdb565b73ffffffffffffffffffffffffffffffffffffffff841615611cbc5773ffffffffffffffffffffffffffffffffffffffff8316611bfe576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611c71573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c9591906123df565b1015611cbc57611cbc73ffffffffffffffffffffffffffffffffffffffff85168483611d24565b50505050565b5f385f3884865af1611b235763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716611d1b576390b8ec185f526004601cfd5b5f603452505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716611d1b575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f51141716611d1b57633e3f8f735f526004601cfd5b73ffffffffffffffffffffffffffffffffffffffff81168114611dc3575f5ffd5b50565b803567ffffffffffffffff81168114611ddd575f5ffd5b919050565b803563ffffffff81168114611ddd575f5ffd5b5f5f5f5f5f60a08688031215611e09575f5ffd5b853594506020860135611e1b81611da2565b9350611e2960408701611dc6565b9250611e3760608701611dc6565b9150611e4560808701611de2565b90509295509295909350565b5f5f83601f840112611e61575f5ffd5b50813567ffffffffffffffff811115611e78575f5ffd5b602083019150836020828501011115611207575f5ffd5b5f5f5f5f5f5f60a08789031215611ea4575f5ffd5b8635611eaf81611da2565b9550602087013567ffffffffffffffff811115611eca575f5ffd5b611ed689828a01611e51565b9096509450506040870135611eea81611da2565b92506060870135611efa81611da2565b95989497509295919493608090920135925050565b5f5f60208385031215611f20575f5ffd5b823567ffffffffffffffff811115611f36575f5ffd5b8301601f81018513611f46575f5ffd5b803567ffffffffffffffff811115611f5c575f5ffd5b8560208260051b8401011115611f70575f5ffd5b6020919091019590945092505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081525f611fde6020830184611f80565b9392505050565b5f5f5f5f5f5f5f60e0888a031215611ffb575f5ffd5b87359650602088013561200d81611da2565b955061201b60408901611dc6565b9450606088013561202b81611da2565b93506080880135925061204060a08901611dc6565b915061204e60c08901611de2565b905092959891949750929550565b5f5f6020838503121561206d575f5ffd5b823567ffffffffffffffff811115612083575f5ffd5b61208f85828601611e51565b90969095509350505050565b60608152825160608201525f602084015161014060808401526120c26101a0840182611f80565b905060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08483030160a08501526120fd8282611f80565b915050606085015161212760c085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660e08501525060a085015173ffffffffffffffffffffffffffffffffffffffff81166101008501525060c085015161012084015260e085015161014084015261010085015180151561016085015250610120850151801515610180850152509050611fde6020830184805163ffffffff16825260209081015167ffffffffffffffff16910152565b5f602082840312156121dc575f5ffd5b8135611fde81611da2565b5f5f858511156121f5575f5ffd5b83861115612201575f5ffd5b5050820193919092039150565b80357fffffffffffffffffffffffffffffffffffffffff000000000000000000000000811690601484101561226d577fffffffffffffffffffffffffffffffffffffffff000000000000000000000000808560140360031b1b82161691505b5092915050565b80357fffffffff00000000000000000000000000000000000000000000000000000000811690600484101561226d577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505092915050565b80357fffffffffffffffff000000000000000000000000000000000000000000000000811690600884101561226d577fffffffffffffffff000000000000000000000000000000000000000000000000808560080360031b1b82161691505092915050565b818382375f9101908152919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b80357fffffffffffffffffffffffffffffffff00000000000000000000000000000000811690601084101561226d577fffffffffffffffffffffffffffffffff00000000000000000000000000000000808560100360031b1b82161691505092915050565b5f602082840312156123ef575f5ffd5b505191905056fea2646970667358221220a1e27b589e6875d30c9ab8dfdc99ec968de8bf1b04e27ccaee001cd36183fb3364736f6c634300081d0033";

type CBridgeFacetPackedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CBridgeFacetPackedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CBridgeFacetPacked__factory extends ContractFactory {
  constructor(...args: CBridgeFacetPackedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _cBridge: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CBridgeFacetPacked> {
    return super.deploy(
      _cBridge,
      _owner,
      overrides || {}
    ) as Promise<CBridgeFacetPacked>;
  }
  override getDeployTransaction(
    _cBridge: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_cBridge, _owner, overrides || {});
  }
  override attach(address: string): CBridgeFacetPacked {
    return super.attach(address) as CBridgeFacetPacked;
  }
  override connect(signer: Signer): CBridgeFacetPacked__factory {
    return super.connect(signer) as CBridgeFacetPacked__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CBridgeFacetPackedInterface {
    return new utils.Interface(_abi) as CBridgeFacetPackedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CBridgeFacetPacked {
    return new Contract(address, _abi, signerOrProvider) as CBridgeFacetPacked;
  }
}
