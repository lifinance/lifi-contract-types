/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RegisterIntentLib,
  RegisterIntentLibInterface,
} from "../../LIFIIntentLibraries.sol/RegisterIntentLib";

const _abi = [
  {
    type: "function",
    name: "getLocksHash",
    inputs: [
      {
        name: "idsAndAmounts",
        type: "uint256[2][]",
        internalType: "uint256[2][]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "error",
    name: "DeadlinePassed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6103d6610034600b8282823980515f1a607314602857634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610034575f3560e01c80637c50709f14610038575b5f5ffd5b61004b610046366004610250565b61005d565b60405190815260200160405180910390f35b80515f90816020820267ffffffffffffffff81111561007e5761007e6101ab565b6040519080825280601f01601f1916602001820160405280156100a8576020820181803683370190505b5090505f5b8281101561019b575f8582815181106100c8576100c8610341565b602002602001015190505f60405180606001604052806032815260200161036f60329139805160209182012083518483015160408051948501939093527fffffffffffffffffffffffff000000000000000000000000000000000000000082169284019290925273ffffffffffffffffffffffffffffffffffffffff166060830152608082015260a001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209182012084820286019091015250506001016100ad565b5080516020909101209392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040805190810167ffffffffffffffff811182821017156101fb576101fb6101ab565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610248576102486101ab565b604052919050565b5f60208284031215610260575f5ffd5b813567ffffffffffffffff811115610276575f5ffd5b8201601f81018413610286575f5ffd5b803567ffffffffffffffff8111156102a0576102a06101ab565b6102af60208260051b01610201565b8082825260208201915060208360061b8501019250868311156102d0575f5ffd5b6020840193505b828410156103375786601f8501126102ed575f5ffd5b6102f56101d8565b806040860189811115610306575f5ffd5b865b81811015610320578035845260209384019301610308565b5050835250604093909301926020909101906102d7565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffdfe4c6f636b2862797465733132206c6f636b5461672c6164647265737320746f6b656e2c75696e7432353620616d6f756e7429a26469706673582212201d6a02576ae64fbdf58ba11628ced37326a307aa286ccfd7fdffc7d4b82b105264736f6c634300081d0033";

type RegisterIntentLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegisterIntentLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RegisterIntentLib__factory extends ContractFactory {
  constructor(...args: RegisterIntentLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RegisterIntentLib> {
    return super.deploy(overrides || {}) as Promise<RegisterIntentLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RegisterIntentLib {
    return super.attach(address) as RegisterIntentLib;
  }
  override connect(signer: Signer): RegisterIntentLib__factory {
    return super.connect(signer) as RegisterIntentLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegisterIntentLibInterface {
    return new utils.Interface(_abi) as RegisterIntentLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RegisterIntentLib {
    return new Contract(address, _abi, signerOrProvider) as RegisterIntentLib;
  }
}
