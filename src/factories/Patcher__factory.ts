/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Patcher, PatcherInterface } from "../Patcher";

const _abi = [
  {
    type: "function",
    name: "depositAndExecuteWithDynamicPatches",
    inputs: [
      {
        name: "tokenAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "valueSource",
        type: "address",
        internalType: "address",
      },
      {
        name: "valueGetter",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "finalTarget",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "offsets",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "delegateCall",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "returnData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "depositAndExecuteWithMultiplePatches",
    inputs: [
      {
        name: "tokenAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "valueSources",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "valueGetters",
        type: "bytes[]",
        internalType: "bytes[]",
      },
      {
        name: "finalTarget",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "offsetGroups",
        type: "uint256[][]",
        internalType: "uint256[][]",
      },
      {
        name: "delegateCall",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "returnData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "executeWithDynamicPatches",
    inputs: [
      {
        name: "valueSource",
        type: "address",
        internalType: "address",
      },
      {
        name: "valueGetter",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "finalTarget",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "offsets",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "delegateCall",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "returnData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "executeWithMultiplePatches",
    inputs: [
      {
        name: "valueSources",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "valueGetters",
        type: "bytes[]",
        internalType: "bytes[]",
      },
      {
        name: "finalTarget",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "offsetGroups",
        type: "uint256[][]",
        internalType: "uint256[][]",
      },
      {
        name: "delegateCall",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "returnData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "PatchExecuted",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "finalTarget",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "success",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
      {
        name: "returnDataLength",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokensDeposited",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "finalTarget",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CallExecutionFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedToGetDynamicValue",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidPatchOffset",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReturnDataLength",
    inputs: [],
  },
  {
    type: "error",
    name: "MismatchedArrayLengths",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAnERC20Token",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroAddress",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061167f806100206000396000f3fe60806040526004361061003f5760003560e01c80634d91497914610044578063922c8daa1461006e578063b7c5277714610081578063efae576b14610094575b600080fd5b610057610052366004610ff0565b6100a7565b604051610065929190611104565b60405180910390f35b61005761007c36600461115e565b610133565b61005761008f366004611236565b610250565b6100576100a236600461134f565b610380565b600060606100be8d8d8d8d8d8d8d8d8d8d8d610409565b8051604080518c8152841515602082015290810191909152919350915073ffffffffffffffffffffffffffffffffffffffff8a169033907f388c63fb82adbdf7c1046e997e85d8e71e98e878c43d0fb81b76254bee16b29a906060015b60405180910390a39b509b9950505050505050505050565b600060606101418d8a61061a565b6101538c8c8c8c8c8c8c8c8c8c610747565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8c8116600483015260006024830152929450909250908e169063095ea7b3906044016020604051808303816000875af11580156101cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f3919061142a565b508051604080518a815284151560208201529081019190915273ffffffffffffffffffffffffffffffffffffffff8a169033907f388c63fb82adbdf7c1046e997e85d8e71e98e878c43d0fb81b76254bee16b29a9060600161011b565b6000606061025e8e8a61061a565b6102718d8d8d8d8d8d8d8d8d8d8d610409565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8c8116600483015260006024830152929450909250908f169063095ea7b3906044016020604051808303816000875af11580156102ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610311919061142a565b508051604080518a81528415156020820152808201929092525173ffffffffffffffffffffffffffffffffffffffff8b169133917f388c63fb82adbdf7c1046e997e85d8e71e98e878c43d0fb81b76254bee16b29a9181900360600190a39c509c9a5050505050505050505050565b600060606103968c8c8c8c8c8c8c8c8c8c610747565b8051604080518c8152841515602082015290810191909152919350915073ffffffffffffffffffffffffffffffffffffffff8a169033907f388c63fb82adbdf7c1046e997e85d8e71e98e878c43d0fb81b76254bee16b29a9060600160405180910390a39a509a98505050505050505050565b600060608b8a14158061041c57508b8414155b15610453576040517f568efce200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff89166104a0576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60ff81168d11156105a0576104f58e8e8360ff168181106104c6576104c661144e565b90506020020160208101906104db919061147d565b73ffffffffffffffffffffffffffffffffffffffff161590565b1561052c576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85858260ff168181106105415761054161144e565b90506020028101906105539190611498565b905060000361058e576040517faaf9032800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806105988161152f565b9150506104a3565b50600087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505090506105f98e8e8e8e8a8a8761086e565b6106058a8a8387610933565b92509250509b509b9950505050505050505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ab919061154e565b90506106b983333084610a71565b6106c4838383610b33565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8a9c3a4c6eaabdd525bb66ee6069a4cd8dd410208adbb90faed9ecd887c0c4f08460405161073a91815260200190565b60405180910390a4505050565b6000606073ffffffffffffffffffffffffffffffffffffffff8c161580610782575073ffffffffffffffffffffffffffffffffffffffff8916155b156107b9576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008490036107f4576040517faaf9032800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006108018d8d8d610b64565b9050600088888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092935061084d92508391508990508885610c65565b6108598b8b8388610933565b9350935050509a509a98505050505050505050565b60005b60ff81168711156109295760006108d789898460ff168181106108965761089661144e565b90506020020160208101906108ab919061147d565b88888560ff168181106108c0576108c061144e565b90506020028101906108d29190611567565b610b64565b905036600086868560ff168181106108f1576108f161144e565b90506020028101906109039190611498565b9150915061091385838386610c65565b50505080806109219061152f565b915050610871565b5050505050505050565b6000606082156109ad578573ffffffffffffffffffffffffffffffffffffffff168460405161096291906115cc565b600060405180830381855af49150503d806000811461099d576040519150601f19603f3d011682016040523d82523d6000602084013e6109a2565b606091505b509092509050610a1c565b8573ffffffffffffffffffffffffffffffffffffffff1685856040516109d391906115cc565b60006040518083038185875af1925050503d8060008114610a10576040519150601f19603f3d011682016040523d82523d6000602084013e610a15565b606091505b5090925090505b81610a6857805115610a3657610a3181610cac565b610a68565b6040517f6b3b657600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b94509492505050565b73ffffffffffffffffffffffffffffffffffffffff8416610abe576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610b0b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b2d73ffffffffffffffffffffffffffffffffffffffff8516848484610cb6565b50505050565b610b5f8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610d13565b505050565b60008060008573ffffffffffffffffffffffffffffffffffffffff168585604051610b909291906115e8565b600060405180830381855afa9150503d8060008114610bcb576040519150601f19603f3d011682016040523d82523d6000602084013e610bd0565b606091505b509150915081610c0c576040517f9711393900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8051602014610c47576040517f3ad0505d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80806020019051810190610c5b919061154e565b9695505050505050565b60005b82811015610ca557610c9385858584818110610c8657610c8661144e565b9050602002013584610e3c565b80610c9d816115f8565b915050610c68565b5050505050565b8051602082018181fd5b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d156001600051141716610d0557637939f4246000526004601cfd5b600060605260405250505050565b73ffffffffffffffffffffffffffffffffffffffff841615610b2d5773ffffffffffffffffffffffffffffffffffffffff8316610d7c576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015610df1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e15919061154e565b1015610b2d57610b2d73ffffffffffffffffffffffffffffffffffffffff85168483610e89565b8251610e49836020611630565b1115610e81576040517faaf9032800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b910160200152565b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d156001600051141716610f135760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d156001600051141716610f1357633e3f8f736000526004601cfd5b6000603452505050565b60008083601f840112610f2f57600080fd5b50813567ffffffffffffffff811115610f4757600080fd5b6020830191508360208260051b8501011115610f6257600080fd5b9250929050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610f8d57600080fd5b919050565b60008083601f840112610fa457600080fd5b50813567ffffffffffffffff811115610fbc57600080fd5b602083019150836020828501011115610f6257600080fd5b8015158114610fe257600080fd5b50565b8035610f8d81610fd4565b600080600080600080600080600080600060e08c8e03121561101157600080fd5b67ffffffffffffffff808d35111561102857600080fd5b6110358e8e358f01610f1d565b909c509a5060208d013581101561104b57600080fd5b61105b8e60208f01358f01610f1d565b909a50985061106c60408e01610f69565b975060608d013596508060808e0135111561108657600080fd5b6110968e60808f01358f01610f92565b909650945060a08d01358110156110ac57600080fd5b506110bd8d60a08e01358e01610f1d565b90935091506110ce60c08d01610fe5565b90509295989b509295989b9093969950565b60005b838110156110fb5781810151838201526020016110e3565b50506000910152565b8215158152604060208201526000825180604084015261112b8160608501602087016110e0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016060019392505050565b60008060008060008060008060008060006101008c8e03121561118057600080fd5b6111898c610f69565b9a5061119760208d01610f69565b995067ffffffffffffffff8060408e013511156111b357600080fd5b6111c38e60408f01358f01610f92565b909a5098506111d460608e01610f69565b975060808d013596508060a08e013511156111ee57600080fd5b6111fe8e60a08f01358f01610f92565b909650945060c08d013581101561121457600080fd5b506112258d60c08e01358e01610f1d565b90935091506110ce60e08d01610fe5565b6000806000806000806000806000806000806101008d8f03121561125957600080fd5b6112628d610f69565b9b5067ffffffffffffffff60208e0135111561127d57600080fd5b61128d8e60208f01358f01610f1d565b909b50995067ffffffffffffffff60408e013511156112ab57600080fd5b6112bb8e60408f01358f01610f1d565b90995097506112cc60608e01610f69565b965060808d0135955067ffffffffffffffff60a08e013511156112ee57600080fd5b6112fe8e60a08f01358f01610f92565b909550935067ffffffffffffffff60c08e0135111561131c57600080fd5b61132c8e60c08f01358f01610f1d565b909350915061133d60e08e01610fe5565b90509295989b509295989b509295989b565b60008060008060008060008060008060e08b8d03121561136e57600080fd5b6113778b610f69565b995060208b013567ffffffffffffffff8082111561139457600080fd5b6113a08e838f01610f92565b909b5099508991506113b460408e01610f69565b985060608d0135975060808d01359150808211156113d157600080fd5b6113dd8e838f01610f92565b909750955060a08d01359150808211156113f657600080fd5b506114038d828e01610f1d565b90945092505060c08b013561141781610fd4565b809150509295989b9194979a5092959850565b60006020828403121561143c57600080fd5b815161144781610fd4565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561148f57600080fd5b61144782610f69565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126114cd57600080fd5b83018035915067ffffffffffffffff8211156114e857600080fd5b6020019150600581901b3603821315610f6257600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff821660ff810361154557611545611500565b60010192915050565b60006020828403121561156057600080fd5b5051919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261159c57600080fd5b83018035915067ffffffffffffffff8211156115b757600080fd5b602001915036819003821315610f6257600080fd5b600082516115de8184602087016110e0565b9190910192915050565b8183823760009101908152919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361162957611629611500565b5060010190565b8082018082111561164357611643611500565b9291505056fea264697066735822122079b3bed0dba9dc680f72b7473c01d8a5bec79cbd9bbc87feef4e4cba1944e54564736f6c63430008110033";

type PatcherConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PatcherConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Patcher__factory extends ContractFactory {
  constructor(...args: PatcherConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Patcher> {
    return super.deploy(overrides || {}) as Promise<Patcher>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Patcher {
    return super.attach(address) as Patcher;
  }
  override connect(signer: Signer): Patcher__factory {
    return super.connect(signer) as Patcher__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PatcherInterface {
    return new utils.Interface(_abi) as PatcherInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Patcher {
    return new Contract(address, _abi, signerOrProvider) as Patcher;
  }
}
