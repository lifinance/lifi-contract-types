/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Patcher, PatcherInterface } from "../Patcher";

const _abi = [
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "patchWithAvailableAmounts",
    inputs: [
      {
        name: "offsets",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "inputToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "bs",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "patchWithAvailableAmountsAndForward",
    inputs: [
      {
        name: "offsets",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "inputToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "outputToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "bs",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "callTo",
        type: "address",
        internalType: "address payable",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "replaceUint256At",
    inputs: [
      {
        name: "bs",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "newData",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InternalCallFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidBytesOp",
    inputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "NativeAssetTransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "NoTransferToNullAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAnERC20Token",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611483806100206000396000f3fe6080604052600436106100385760003560e01c80632c7c8a1a146100445780633fbf18181461007a578063fc70d8ad1461009a57600080fd5b3661003f57005b600080fd5b34801561005057600080fd5b5061006461005f366004611080565b6100bc565b6040516100719190611173565b60405180910390f35b34801561008657600080fd5b5061006461009536600461118d565b61016a565b3480156100a657600080fd5b506100ba6100b5366004611269565b61039c565b005b6060600083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093945061010492508891506104529050565b905060005b67ffffffffffffffff811688111561015d5761014b838a8a8467ffffffffffffffff1681811061013b5761013b61134b565b905060200201358460001b61039c565b80610155816113a9565b915050610109565b5090979650505050505050565b606073ffffffffffffffffffffffffffffffffffffffff8616156102c4576040517f70a08231000000000000000000000000000000000000000000000000000000008152336004820152869060009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156101f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021b91906113d0565b9050610227888261050b565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301526024820183905283169063095ea7b3906044016020604051808303816000875af115801561029c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c091906113e9565b5050505b60006102d389898988886100bc565b90506000808473ffffffffffffffffffffffffffffffffffffffff16836040516102fd919061140b565b6000604051808303816000865af19150503d806000811461033a576040519150601f19603f3d011682016040523d82523d6000602084013e61033f565b606091505b50915091508161037b576040517f52760cdd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61038e88336103898b610452565b610686565b9a9950505050505050505050565b6103a7826020611427565b8351101561043c576040517f8aaa866900000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f5265706c6163656d656e7420696e646578202b2033322062697473206973206f60448201527f7574206f6620626f756e6473000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000610449836020611427565b93909301525050565b600073ffffffffffffffffffffffffffffffffffffffff821615610503576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156104da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fe91906113d0565b610505565b475b92915050565b80600003610545576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661059e578034101561059a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa15801561060b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062f91906113d0565b905081811015610675576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610433565b610681833330856106b7565b505050565b73ffffffffffffffffffffffffffffffffffffffff8316156106ad576106818383836108d1565b6106818282610a53565b73ffffffffffffffffffffffffffffffffffffffff8416610704576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610751576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa1580156107c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e691906113d0565b90506107f482868686610b7d565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610864573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088891906113d0565b610892919061143a565b146108c9576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661091e576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661096b576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa1580156109d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fc91906113d0565b905080821115610a42576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610433565b610a4d848484610c59565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610aa0576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115610ae3576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610433565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610b3d576040519150601f19603f3d011682016040523d82523d6000602084013e610b42565b606091505b5050905080610681576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610a4d9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610caf565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526106819084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401610bd7565b6000610d11826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610dbe9092919063ffffffff16565b9050805160001480610d32575080806020019051810190610d3291906113e9565b610681576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610433565b6060610dcd8484600085610dd5565b949350505050565b606082471015610e67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610433565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610e90919061140b565b60006040518083038185875af1925050503d8060008114610ecd576040519150601f19603f3d011682016040523d82523d6000602084013e610ed2565b606091505b5091509150610ee387838387610eee565b979650505050505050565b60608315610f84578251600003610f7d5773ffffffffffffffffffffffffffffffffffffffff85163b610f7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610433565b5081610dcd565b610dcd8383815115610f995781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104339190611173565b60008083601f840112610fdf57600080fd5b50813567ffffffffffffffff811115610ff757600080fd5b6020830191508360208260051b850101111561101257600080fd5b9250929050565b73ffffffffffffffffffffffffffffffffffffffff8116811461103b57600080fd5b50565b60008083601f84011261105057600080fd5b50813567ffffffffffffffff81111561106857600080fd5b60208301915083602082850101111561101257600080fd5b60008060008060006060868803121561109857600080fd5b853567ffffffffffffffff808211156110b057600080fd5b6110bc89838a01610fcd565b9097509550602088013591506110d182611019565b909350604087013590808211156110e757600080fd5b506110f48882890161103e565b969995985093965092949392505050565b60005b83811015611120578181015183820152602001611108565b50506000910152565b60008151808452611141816020860160208601611105565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006111866020830184611129565b9392505050565b600080600080600080600060a0888a0312156111a857600080fd5b873567ffffffffffffffff808211156111c057600080fd5b6111cc8b838c01610fcd565b909950975060208a013591506111e182611019565b9095506040890135906111f382611019565b9094506060890135908082111561120957600080fd5b506112168a828b0161103e565b909450925050608088013561122a81611019565b8091505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060006060848603121561127e57600080fd5b833567ffffffffffffffff8082111561129657600080fd5b818601915086601f8301126112aa57600080fd5b8135818111156112bc576112bc61123a565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156113025761130261123a565b8160405282815289602084870101111561131b57600080fd5b82602086016020830137600060208483010152809750505050505060208401359150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff8083168181036113c6576113c661137a565b6001019392505050565b6000602082840312156113e257600080fd5b5051919050565b6000602082840312156113fb57600080fd5b8151801515811461118657600080fd5b6000825161141d818460208701611105565b9190910192915050565b808201808211156105055761050561137a565b818103818111156105055761050561137a56fea26469706673582212206c44e6328b400dc21b4a015d768da509756c45db6c65b57d923bd6b0c64ed0d364736f6c63430008110033";

type PatcherConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PatcherConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Patcher__factory extends ContractFactory {
  constructor(...args: PatcherConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Patcher> {
    return super.deploy(overrides || {}) as Promise<Patcher>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Patcher {
    return super.attach(address) as Patcher;
  }
  override connect(signer: Signer): Patcher__factory {
    return super.connect(signer) as Patcher__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PatcherInterface {
    return new utils.Interface(_abi) as PatcherInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Patcher {
    return new Contract(address, _abi, signerOrProvider) as Patcher;
  }
}
