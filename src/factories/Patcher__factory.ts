/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Patcher, PatcherInterface } from "../Patcher";

const _abi = [
  {
    type: "function",
    name: "depositAndExecuteWithDynamicPatches",
    inputs: [
      {
        name: "tokenAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "valueSource",
        type: "address",
        internalType: "address",
      },
      {
        name: "valueGetter",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "finalTarget",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "offsets",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "delegateCall",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "returnData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "depositAndExecuteWithMultiplePatches",
    inputs: [
      {
        name: "tokenAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "valueSources",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "valueGetters",
        type: "bytes[]",
        internalType: "bytes[]",
      },
      {
        name: "finalTarget",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "offsetGroups",
        type: "uint256[][]",
        internalType: "uint256[][]",
      },
      {
        name: "delegateCall",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "returnData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "executeWithDynamicPatches",
    inputs: [
      {
        name: "valueSource",
        type: "address",
        internalType: "address",
      },
      {
        name: "valueGetter",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "finalTarget",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "offsets",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "delegateCall",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "returnData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "executeWithMultiplePatches",
    inputs: [
      {
        name: "valueSources",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "valueGetters",
        type: "bytes[]",
        internalType: "bytes[]",
      },
      {
        name: "finalTarget",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "offsetGroups",
        type: "uint256[][]",
        internalType: "uint256[][]",
      },
      {
        name: "delegateCall",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "returnData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "PatchExecuted",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "finalTarget",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "success",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
      {
        name: "returnDataLength",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokensDeposited",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "finalTarget",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CallExecutionFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedToGetDynamicValue",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidPatchOffset",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReturnDataLength",
    inputs: [],
  },
  {
    type: "error",
    name: "MismatchedArrayLengths",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAnERC20Token",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroAddress",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b506115b68061001c5f395ff3fe60806040526004361061003e575f3560e01c80634d91497914610042578063922c8daa1461006c578063b7c527771461007f578063efae576b14610092575b5f5ffd5b610055610050366004610f9d565b6100a5565b604051610063929190611095565b60405180910390f35b61005561007a3660046110f1565b610130565b61005561008d3660046111c9565b610248565b6100556100a03660046112d7565b610373565b5f60606100bb8d8d8d8d8d8d8d8d8d8d8d6103fb565b8051604080518c8152841515602082015290810191909152919350915073ffffffffffffffffffffffffffffffffffffffff8a169033907f388c63fb82adbdf7c1046e997e85d8e71e98e878c43d0fb81b76254bee16b29a906060015b60405180910390a39b509b9950505050505050505050565b5f606061013d8d8a610607565b61014f8c8c8c8c8c8c8c8c8c8c610731565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8c811660048301525f6024830152929450909250908e169063095ea7b3906044016020604051808303815f875af11580156101c7573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101eb91906113b3565b508051604080518a815284151560208201529081019190915273ffffffffffffffffffffffffffffffffffffffff8a169033907f388c63fb82adbdf7c1046e997e85d8e71e98e878c43d0fb81b76254bee16b29a90606001610118565b5f60606102558e8a610607565b6102688d8d8d8d8d8d8d8d8d8d8d6103fb565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8c811660048301525f6024830152929450909250908f169063095ea7b3906044016020604051808303815f875af11580156102e0573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061030491906113b3565b508051604080518a81528415156020820152808201929092525173ffffffffffffffffffffffffffffffffffffffff8b169133917f388c63fb82adbdf7c1046e997e85d8e71e98e878c43d0fb81b76254bee16b29a9181900360600190a39c509c9a5050505050505050505050565b5f60606103888c8c8c8c8c8c8c8c8c8c610731565b8051604080518c8152841515602082015290810191909152919350915073ffffffffffffffffffffffffffffffffffffffff8a169033907f388c63fb82adbdf7c1046e997e85d8e71e98e878c43d0fb81b76254bee16b29a9060600160405180910390a39a509a98505050505050505050565b5f60608b8a14158061040d57508b8414155b15610444576040517f568efce200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8916610491576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b60ff81168d111561058f576104e58e8e8360ff168181106104b6576104b66113d5565b90506020020160208101906104cb9190611402565b73ffffffffffffffffffffffffffffffffffffffff161590565b1561051c576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85858260ff16818110610531576105316113d5565b9050602002810190610543919061141b565b90505f0361057d576040517faaf9032800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80610587816114ac565b915050610493565b505f87878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505090506105e68e8e8e8e8a8a87610853565b6105f28a8a8387610915565b92509250509b509b9950505050505050505050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201525f9073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610671573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061069591906114ca565b90506106a383333084610a4c565b6106ae838383610b0e565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8a9c3a4c6eaabdd525bb66ee6069a4cd8dd410208adbb90faed9ecd887c0c4f08460405161072491815260200190565b60405180910390a4505050565b5f606073ffffffffffffffffffffffffffffffffffffffff8c16158061076b575073ffffffffffffffffffffffffffffffffffffffff8916155b156107a2576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8490036107dc576040517faaf9032800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6107e88d8d8d610b3f565b90505f88888080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525092935061083292508391508990508885610c3b565b61083e8b8b8388610915565b9350935050509a509a98505050505050505050565b5f5b60ff811687111561090b575f6108ba89898460ff16818110610879576108796113d5565b905060200201602081019061088e9190611402565b88888560ff168181106108a3576108a36113d5565b90506020028101906108b591906114e1565b610b3f565b9050365f86868560ff168181106108d3576108d36113d5565b90506020028101906108e5919061141b565b915091506108f585838386610c3b565b5050508080610903906114ac565b915050610855565b5050505050505050565b5f6060821561098b578573ffffffffffffffffffffffffffffffffffffffff16846040516109439190611542565b5f60405180830381855af49150503d805f811461097b576040519150601f19603f3d011682016040523d82523d5f602084013e610980565b606091505b5090925090506109f7565b8573ffffffffffffffffffffffffffffffffffffffff1685856040516109b19190611542565b5f6040518083038185875af1925050503d805f81146109eb576040519150601f19603f3d011682016040523d82523d5f602084013e6109f0565b606091505b5090925090505b81610a4357805115610a1157610a0c81610c77565b610a43565b6040517f6b3b657600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b94509492505050565b73ffffffffffffffffffffffffffffffffffffffff8416610a99576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610ae6576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b0873ffffffffffffffffffffffffffffffffffffffff8516848484610c81565b50505050565b610b3a8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610cd9565b505050565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff168585604051610b69929190611558565b5f60405180830381855afa9150503d805f8114610ba1576040519150601f19603f3d011682016040523d82523d5f602084013e610ba6565b606091505b509150915081610be2576040517f9711393900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8051602014610c1d576040517f3ad0505d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80806020019051810190610c3191906114ca565b9695505050505050565b5f5b82811015610c7057610c6885858584818110610c5b57610c5b6113d5565b9050602002013584610e00565b600101610c3d565b5050505050565b8051602082018181fd5b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f51141716610ccc57637939f4245f526004601cfd5b5f60605260405250505050565b73ffffffffffffffffffffffffffffffffffffffff841615610b085773ffffffffffffffffffffffffffffffffffffffff8316610d42576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015610db5573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dd991906114ca565b1015610b0857610b0873ffffffffffffffffffffffffffffffffffffffff85168483610e4d565b8251610e0d836020611567565b1115610e45576040517faaf9032800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b910160200152565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f51141716610ecb575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f51141716610ecb57633e3f8f735f526004601cfd5b5f603452505050565b5f5f83601f840112610ee4575f5ffd5b50813567ffffffffffffffff811115610efb575f5ffd5b6020830191508360208260051b8501011115610f15575f5ffd5b9250929050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610f3f575f5ffd5b919050565b5f5f83601f840112610f54575f5ffd5b50813567ffffffffffffffff811115610f6b575f5ffd5b602083019150836020828501011115610f15575f5ffd5b8015158114610f8f575f5ffd5b50565b8035610f3f81610f82565b5f5f5f5f5f5f5f5f5f5f5f60e08c8e031215610fb7575f5ffd5b8b3567ffffffffffffffff811115610fcd575f5ffd5b610fd98e828f01610ed4565b909c509a505060208c013567ffffffffffffffff811115610ff8575f5ffd5b6110048e828f01610ed4565b909a509850611017905060408d01610f1c565b965060608c0135955060808c013567ffffffffffffffff811115611039575f5ffd5b6110458e828f01610f44565b90965094505060a08c013567ffffffffffffffff811115611064575f5ffd5b6110708e828f01610ed4565b9094509250611083905060c08d01610f92565b90509295989b509295989b9093969950565b8215158152604060208201525f82518060408401528060208501606085015e5f6060828501015260607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168401019150509392505050565b5f5f5f5f5f5f5f5f5f5f5f6101008c8e03121561110c575f5ffd5b6111158c610f1c565b9a5061112360208d01610f1c565b995060408c013567ffffffffffffffff81111561113e575f5ffd5b61114a8e828f01610f44565b909a50985061115d905060608d01610f1c565b965060808c0135955060a08c013567ffffffffffffffff81111561117f575f5ffd5b61118b8e828f01610f44565b90965094505060c08c013567ffffffffffffffff8111156111aa575f5ffd5b6111b68e828f01610ed4565b9094509250611083905060e08d01610f92565b5f5f5f5f5f5f5f5f5f5f5f5f6101008d8f0312156111e5575f5ffd5b6111ee8d610f1c565b9b5067ffffffffffffffff60208e01351115611208575f5ffd5b6112188e60208f01358f01610ed4565b909b50995067ffffffffffffffff60408e01351115611235575f5ffd5b6112458e60408f01358f01610ed4565b909950975061125660608e01610f1c565b965060808d0135955067ffffffffffffffff60a08e01351115611277575f5ffd5b6112878e60a08f01358f01610f44565b909550935067ffffffffffffffff60c08e013511156112a4575f5ffd5b6112b48e60c08f01358f01610ed4565b90935091506112c560e08e01610f92565b90509295989b509295989b509295989b565b5f5f5f5f5f5f5f5f5f5f60e08b8d0312156112f0575f5ffd5b6112f98b610f1c565b995060208b013567ffffffffffffffff811115611314575f5ffd5b6113208d828e01610f44565b909a509850611333905060408c01610f1c565b965060608b0135955060808b013567ffffffffffffffff811115611355575f5ffd5b6113618d828e01610f44565b90965094505060a08b013567ffffffffffffffff811115611380575f5ffd5b61138c8d828e01610ed4565b90945092505060c08b01356113a081610f82565b809150509295989b9194979a5092959850565b5f602082840312156113c3575f5ffd5b81516113ce81610f82565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60208284031215611412575f5ffd5b6113ce82610f1c565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261144e575f5ffd5b83018035915067ffffffffffffffff821115611468575f5ffd5b6020019150600581901b3603821315610f15575f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f60ff821660ff81036114c1576114c161147f565b60010192915050565b5f602082840312156114da575f5ffd5b5051919050565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611514575f5ffd5b83018035915067ffffffffffffffff82111561152e575f5ffd5b602001915036819003821315610f15575f5ffd5b5f82518060208501845e5f920191825250919050565b818382375f9101908152919050565b8082018082111561157a5761157a61147f565b9291505056fea2646970667358221220a05fb10a317e6ae0fd6c1ea527d31b0353a261fa2bb7bcc849cefdc13aa5a45164736f6c634300081d0033";

type PatcherConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PatcherConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Patcher__factory extends ContractFactory {
  constructor(...args: PatcherConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Patcher> {
    return super.deploy(overrides || {}) as Promise<Patcher>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Patcher {
    return super.attach(address) as Patcher;
  }
  override connect(signer: Signer): Patcher__factory {
    return super.connect(signer) as Patcher__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PatcherInterface {
    return new utils.Interface(_abi) as PatcherInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Patcher {
    return new Contract(address, _abi, signerOrProvider) as Patcher;
  }
}
