/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AcrossFacetPackedV3,
  AcrossFacetPackedV3Interface,
} from "../AcrossFacetPackedV3";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_spokePool",
        type: "address",
        internalType: "contract IAcrossSpokePool",
      },
      {
        name: "_wrappedNative",
        type: "address",
        internalType: "address",
      },
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOwnershipTransfer",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "confirmOwnershipTransfer",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "decode_startBridgeTokensViaAcrossV3ERC20Packed",
    inputs: [
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "acrossData",
        type: "tuple",
        internalType: "struct AcrossFacetV3.AcrossV3Data",
        components: [
          {
            name: "receiverAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "refundAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "decode_startBridgeTokensViaAcrossV3NativePacked",
    inputs: [
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "acrossData",
        type: "tuple",
        internalType: "struct AcrossFacetV3.AcrossV3Data",
        components: [
          {
            name: "receiverAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "refundAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "encode_startBridgeTokensViaAcrossV3ERC20Packed",
    inputs: [
      {
        name: "_parameters",
        type: "tuple",
        internalType: "struct AcrossFacetPackedV3.PackedParameters",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "depositor",
            type: "address",
            internalType: "address",
          },
          {
            name: "destinationChainId",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "sendingAssetId",
        type: "address",
        internalType: "address",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "encode_startBridgeTokensViaAcrossV3NativePacked",
    inputs: [
      {
        name: "_parameters",
        type: "tuple",
        internalType: "struct AcrossFacetPackedV3.PackedParameters",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "depositor",
            type: "address",
            internalType: "address",
          },
          {
            name: "destinationChainId",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "executeCallAndWithdraw",
    inputs: [
      {
        name: "_callTo",
        type: "address",
        internalType: "address",
      },
      {
        name: "_callData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "_assetAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_to",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setApprovalForBridge",
    inputs: [
      {
        name: "tokensToApprove",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "spokePool",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IAcrossSpokePool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAcrossV3ERC20Min",
    inputs: [
      {
        name: "_parameters",
        type: "tuple",
        internalType: "struct AcrossFacetPackedV3.PackedParameters",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "depositor",
            type: "address",
            internalType: "address",
          },
          {
            name: "destinationChainId",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "sendingAssetId",
        type: "address",
        internalType: "address",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAcrossV3ERC20Packed",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAcrossV3NativeMin",
    inputs: [
      {
        name: "_parameters",
        type: "tuple",
        internalType: "struct AcrossFacetPackedV3.PackedParameters",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "depositor",
            type: "address",
            internalType: "address",
          },
          {
            name: "destinationChainId",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAcrossV3NativePacked",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "_newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "wrappedNative",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "CallExecutedAndFundsWithdrawn",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiAcrossTransfer",
    inputs: [
      {
        name: "_transactionId",
        type: "bytes8",
        indexed: false,
        internalType: "bytes8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferRequested",
    inputs: [
      {
        name: "_from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "NativeAssetTransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerMustNotBeSelf",
    inputs: [],
  },
  {
    type: "error",
    name: "NoNullOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "NoPendingOwnershipTransfer",
    inputs: [],
  },
  {
    type: "error",
    name: "NoTransferToNullAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NotPendingOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAnERC20Token",
    inputs: [],
  },
  {
    type: "error",
    name: "UnAuthorized",
    inputs: [],
  },
  {
    type: "error",
    name: "WithdrawFailed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620032a9380380620032a9833981016040819052620000349162000079565b600080546001600160a01b0319166001600160a01b039283161790559182166080521660a052620000cd565b6001600160a01b03811681146200007657600080fd5b50565b6000806000606084860312156200008f57600080fd5b83516200009c8162000060565b6020850151909350620000af8162000060565b6040850151909250620000c28162000060565b809150509250925092565b60805160a051613185620001246000396000818161033801528181610504015261192501526000818161025a015281816104cb015281816107ad0152818161135e0152818161158a01526118c701526131856000f3fe60806040526004361061010e5760003560e01c8063afdac3d6116100a5578063dd08173411610074578063e30c397811610059578063e30c3978146102f9578063eb6d3a1114610326578063f2fde38b1461035a57600080fd5b8063dd081734146102d1578063df834e15146102f157600080fd5b8063afdac3d614610248578063cc41fe541461027c578063cd48728d1461029c578063d24c2325146102b157600080fd5b806354e97ec9116100e157806354e97ec91461017d5780637200b829146101b4578063808d859c146101c95780638da5cb5b146101f657600080fd5b80631458d7ad146101135780631dc3017e1461013557806323452b9c146101485780634c4786421461015d575b600080fd5b34801561011f57600080fd5b5061013361012e3660046126fd565b61037a565b005b610133610143366004612794565b6104b4565b34801561015457600080fd5b5061013361065b565b34801561016957600080fd5b506101336101783660046127c9565b610725565b34801561018957600080fd5b5061019d61019836600461283e565b610809565b6040516101ab9291906129f9565b60405180910390f35b3480156101c057600080fd5b50610133610b1a565b3480156101d557600080fd5b506101e96101e4366004612b2d565b610c00565b6040516101ab9190612b84565b34801561020257600080fd5b506000546102239073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101ab565b34801561025457600080fd5b506102237f000000000000000000000000000000000000000000000000000000000000000081565b34801561028857600080fd5b5061019d61029736600461283e565b611059565b3480156102a857600080fd5b506101336112e9565b3480156102bd57600080fd5b506101336102cc366004612b2d565b611551565b3480156102dd57600080fd5b506101e96102ec366004612794565b6116f7565b6101336118b0565b34801561030557600080fd5b506001546102239073ffffffffffffffffffffffffffffffffffffffff1681565b34801561033257600080fd5b506102237f000000000000000000000000000000000000000000000000000000000000000081565b34801561036657600080fd5b50610133610375366004612b9e565b611ada565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103cb576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008673ffffffffffffffffffffffffffffffffffffffff1686866040516103f4929190612bc8565b6000604051808303816000865af19150503d8060008114610431576040519150601f19603f3d011682016040523d82523d6000602084013e610436565b606091505b5050905080156104795761044b848484611c38565b6040517fdfbe65d77c5440a078a2a1d95803d06b4a5f85b26ba3ec87bc9b421781e8dec190600090a16104ab565b6040517f750b219c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050505050565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016637b93923234336105026040860160208701612b9e565b7f000000000000000000000000000000000000000000000000000000000000000061053360a0880160808901612b9e565b3460a089013561054960808b0160608c01612bd8565b61055960e08c0160c08d01612b9e565b61056a6101008d0160e08e01612c02565b61057c6101208e016101008f01612c02565b8d6101200160208101906105909190612c02565b8e8061014001906105a19190612c28565b6040518f63ffffffff1660e01b81526004016105c99d9c9b9a99989796959493929190612cd6565b6000604051808303818588803b1580156105e257600080fd5b505af11580156105f6573d6000803e3d6000fd5b50506040517fffffffffffffffff00000000000000000000000000000000000000000000000085351681527fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c133935060200191506106509050565b60405180910390a150565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106ac576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015473ffffffffffffffffffffffffffffffffffffffff166106fb576040517f75cdea1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610776576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b81811015610804576107f283838381811061079657610796612dd5565b90506020020160208101906107ab9190612b9e565b7f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611c69565b806107fc81612e04565b915050610779565b505050565b604080516101408101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810191909152604080516101208101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e082019290925261010081019190915260b083101561093c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f696e76616c69642063616c6c6461746120286d7573742068617665206c656e6760448201527f7468203e3d20313736290000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61094a600c60048587612e63565b61095391612e8d565b7fffffffffffffffff0000000000000000000000000000000000000000000000001682526109856020600c8587612e63565b61098e91612ed5565b60601c60a08301526109a4603460208587612e63565b6109ad91612ed5565b60601c60208201526109c3604860348587612e63565b6109cc91612ed5565b60601c60808301526109e2605860488587612e63565b6109eb91612f1b565b60801c60c0830152610a01605c60588587612e63565b610a0a91612f61565b60e090811c90830152610a216070605c8587612e63565b610a2a91612ed5565b60601c6040820152610a40609060708587612e63565b610a4991612fa7565b6060820152610a5c60a460908587612e63565b610a6591612ed5565b60601c6080820152610a7b60a860a48587612e63565b610a8491612f61565b60e01c60a0820152610a9a60ac60a88587612e63565b610aa391612f61565b60e01c60c0820152610ab960b060ac8587612e63565b610ac291612f61565b60e090811c90820152610ad88360b08187612e63565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050506101008201525b9250929050565b60015473ffffffffffffffffffffffffffffffffffffffff16338114610b6c576040517f1853971c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b606063ffffffff610c1660808601868401612bd8565b67ffffffffffffffff161115610cae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f64657374696e6174696f6e436861696e49642076616c7565207061737365642060448201527f746f6f2062696720746f2066697420696e2075696e74333200000000000000006064820152608401610933565b6fffffffffffffffffffffffffffffffff821115610d4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f696e707574416d6f756e742076616c75652070617373656420746f6f2062696760448201527f20746f2066697420696e2075696e7431323800000000000000000000000000006064820152608401610933565b60007fcd48728d000000000000000000000000000000000000000000000000000000008535610d836040880160208901612b9e565b60601b876040016020810190610d999190612b9e565b604080517fffffffff0000000000000000000000000000000000000000000000000000000090951660208601527fffffffffffffffff00000000000000000000000000000000000000000000000090931660248501527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000918216602c850152606090811b8216928401929092529086901b166054820152606801604051602081830303815290604052905060008360801b866060016020810190610e5d9190612bd8565b60e01b610e7060a0890160808a01612b9e565b6040517fffffffffffffffffffffffffffffffff000000000000000000000000000000009390931660208401527fffffffff0000000000000000000000000000000000000000000000000000000091909116603083015260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016603482015260a08701356048820152606801604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905290506000610f4060e0880160c08901612b9e565b60601b610f54610100890160e08a01612c02565b60e01b610f696101208a016101008b01612c02565b60e01b610f7e6101408b016101208c01612c02565b604080517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000090951660208601527fffffffff000000000000000000000000000000000000000000000000000000009384166034860152918316603885015260e01b91909116603c83015201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052905082828261102a6101408b018b612c28565b60405160200161103e959493929190612fe4565b60405160208183030381529060405293505050509392505050565b604080516101408101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810191909152604080516101208101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e0820192909252610100810191909152608c831015611187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f696e76616c69642063616c6c6461746120286d7573742068617665206c656e6760448201527f7468203e3d2031343029000000000000000000000000000000000000000000006064820152608401610933565b611195600c60048587612e63565b61119e91612e8d565b7fffffffffffffffff0000000000000000000000000000000000000000000000001682526111d06020600c8587612e63565b6111d991612ed5565b60601c60a08301526111ef603860348587612e63565b6111f891612f61565b60e090811c9083015261120f603460208587612e63565b61121891612ed5565b60601c602082015261122e604c60388587612e63565b61123791612ed5565b60601c604082015261124d606c604c8587612e63565b61125691612fa7565b60608201526112696080606c8587612e63565b61127291612ed5565b60601c60808083019190915261128c906084908587612e63565b61129591612f61565b60e01c60a08201526112ab608860848587612e63565b6112b491612f61565b60e01c60c08201526112ca608c60888587612e63565b6112d391612f61565b60e090811c90820152610ad883608c8187612e63565b60006112f9604860343684612e63565b61130291612ed5565b60601c90506000611317605860483684612e63565b61132091612f1b565b60801c905061134773ffffffffffffffffffffffffffffffffffffffff8316333084611dac565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016637b93923261139260346020366000612e63565b61139b91612ed5565b60601c6113ad6020600c366000612e63565b6113b691612ed5565b60601c856113c96070605c366000612e63565b6113d291612ed5565b60601c866113e560906070366000612e63565b6113ee91612fa7565b6113fd605c6058366000612e63565b61140691612f61565b60e01c61141860a46090366000612e63565b61142191612ed5565b60601c61143360a860a4366000612e63565b61143c91612f61565b60e01c61144e60ac60a8366000612e63565b61145791612f61565b60e01c61146960b060ac366000612e63565b61147291612f61565b60e01c6114833660b0816000612e63565b6040518e63ffffffff1660e01b81526004016114ab9d9c9b9a99989796959493929190612cd6565b600060405180830381600087803b1580156114c557600080fd5b505af11580156114d9573d6000803e3d6000fd5b507fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c13392506115109150600c90506004366000612e63565b61151991612e8d565b6040517fffffffffffffffff000000000000000000000000000000000000000000000000909116815260200160405180910390a15050565b61157373ffffffffffffffffffffffffffffffffffffffff8316333084611dac565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016637b939232336115c06040870160208801612b9e565b856115d160a0890160808a01612b9e565b8660a08a01356115e760808c0160608d01612bd8565b6115f760e08d0160c08e01612b9e565b6116086101008e0160e08f01612c02565b8d61010001602081019061161c9190612c02565b8e6101200160208101906116309190612c02565b8f8061014001906116419190612c28565b6040518e63ffffffff1660e01b81526004016116699d9c9b9a99989796959493929190612cd6565b600060405180830381600087803b15801561168357600080fd5b505af1158015611697573d6000803e3d6000fd5b50506040517fffffffffffffffff00000000000000000000000000000000000000000000000086351681527fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c1339250602001905060405180910390a1505050565b606063ffffffff61170d60808401848401612bd8565b67ffffffffffffffff1611156117a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f64657374696e6174696f6e436861696e49642076616c7565207061737365642060448201527f746f6f2062696720746f2066697420696e2075696e74333200000000000000006064820152608401610933565b7fdf834e150000000000000000000000000000000000000000000000000000000082356117d86040850160208601612b9e565b60601b8460400160208101906117ee9190612b9e565b60601b8560600160208101906118049190612bd8565b60e01b61181760a0880160808901612b9e565b60601b60a088013561182f60e08a0160c08b01612b9e565b60601b6118436101008b0160e08c01612c02565b60e01b6118586101208c016101008d01612c02565b60e01b61186d6101408d016101208e01612c02565b60e01b61187e6101408e018e612c28565b60405160200161189a9d9c9b9a99989796959493929190613034565b6040516020818303038152906040529050919050565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016637b939232346118fc60346020366000612e63565b61190591612ed5565b60601c6119176020600c366000612e63565b61192091612ed5565b60601c7f0000000000000000000000000000000000000000000000000000000000000000611953604c6038366000612e63565b61195c91612ed5565b60601c3461196f606c604c366000612e63565b61197891612fa7565b61198760386034366000612e63565b61199091612f61565b60e01c6119a26080606c366000612e63565b6119ab91612ed5565b60601c6119bd60846080366000612e63565b6119c691612f61565b60e01c6119d860886084366000612e63565b6119e191612f61565b60e01c6119f3608c6088366000612e63565b6119fc91612f61565b60e01c611a0d36608c816000612e63565b6040518f63ffffffff1660e01b8152600401611a359d9c9b9a99989796959493929190612cd6565b6000604051808303818588803b158015611a4e57600080fd5b505af1158015611a62573d6000803e3d6000fd5b507fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c1339350611a9b9250600c915060049050366000612e63565b611aa491612e8d565b6040517fffffffffffffffff000000000000000000000000000000000000000000000000909116815260200160405180910390a1565b60005473ffffffffffffffffffffffffffffffffffffffff163314611b2b576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116611b78576040517f1beca37400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff821603611bc7576040517fbf1ea9fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127890600090a350565b73ffffffffffffffffffffffffffffffffffffffff831615611c5f57610804838383611e72565b6108048282611ff4565b73ffffffffffffffffffffffffffffffffffffffff8316611c8957505050565b73ffffffffffffffffffffffffffffffffffffffff8216611cd6576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015611d4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6f91906130f8565b101561080457611d818383600061211e565b61080483837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61211e565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080611e6b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610933565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff8316611ebf576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611f0c576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611f79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9d91906130f8565b905080821115611fe3576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610933565b611fee84848461231e565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216612041576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115612084576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610933565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146120de576040519150601f19603f3d011682016040523d82523d6000602084013e6120e3565b606091505b5050905080610804576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015806121be57506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015612198573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121bc91906130f8565b155b61224a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610933565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526108049084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612374565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526108049084907fa9059cbb000000000000000000000000000000000000000000000000000000009060640161229c565b60006123d6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166124839092919063ffffffff16565b90508051600014806123f75750808060200190518101906123f79190613111565b610804576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610933565b6060612492848460008561249a565b949350505050565b60608247101561252c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610933565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516125559190613133565b60006040518083038185875af1925050503d8060008114612592576040519150601f19603f3d011682016040523d82523d6000602084013e612597565b606091505b50915091506125a8878383876125b3565b979650505050505050565b606083156126495782516000036126425773ffffffffffffffffffffffffffffffffffffffff85163b612642576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610933565b5081612492565b612492838381511561265e5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109339190612b84565b803573ffffffffffffffffffffffffffffffffffffffff811681146126b657600080fd5b919050565b60008083601f8401126126cd57600080fd5b50813567ffffffffffffffff8111156126e557600080fd5b602083019150836020828501011115610b1357600080fd5b60008060008060008060a0878903121561271657600080fd5b61271f87612692565b9550602087013567ffffffffffffffff81111561273b57600080fd5b61274789828a016126bb565b909650945061275a905060408801612692565b925061276860608801612692565b9150608087013590509295509295509295565b6000610160828403121561278e57600080fd5b50919050565b6000602082840312156127a657600080fd5b813567ffffffffffffffff8111156127bd57600080fd5b6124928482850161277b565b600080602083850312156127dc57600080fd5b823567ffffffffffffffff808211156127f457600080fd5b818501915085601f83011261280857600080fd5b81358181111561281757600080fd5b8660208260051b850101111561282c57600080fd5b60209290920196919550909350505050565b6000806020838503121561285157600080fd5b823567ffffffffffffffff81111561286857600080fd5b612874858286016126bb565b90969095509350505050565b60005b8381101561289b578181015183820152602001612883565b50506000910152565b600081518084526128bc816020860160208601612880565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600061012073ffffffffffffffffffffffffffffffffffffffff83511684526020830151612934602086018273ffffffffffffffffffffffffffffffffffffffff169052565b50604083015161295c604086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301516060850152608083015161298e608086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a08301516129a660a086018263ffffffff169052565b5060c08301516129be60c086018263ffffffff169052565b5060e08301516129d660e086018263ffffffff169052565b506101008084015182828701526129ef838701826128a4565b9695505050505050565b604081528251604082015260006020840151610140806060850152612a226101808501836128a4565b915060408601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0858403016080860152612a5d83826128a4565b9250506060860151612a8760a086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608086015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060a086015173ffffffffffffffffffffffffffffffffffffffff811660e08601525060c0860151610100818187015260e088015191506101208281880152818901519250612afb8488018415159052565b8801518015156101608801529250612b11915050565b508281036020840152612b2481856128ee565b95945050505050565b600080600060608486031215612b4257600080fd5b833567ffffffffffffffff811115612b5957600080fd5b612b658682870161277b565b935050612b7460208501612692565b9150604084013590509250925092565b602081526000612b9760208301846128a4565b9392505050565b600060208284031215612bb057600080fd5b612b9782612692565b81818437506000910190815290565b8183823760009101908152919050565b600060208284031215612bea57600080fd5b813567ffffffffffffffff81168114612b9757600080fd5b600060208284031215612c1457600080fd5b813563ffffffff81168114612b9757600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612c5d57600080fd5b83018035915067ffffffffffffffff821115612c7857600080fd5b602001915036819003821315610b1357600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b73ffffffffffffffffffffffffffffffffffffffff8e16815273ffffffffffffffffffffffffffffffffffffffff8d16602082015273ffffffffffffffffffffffffffffffffffffffff8c16604082015273ffffffffffffffffffffffffffffffffffffffff8b1660608201528960808201528860a082015267ffffffffffffffff881660c082015273ffffffffffffffffffffffffffffffffffffffff871660e082015263ffffffff8616610100820152612d9b61012082018663ffffffff169052565b63ffffffff84166101408201526101806101608201526000612dc261018083018486612c8d565b9f9e505050505050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612e5c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b60008085851115612e7357600080fd5b83861115612e8057600080fd5b5050820193919092039150565b7fffffffffffffffff0000000000000000000000000000000000000000000000008135818116916008851015612ecd5780818660080360031b1b83161692505b505092915050565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008135818116916014851015612ecd5760149490940360031b84901b1690921692915050565b7fffffffffffffffffffffffffffffffff000000000000000000000000000000008135818116916010851015612ecd5760109490940360031b84901b1690921692915050565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612ecd5760049490940360031b84901b1690921692915050565b80356020831015612fde577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b165b92915050565b60008651612ff6818460208b01612880565b86519083019061300a818360208b01612880565b865191019061301d818360208a01612880565b018385823760009301928352509095945050505050565b7fffffffff000000000000000000000000000000000000000000000000000000008e811682527fffffffffffffffff0000000000000000000000000000000000000000000000008e1660048301527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008d8116600c8401528c811660208401528b821660348401528a81166038840152604c83018a90528816606c83015286811660808301528581166084830152841660888201526000612dc2608c83018486612bb9565b60006020828403121561310a57600080fd5b5051919050565b60006020828403121561312357600080fd5b81518015158114612b9757600080fd5b60008251613145818460208701612880565b919091019291505056fea264697066735822122023e8c07fddb92442498aad752a9c56389c4059ba03c587e3873ac97bc645a64364736f6c63430008110033";

type AcrossFacetPackedV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AcrossFacetPackedV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AcrossFacetPackedV3__factory extends ContractFactory {
  constructor(...args: AcrossFacetPackedV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _spokePool: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AcrossFacetPackedV3> {
    return super.deploy(
      _spokePool,
      _wrappedNative,
      _owner,
      overrides || {}
    ) as Promise<AcrossFacetPackedV3>;
  }
  override getDeployTransaction(
    _spokePool: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _spokePool,
      _wrappedNative,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): AcrossFacetPackedV3 {
    return super.attach(address) as AcrossFacetPackedV3;
  }
  override connect(signer: Signer): AcrossFacetPackedV3__factory {
    return super.connect(signer) as AcrossFacetPackedV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AcrossFacetPackedV3Interface {
    return new utils.Interface(_abi) as AcrossFacetPackedV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AcrossFacetPackedV3 {
    return new Contract(address, _abi, signerOrProvider) as AcrossFacetPackedV3;
  }
}
