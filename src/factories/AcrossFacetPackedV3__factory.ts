/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AcrossFacetPackedV3,
  AcrossFacetPackedV3Interface,
} from "../AcrossFacetPackedV3";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_spokePool",
        type: "address",
        internalType: "contract IAcrossSpokePool",
      },
      {
        name: "_wrappedNative",
        type: "address",
        internalType: "address",
      },
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOwnershipTransfer",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "confirmOwnershipTransfer",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "decode_startBridgeTokensViaAcrossV3ERC20Packed",
    inputs: [
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "acrossData",
        type: "tuple",
        internalType: "struct AcrossFacetV3.AcrossV3Data",
        components: [
          {
            name: "receiverAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "refundAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outputAmountPercent",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "decode_startBridgeTokensViaAcrossV3NativePacked",
    inputs: [
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "acrossData",
        type: "tuple",
        internalType: "struct AcrossFacetV3.AcrossV3Data",
        components: [
          {
            name: "receiverAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "refundAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outputAmountPercent",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "encode_startBridgeTokensViaAcrossV3ERC20Packed",
    inputs: [
      {
        name: "_parameters",
        type: "tuple",
        internalType: "struct AcrossFacetPackedV3.PackedParameters",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "depositor",
            type: "address",
            internalType: "address",
          },
          {
            name: "destinationChainId",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "sendingAssetId",
        type: "address",
        internalType: "address",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "encode_startBridgeTokensViaAcrossV3NativePacked",
    inputs: [
      {
        name: "_parameters",
        type: "tuple",
        internalType: "struct AcrossFacetPackedV3.PackedParameters",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "depositor",
            type: "address",
            internalType: "address",
          },
          {
            name: "destinationChainId",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "executeCallAndWithdraw",
    inputs: [
      {
        name: "_callTo",
        type: "address",
        internalType: "address",
      },
      {
        name: "_callData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "_assetAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_to",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setApprovalForBridge",
    inputs: [
      {
        name: "tokensToApprove",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "spokePool",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IAcrossSpokePool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAcrossV3ERC20Min",
    inputs: [
      {
        name: "_parameters",
        type: "tuple",
        internalType: "struct AcrossFacetPackedV3.PackedParameters",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "depositor",
            type: "address",
            internalType: "address",
          },
          {
            name: "destinationChainId",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "sendingAssetId",
        type: "address",
        internalType: "address",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAcrossV3ERC20Packed",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAcrossV3NativeMin",
    inputs: [
      {
        name: "_parameters",
        type: "tuple",
        internalType: "struct AcrossFacetPackedV3.PackedParameters",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "depositor",
            type: "address",
            internalType: "address",
          },
          {
            name: "destinationChainId",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAcrossV3NativePacked",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "_newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "wrappedNative",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "CallExecutedAndFundsWithdrawn",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiAcrossTransfer",
    inputs: [
      {
        name: "_transactionId",
        type: "bytes8",
        indexed: false,
        internalType: "bytes8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferRequested",
    inputs: [
      {
        name: "_from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "NativeAssetTransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerMustNotBeSelf",
    inputs: [],
  },
  {
    type: "error",
    name: "NoNullOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "NoPendingOwnershipTransfer",
    inputs: [],
  },
  {
    type: "error",
    name: "NoTransferToNullAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NotPendingOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAnERC20Token",
    inputs: [],
  },
  {
    type: "error",
    name: "UnAuthorized",
    inputs: [],
  },
  {
    type: "error",
    name: "WithdrawFailed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c060405234801562000010575f80fd5b50604051620031e9380380620031e9833981016040819052620000339162000076565b5f80546001600160a01b0319166001600160a01b039283161790559182166080521660a052620000c7565b6001600160a01b038116811462000073575f80fd5b50565b5f805f6060848603121562000089575f80fd5b835162000096816200005e565b6020850151909350620000a9816200005e565b6040850151909250620000bc816200005e565b809150509250925092565b60805160a0516130cf6200011a5f395f8181610323015281816104f6015261190001525f818161024b015281816104ae01528181610798015281816113410152818161155d01526118a401526130cf5ff3fe608060405260043610610109575f3560e01c8063afdac3d6116100a1578063dd08173411610071578063e30c397811610057578063e30c3978146102e6578063eb6d3a1114610312578063f2fde38b14610345575f80fd5b8063dd081734146102bf578063df834e15146102de575f80fd5b8063afdac3d61461023a578063cc41fe541461026d578063cd48728d1461028c578063d24c2325146102a0575f80fd5b806354e97ec9116100dc57806354e97ec9146101745780637200b829146101aa578063808d859c146101be5780638da5cb5b146101ea575f80fd5b80631458d7ad1461010d5780631dc3017e1461012e57806323452b9c146101415780634c47864214610155575b5f80fd5b348015610118575f80fd5b5061012c6101273660046126cd565b610364565b005b61012c61013c36600461275d565b610497565b34801561014c575f80fd5b5061012c610649565b348015610160575f80fd5b5061012c61016f36600461278f565b610712565b34801561017f575f80fd5b5061019361018e3660046127fe565b6107ea565b6040516101a19291906129c8565b60405180910390f35b3480156101b5575f80fd5b5061012c610b01565b3480156101c9575f80fd5b506101dd6101d8366004612afb565b610be5565b6040516101a19190612b4e565b3480156101f5575f80fd5b505f546102159073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101a1565b348015610245575f80fd5b506102157f000000000000000000000000000000000000000000000000000000000000000081565b348015610278575f80fd5b506101936102873660046127fe565b61103b565b348015610297575f80fd5b5061012c6112ce565b3480156102ab575f80fd5b5061012c6102ba366004612afb565b611524565b3480156102ca575f80fd5b506101dd6102d936600461275d565b6116d4565b61012c61188d565b3480156102f1575f80fd5b506001546102159073ffffffffffffffffffffffffffffffffffffffff1681565b34801561031d575f80fd5b506102157f000000000000000000000000000000000000000000000000000000000000000081565b348015610350575f80fd5b5061012c61035f366004612b67565b611aa8565b5f5473ffffffffffffffffffffffffffffffffffffffff1633146103b4576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8673ffffffffffffffffffffffffffffffffffffffff1686866040516103dc929190612b8e565b5f604051808303815f865af19150503d805f8114610415576040519150601f19603f3d011682016040523d82523d5f602084013e61041a565b606091505b50509050801561045c5761042f848484611c04565b6040517fdfbe65d77c5440a078a2a1d95803d06b4a5f85b26ba3ec87bc9b421781e8dec1905f90a161048e565b6040517f750b219c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050505050565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016637b939232346104e46060850160408601612b67565b6104f46040860160208701612b67565b7f000000000000000000000000000000000000000000000000000000000000000061052560a0880160808901612b67565b3460a089013561053b60808b0160608c01612b9d565b61054b60e08c0160c08d01612b67565b61055c6101008d0160e08e01612bc4565b61056e6101208e016101008f01612bc4565b8d6101200160208101906105829190612bc4565b8e8061014001906105939190612be7565b6040518f63ffffffff1660e01b81526004016105bb9d9c9b9a99989796959493929190612c8f565b5f604051808303818588803b1580156105d2575f80fd5b505af11580156105e4573d5f803e3d5ffd5b50506040517fffffffffffffffff00000000000000000000000000000000000000000000000085351681527fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c1339350602001915061063e9050565b60405180910390a150565b5f5473ffffffffffffffffffffffffffffffffffffffff163314610699576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015473ffffffffffffffffffffffffffffffffffffffff166106e8576040517f75cdea1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b5f5473ffffffffffffffffffffffffffffffffffffffff163314610762576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b818110156107e5576107dd83838381811061078157610781612d8d565b90506020020160208101906107969190612b67565b7f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611c35565b600101610764565b505050565b60408051610140810182525f8082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915260408051610140810182525f8082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e0820183905261010082019290925261012081019190915260b0831015610923576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f696e76616c69642063616c6c6461746120286d7573742068617665206c656e6760448201527f7468203e3d20313736290000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610931600c60048587612dba565b61093a91612de1565b7fffffffffffffffff00000000000000000000000000000000000000000000000016825261096c6020600c8587612dba565b61097591612e29565b60601c60a083015261098b603460208587612dba565b61099491612e29565b60601c60208201526109aa604860348587612dba565b6109b391612e29565b60601c60808301526109c9605860488587612dba565b6109d291612e6f565b60801c60c08301526109e8605c60588587612dba565b6109f191612eb5565b60e090811c90830152610a086070605c8587612dba565b610a1191612e29565b60601c6040820152610a27609060708587612dba565b610a3091612efb565b6060820152610a4360a460908587612dba565b610a4c91612e29565b60601c60a0820152610a6260a860a48587612dba565b610a6b91612eb5565b60e01c60c0820152610a8160ac60a88587612dba565b610a8a91612eb5565b60e090811c90820152610aa160b060ac8587612dba565b610aaa91612eb5565b60e01c610100820152610ac08360b08187612dba565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505050506101208201525b9250929050565b60015473ffffffffffffffffffffffffffffffffffffffff16338114610b53576040517f1853971c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35f805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b606063ffffffff610bfb60808601868401612b9d565b67ffffffffffffffff161115610c93576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f64657374696e6174696f6e436861696e49642076616c7565207061737365642060448201527f746f6f2062696720746f2066697420696e2075696e7433320000000000000000606482015260840161091a565b6fffffffffffffffffffffffffffffffff821115610d33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f696e707574416d6f756e742076616c75652070617373656420746f6f2062696760448201527f20746f2066697420696e2075696e743132380000000000000000000000000000606482015260840161091a565b5f7fcd48728d000000000000000000000000000000000000000000000000000000008535610d676040880160208901612b67565b60601b876040016020810190610d7d9190612b67565b604080517fffffffff0000000000000000000000000000000000000000000000000000000090951660208601527fffffffffffffffff00000000000000000000000000000000000000000000000090931660248501527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000918216602c850152606090811b8216928401929092529086901b16605482015260680160405160208183030381529060405290505f8360801b866060016020810190610e409190612b9d565b60e01b610e5360a0890160808a01612b67565b6040517fffffffffffffffffffffffffffffffff000000000000000000000000000000009390931660208401527fffffffff0000000000000000000000000000000000000000000000000000000091909116603083015260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016603482015260a08701356048820152606801604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905290505f610f2260e0880160c08901612b67565b60601b610f36610100890160e08a01612bc4565b60e01b610f4b6101208a016101008b01612bc4565b60e01b610f606101408b016101208c01612bc4565b604080517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000090951660208601527fffffffff000000000000000000000000000000000000000000000000000000009384166034860152918316603885015260e01b91909116603c83015201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052905082828261100c6101408b018b612be7565b604051602001611020959493929190612f37565b60405160208183030381529060405293505050509392505050565b60408051610140810182525f8082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915260408051610140810182525f8082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e08201839052610100820192909252610120810191909152608c83101561116f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f696e76616c69642063616c6c6461746120286d7573742068617665206c656e6760448201527f7468203e3d203134302900000000000000000000000000000000000000000000606482015260840161091a565b61117d600c60048587612dba565b61118691612de1565b7fffffffffffffffff0000000000000000000000000000000000000000000000001682526111b86020600c8587612dba565b6111c191612e29565b60601c60a08301526111d7603860348587612dba565b6111e091612eb5565b60e090811c908301526111f7603460208587612dba565b61120091612e29565b60601c6020820152611216604c60388587612dba565b61121f91612e29565b60601c6040820152611235606c604c8587612dba565b61123e91612efb565b60608201526112516080606c8587612dba565b61125a91612e29565b60601c60a0820152611270608460808587612dba565b61127991612eb5565b60e01c60c082015261128f608860848587612dba565b61129891612eb5565b60e090811c908201526112af608c60888587612dba565b6112b891612eb5565b60e01c610100820152610ac083608c8187612dba565b5f6112dd604860343684612dba565b6112e691612e29565b60601c90505f6112fa605860483684612dba565b61130391612e6f565b60801c905061132a73ffffffffffffffffffffffffffffffffffffffff8316333084611d6a565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016637b93923261137460346020365f612dba565b61137d91612e29565b60601c61138e6020600c365f612dba565b61139791612e29565b60601c856113a96070605c365f612dba565b6113b291612e29565b60601c866113c460906070365f612dba565b6113cd91612efb565b6113db605c6058365f612dba565b6113e491612eb5565b60e01c6113f560a46090365f612dba565b6113fe91612e29565b60601c61140f60a860a4365f612dba565b61141891612eb5565b60e01c61142960ac60a8365f612dba565b61143291612eb5565b60e01c61144360b060ac365f612dba565b61144c91612eb5565b60e01c61145c3660b0815f612dba565b6040518e63ffffffff1660e01b81526004016114849d9c9b9a99989796959493929190612c8f565b5f604051808303815f87803b15801561149b575f80fd5b505af11580156114ad573d5f803e3d5ffd5b507fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c13392506114e39150600c90506004365f612dba565b6114ec91612de1565b6040517fffffffffffffffff000000000000000000000000000000000000000000000000909116815260200160405180910390a15050565b61154673ffffffffffffffffffffffffffffffffffffffff8316333084611d6a565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016637b9392326115926060860160408701612b67565b6115a26040870160208801612b67565b856115b360a0890160808a01612b67565b8660a08a01356115c960808c0160608d01612b9d565b6115d960e08d0160c08e01612b67565b6115ea6101008e0160e08f01612bc4565b8d6101000160208101906115fe9190612bc4565b8e6101200160208101906116129190612bc4565b8f8061014001906116239190612be7565b6040518e63ffffffff1660e01b815260040161164b9d9c9b9a99989796959493929190612c8f565b5f604051808303815f87803b158015611662575f80fd5b505af1158015611674573d5f803e3d5ffd5b50506040517fffffffffffffffff00000000000000000000000000000000000000000000000086351681527fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c1339250602001905060405180910390a1505050565b606063ffffffff6116ea60808401848401612b9d565b67ffffffffffffffff161115611782576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f64657374696e6174696f6e436861696e49642076616c7565207061737365642060448201527f746f6f2062696720746f2066697420696e2075696e7433320000000000000000606482015260840161091a565b7fdf834e150000000000000000000000000000000000000000000000000000000082356117b56040850160208601612b67565b60601b8460400160208101906117cb9190612b67565b60601b8560600160208101906117e19190612b9d565b60e01b6117f460a0880160808901612b67565b60601b60a088013561180c60e08a0160c08b01612b67565b60601b6118206101008b0160e08c01612bc4565b60e01b6118356101208c016101008d01612bc4565b60e01b61184a6101408d016101208e01612bc4565b60e01b61185b6101408e018e612be7565b6040516020016118779d9c9b9a99989796959493929190612f85565b6040516020818303038152906040529050919050565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016637b939232346118d860346020365f612dba565b6118e191612e29565b60601c6118f26020600c365f612dba565b6118fb91612e29565b60601c7f000000000000000000000000000000000000000000000000000000000000000061192d604c6038365f612dba565b61193691612e29565b60601c34611948606c604c365f612dba565b61195191612efb565b61195f60386034365f612dba565b61196891612eb5565b60e01c6119796080606c365f612dba565b61198291612e29565b60601c61199360846080365f612dba565b61199c91612eb5565b60e01c6119ad60886084365f612dba565b6119b691612eb5565b60e01c6119c7608c6088365f612dba565b6119d091612eb5565b60e01c6119e036608c815f612dba565b6040518f63ffffffff1660e01b8152600401611a089d9c9b9a99989796959493929190612c8f565b5f604051808303818588803b158015611a1f575f80fd5b505af1158015611a31573d5f803e3d5ffd5b507fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c1339350611a699250600c915060049050365f612dba565b611a7291612de1565b6040517fffffffffffffffff000000000000000000000000000000000000000000000000909116815260200160405180910390a1565b5f5473ffffffffffffffffffffffffffffffffffffffff163314611af8576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116611b45576040517f1beca37400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff821603611b94576040517fbf1ea9fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278905f90a350565b73ffffffffffffffffffffffffffffffffffffffff831615611c2b576107e5838383611e2c565b6107e58282611fab565b73ffffffffffffffffffffffffffffffffffffffff8316611c5557505050565b73ffffffffffffffffffffffffffffffffffffffff8216611ca2576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015611d15573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d399190613048565b10156107e5576107e583837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6120d1565b5f6040517f23b872dd00000000000000000000000000000000000000000000000000000000815284600482015283602482015282604482015260205f6064835f8a5af13d15601f3d1160015f511416171691505080611e25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c4544000000000000000000000000604482015260640161091a565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff8316611e79576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611ec6576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201525f9073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611f30573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f549190613048565b905080821115611f9a576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161091a565b611fa584848461223e565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216611ff8576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4781111561203b576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810182905247602482015260440161091a565b5f8273ffffffffffffffffffffffffffffffffffffffff16826040515f6040518083038185875af1925050503d805f8114612091576040519150601f19603f3d011682016040523d82523d5f602084013e612096565b606091505b50509050806107e5576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905261215d8482612294565b611fa55760405173ffffffffffffffffffffffffffffffffffffffff841660248201525f60448201526122349085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612351565b611fa58482612351565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526107e59084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016121b2565b5f805f8473ffffffffffffffffffffffffffffffffffffffff16846040516122bc919061305f565b5f604051808303815f865af19150503d805f81146122f5576040519150601f19603f3d011682016040523d82523d5f602084013e6122fa565b606091505b5091509150818015612324575080511580612324575080806020019051810190612324919061307a565b8015612346575073ffffffffffffffffffffffffffffffffffffffff85163b15155b925050505b92915050565b5f6123b2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661245e9092919063ffffffff16565b905080515f14806123d25750808060200190518101906123d2919061307a565b6107e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161091a565b606061246c84845f85612474565b949350505050565b606082471015612506576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161091a565b5f808673ffffffffffffffffffffffffffffffffffffffff16858760405161252e919061305f565b5f6040518083038185875af1925050503d805f8114612568576040519150601f19603f3d011682016040523d82523d5f602084013e61256d565b606091505b509150915061257e87838387612589565b979650505050505050565b6060831561261e5782515f036126175773ffffffffffffffffffffffffffffffffffffffff85163b612617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161091a565b508161246c565b61246c83838151156126335781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091a9190612b4e565b803573ffffffffffffffffffffffffffffffffffffffff8116811461268a575f80fd5b919050565b5f8083601f84011261269f575f80fd5b50813567ffffffffffffffff8111156126b6575f80fd5b602083019150836020828501011115610afa575f80fd5b5f805f805f8060a087890312156126e2575f80fd5b6126eb87612667565b9550602087013567ffffffffffffffff811115612706575f80fd5b61271289828a0161268f565b9096509450612725905060408801612667565b925061273360608801612667565b9150608087013590509295509295509295565b5f6101608284031215612757575f80fd5b50919050565b5f6020828403121561276d575f80fd5b813567ffffffffffffffff811115612783575f80fd5b61246c84828501612746565b5f80602083850312156127a0575f80fd5b823567ffffffffffffffff808211156127b7575f80fd5b818501915085601f8301126127ca575f80fd5b8135818111156127d8575f80fd5b8660208260051b85010111156127ec575f80fd5b60209290920196919550909350505050565b5f806020838503121561280f575f80fd5b823567ffffffffffffffff811115612825575f80fd5b6128318582860161268f565b90969095509350505050565b5f5b8381101561285757818101518382015260200161283f565b50505f910152565b5f815180845261287681602086016020860161283d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b805173ffffffffffffffffffffffffffffffffffffffff1682525f61014060208301516128ed602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151612915604086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301516060850152608083015161293b608086018267ffffffffffffffff169052565b5060a083015161296360a086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c083015161297b60c086018263ffffffff169052565b5060e083015161299360e086018263ffffffff169052565b506101008381015163ffffffff1690850152610120808401518186018390526129be8387018261285f565b9695505050505050565b60408152825160408201525f60208401516101408060608501526129f061018085018361285f565b915060408601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0858403016080860152612a2b838261285f565b9250506060860151612a5560a086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608086015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060a086015173ffffffffffffffffffffffffffffffffffffffff811660e08601525060c0860151610100818187015260e088015191506101208281880152818901519250612ac98488018415159052565b8801518015156101608801529250612adf915050565b508281036020840152612af281856128a8565b95945050505050565b5f805f60608486031215612b0d575f80fd5b833567ffffffffffffffff811115612b23575f80fd5b612b2f86828701612746565b935050612b3e60208501612667565b9150604084013590509250925092565b602081525f612b60602083018461285f565b9392505050565b5f60208284031215612b77575f80fd5b612b6082612667565b81818437505f910190815290565b818382375f9101908152919050565b5f60208284031215612bad575f80fd5b813567ffffffffffffffff81168114612b60575f80fd5b5f60208284031215612bd4575f80fd5b813563ffffffff81168114612b60575f80fd5b5f8083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612c1a575f80fd5b83018035915067ffffffffffffffff821115612c34575f80fd5b602001915036819003821315610afa575f80fd5b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b73ffffffffffffffffffffffffffffffffffffffff8e16815273ffffffffffffffffffffffffffffffffffffffff8d16602082015273ffffffffffffffffffffffffffffffffffffffff8c16604082015273ffffffffffffffffffffffffffffffffffffffff8b1660608201528960808201528860a082015267ffffffffffffffff881660c082015273ffffffffffffffffffffffffffffffffffffffff871660e082015263ffffffff8616610100820152612d5461012082018663ffffffff169052565b63ffffffff84166101408201526101806101608201525f612d7a61018083018486612c48565b9f9e505050505050505050505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f8085851115612dc8575f80fd5b83861115612dd4575f80fd5b5050820193919092039150565b7fffffffffffffffff0000000000000000000000000000000000000000000000008135818116916008851015612e215780818660080360031b1b83161692505b505092915050565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008135818116916014851015612e215760149490940360031b84901b1690921692915050565b7fffffffffffffffffffffffffffffffff000000000000000000000000000000008135818116916010851015612e215760109490940360031b84901b1690921692915050565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612e215760049490940360031b84901b1690921692915050565b8035602083101561234b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b5f8651612f48818460208b0161283d565b865190830190612f5c818360208b0161283d565b8651910190612f6f818360208a0161283d565b01838582375f9301928352509095945050505050565b7fffffffff000000000000000000000000000000000000000000000000000000008e811682527fffffffffffffffff0000000000000000000000000000000000000000000000008e1660048301527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008d8116600c8401528c811660208401528b821660348401528a81166038840152604c83018a90528816606c83015286811660808301528581166084830152841660888201525f612d7a608c83018486612b80565b5f60208284031215613058575f80fd5b5051919050565b5f825161307081846020870161283d565b9190910192915050565b5f6020828403121561308a575f80fd5b81518015158114612b60575f80fdfea26469706673582212200848b664f80406e355c36e5a64c9b7093c5d5354fc6be925ce148771bf6da4a364736f6c63430008160033";

type AcrossFacetPackedV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AcrossFacetPackedV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AcrossFacetPackedV3__factory extends ContractFactory {
  constructor(...args: AcrossFacetPackedV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _spokePool: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AcrossFacetPackedV3> {
    return super.deploy(
      _spokePool,
      _wrappedNative,
      _owner,
      overrides || {}
    ) as Promise<AcrossFacetPackedV3>;
  }
  override getDeployTransaction(
    _spokePool: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _spokePool,
      _wrappedNative,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): AcrossFacetPackedV3 {
    return super.attach(address) as AcrossFacetPackedV3;
  }
  override connect(signer: Signer): AcrossFacetPackedV3__factory {
    return super.connect(signer) as AcrossFacetPackedV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AcrossFacetPackedV3Interface {
    return new utils.Interface(_abi) as AcrossFacetPackedV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AcrossFacetPackedV3 {
    return new Contract(address, _abi, signerOrProvider) as AcrossFacetPackedV3;
  }
}
