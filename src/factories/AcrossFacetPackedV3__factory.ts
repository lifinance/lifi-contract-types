/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AcrossFacetPackedV3,
  AcrossFacetPackedV3Interface,
} from "../AcrossFacetPackedV3";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_spokePool",
        type: "address",
        internalType: "contract IAcrossSpokePool",
      },
      {
        name: "_wrappedNative",
        type: "address",
        internalType: "address",
      },
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOwnershipTransfer",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "confirmOwnershipTransfer",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "decode_startBridgeTokensViaAcrossV3ERC20Packed",
    inputs: [
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "acrossData",
        type: "tuple",
        internalType: "struct AcrossFacetV3.AcrossV3Data",
        components: [
          {
            name: "receiverAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "refundAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "decode_startBridgeTokensViaAcrossV3NativePacked",
    inputs: [
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "acrossData",
        type: "tuple",
        internalType: "struct AcrossFacetV3.AcrossV3Data",
        components: [
          {
            name: "receiverAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "refundAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "encode_startBridgeTokensViaAcrossV3ERC20Packed",
    inputs: [
      {
        name: "_parameters",
        type: "tuple",
        internalType: "struct AcrossFacetPackedV3.PackedParameters",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "depositor",
            type: "address",
            internalType: "address",
          },
          {
            name: "destinationChainId",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "sendingAssetId",
        type: "address",
        internalType: "address",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "encode_startBridgeTokensViaAcrossV3NativePacked",
    inputs: [
      {
        name: "_parameters",
        type: "tuple",
        internalType: "struct AcrossFacetPackedV3.PackedParameters",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "depositor",
            type: "address",
            internalType: "address",
          },
          {
            name: "destinationChainId",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "executeCallAndWithdraw",
    inputs: [
      {
        name: "_callTo",
        type: "address",
        internalType: "address",
      },
      {
        name: "_callData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "_assetAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_to",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setApprovalForBridge",
    inputs: [
      {
        name: "tokensToApprove",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "spokePool",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IAcrossSpokePool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAcrossV3ERC20Min",
    inputs: [
      {
        name: "_parameters",
        type: "tuple",
        internalType: "struct AcrossFacetPackedV3.PackedParameters",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "depositor",
            type: "address",
            internalType: "address",
          },
          {
            name: "destinationChainId",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "sendingAssetId",
        type: "address",
        internalType: "address",
      },
      {
        name: "inputAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAcrossV3ERC20Packed",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAcrossV3NativeMin",
    inputs: [
      {
        name: "_parameters",
        type: "tuple",
        internalType: "struct AcrossFacetPackedV3.PackedParameters",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "depositor",
            type: "address",
            internalType: "address",
          },
          {
            name: "destinationChainId",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAcrossV3NativePacked",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "_newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "wrappedNative",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "CallExecutedAndFundsWithdrawn",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiAcrossTransfer",
    inputs: [
      {
        name: "_transactionId",
        type: "bytes8",
        indexed: false,
        internalType: "bytes8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferRequested",
    inputs: [
      {
        name: "_from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "NativeAssetTransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerMustNotBeSelf",
    inputs: [],
  },
  {
    type: "error",
    name: "NoNullOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "NoPendingOwnershipTransfer",
    inputs: [],
  },
  {
    type: "error",
    name: "NoTransferToNullAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NotPendingOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAnERC20Token",
    inputs: [],
  },
  {
    type: "error",
    name: "UnAuthorized",
    inputs: [],
  },
  {
    type: "error",
    name: "WithdrawFailed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620032c7380380620032c7833981016040819052620000349162000079565b600080546001600160a01b0319166001600160a01b039283161790559182166080521660a052620000cd565b6001600160a01b03811681146200007657600080fd5b50565b6000806000606084860312156200008f57600080fd5b83516200009c8162000060565b6020850151909350620000af8162000060565b6040850151909250620000c28162000060565b809150509250925092565b60805160a0516131a3620001246000396000818161033801528181610513015261194301526000818161025a015281816104cb015281816107bc0152818161136d0152818161159901526118e501526131a36000f3fe60806040526004361061010e5760003560e01c8063afdac3d6116100a5578063dd08173411610074578063e30c397811610059578063e30c3978146102f9578063eb6d3a1114610326578063f2fde38b1461035a57600080fd5b8063dd081734146102d1578063df834e15146102f157600080fd5b8063afdac3d614610248578063cc41fe541461027c578063cd48728d1461029c578063d24c2325146102b157600080fd5b806354e97ec9116100e157806354e97ec91461017d5780637200b829146101b4578063808d859c146101c95780638da5cb5b146101f657600080fd5b80631458d7ad146101135780631dc3017e1461013557806323452b9c146101485780634c4786421461015d575b600080fd5b34801561011f57600080fd5b5061013361012e36600461271b565b61037a565b005b6101336101433660046127b2565b6104b4565b34801561015457600080fd5b5061013361066a565b34801561016957600080fd5b506101336101783660046127e7565b610734565b34801561018957600080fd5b5061019d61019836600461285c565b610818565b6040516101ab929190612a17565b60405180910390f35b3480156101c057600080fd5b50610133610b29565b3480156101d557600080fd5b506101e96101e4366004612b4b565b610c0f565b6040516101ab9190612ba2565b34801561020257600080fd5b506000546102239073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101ab565b34801561025457600080fd5b506102237f000000000000000000000000000000000000000000000000000000000000000081565b34801561028857600080fd5b5061019d61029736600461285c565b611068565b3480156102a857600080fd5b506101336112f8565b3480156102bd57600080fd5b506101336102cc366004612b4b565b611560565b3480156102dd57600080fd5b506101e96102ec3660046127b2565b611715565b6101336118ce565b34801561030557600080fd5b506001546102239073ffffffffffffffffffffffffffffffffffffffff1681565b34801561033257600080fd5b506102237f000000000000000000000000000000000000000000000000000000000000000081565b34801561036657600080fd5b50610133610375366004612bbc565b611af8565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103cb576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008673ffffffffffffffffffffffffffffffffffffffff1686866040516103f4929190612be6565b6000604051808303816000865af19150503d8060008114610431576040519150601f19603f3d011682016040523d82523d6000602084013e610436565b606091505b5050905080156104795761044b848484611c56565b6040517fdfbe65d77c5440a078a2a1d95803d06b4a5f85b26ba3ec87bc9b421781e8dec190600090a16104ab565b6040517f750b219c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050505050565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016637b939232346105016060850160408601612bbc565b6105116040860160208701612bbc565b7f000000000000000000000000000000000000000000000000000000000000000061054260a0880160808901612bbc565b3460a089013561055860808b0160608c01612bf6565b61056860e08c0160c08d01612bbc565b6105796101008d0160e08e01612c20565b61058b6101208e016101008f01612c20565b8d61012001602081019061059f9190612c20565b8e8061014001906105b09190612c46565b6040518f63ffffffff1660e01b81526004016105d89d9c9b9a99989796959493929190612cf4565b6000604051808303818588803b1580156105f157600080fd5b505af1158015610605573d6000803e3d6000fd5b50506040517fffffffffffffffff00000000000000000000000000000000000000000000000085351681527fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c1339350602001915061065f9050565b60405180910390a150565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106bb576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015473ffffffffffffffffffffffffffffffffffffffff1661070a576040517f75cdea1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610785576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b81811015610813576108018383838181106107a5576107a5612df3565b90506020020160208101906107ba9190612bbc565b7f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611c87565b8061080b81612e22565b915050610788565b505050565b604080516101408101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810191909152604080516101208101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e082019290925261010081019190915260b083101561094b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f696e76616c69642063616c6c6461746120286d7573742068617665206c656e6760448201527f7468203e3d20313736290000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610959600c60048587612e81565b61096291612eab565b7fffffffffffffffff0000000000000000000000000000000000000000000000001682526109946020600c8587612e81565b61099d91612ef3565b60601c60a08301526109b3603460208587612e81565b6109bc91612ef3565b60601c60208201526109d2604860348587612e81565b6109db91612ef3565b60601c60808301526109f1605860488587612e81565b6109fa91612f39565b60801c60c0830152610a10605c60588587612e81565b610a1991612f7f565b60e090811c90830152610a306070605c8587612e81565b610a3991612ef3565b60601c6040820152610a4f609060708587612e81565b610a5891612fc5565b6060820152610a6b60a460908587612e81565b610a7491612ef3565b60601c6080820152610a8a60a860a48587612e81565b610a9391612f7f565b60e01c60a0820152610aa960ac60a88587612e81565b610ab291612f7f565b60e01c60c0820152610ac860b060ac8587612e81565b610ad191612f7f565b60e090811c90820152610ae78360b08187612e81565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050506101008201525b9250929050565b60015473ffffffffffffffffffffffffffffffffffffffff16338114610b7b576040517f1853971c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b606063ffffffff610c2560808601868401612bf6565b67ffffffffffffffff161115610cbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f64657374696e6174696f6e436861696e49642076616c7565207061737365642060448201527f746f6f2062696720746f2066697420696e2075696e74333200000000000000006064820152608401610942565b6fffffffffffffffffffffffffffffffff821115610d5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f696e707574416d6f756e742076616c75652070617373656420746f6f2062696760448201527f20746f2066697420696e2075696e7431323800000000000000000000000000006064820152608401610942565b60007fcd48728d000000000000000000000000000000000000000000000000000000008535610d926040880160208901612bbc565b60601b876040016020810190610da89190612bbc565b604080517fffffffff0000000000000000000000000000000000000000000000000000000090951660208601527fffffffffffffffff00000000000000000000000000000000000000000000000090931660248501527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000918216602c850152606090811b8216928401929092529086901b166054820152606801604051602081830303815290604052905060008360801b866060016020810190610e6c9190612bf6565b60e01b610e7f60a0890160808a01612bbc565b6040517fffffffffffffffffffffffffffffffff000000000000000000000000000000009390931660208401527fffffffff0000000000000000000000000000000000000000000000000000000091909116603083015260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016603482015260a08701356048820152606801604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905290506000610f4f60e0880160c08901612bbc565b60601b610f63610100890160e08a01612c20565b60e01b610f786101208a016101008b01612c20565b60e01b610f8d6101408b016101208c01612c20565b604080517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000090951660208601527fffffffff000000000000000000000000000000000000000000000000000000009384166034860152918316603885015260e01b91909116603c83015201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905290508282826110396101408b018b612c46565b60405160200161104d959493929190613002565b60405160208183030381529060405293505050509392505050565b604080516101408101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810191909152604080516101208101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e0820192909252610100810191909152608c831015611196576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f696e76616c69642063616c6c6461746120286d7573742068617665206c656e6760448201527f7468203e3d2031343029000000000000000000000000000000000000000000006064820152608401610942565b6111a4600c60048587612e81565b6111ad91612eab565b7fffffffffffffffff0000000000000000000000000000000000000000000000001682526111df6020600c8587612e81565b6111e891612ef3565b60601c60a08301526111fe603860348587612e81565b61120791612f7f565b60e090811c9083015261121e603460208587612e81565b61122791612ef3565b60601c602082015261123d604c60388587612e81565b61124691612ef3565b60601c604082015261125c606c604c8587612e81565b61126591612fc5565b60608201526112786080606c8587612e81565b61128191612ef3565b60601c60808083019190915261129b906084908587612e81565b6112a491612f7f565b60e01c60a08201526112ba608860848587612e81565b6112c391612f7f565b60e01c60c08201526112d9608c60888587612e81565b6112e291612f7f565b60e090811c90820152610ae783608c8187612e81565b6000611308604860343684612e81565b61131191612ef3565b60601c90506000611326605860483684612e81565b61132f91612f39565b60801c905061135673ffffffffffffffffffffffffffffffffffffffff8316333084611dca565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016637b9392326113a160346020366000612e81565b6113aa91612ef3565b60601c6113bc6020600c366000612e81565b6113c591612ef3565b60601c856113d86070605c366000612e81565b6113e191612ef3565b60601c866113f460906070366000612e81565b6113fd91612fc5565b61140c605c6058366000612e81565b61141591612f7f565b60e01c61142760a46090366000612e81565b61143091612ef3565b60601c61144260a860a4366000612e81565b61144b91612f7f565b60e01c61145d60ac60a8366000612e81565b61146691612f7f565b60e01c61147860b060ac366000612e81565b61148191612f7f565b60e01c6114923660b0816000612e81565b6040518e63ffffffff1660e01b81526004016114ba9d9c9b9a99989796959493929190612cf4565b600060405180830381600087803b1580156114d457600080fd5b505af11580156114e8573d6000803e3d6000fd5b507fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c133925061151f9150600c90506004366000612e81565b61152891612eab565b6040517fffffffffffffffff000000000000000000000000000000000000000000000000909116815260200160405180910390a15050565b61158273ffffffffffffffffffffffffffffffffffffffff8316333084611dca565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016637b9392326115ce6060860160408701612bbc565b6115de6040870160208801612bbc565b856115ef60a0890160808a01612bbc565b8660a08a013561160560808c0160608d01612bf6565b61161560e08d0160c08e01612bbc565b6116266101008e0160e08f01612c20565b8d61010001602081019061163a9190612c20565b8e61012001602081019061164e9190612c20565b8f80610140019061165f9190612c46565b6040518e63ffffffff1660e01b81526004016116879d9c9b9a99989796959493929190612cf4565b600060405180830381600087803b1580156116a157600080fd5b505af11580156116b5573d6000803e3d6000fd5b50506040517fffffffffffffffff00000000000000000000000000000000000000000000000086351681527fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c1339250602001905060405180910390a1505050565b606063ffffffff61172b60808401848401612bf6565b67ffffffffffffffff1611156117c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f64657374696e6174696f6e436861696e49642076616c7565207061737365642060448201527f746f6f2062696720746f2066697420696e2075696e74333200000000000000006064820152608401610942565b7fdf834e150000000000000000000000000000000000000000000000000000000082356117f66040850160208601612bbc565b60601b84604001602081019061180c9190612bbc565b60601b8560600160208101906118229190612bf6565b60e01b61183560a0880160808901612bbc565b60601b60a088013561184d60e08a0160c08b01612bbc565b60601b6118616101008b0160e08c01612c20565b60e01b6118766101208c016101008d01612c20565b60e01b61188b6101408d016101208e01612c20565b60e01b61189c6101408e018e612c46565b6040516020016118b89d9c9b9a99989796959493929190613052565b6040516020818303038152906040529050919050565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016637b9392323461191a60346020366000612e81565b61192391612ef3565b60601c6119356020600c366000612e81565b61193e91612ef3565b60601c7f0000000000000000000000000000000000000000000000000000000000000000611971604c6038366000612e81565b61197a91612ef3565b60601c3461198d606c604c366000612e81565b61199691612fc5565b6119a560386034366000612e81565b6119ae91612f7f565b60e01c6119c06080606c366000612e81565b6119c991612ef3565b60601c6119db60846080366000612e81565b6119e491612f7f565b60e01c6119f660886084366000612e81565b6119ff91612f7f565b60e01c611a11608c6088366000612e81565b611a1a91612f7f565b60e01c611a2b36608c816000612e81565b6040518f63ffffffff1660e01b8152600401611a539d9c9b9a99989796959493929190612cf4565b6000604051808303818588803b158015611a6c57600080fd5b505af1158015611a80573d6000803e3d6000fd5b507fe11352fef0e24c9902a94910b5ce929151ea227f4c68572aada8f2105c66c1339350611ab99250600c915060049050366000612e81565b611ac291612eab565b6040517fffffffffffffffff000000000000000000000000000000000000000000000000909116815260200160405180910390a1565b60005473ffffffffffffffffffffffffffffffffffffffff163314611b49576040517fbe24598300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116611b96576040517f1beca37400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff821603611be5576040517fbf1ea9fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127890600090a350565b73ffffffffffffffffffffffffffffffffffffffff831615611c7d57610813838383611e90565b6108138282612012565b73ffffffffffffffffffffffffffffffffffffffff8316611ca757505050565b73ffffffffffffffffffffffffffffffffffffffff8216611cf4576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015611d69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d8d9190613116565b101561081357611d9f8383600061213c565b61081383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61213c565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080611e89576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610942565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff8316611edd576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611f2a576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611f97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fbb9190613116565b905080821115612001576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610942565b61200c84848461233c565b50505050565b73ffffffffffffffffffffffffffffffffffffffff821661205f576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156120a2576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610942565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146120fc576040519150601f19603f3d011682016040523d82523d6000602084013e612101565b606091505b5050905080610813576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015806121dc57506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156121b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121da9190613116565b155b612268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610942565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526108139084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612392565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526108139084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016122ba565b60006123f4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166124a19092919063ffffffff16565b9050805160001480612415575080806020019051810190612415919061312f565b610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610942565b60606124b084846000856124b8565b949350505050565b60608247101561254a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610942565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516125739190613151565b60006040518083038185875af1925050503d80600081146125b0576040519150601f19603f3d011682016040523d82523d6000602084013e6125b5565b606091505b50915091506125c6878383876125d1565b979650505050505050565b606083156126675782516000036126605773ffffffffffffffffffffffffffffffffffffffff85163b612660576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610942565b50816124b0565b6124b0838381511561267c5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109429190612ba2565b803573ffffffffffffffffffffffffffffffffffffffff811681146126d457600080fd5b919050565b60008083601f8401126126eb57600080fd5b50813567ffffffffffffffff81111561270357600080fd5b602083019150836020828501011115610b2257600080fd5b60008060008060008060a0878903121561273457600080fd5b61273d876126b0565b9550602087013567ffffffffffffffff81111561275957600080fd5b61276589828a016126d9565b90965094506127789050604088016126b0565b9250612786606088016126b0565b9150608087013590509295509295509295565b600061016082840312156127ac57600080fd5b50919050565b6000602082840312156127c457600080fd5b813567ffffffffffffffff8111156127db57600080fd5b6124b084828501612799565b600080602083850312156127fa57600080fd5b823567ffffffffffffffff8082111561281257600080fd5b818501915085601f83011261282657600080fd5b81358181111561283557600080fd5b8660208260051b850101111561284a57600080fd5b60209290920196919550909350505050565b6000806020838503121561286f57600080fd5b823567ffffffffffffffff81111561288657600080fd5b612892858286016126d9565b90969095509350505050565b60005b838110156128b95781810151838201526020016128a1565b50506000910152565b600081518084526128da81602086016020860161289e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600061012073ffffffffffffffffffffffffffffffffffffffff83511684526020830151612952602086018273ffffffffffffffffffffffffffffffffffffffff169052565b50604083015161297a604086018273ffffffffffffffffffffffffffffffffffffffff169052565b506060830151606085015260808301516129ac608086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a08301516129c460a086018263ffffffff169052565b5060c08301516129dc60c086018263ffffffff169052565b5060e08301516129f460e086018263ffffffff169052565b50610100808401518282870152612a0d838701826128c2565b9695505050505050565b604081528251604082015260006020840151610140806060850152612a406101808501836128c2565b915060408601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0858403016080860152612a7b83826128c2565b9250506060860151612aa560a086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608086015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060a086015173ffffffffffffffffffffffffffffffffffffffff811660e08601525060c0860151610100818187015260e088015191506101208281880152818901519250612b198488018415159052565b8801518015156101608801529250612b2f915050565b508281036020840152612b42818561290c565b95945050505050565b600080600060608486031215612b6057600080fd5b833567ffffffffffffffff811115612b7757600080fd5b612b8386828701612799565b935050612b92602085016126b0565b9150604084013590509250925092565b602081526000612bb560208301846128c2565b9392505050565b600060208284031215612bce57600080fd5b612bb5826126b0565b81818437506000910190815290565b8183823760009101908152919050565b600060208284031215612c0857600080fd5b813567ffffffffffffffff81168114612bb557600080fd5b600060208284031215612c3257600080fd5b813563ffffffff81168114612bb557600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612c7b57600080fd5b83018035915067ffffffffffffffff821115612c9657600080fd5b602001915036819003821315610b2257600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b73ffffffffffffffffffffffffffffffffffffffff8e16815273ffffffffffffffffffffffffffffffffffffffff8d16602082015273ffffffffffffffffffffffffffffffffffffffff8c16604082015273ffffffffffffffffffffffffffffffffffffffff8b1660608201528960808201528860a082015267ffffffffffffffff881660c082015273ffffffffffffffffffffffffffffffffffffffff871660e082015263ffffffff8616610100820152612db961012082018663ffffffff169052565b63ffffffff84166101408201526101806101608201526000612de061018083018486612cab565b9f9e505050505050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612e7a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b60008085851115612e9157600080fd5b83861115612e9e57600080fd5b5050820193919092039150565b7fffffffffffffffff0000000000000000000000000000000000000000000000008135818116916008851015612eeb5780818660080360031b1b83161692505b505092915050565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008135818116916014851015612eeb5760149490940360031b84901b1690921692915050565b7fffffffffffffffffffffffffffffffff000000000000000000000000000000008135818116916010851015612eeb5760109490940360031b84901b1690921692915050565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612eeb5760049490940360031b84901b1690921692915050565b80356020831015612ffc577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b165b92915050565b60008651613014818460208b0161289e565b865190830190613028818360208b0161289e565b865191019061303b818360208a0161289e565b018385823760009301928352509095945050505050565b7fffffffff000000000000000000000000000000000000000000000000000000008e811682527fffffffffffffffff0000000000000000000000000000000000000000000000008e1660048301527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008d8116600c8401528c811660208401528b821660348401528a81166038840152604c83018a90528816606c83015286811660808301528581166084830152841660888201526000612de0608c83018486612bd7565b60006020828403121561312857600080fd5b5051919050565b60006020828403121561314157600080fd5b81518015158114612bb557600080fd5b6000825161316381846020870161289e565b919091019291505056fea264697066735822122006eecb0631a71dde3f3b47c35e5af784b68b861af4e4320fe351254d5002afa064736f6c63430008110033";

type AcrossFacetPackedV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AcrossFacetPackedV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AcrossFacetPackedV3__factory extends ContractFactory {
  constructor(...args: AcrossFacetPackedV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _spokePool: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AcrossFacetPackedV3> {
    return super.deploy(
      _spokePool,
      _wrappedNative,
      _owner,
      overrides || {}
    ) as Promise<AcrossFacetPackedV3>;
  }
  override getDeployTransaction(
    _spokePool: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _spokePool,
      _wrappedNative,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): AcrossFacetPackedV3 {
    return super.attach(address) as AcrossFacetPackedV3;
  }
  override connect(signer: Signer): AcrossFacetPackedV3__factory {
    return super.connect(signer) as AcrossFacetPackedV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AcrossFacetPackedV3Interface {
    return new utils.Interface(_abi) as AcrossFacetPackedV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AcrossFacetPackedV3 {
    return new Contract(address, _abi, signerOrProvider) as AcrossFacetPackedV3;
  }
}
