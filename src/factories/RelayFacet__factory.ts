/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { RelayFacet, RelayFacetInterface } from "../RelayFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_relayReceiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "_relaySolver",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "consumedIds",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "relayReceiver",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "relaySolver",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "startBridgeTokensViaRelay",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_relayData",
        type: "tuple",
        internalType: "struct RelayFacet.RelayData",
        components: [
          {
            name: "requestId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "nonEVMReceiver",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "receivingAssetId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaRelay",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_relayData",
        type: "tuple",
        internalType: "struct RelayFacet.RelayData",
        components: [
          {
            name: "requestId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "nonEVMReceiver",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "receivingAssetId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidQuote",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
  {
    type: "error",
    name: "SliceOutOfBounds",
    inputs: [],
  },
  {
    type: "error",
    name: "SliceOverflow",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200290538038062002905833981016040819052620000349162000069565b6001600160a01b039182166080521660a052620000a1565b80516001600160a01b03811681146200006457600080fd5b919050565b600080604083850312156200007d57600080fd5b62000088836200004c565b915062000098602084016200004c565b90509250929050565b60805160a051612824620000e1600039600081816086015281816103fd015281816107d30152610d9d01526000818160e40152610c9501526128246000f3fe60806040526004361061005a5760003560e01c8063981886a711610043578063981886a7146100d2578063ae32859014610106578063f21a21161461011957600080fd5b806325d374e81461005f57806381d82dd814610074575b600080fd5b61007261006d366004612202565b610159565b005b34801561008057600080fd5b506100a87f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100de57600080fd5b506100a87f000000000000000000000000000000000000000000000000000000000000000081565b6100726101143660046122c1565b610637565b34801561012557600080fd5b5061014961013436600461232e565b60006020819052908152604090205460ff1681565b60405190151581526020016100c9565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016101d4576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815581356000908152602081905260409020548590839060ff1615610227576040517ff861803000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a082015173ffffffffffffffffffffffffffffffffffffffff167311f111f111f111f111f111f111f111f111f111f114801561026657506020810135155b1561029d576040517ff861803000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608082015160e08301516000916103aa918435914691309173ffffffffffffffffffffffffffffffffffffffff16906102d590610a22565b60a089015173ffffffffffffffffffffffffffffffffffffffff167311f111f111f111f111f111f111f111f111f111f11461032a5760a089015173ffffffffffffffffffffffffffffffffffffffff16610330565b87602001355b604080516020810197909752868101959095526060860193909352608085019190915260a084015260c083015284013560e082015261010001604051602081830303815290604052805190602001206020527b19457468657265756d205369676e6564204d6573736167653a0a3332600052603c60042090565b905060006103f9826103bf6060860186612347565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a5892505050565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610480576040517ff861803000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600061048d34476123e2565b90508a8061010001516104cc576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b8061012001511561050a576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c61052d8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610564576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036105a2576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036105df576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105f48e600001518f60c001518f8f33610b02565b60c08f01526106038e8c610c4a565b5047915050818111156106255761062560008461062085856123e2565b611029565b50506000909555505050505050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016106b2576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181556106bf836123f5565b8235600090815260208190526040902054839060ff161561070c576040517ff861803000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a082015173ffffffffffffffffffffffffffffffffffffffff167311f111f111f111f111f111f111f111f111f111f114801561074b57506020810135155b15610782576040517ff861803000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608082015160e08301516000916107ba918435914691309173ffffffffffffffffffffffffffffffffffffffff16906102d590610a22565b905060006107cf826103bf6060860186612347565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610856576040517ff861803000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600061086334476123e2565b905061086e896123f5565b60a081015173ffffffffffffffffffffffffffffffffffffffff166108bf576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036108fd576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361093a576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109438a6123f5565b80610100015115610980576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109898b6123f5565b806101200151156109c6576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109e36109d960a08e0160808f01612401565b8d60c0013561105e565b6109f56109ef8d6123f5565b8c610c4a565b504791505081811115610a1257610a1260008461062085856123e2565b5050600090955550505050505050565b6000816512309ce5400103610a3b5750627dee6e919050565b81660416edef1601be03610a545750632f3fb341919050565b5090565b6040516001908360005260208301516040526040835103610aad57604083015160ff81901c601b016020527f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16606052610ad3565b6041835103610ace57606083015160001a6020526040830151606052610ad3565b600091505b6020600160806000855afa5191503d610af457638baa579f6000526004601cfd5b600060605260405292915050565b600082808203610b3e576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610b4d6001856123e2565b818110610b5c57610b5c61241c565b9050602002810190610b6e919061244b565b610b7f906080810190606001612401565b90506000610b8c82611113565b905073ffffffffffffffffffffffffffffffffffffffff8216610bb657610bb334826123e2565b90505b6000610bc2888861115e565b9050610bce888861126a565b610bdb8a898989856112d7565b600082610be785611113565b610bf191906123e2565b905089811015610c3c576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b608082015173ffffffffffffffffffffffffffffffffffffffff16610d7e5760c08201516040805183356020820152600092839273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610cef916124ad565b60006040518083038185875af1925050503d8060008114610d2c576040519150601f19603f3d011682016040523d82523d6000602084013e610d31565b606091505b509150915081610d7757610d4481611689565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c339190612509565b5050610f2c565b60c082015160405173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001660248201526044810191909152600090606401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529051610e5a918535910190815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610e96929160200161251c565b6040516020818303038152906040529050600080846080015173ffffffffffffffffffffffffffffffffffffffff1683604051610ed391906124ad565b6000604051808303816000865af19150503d8060008114610f10576040519150601f19603f3d011682016040523d82523d6000602084013e610f15565b606091505b509150915081610f2857610d4481611689565b5050505b80356000908152602081905260409020805460017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090911617905560a082015173ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffee0eee0eee0eee0eee0eee0eee0eee0eee0eee0f01610fee57610fb58260e00151610a22565b825160405160208481013582527f7be3e48a8a8b4d32138937e1809ac83481fffe48e49bb60e43ed1d3d50349e4c910160405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161101d919061254b565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff83166110535761104e8282611707565b505050565b61104e838383611774565b80600003611098576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166110f157803410156110ed576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6110ed73ffffffffffffffffffffffffffffffffffffffff83163330846117e2565b600073ffffffffffffffffffffffffffffffffffffffff8216156111565761115173ffffffffffffffffffffffffffffffffffffffff83163061183f565b611158565b475b92915050565b60608160008167ffffffffffffffff81111561117c5761117c611f88565b6040519080825280602002602001820160405280156111a5578160200160208202803683370190505b5090506000805b8381101561125f578686828181106111c6576111c661241c565b90506020028101906111d8919061244b565b6111e9906080810190606001612401565b91506111f482611113565b8382815181106112065761120661241c565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216611257573483828151811061123f5761123f61241c565b6020026020010181815161125391906123e2565b9052505b6001016111ac565b509095945050505050565b60005b8181101561104e57368383838181106112885761128861241c565b905060200281019061129a919061244b565b90506112ac60e0820160c0830161265e565b156112ce576112ce6112c46060830160408401612401565b826080013561105e565b5060010161126d565b8383838382600181146115a457600085856112f36001856123e2565b8181106113025761130261241c565b9050602002810190611314919061244b565b611325906080810190606001612401565b9050600089815b818110156114d057368d8d838181106113475761134761241c565b9050602002810190611359919061244b565b905061138861136e6060830160408401612401565b73ffffffffffffffffffffffffffffffffffffffff161590565b806113eb57506113eb6113a16040830160208401612401565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561140257506114026113a16020830183612401565b8015611487575061148761141960a0830183612347565b61142891600491600091612679565b611431916126a3565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6114bd576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114c78f82611874565b5060010161132c565b505060005b6114e06001856123e2565b81101561159c5760008888838181106114fb576114fb61241c565b905060200281019061150d919061244b565b61151e906080810190606001612401565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611593578582815181106115655761156561241c565b602002602001015161157682611113565b61158091906123e2565b9250821561159357611593818885611029565b506001016114d5565b50505061167d565b8760005b8181101561167a57368b8b838181106115c3576115c361241c565b90506020028101906115d5919061244b565b90506115ea61136e6060830160408401612401565b8061160357506116036113a16040830160208401612401565b801561161a575061161a6113a16020830183612401565b8015611631575061163161141960a0830183612347565b611667576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116718d82611874565b506001016115a8565b50505b50505050505050505050565b60606044825110156116ce57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b60006116ea60048085516116e291906123e2565b859190611b51565b90508080602001905181019061170091906126eb565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8216611754576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110ed73ffffffffffffffffffffffffffffffffffffffff831682611c6b565b73ffffffffffffffffffffffffffffffffffffffff82166117c1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61104e73ffffffffffffffffffffffffffffffffffffffff84168383611c87565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d15600160005114171661183157637939f4246000526004601cfd5b600060605260405250505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b6118896118846020830183612401565b611cd6565b6118bf576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036118ff576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061191461136e6060850160408601612401565b61191f576000611925565b82608001355b9050600061194161193c6060860160408701612401565b611113565b9050600061195861193c6080870160608801612401565b90508260000361198f5761198f6119756060870160408801612401565b6119856040880160208901612401565b8760800135611db5565b84608001358210156119da576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610c33565b6000806119ea6020880188612401565b73ffffffffffffffffffffffffffffffffffffffff1685611a0e60a08a018a612347565b604051611a1c929190612762565b60006040518083038185875af1925050503d8060008114611a59576040519150601f19603f3d011682016040523d82523d6000602084013e611a5e565b606091505b509150915081611a7157611a7181611de1565b6000611a8661193c60808a0160608b01612401565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611ab760208b018b612401565b611ac760608c0160408d01612401565b611ad760808d0160608e01612401565b8c60800135898711611ae95786611af3565b611af38a886123e2565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b606081611b5f81601f612772565b1015611b97576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611ba18284612772565b84511015611bdb576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611bfa5760405191506000825260208201604052611c62565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611c33578051835260209283019201611c1b565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60003860003884865af16110ed5763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d156001600051141716611ccc576390b8ec186000526004601cfd5b6000603452505050565b604080516003808252818301909252600091829182917fef0100000000000000000000000000000000000000000000000000000000000091839160208201818036833701905050863b945090507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4706003600060208401893c863f93506000611d5d83612785565b90507fffffff000000000000000000000000000000000000000000000000000000000080851690821603611d9957506001979650505050505050565b600086118015611da95750818514155b98975050505050505050565b61104e8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611deb565b8051602082018181fd5b73ffffffffffffffffffffffffffffffffffffffff8316611e38576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611ead573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ed191906127d5565b1015611ef857611ef873ffffffffffffffffffffffffffffffffffffffff85168483611efe565b50505050565b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d156001600051141716611ccc5760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d156001600051141716611ccc57633e3f8f736000526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611fdb57611fdb611f88565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561202857612028611f88565b604052919050565b600067ffffffffffffffff82111561204a5761204a611f88565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261208757600080fd5b813561209a61209582612030565b611fe1565b8181528460208386010111156120af57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146120f057600080fd5b919050565b803580151581146120f057600080fd5b6000610140828403121561211857600080fd5b612120611fb7565b905081358152602082013567ffffffffffffffff8082111561214157600080fd5b61214d85838601612076565b6020840152604084013591508082111561216657600080fd5b5061217384828501612076565b604083015250612185606083016120cc565b6060820152612196608083016120cc565b60808201526121a760a083016120cc565b60a082015260c082013560c082015260e082013560e08201526101006121ce8184016120f5565b908201526101206121e08382016120f5565b9082015292915050565b6000608082840312156121fc57600080fd5b50919050565b6000806000806060858703121561221857600080fd5b843567ffffffffffffffff8082111561223057600080fd5b61223c88838901612105565b9550602087013591508082111561225257600080fd5b818701915087601f83011261226657600080fd5b81358181111561227557600080fd5b8860208260051b850101111561228a57600080fd5b6020830195508094505060408701359150808211156122a857600080fd5b506122b5878288016121ea565b91505092959194509250565b600080604083850312156122d457600080fd5b823567ffffffffffffffff808211156122ec57600080fd5b90840190610140828703121561230157600080fd5b9092506020840135908082111561231757600080fd5b50612324858286016121ea565b9150509250929050565b60006020828403121561234057600080fd5b5035919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261237c57600080fd5b83018035915067ffffffffffffffff82111561239757600080fd5b6020019150368190038213156123ac57600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115611158576111586123b3565b60006111583683612105565b60006020828403121561241357600080fd5b611700826120cc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261247f57600080fd5b9190910192915050565b60005b838110156124a457818101518382015260200161248c565b50506000910152565b6000825161247f818460208701612489565b600081518084526124d7816020860160208601612489565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061170060208301846124bf565b6000835161252e818460208801612489565b835190830190612542818360208801612489565b01949350505050565b6020815281516020820152600060208301516101408060408501526125746101608501836124bf565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526125af83826124bf565b92505060608501516125d9608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e085015161010081818701528087015191505061012061264c8187018315159052565b90950151151593019290925250919050565b60006020828403121561267057600080fd5b611700826120f5565b6000808585111561268957600080fd5b8386111561269657600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156126e35780818660040360031b1b83161692505b505092915050565b6000602082840312156126fd57600080fd5b815167ffffffffffffffff81111561271457600080fd5b8201601f8101841361272557600080fd5b805161273361209582612030565b81815285602083850101111561274857600080fd5b612759826020830160208601612489565b95945050505050565b8183823760009101908152919050565b80820180821115611158576111586123b3565b6000815160208301517fffffff0000000000000000000000000000000000000000000000000000000000808216935060038310156127cd5780818460030360031b1b83161693505b505050919050565b6000602082840312156127e757600080fd5b505191905056fea2646970667358221220247b5dd2c3c27e3c2ce78ede3f51f5c1270bc9c5f703b75ac97a05dc0863df5364736f6c63430008110033";

type RelayFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayFacet__factory extends ContractFactory {
  constructor(...args: RelayFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _relayReceiver: PromiseOrValue<string>,
    _relaySolver: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayFacet> {
    return super.deploy(
      _relayReceiver,
      _relaySolver,
      overrides || {}
    ) as Promise<RelayFacet>;
  }
  override getDeployTransaction(
    _relayReceiver: PromiseOrValue<string>,
    _relaySolver: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _relayReceiver,
      _relaySolver,
      overrides || {}
    );
  }
  override attach(address: string): RelayFacet {
    return super.attach(address) as RelayFacet;
  }
  override connect(signer: Signer): RelayFacet__factory {
    return super.connect(signer) as RelayFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayFacetInterface {
    return new utils.Interface(_abi) as RelayFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayFacet {
    return new Contract(address, _abi, signerOrProvider) as RelayFacet;
  }
}
