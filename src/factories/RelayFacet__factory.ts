/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { RelayFacet, RelayFacetInterface } from "../RelayFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_relayReceiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "_relaySolver",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "RELAY_RECEIVER",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "RELAY_SOLVER",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "consumedIds",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "startBridgeTokensViaRelay",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_relayData",
        type: "tuple",
        internalType: "struct RelayFacet.RelayData",
        components: [
          {
            name: "requestId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "nonEVMReceiver",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "receivingAssetId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaRelay",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_relayData",
        type: "tuple",
        internalType: "struct RelayFacet.RelayData",
        components: [
          {
            name: "requestId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "nonEVMReceiver",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "receivingAssetId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "BridgeToNonEVMChain",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "receiver",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidQuote",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NativeAssetTransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NoTransferToNullAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAnERC20Token",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
  {
    type: "error",
    name: "SliceOutOfBounds",
    inputs: [],
  },
  {
    type: "error",
    name: "SliceOverflow",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200315638038062003156833981016040819052620000349162000069565b6001600160a01b039182166080521660a052620000a1565b80516001600160a01b03811681146200006457600080fd5b919050565b600080604083850312156200007d57600080fd5b62000088836200004c565b915062000098602084016200004c565b90509250929050565b60805160a051613075620000e1600039600081816099015281816103f7015281816107a30152610d6d01526000818160f70152610c6501526130756000f3fe60806040526004361061005a5760003560e01c8063cde1770511610043578063cde1770514610087578063d4e0811c146100e5578063f21a21161461011957600080fd5b806325d374e81461005f578063ae32859014610074575b600080fd5b61007261006d366004612a8d565b610159565b005b610072610082366004612b4c565b610631565b34801561009357600080fd5b506100bb7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100f157600080fd5b506100bb7f000000000000000000000000000000000000000000000000000000000000000081565b34801561012557600080fd5b50610149610134366004612bb9565b60006020819052908152604090205460ff1681565b60405190151581526020016100dc565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016101d4576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815581356000908152602081905260409020548590839060ff1615610227576040517ff861803000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a082015173ffffffffffffffffffffffffffffffffffffffff167311f111f111f111f111f111f111f111f111f111f114801561026657506020810135155b1561029d576040517ff861803000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006103a4823546305b608087015173ffffffffffffffffffffffffffffffffffffffff166102cf8860e001516109f2565b60a089015173ffffffffffffffffffffffffffffffffffffffff167311f111f111f111f111f111f111f111f111f111f1146103245760a089015173ffffffffffffffffffffffffffffffffffffffff1661032a565b87602001355b604080516020810197909752868101959095526060860193909352608085019190915260a084015260c083015284013560e082015261010001604051602081830303815290604052805190602001206020527b19457468657265756d205369676e6564204d6573736167653a0a3332600052603c60042090565b905060006103f3826103b96060860186612bd2565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a2892505050565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461047a576040517ff861803000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360006104873447612c6d565b90508a8061010001516104c6576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b80610120015115610504576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c6105278160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561055e576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361059c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036105d9576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105ee8e600001518f60c001518f8f33610ad2565b60c08f01526105fd8e8c610c1a565b50479150508181111561061f5761061f60008461061a8585612c6d565b610ff9565b50506000909555505050505050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016106ac576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181556106b983612c80565b8235600090815260208190526040902054839060ff1615610706576040517ff861803000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a082015173ffffffffffffffffffffffffffffffffffffffff167311f111f111f111f111f111f111f111f111f111f114801561074557506020810135155b1561077c576040517ff861803000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061078a823546306102a7565b9050600061079f826103b96060860186612bd2565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610826576040517ff861803000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360006108333447612c6d565b905061083e89612c80565b60a081015173ffffffffffffffffffffffffffffffffffffffff1661088f576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036108cd576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361090a576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109138a612c80565b80610100015115610950576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109598b612c80565b80610120015115610996576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109b36109a960a08e0160808f01612c8c565b8d60c0013561102f565b6109c56109bf8d612c80565b8c610c1a565b5047915050818111156109e2576109e260008461061a8585612c6d565b5050600090955550505050505050565b6000816512309ce5400103610a0b5750627dee6e919050565b81660416edef1601be03610a245750632f3fb341919050565b5090565b6040516001908360005260208301516040526040835103610a7d57604083015160ff81901c601b016020527f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16606052610aa3565b6041835103610a9e57606083015160001a6020526040830151606052610aa3565b600091505b6020600160806000855afa5191503d610ac457638baa579f6000526004601cfd5b600060605260405292915050565b600082808203610b0e576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610b1d600185612c6d565b818110610b2c57610b2c612ca7565b9050602002810190610b3e9190612cd6565b610b4f906080810190606001612c8c565b90506000610b5c826111a5565b905073ffffffffffffffffffffffffffffffffffffffff8216610b8657610b833482612c6d565b90505b6000610b92888861125e565b9050610b9e888861136a565b610bab8a898989856113d7565b600082610bb7856111a5565b610bc19190612c6d565b905089811015610c0c576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b608082015173ffffffffffffffffffffffffffffffffffffffff16610d4e5760c08201516040805183356020820152600092839273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610cbf91612d38565b60006040518083038185875af1925050503d8060008114610cfc576040519150601f19603f3d011682016040523d82523d6000602084013e610d01565b606091505b509150915081610d4757610d1481611789565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c039190612d94565b5050610efc565b60c082015160405173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001660248201526044810191909152600090606401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529051610e2a918535910190815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610e669291602001612da7565b6040516020818303038152906040529050600080846080015173ffffffffffffffffffffffffffffffffffffffff1683604051610ea39190612d38565b6000604051808303816000865af19150503d8060008114610ee0576040519150601f19603f3d011682016040523d82523d6000602084013e610ee5565b606091505b509150915081610ef857610d1481611789565b5050505b80356000908152602081905260409020805460017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090911617905560a082015173ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffee0eee0eee0eee0eee0eee0eee0eee0eee0eee0f01610fbe57610f858260e001516109f2565b825160405160208481013582527f7be3e48a8a8b4d32138937e1809ac83481fffe48e49bb60e43ed1d3d50349e4c910160405180910390a35b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f182604051610fed9190612dd6565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff83161561102557611020838383611807565b505050565b6110208282611989565b80600003611069576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166110c257803410156110be576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa15801561112f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111539190612ee9565b905081811015611199576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610c03565b61102083333085611ab3565b600073ffffffffffffffffffffffffffffffffffffffff821615611256576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa15801561122d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112519190612ee9565b611258565b475b92915050565b60608160008167ffffffffffffffff81111561127c5761127c612807565b6040519080825280602002602001820160405280156112a5578160200160208202803683370190505b5090506000805b8381101561135f578686828181106112c6576112c6612ca7565b90506020028101906112d89190612cd6565b6112e9906080810190606001612c8c565b91506112f4826111a5565b83828151811061130657611306612ca7565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216611357573483828151811061133f5761133f612ca7565b602002602001018181516113539190612c6d565b9052505b6001016112ac565b509095945050505050565b60005b81811015611020573683838381811061138857611388612ca7565b905060200281019061139a9190612cd6565b90506113ac60e0820160c08301612f02565b156113ce576113ce6113c46060830160408401612c8c565b826080013561102f565b5060010161136d565b8383838382600181146116a457600085856113f3600185612c6d565b81811061140257611402612ca7565b90506020028101906114149190612cd6565b611425906080810190606001612c8c565b9050600089815b818110156115d057368d8d8381811061144757611447612ca7565b90506020028101906114599190612cd6565b905061148861146e6060830160408401612c8c565b73ffffffffffffffffffffffffffffffffffffffff161590565b806114eb57506114eb6114a16040830160208401612c8c565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561150257506115026114a16020830183612c8c565b8015611587575061158761151960a0830183612bd2565b61152891600491600091612f1f565b61153191612f49565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6115bd576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115c78f82611ccd565b5060010161142c565b505060005b6115e0600185612c6d565b81101561169c5760008888838181106115fb576115fb612ca7565b905060200281019061160d9190612cd6565b61161e906080810190606001612c8c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146116935785828151811061166557611665612ca7565b6020026020010151611676826111a5565b6116809190612c6d565b9250821561169357611693818885610ff9565b506001016115d5565b50505061177d565b8760005b8181101561177a57368b8b838181106116c3576116c3612ca7565b90506020028101906116d59190612cd6565b90506116ea61146e6060830160408401612c8c565b8061170357506117036114a16040830160208401612c8c565b801561171a575061171a6114a16020830183612c8c565b8015611731575061173161151960a0830183612bd2565b611767576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117718d82611ccd565b506001016116a8565b50505b50505050505050505050565b60606044825110156117ce57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b60006117ea60048085516117e29190612c6d565b859190611fab565b9050808060200190518101906118009190612f91565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8316611854576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166118a1576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa15801561190e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119329190612ee9565b905080821115611978576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610c03565b6119838484846120c5565b50505050565b73ffffffffffffffffffffffffffffffffffffffff82166119d6576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611a19576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610c03565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611a73576040519150601f19603f3d011682016040523d82523d6000602084013e611a78565b606091505b5050905080611020576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416611b00576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611b4d576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015611bbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be29190612ee9565b9050611bf082868686612199565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611c60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c849190612ee9565b611c8e9190612c6d565b14611cc5576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b611ce3611cdd6020830183612c8c565b3b151590565b611d19576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611d59576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611d6e61146e6060850160408601612c8c565b611d79576000611d7f565b82608001355b90506000611d9b611d966060860160408701612c8c565b6111a5565b90506000611db2611d966080870160608801612c8c565b905082600003611de957611de9611dcf6060870160408801612c8c565b611ddf6040880160208901612c8c565b87608001356121f7565b8460800135821015611e34576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610c03565b600080611e446020880188612c8c565b73ffffffffffffffffffffffffffffffffffffffff1685611e6860a08a018a612bd2565b604051611e76929190612fff565b60006040518083038185875af1925050503d8060008114611eb3576040519150601f19603f3d011682016040523d82523d6000602084013e611eb8565b606091505b509150915081611ecb57611ecb8161232e565b6000611ee0611d9660808a0160608b01612c8c565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611f1160208b018b612c8c565b611f2160608c0160408d01612c8c565b611f3160808d0160608e01612c8c565b8c60800135898711611f435786611f4d565b611f4d8a88612c6d565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b606081611fb981601f61300f565b1015611ff1576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611ffb828461300f565b84511015612035576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608215801561205457604051915060008252602082016040526120bc565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561208d578051835260209283019201612075565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526110209084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612338565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526119839085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401612117565b73ffffffffffffffffffffffffffffffffffffffff831661221757505050565b73ffffffffffffffffffffffffffffffffffffffff8216612264576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa1580156122d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122fd9190612ee9565b10156110205761102083837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612447565b8051602082018181fd5b600061239a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166125379092919063ffffffff16565b90508051600014806123bb5750808060200190518101906123bb9190613022565b611020576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610c03565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790526124d3848261254e565b6119835760405173ffffffffffffffffffffffffffffffffffffffff841660248201526000604482015261252d9085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401612117565b6119838482612338565b6060612546848460008561260f565b949350505050565b60008060008473ffffffffffffffffffffffffffffffffffffffff16846040516125789190612d38565b6000604051808303816000865af19150503d80600081146125b5576040519150601f19603f3d011682016040523d82523d6000602084013e6125ba565b606091505b50915091508180156125e45750805115806125e45750808060200190518101906125e49190613022565b8015612606575073ffffffffffffffffffffffffffffffffffffffff85163b15155b95945050505050565b6060824710156126a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610c03565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516126ca9190612d38565b60006040518083038185875af1925050503d8060008114612707576040519150601f19603f3d011682016040523d82523d6000602084013e61270c565b606091505b509150915061271d87838387612728565b979650505050505050565b606083156127be5782516000036127b75773ffffffffffffffffffffffffffffffffffffffff85163b6127b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c03565b5081612546565b61254683838151156127d35781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c039190612d94565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561285a5761285a612807565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156128a7576128a7612807565b604052919050565b600067ffffffffffffffff8211156128c9576128c9612807565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261290657600080fd5b8135612919612914826128af565b612860565b81815284602083860101111561292e57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461296f57600080fd5b919050565b801515811461298257600080fd5b50565b803561296f81612974565b600061014082840312156129a357600080fd5b6129ab612836565b905081358152602082013567ffffffffffffffff808211156129cc57600080fd5b6129d8858386016128f5565b602084015260408401359150808211156129f157600080fd5b506129fe848285016128f5565b604083015250612a106060830161294b565b6060820152612a216080830161294b565b6080820152612a3260a0830161294b565b60a082015260c082013560c082015260e082013560e0820152610100612a59818401612985565b90820152610120612a6b838201612985565b9082015292915050565b600060808284031215612a8757600080fd5b50919050565b60008060008060608587031215612aa357600080fd5b843567ffffffffffffffff80821115612abb57600080fd5b612ac788838901612990565b95506020870135915080821115612add57600080fd5b818701915087601f830112612af157600080fd5b813581811115612b0057600080fd5b8860208260051b8501011115612b1557600080fd5b602083019550809450506040870135915080821115612b3357600080fd5b50612b4087828801612a75565b91505092959194509250565b60008060408385031215612b5f57600080fd5b823567ffffffffffffffff80821115612b7757600080fd5b908401906101408287031215612b8c57600080fd5b90925060208401359080821115612ba257600080fd5b50612baf85828601612a75565b9150509250929050565b600060208284031215612bcb57600080fd5b5035919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612c0757600080fd5b83018035915067ffffffffffffffff821115612c2257600080fd5b602001915036819003821315612c3757600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561125857611258612c3e565b60006112583683612990565b600060208284031215612c9e57600080fd5b6118008261294b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612d0a57600080fd5b9190910192915050565b60005b83811015612d2f578181015183820152602001612d17565b50506000910152565b60008251612d0a818460208701612d14565b60008151808452612d62816020860160208601612d14565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006118006020830184612d4a565b60008351612db9818460208801612d14565b835190830190612dcd818360208801612d14565b01949350505050565b602081528151602082015260006020830151610140806040850152612dff610160850183612d4a565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152612e3a8382612d4a565b9250506060850151612e64608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120612ed78187018315159052565b90950151151593019290925250919050565b600060208284031215612efb57600080fd5b5051919050565b600060208284031215612f1457600080fd5b813561180081612974565b60008085851115612f2f57600080fd5b83861115612f3c57600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612f895780818660040360031b1b83161692505b505092915050565b600060208284031215612fa357600080fd5b815167ffffffffffffffff811115612fba57600080fd5b8201601f81018413612fcb57600080fd5b8051612fd9612914826128af565b818152856020838501011115612fee57600080fd5b612606826020830160208601612d14565b8183823760009101908152919050565b8082018082111561125857611258612c3e565b60006020828403121561303457600080fd5b81516118008161297456fea2646970667358221220becb8ee15508062adc11a8e73eb98860e5f6f12366c36002f43b7f417db556a764736f6c63430008110033";

type RelayFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayFacet__factory extends ContractFactory {
  constructor(...args: RelayFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _relayReceiver: PromiseOrValue<string>,
    _relaySolver: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayFacet> {
    return super.deploy(
      _relayReceiver,
      _relaySolver,
      overrides || {}
    ) as Promise<RelayFacet>;
  }
  override getDeployTransaction(
    _relayReceiver: PromiseOrValue<string>,
    _relaySolver: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _relayReceiver,
      _relaySolver,
      overrides || {}
    );
  }
  override attach(address: string): RelayFacet {
    return super.attach(address) as RelayFacet;
  }
  override connect(signer: Signer): RelayFacet__factory {
    return super.connect(signer) as RelayFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayFacetInterface {
    return new utils.Interface(_abi) as RelayFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayFacet {
    return new Contract(address, _abi, signerOrProvider) as RelayFacet;
  }
}
