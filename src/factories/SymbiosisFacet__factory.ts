/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  SymbiosisFacet,
  SymbiosisFacetInterface,
} from "../SymbiosisFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_symbiosisMetaRouter",
        type: "address",
        internalType: "contract ISymbiosisMetaRouter",
      },
      {
        name: "_symbiosisGateway",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaSymbiosis",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_symbiosisData",
        type: "tuple",
        internalType: "struct SymbiosisFacet.SymbiosisData",
        components: [
          {
            name: "firstSwapCalldata",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "secondSwapCalldata",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "intermediateToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "firstDexRouter",
            type: "address",
            internalType: "address",
          },
          {
            name: "secondDexRouter",
            type: "address",
            internalType: "address",
          },
          {
            name: "approvedTokens",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaSymbiosis",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_symbiosisData",
        type: "tuple",
        internalType: "struct SymbiosisFacet.SymbiosisData",
        components: [
          {
            name: "firstSwapCalldata",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "secondSwapCalldata",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "intermediateToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "firstDexRouter",
            type: "address",
            internalType: "address",
          },
          {
            name: "secondDexRouter",
            type: "address",
            internalType: "address",
          },
          {
            name: "approvedTokens",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001fa438038062001fa4833981016040819052620000349162000065565b6001600160a01b039182166080521660a052620000a4565b6001600160a01b03811681146200006257600080fd5b50565b600080604083850312156200007957600080fd5b825162000086816200004c565b602084015190925062000099816200004c565b809150509250929050565b60805160a051611eda620000ca60003960006105f7015260006106220152611eda6000f3fe6080604052600436106100295760003560e01c80636e0671611461002e578063b70fb9a514610043575b600080fd5b61004161003c366004611833565b610056565b005b6100416100513660046118f2565b610249565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e23447611956565b905086806101000151610121576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101448160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561017b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101b9576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101f6576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61020b89600001518a60c001518a8a3361046d565b60c08a015261021a89876105b4565b504790508181111561023b5761023b6000846102368585611956565b6108c1565b505060009091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102c4576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006102d53447611956565b9050846102fa8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610331576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361036f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036103ac576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156103ea576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610428576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043a88608001518960c001516108f6565b61044488886105b4565b504791505081811115610461576104616000846102368585611956565b50506000909155505050565b6000828082036104a9576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856104b8600185611956565b8181106104c7576104c7611990565b90506020028101906104d991906119bf565b6104ea9060808101906060016119fd565b905060006104f7826109ab565b905073ffffffffffffffffffffffffffffffffffffffff82166105215761051e3482611956565b90505b600061052d88886109f6565b90506105398888610b02565b6105468a89898985610b6f565b600082610552856109ab565b61055c9190611956565b9050898110156105a6576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b60006105d8836080015173ffffffffffffffffffffffffffffffffffffffff161590565b9050600081156105ed575060c0830151610620565b61062084608001517f00000000000000000000000000000000000000000000000000000000000000008660c00151610f21565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a11b1198826040518061012001604052808780600001906106799190611a1f565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020908101906106c290890189611a1f565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060200161070960a0890189611a8b565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505050908252506020016107506080890160608a016119fd565b73ffffffffffffffffffffffffffffffffffffffff16815260200161077b60a0890160808a016119fd565b73ffffffffffffffffffffffffffffffffffffffff1681526020018860c00151815260200186151581526020018760c00160208101906107bb91906119fd565b73ffffffffffffffffffffffffffffffffffffffff1681526020016107e360e0890189611a1f565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152506040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526108529190600401611ba8565b6000604051808303818588803b15801561086b57600080fd5b505af115801561087f573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1846040516108b39190611cdb565b60405180910390a150505050565b73ffffffffffffffffffffffffffffffffffffffff83166108eb576108e68282610f4d565b505050565b6108e6838383610fba565b80600003610930576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166109895780341015610985576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61098573ffffffffffffffffffffffffffffffffffffffff8316333084611028565b600073ffffffffffffffffffffffffffffffffffffffff8216156109ee576109e973ffffffffffffffffffffffffffffffffffffffff831630611085565b6109f0565b475b92915050565b60608160008167ffffffffffffffff811115610a1457610a146115f8565b604051908082528060200260200182016040528015610a3d578160200160208202803683370190505b5090506000805b83811015610af757868682818110610a5e57610a5e611990565b9050602002810190610a7091906119bf565b610a819060808101906060016119fd565b9150610a8c826109ab565b838281518110610a9e57610a9e611990565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610aef5734838281518110610ad757610ad7611990565b60200260200101818151610aeb9190611956565b9052505b600101610a44565b509095945050505050565b60005b818110156108e65736838383818110610b2057610b20611990565b9050602002810190610b3291906119bf565b9050610b4460e0820160c08301611dee565b15610b6657610b66610b5c60608301604084016119fd565b82608001356108f6565b50600101610b05565b838383838260018114610e3c5760008585610b8b600185611956565b818110610b9a57610b9a611990565b9050602002810190610bac91906119bf565b610bbd9060808101906060016119fd565b9050600089815b81811015610d6857368d8d83818110610bdf57610bdf611990565b9050602002810190610bf191906119bf565b9050610c20610c0660608301604084016119fd565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610c835750610c83610c3960408301602084016119fd565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610c9a5750610c9a610c3960208301836119fd565b8015610d1f5750610d1f610cb160a0830183611a1f565b610cc091600491600091611e09565b610cc991611e33565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610d55576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d5f8f826110ba565b50600101610bc4565b505060005b610d78600185611956565b811015610e34576000888883818110610d9357610d93611990565b9050602002810190610da591906119bf565b610db69060808101906060016119fd565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e2b57858281518110610dfd57610dfd611990565b6020026020010151610e0e826109ab565b610e189190611956565b92508215610e2b57610e2b8188856108c1565b50600101610d6d565b505050610f15565b8760005b81811015610f1257368b8b83818110610e5b57610e5b611990565b9050602002810190610e6d91906119bf565b9050610e82610c0660608301604084016119fd565b80610e9b5750610e9b610c3960408301602084016119fd565b8015610eb25750610eb2610c3960208301836119fd565b8015610ec95750610ec9610cb160a0830183611a1f565b610eff576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f098d826110ba565b50600101610e40565b50505b50505050505050505050565b6108e68383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611334565b73ffffffffffffffffffffffffffffffffffffffff8216610f9a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61098573ffffffffffffffffffffffffffffffffffffffff831682611463565b73ffffffffffffffffffffffffffffffffffffffff8216611007576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108e673ffffffffffffffffffffffffffffffffffffffff8416838361147f565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d15600160005114171661107757637939f4246000526004601cfd5b600060605260405250505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b6110cf6110ca60208301836119fd565b6114ce565b611105576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611145576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061115a610c0660608501604086016119fd565b61116557600061116b565b82608001355b9050600061118761118260808601606087016119fd565b6109ab565b9050816000036111be576111be6111a460608601604087016119fd565b6111b460408701602088016119fd565b8660800135610f21565b6000806111ce60208701876119fd565b73ffffffffffffffffffffffffffffffffffffffff16846111f260a0890189611a1f565b604051611200929190611e7b565b60006040518083038185875af1925050503d806000811461123d576040519150601f19603f3d011682016040523d82523d6000602084013e611242565b606091505b5091509150816112555761125581611564565b600061126a6111826080890160608a016119fd565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861129b60208a018a6119fd565b6112ab60608b0160408c016119fd565b6112bb60808c0160608d016119fd565b8b608001358987116112cd57866112d7565b6112d78a88611956565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b73ffffffffffffffffffffffffffffffffffffffff84161561145d5773ffffffffffffffffffffffffffffffffffffffff831661139d576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611412573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114369190611e8b565b101561145d5761145d73ffffffffffffffffffffffffffffffffffffffff8516848361156e565b50505050565b60003860003884865af16109855763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d1560016000511417166114c4576390b8ec186000526004601cfd5b6000603452505050565b6040805160178082528183019092526000918291906020820181803683370190505090506017600060208301853c60208101517f10ff0000000000000000000000000000000000000000000000000000000000007fffffff000000000000000000000000000000000000000000000000000000000082160161155b57506023015160601c3b151592915050565b5050503b151590565b8051602082018181fd5b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d1560016000511417166114c45760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d1560016000511417166114c457633e3f8f736000526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561164b5761164b6115f8565b60405290565b600082601f83011261166257600080fd5b813567ffffffffffffffff8082111561167d5761167d6115f8565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156116c3576116c36115f8565b816040528381528660208588010111156116dc57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461172057600080fd5b919050565b8035801515811461172057600080fd5b6000610140828403121561174857600080fd5b611750611627565b905081358152602082013567ffffffffffffffff8082111561177157600080fd5b61177d85838601611651565b6020840152604084013591508082111561179657600080fd5b506117a384828501611651565b6040830152506117b5606083016116fc565b60608201526117c6608083016116fc565b60808201526117d760a083016116fc565b60a082015260c082013560c082015260e082013560e08201526101006117fe818401611725565b90820152610120611810838201611725565b9082015292915050565b6000610100828403121561182d57600080fd5b50919050565b6000806000806060858703121561184957600080fd5b843567ffffffffffffffff8082111561186157600080fd5b61186d88838901611735565b9550602087013591508082111561188357600080fd5b818701915087601f83011261189757600080fd5b8135818111156118a657600080fd5b8860208260051b85010111156118bb57600080fd5b6020830195508094505060408701359150808211156118d957600080fd5b506118e68782880161181a565b91505092959194509250565b6000806040838503121561190557600080fd5b823567ffffffffffffffff8082111561191d57600080fd5b61192986838701611735565b9350602085013591508082111561193f57600080fd5b5061194c8582860161181a565b9150509250929050565b818103818111156109f0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126119f357600080fd5b9190910192915050565b600060208284031215611a0f57600080fd5b611a18826116fc565b9392505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611a5457600080fd5b83018035915067ffffffffffffffff821115611a6f57600080fd5b602001915036819003821315611a8457600080fd5b9250929050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611ac057600080fd5b83018035915067ffffffffffffffff821115611adb57600080fd5b6020019150600581901b3603821315611a8457600080fd5b6000815180845260005b81811015611b1957602081850181015186830182015201611afd565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b83811015611b9d57815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611b6b565b509495945050505050565b6020815260008251610120806020850152611bc7610140850183611af3565b915060208501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe080868503016040870152611c038483611af3565b93506040870151915080868503016060870152611c208483611b57565b935060608701519150611c4b608087018373ffffffffffffffffffffffffffffffffffffffff169052565b608087015173ffffffffffffffffffffffffffffffffffffffff811660a0880152915060a087015160c087015260c08701519150611c8d60e087018315159052565b60e08701519150610100611cb88188018473ffffffffffffffffffffffffffffffffffffffff169052565b870151868503909101838701529050611cd18382611af3565b9695505050505050565b602081528151602082015260006020830151610140806040850152611d04610160850183611af3565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152611d3f8382611af3565b9250506060850151611d69608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120611ddc8187018315159052565b90950151151593019290925250919050565b600060208284031215611e0057600080fd5b611a1882611725565b60008085851115611e1957600080fd5b83861115611e2657600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015611e735780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b600060208284031215611e9d57600080fd5b505191905056fea2646970667358221220078b0ffdff1a82ba41f9c955d0e930946b82258e9a52982e04af69eaa7db7fd964736f6c63430008110033";

type SymbiosisFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SymbiosisFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SymbiosisFacet__factory extends ContractFactory {
  constructor(...args: SymbiosisFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _symbiosisMetaRouter: PromiseOrValue<string>,
    _symbiosisGateway: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SymbiosisFacet> {
    return super.deploy(
      _symbiosisMetaRouter,
      _symbiosisGateway,
      overrides || {}
    ) as Promise<SymbiosisFacet>;
  }
  override getDeployTransaction(
    _symbiosisMetaRouter: PromiseOrValue<string>,
    _symbiosisGateway: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _symbiosisMetaRouter,
      _symbiosisGateway,
      overrides || {}
    );
  }
  override attach(address: string): SymbiosisFacet {
    return super.attach(address) as SymbiosisFacet;
  }
  override connect(signer: Signer): SymbiosisFacet__factory {
    return super.connect(signer) as SymbiosisFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SymbiosisFacetInterface {
    return new utils.Interface(_abi) as SymbiosisFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SymbiosisFacet {
    return new Contract(address, _abi, signerOrProvider) as SymbiosisFacet;
  }
}
