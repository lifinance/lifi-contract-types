/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  SymbiosisFacet,
  SymbiosisFacetInterface,
} from "../SymbiosisFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_symbiosisMetaRouter",
        type: "address",
        internalType: "contract ISymbiosisMetaRouter",
      },
      {
        name: "_symbiosisGateway",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaSymbiosis",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_symbiosisData",
        type: "tuple",
        internalType: "struct SymbiosisFacet.SymbiosisData",
        components: [
          {
            name: "firstSwapCalldata",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "secondSwapCalldata",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "intermediateToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "firstDexRouter",
            type: "address",
            internalType: "address",
          },
          {
            name: "secondDexRouter",
            type: "address",
            internalType: "address",
          },
          {
            name: "approvedTokens",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaSymbiosis",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_symbiosisData",
        type: "tuple",
        internalType: "struct SymbiosisFacet.SymbiosisData",
        components: [
          {
            name: "firstSwapCalldata",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "secondSwapCalldata",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "intermediateToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "firstDexRouter",
            type: "address",
            internalType: "address",
          },
          {
            name: "secondDexRouter",
            type: "address",
            internalType: "address",
          },
          {
            name: "approvedTokens",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c0604052348015600e575f5ffd5b50604051611f90380380611f90833981016040819052602b916057565b6001600160a01b039182166080521660a052608a565b6001600160a01b03811681146054575f5ffd5b50565b5f5f604083850312156067575f5ffd5b82516070816041565b6020840151909250607f816041565b809150509250929050565b60805160a051611ee56100ab5f395f6105e501525f6106100152611ee55ff3fe608060405260043610610028575f3560e01c80636e0671611461002c578063b70fb9a514610041575b5f5ffd5b61003f61003a366004611816565b610054565b005b61003f61004f3660046118dc565b610242565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100cf576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6100df3447611941565b90508680610100015161011e576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101418160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610178576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036101b5576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101f2576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610206895f01518a60c001518a8a33610462565b60c08a015261021589876105a4565b5047905081811115610235576102355f846102308585611941565b6108a6565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102bd576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6102cd3447611941565b9050846102f28160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610329576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610366576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036103a3576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156103e1576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868061012001511561041f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043188608001518960c001516108db565b61043b88886105a4565b504791505081811115610457576104575f846102308585611941565b50505f909155505050565b5f8280820361049d576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f85856104ab600185611941565b8181106104ba576104ba611979565b90506020028101906104cc91906119a6565b6104dd9060808101906060016119e2565b90505f6104e98261098f565b905073ffffffffffffffffffffffffffffffffffffffff8216610513576105103482611941565b90505b5f61051e88886109d9565b905061052a8888610ae3565b6105378a89898985610b4f565b5f826105428561098f565b61054c9190611941565b905089811015610596576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b90526024810182905260440160405180910390fd5b9a9950505050505050505050565b5f6105c7836080015173ffffffffffffffffffffffffffffffffffffffff161590565b90505f81156105db575060c083015161060e565b61060e84608001517f00000000000000000000000000000000000000000000000000000000000000008660c00151610d11565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a11b11988260405180610120016040528087805f01906106669190611a02565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505050908252506020908101906106ae90890189611a02565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505050908252506020016106f460a0890189611a6a565b808060200260200160405190810160405280939291908181526020018383602002808284375f9201919091525050509082525060200161073a6080890160608a016119e2565b73ffffffffffffffffffffffffffffffffffffffff16815260200161076560a0890160808a016119e2565b73ffffffffffffffffffffffffffffffffffffffff1681526020018860c00151815260200186151581526020018760c00160208101906107a591906119e2565b73ffffffffffffffffffffffffffffffffffffffff1681526020016107cd60e0890189611a02565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050509152506040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815261083b9190600401611b6a565b5f604051808303818588803b158015610852575f5ffd5b505af1158015610864573d5f5f3e3d5ffd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1846040516108989190611cd0565b60405180910390a150505050565b73ffffffffffffffffffffffffffffffffffffffff83166108d0576108cb8282610d3d565b505050565b6108cb838383610daa565b805f03610914576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661096d5780341015610969576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61096973ffffffffffffffffffffffffffffffffffffffff8316333084610e18565b5f73ffffffffffffffffffffffffffffffffffffffff8216156109d1576109cc73ffffffffffffffffffffffffffffffffffffffff831630610e70565b6109d3565b475b92915050565b6060815f8167ffffffffffffffff8111156109f6576109f66115e0565b604051908082528060200260200182016040528015610a1f578160200160208202803683370190505b5090505f805b83811015610ad857868682818110610a3f57610a3f611979565b9050602002810190610a5191906119a6565b610a629060808101906060016119e2565b9150610a6d8261098f565b838281518110610a7f57610a7f611979565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610ad05734838281518110610ab857610ab8611979565b60200260200101818151610acc9190611941565b9052505b600101610a25565b509095945050505050565b5f5b818110156108cb5736838383818110610b0057610b00611979565b9050602002810190610b1291906119a6565b9050610b2460e0820160c08301611de3565b15610b4657610b46610b3c60608301604084016119e2565b82608001356108db565b50600101610ae5565b83838383825f5b81811015610cf757368a8a83818110610b7157610b71611979565b9050602002810190610b8391906119a6565b9050610bb2610b9860608301604084016119e2565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610c145750610c14610bcb60408301602084016119e2565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610c2b5750610c2b610bcb60208301836119e2565b8015610cae5750610cae610c4260a0830183611a02565b610c50916004915f91611dfc565b610c5991611e23565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610ce4576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cee8c82610ea3565b50600101610b56565b5050610d06848484845f611113565b505050505050505050565b6108cb8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611335565b73ffffffffffffffffffffffffffffffffffffffff8216610d8a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61096973ffffffffffffffffffffffffffffffffffffffff831682611462565b73ffffffffffffffffffffffffffffffffffffffff8216610df7576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108cb73ffffffffffffffffffffffffffffffffffffffff8416838361147b565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f51141716610e6357637939f4245f526004601cfd5b5f60605260405250505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b610eb8610eb360208301836119e2565b6114c4565b610eee576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003610f2d576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610f41610b9860608501604086016119e2565b610f4b575f610f51565b82608001355b90505f610f6c610f6760808601606087016119e2565b61098f565b9050815f03610fa257610fa2610f8860608601604087016119e2565b610f9860408701602088016119e2565b8660800135610d11565b5f80610fb160208701876119e2565b73ffffffffffffffffffffffffffffffffffffffff1684610fd560a0890189611a02565b604051610fe3929190611e89565b5f6040518083038185875af1925050503d805f811461101d576040519150601f19603f3d011682016040523d82523d5f602084013e611022565b606091505b5091509150816110355761103581611558565b5f611049610f676080890160608a016119e2565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388861107a60208a018a6119e2565b61108a60608b0160408c016119e2565b61109a60808c0160608d016119e2565b8b608001358987116110ac57866110b6565b6110b68a88611941565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a15050505050505050565b835f8682611122600182611941565b81811061113157611131611979565b905060200281019061114391906119a6565b6111549060808101906060016119e2565b905081600114611259575f805b61116c600185611941565b811015611256575f89898381811061118657611186611979565b905060200281019061119891906119a6565b6111a99060808101906060016119e2565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461124d578682815181106111f0576111f0611979565b60200260200101516112018261098f565b61120b9190611941565b92505f73ffffffffffffffffffffffffffffffffffffffff821615611230575f611232565b865b90508084111561124b5761124b828a6102308488611941565b505b50600101611161565b50505b5f5b8281101561132b575f88888381811061127657611276611979565b905060200281019061128891906119a6565b6112999060608101906040016119e2565b90505f6112a58261098f565b90505f73ffffffffffffffffffffffffffffffffffffffff8316156112ca575f6112cc565b865b9050808211801561130957508473ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b1561131d5761131d838a6102308486611941565b83600101935050505061125b565b5050505050505050565b73ffffffffffffffffffffffffffffffffffffffff84161561145c5773ffffffffffffffffffffffffffffffffffffffff831661139e576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611411573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114359190611e98565b101561145c5761145c73ffffffffffffffffffffffffffffffffffffffff85168483611562565b50505050565b5f385f3884865af16109695763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166114bb576390b8ec185f526004601cfd5b5f603452505050565b6040805160178082528183019092525f9182919060208201818036833701905050905060175f60208301853c60208101517f10ff0000000000000000000000000000000000000000000000000000000000007fffffff000000000000000000000000000000000000000000000000000000000082160161154f57506023015160601c3b151592915050565b5050503b151590565b8051602082018181fd5b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f511417166114bb575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f511417166114bb57633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff81118282101715611631576116316115e0565b60405290565b5f82601f830112611646575f5ffd5b813567ffffffffffffffff811115611660576116606115e0565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff811182821017156116ad576116ad6115e0565b6040528181528382016020018510156116c4575f5ffd5b816020850160208301375f918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611703575f5ffd5b919050565b80358015158114611703575f5ffd5b5f6101408284031215611728575f5ffd5b61173061160d565b823581529050602082013567ffffffffffffffff81111561174f575f5ffd5b61175b84828501611637565b602083015250604082013567ffffffffffffffff81111561177a575f5ffd5b61178684828501611637565b604083015250611798606083016116e0565b60608201526117a9608083016116e0565b60808201526117ba60a083016116e0565b60a082015260c0828101359082015260e080830135908201526117e06101008301611708565b6101008201526117f36101208301611708565b61012082015292915050565b5f6101008284031215611810575f5ffd5b50919050565b5f5f5f5f60608587031215611829575f5ffd5b843567ffffffffffffffff81111561183f575f5ffd5b61184b87828801611717565b945050602085013567ffffffffffffffff811115611867575f5ffd5b8501601f81018713611877575f5ffd5b803567ffffffffffffffff81111561188d575f5ffd5b8760208260051b84010111156118a1575f5ffd5b60209190910193509150604085013567ffffffffffffffff8111156118c4575f5ffd5b6118d0878288016117ff565b91505092959194509250565b5f5f604083850312156118ed575f5ffd5b823567ffffffffffffffff811115611903575f5ffd5b61190f85828601611717565b925050602083013567ffffffffffffffff81111561192b575f5ffd5b611937858286016117ff565b9150509250929050565b818103818111156109d3577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126119d8575f5ffd5b9190910192915050565b5f602082840312156119f2575f5ffd5b6119fb826116e0565b9392505050565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611a35575f5ffd5b83018035915067ffffffffffffffff821115611a4f575f5ffd5b602001915036819003821315611a63575f5ffd5b9250929050565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611a9d575f5ffd5b83018035915067ffffffffffffffff821115611ab7575f5ffd5b6020019150600581901b3603821315611a63575f5ffd5b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b5f8151808452602084019350602083015f5b82811015611b6057815173ffffffffffffffffffffffffffffffffffffffff16865260209586019590910190600101611b2c565b5093949350505050565b602081525f82516101206020840152611b87610140840182611ace565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016040850152611bc28282611ace565b91505060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611bfe8282611b1a565b9150506060840151611c28608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015160c084015260c0840151611c6860e085018215159052565b5060e084015173ffffffffffffffffffffffffffffffffffffffff8116610100850152506101008401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084830301610120850152611cc78282611ace565b95945050505050565b60208152815160208201525f60208301516101406040840152611cf7610160840182611ace565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611d328282611ace565b9150506060840151611d5c608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e0840151610100840152610100840151611dcb61012085018215159052565b50610120840151801515610140850152509392505050565b5f60208284031215611df3575f5ffd5b6119fb82611708565b5f5f85851115611e0a575f5ffd5b83861115611e16575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015611e82577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b5f60208284031215611ea8575f5ffd5b505191905056fea264697066735822122018f431836549fff3ed738c86f223743368f84ba885bd6264383fd204be2c130864736f6c634300081d0033";

type SymbiosisFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SymbiosisFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SymbiosisFacet__factory extends ContractFactory {
  constructor(...args: SymbiosisFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _symbiosisMetaRouter: PromiseOrValue<string>,
    _symbiosisGateway: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SymbiosisFacet> {
    return super.deploy(
      _symbiosisMetaRouter,
      _symbiosisGateway,
      overrides || {}
    ) as Promise<SymbiosisFacet>;
  }
  override getDeployTransaction(
    _symbiosisMetaRouter: PromiseOrValue<string>,
    _symbiosisGateway: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _symbiosisMetaRouter,
      _symbiosisGateway,
      overrides || {}
    );
  }
  override attach(address: string): SymbiosisFacet {
    return super.attach(address) as SymbiosisFacet;
  }
  override connect(signer: Signer): SymbiosisFacet__factory {
    return super.connect(signer) as SymbiosisFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SymbiosisFacetInterface {
    return new utils.Interface(_abi) as SymbiosisFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SymbiosisFacet {
    return new Contract(address, _abi, signerOrProvider) as SymbiosisFacet;
  }
}
