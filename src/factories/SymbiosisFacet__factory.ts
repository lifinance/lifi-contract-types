/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  SymbiosisFacet,
  SymbiosisFacetInterface,
} from "../SymbiosisFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_symbiosisMetaRouter",
        type: "address",
        internalType: "contract ISymbiosisMetaRouter",
      },
      {
        name: "_symbiosisGateway",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaSymbiosis",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_symbiosisData",
        type: "tuple",
        internalType: "struct SymbiosisFacet.SymbiosisData",
        components: [
          {
            name: "firstSwapCalldata",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "secondSwapCalldata",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "intermediateToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "firstDexRouter",
            type: "address",
            internalType: "address",
          },
          {
            name: "secondDexRouter",
            type: "address",
            internalType: "address",
          },
          {
            name: "approvedTokens",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaSymbiosis",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_symbiosisData",
        type: "tuple",
        internalType: "struct SymbiosisFacet.SymbiosisData",
        components: [
          {
            name: "firstSwapCalldata",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "secondSwapCalldata",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "intermediateToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "firstDexRouter",
            type: "address",
            internalType: "address",
          },
          {
            name: "secondDexRouter",
            type: "address",
            internalType: "address",
          },
          {
            name: "approvedTokens",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c0604052348015600e575f5ffd5b50604051612034380380612034833981016040819052602b916057565b6001600160a01b039182166080521660a052608a565b6001600160a01b03811681146054575f5ffd5b50565b5f5f604083850312156067575f5ffd5b82516070816041565b6020840151909250607f816041565b809150509250929050565b60805160a051611f896100ab5f395f6105e601525f6106110152611f895ff3fe608060405260043610610028575f3560e01c80636e0671611461002c578063b70fb9a514610041575b5f5ffd5b61003f61003a36600461184e565b610054565b005b61003f61004f366004611914565b610242565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100cf576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6100df3447611979565b90508680610100015161011e576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101418160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610178576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f036101b5576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101f2576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610206895f01518a60c001518a8a33610462565b60c08a015261021589876105a5565b5047905081811115610235576102355f846102308585611979565b6108a7565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102bd576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6102cd3447611979565b9050846102f28160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610329576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610366576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036103a3576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156103e1576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868061012001511561041f576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043188608001518960c001516108dc565b61043b88886105a5565b504791505081811115610457576104575f846102308585611979565b50505f909155505050565b5f8280820361049d576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f85856104ab600185611979565b8181106104ba576104ba6119b1565b90506020028101906104cc91906119de565b6104dd906080810190606001611a1a565b90505f6104e982610990565b905073ffffffffffffffffffffffffffffffffffffffff8216610513576105103482611979565b90505b5f61051e88886109da565b905061052a8888610ae4565b6105378a89898985610b50565b5f8261054285610990565b61054c9190611979565b905089811015610597576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b5f6105c8836080015173ffffffffffffffffffffffffffffffffffffffff161590565b90505f81156105dc575060c083015161060f565b61060f84608001517f00000000000000000000000000000000000000000000000000000000000000008660c00151610efb565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a11b11988260405180610120016040528087805f01906106679190611a3a565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505050908252506020908101906106af90890189611a3a565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505050908252506020016106f560a0890189611aa2565b808060200260200160405190810160405280939291908181526020018383602002808284375f9201919091525050509082525060200161073b6080890160608a01611a1a565b73ffffffffffffffffffffffffffffffffffffffff16815260200161076660a0890160808a01611a1a565b73ffffffffffffffffffffffffffffffffffffffff1681526020018860c00151815260200186151581526020018760c00160208101906107a69190611a1a565b73ffffffffffffffffffffffffffffffffffffffff1681526020016107ce60e0890189611a3a565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050509152506040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815261083c9190600401611ba2565b5f604051808303818588803b158015610853575f5ffd5b505af1158015610865573d5f5f3e3d5ffd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1846040516108999190611d08565b60405180910390a150505050565b73ffffffffffffffffffffffffffffffffffffffff83166108d1576108cc8282610f27565b505050565b6108cc838383610f94565b805f03610915576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661096e578034101561096a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61096a73ffffffffffffffffffffffffffffffffffffffff8316333084611002565b5f73ffffffffffffffffffffffffffffffffffffffff8216156109d2576109cd73ffffffffffffffffffffffffffffffffffffffff83163061105a565b6109d4565b475b92915050565b6060815f8167ffffffffffffffff8111156109f7576109f7611618565b604051908082528060200260200182016040528015610a20578160200160208202803683370190505b5090505f805b83811015610ad957868682818110610a4057610a406119b1565b9050602002810190610a5291906119de565b610a63906080810190606001611a1a565b9150610a6e82610990565b838281518110610a8057610a806119b1565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610ad15734838281518110610ab957610ab96119b1565b60200260200101818151610acd9190611979565b9052505b600101610a26565b509095945050505050565b5f5b818110156108cc5736838383818110610b0157610b016119b1565b9050602002810190610b1391906119de565b9050610b2560e0820160c08301611e1b565b15610b4757610b47610b3d6060830160408401611a1a565b82608001356108dc565b50600101610ae6565b838383838260018114610e17575f8585610b6b600185611979565b818110610b7a57610b7a6119b1565b9050602002810190610b8c91906119de565b610b9d906080810190606001611a1a565b90505f89815b81811015610d4457368d8d83818110610bbe57610bbe6119b1565b9050602002810190610bd091906119de565b9050610bff610be56060830160408401611a1a565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610c615750610c61610c186040830160208401611a1a565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610c785750610c78610c186020830183611a1a565b8015610cfb5750610cfb610c8f60a0830183611a3a565b610c9d916004915f91611e34565b610ca691611e5b565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610d31576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d3b8f8261108d565b50600101610ba3565b505f90505b610d54600185611979565b811015610e0f575f888883818110610d6e57610d6e6119b1565b9050602002810190610d8091906119de565b610d91906080810190606001611a1a565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e0657858281518110610dd857610dd86119b1565b6020026020010151610de982610990565b610df39190611979565b92508215610e0657610e068188856108a7565b50600101610d49565b505050610eef565b875f5b81811015610eec57368b8b83818110610e3557610e356119b1565b9050602002810190610e4791906119de565b9050610e5c610be56060830160408401611a1a565b80610e755750610e75610c186040830160208401611a1a565b8015610e8c5750610e8c610c186020830183611a1a565b8015610ea35750610ea3610c8f60a0830183611a3a565b610ed9576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ee38d8261108d565b50600101610e1a565b50505b50505050505050505050565b6108cc8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61135f565b73ffffffffffffffffffffffffffffffffffffffff8216610f74576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61096a73ffffffffffffffffffffffffffffffffffffffff83168261148c565b73ffffffffffffffffffffffffffffffffffffffff8216610fe1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108cc73ffffffffffffffffffffffffffffffffffffffff841683836114a5565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f5114171661104d57637939f4245f526004601cfd5b5f60605260405250505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b6110a261109d6020830183611a1a565b6114ee565b6110d8576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003611117576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61112b610be56060850160408601611a1a565b611135575f61113b565b82608001355b90505f6111566111516060860160408701611a1a565b610990565b90505f61116c6111516080870160608801611a1a565b9050825f036111a2576111a26111886060870160408801611a1a565b6111986040880160208901611a1a565b8760800135610efb565b84608001358210156111ed576040517fcf479181000000000000000000000000000000000000000000000000000000008152608086013560048201526024810183905260440161058e565b5f806111fc6020880188611a1a565b73ffffffffffffffffffffffffffffffffffffffff168561122060a08a018a611a3a565b60405161122e929190611ec1565b5f6040518083038185875af1925050503d805f8114611268576040519150601f19603f3d011682016040523d82523d5f602084013e61126d565b606091505b5091509150816112805761128081611590565b5f61129461115160808a0160608b01611a1a565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896112c560208b018b611a1a565b6112d560608c0160408d01611a1a565b6112e560808d0160608e01611a1a565b8c608001358987116112f75786611301565b6113018a88611979565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156114865773ffffffffffffffffffffffffffffffffffffffff83166113c8576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa15801561143b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061145f9190611ed0565b10156114865761148673ffffffffffffffffffffffffffffffffffffffff8516848361159a565b50505050565b5f385f3884865af161096a5763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166114e5576390b8ec185f526004601cfd5b5f603452505050565b6040805160178082528183019092525f9182918291602082018180368337019050509050833b915060175f60208301863c5f61152982611ee7565b90507f10ff0000000000000000000000000000000000000000000000000000000000007fffffff000000000000000000000000000000000000000000000000000000000082160161158657506023015160601c3b15159392505050565b5050151592915050565b8051602082018181fd5b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f511417166114e5575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f511417166114e557633e3f8f735f526004601cfd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff8111828210171561166957611669611618565b60405290565b5f82601f83011261167e575f5ffd5b813567ffffffffffffffff81111561169857611698611618565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff811182821017156116e5576116e5611618565b6040528181528382016020018510156116fc575f5ffd5b816020850160208301375f918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461173b575f5ffd5b919050565b8035801515811461173b575f5ffd5b5f6101408284031215611760575f5ffd5b611768611645565b823581529050602082013567ffffffffffffffff811115611787575f5ffd5b6117938482850161166f565b602083015250604082013567ffffffffffffffff8111156117b2575f5ffd5b6117be8482850161166f565b6040830152506117d060608301611718565b60608201526117e160808301611718565b60808201526117f260a08301611718565b60a082015260c0828101359082015260e080830135908201526118186101008301611740565b61010082015261182b6101208301611740565b61012082015292915050565b5f6101008284031215611848575f5ffd5b50919050565b5f5f5f5f60608587031215611861575f5ffd5b843567ffffffffffffffff811115611877575f5ffd5b6118838782880161174f565b945050602085013567ffffffffffffffff81111561189f575f5ffd5b8501601f810187136118af575f5ffd5b803567ffffffffffffffff8111156118c5575f5ffd5b8760208260051b84010111156118d9575f5ffd5b60209190910193509150604085013567ffffffffffffffff8111156118fc575f5ffd5b61190887828801611837565b91505092959194509250565b5f5f60408385031215611925575f5ffd5b823567ffffffffffffffff81111561193b575f5ffd5b6119478582860161174f565b925050602083013567ffffffffffffffff811115611963575f5ffd5b61196f85828601611837565b9150509250929050565b818103818111156109d4577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611a10575f5ffd5b9190910192915050565b5f60208284031215611a2a575f5ffd5b611a3382611718565b9392505050565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611a6d575f5ffd5b83018035915067ffffffffffffffff821115611a87575f5ffd5b602001915036819003821315611a9b575f5ffd5b9250929050565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611ad5575f5ffd5b83018035915067ffffffffffffffff821115611aef575f5ffd5b6020019150600581901b3603821315611a9b575f5ffd5b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b5f8151808452602084019350602083015f5b82811015611b9857815173ffffffffffffffffffffffffffffffffffffffff16865260209586019590910190600101611b64565b5093949350505050565b602081525f82516101206020840152611bbf610140840182611b06565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016040850152611bfa8282611b06565b91505060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611c368282611b52565b9150506060840151611c60608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015160c084015260c0840151611ca060e085018215159052565b5060e084015173ffffffffffffffffffffffffffffffffffffffff8116610100850152506101008401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084830301610120850152611cff8282611b06565b95945050505050565b60208152815160208201525f60208301516101406040840152611d2f610160840182611b06565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611d6a8282611b06565b9150506060840151611d94608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e0840151610100840152610100840151611e0361012085018215159052565b50610120840151801515610140850152509392505050565b5f60208284031215611e2b575f5ffd5b611a3382611740565b5f5f85851115611e42575f5ffd5b83861115611e4e575f5ffd5b5050820193919092039150565b80357fffffffff000000000000000000000000000000000000000000000000000000008116906004841015611eba577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b5f60208284031215611ee0575f5ffd5b5051919050565b805160208201517fffffff0000000000000000000000000000000000000000000000000000000000811691906003821015611f4c577fffffff0000000000000000000000000000000000000000000000000000000000808360030360031b1b82161692505b505091905056fea2646970667358221220b87a67391c41249f5ae9ceeb7e59759bf34d143d4ce8896a693a9efba083421d64736f6c634300081d0033";

type SymbiosisFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SymbiosisFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SymbiosisFacet__factory extends ContractFactory {
  constructor(...args: SymbiosisFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _symbiosisMetaRouter: PromiseOrValue<string>,
    _symbiosisGateway: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SymbiosisFacet> {
    return super.deploy(
      _symbiosisMetaRouter,
      _symbiosisGateway,
      overrides || {}
    ) as Promise<SymbiosisFacet>;
  }
  override getDeployTransaction(
    _symbiosisMetaRouter: PromiseOrValue<string>,
    _symbiosisGateway: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _symbiosisMetaRouter,
      _symbiosisGateway,
      overrides || {}
    );
  }
  override attach(address: string): SymbiosisFacet {
    return super.attach(address) as SymbiosisFacet;
  }
  override connect(signer: Signer): SymbiosisFacet__factory {
    return super.connect(signer) as SymbiosisFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SymbiosisFacetInterface {
    return new utils.Interface(_abi) as SymbiosisFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SymbiosisFacet {
    return new Contract(address, _abi, signerOrProvider) as SymbiosisFacet;
  }
}
