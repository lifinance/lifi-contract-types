/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { AcrossFacetV3, AcrossFacetV3Interface } from "../AcrossFacetV3";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_spokePool",
        type: "address",
        internalType: "contract IAcrossSpokePool",
      },
      {
        name: "_wrappedNative",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "spokePool",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IAcrossSpokePool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAcrossV3",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_acrossData",
        type: "tuple",
        internalType: "struct AcrossFacetV3.AcrossV3Data",
        components: [
          {
            name: "receiverAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "refundAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outputAmountPercent",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaAcrossV3",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_acrossData",
        type: "tuple",
        internalType: "struct AcrossFacetV3.AcrossV3Data",
        components: [
          {
            name: "receiverAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "refundAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outputAmountPercent",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "wrappedNative",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NativeAssetTransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NoTransferToNullAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAnERC20Token",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c060405234801561000f575f5ffd5b50604051612a2b380380612a2b83398101604081905261002e9161005c565b6001600160a01b039182166080521660a052610094565b6001600160a01b0381168114610059575f5ffd5b50565b5f5f6040838503121561006d575f5ffd5b825161007881610045565b602084015190925061008981610045565b809150509250929050565b60805160a05161295c6100cf5f395f818160d7015261079301525f8181607b01528181610749015281816108450152610870015261295c5ff3fe60806040526004361061003e575f3560e01c806328832cbd1461004257806328cc431614610057578063afdac3d61461006a578063eb6d3a11146100c6575b5f5ffd5b6100556100503660046121fc565b6100f9565b005b6100556100653660046122c2565b610335565b348015610075575f5ffd5b5061009d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100d1575f5ffd5b5061009d7f000000000000000000000000000000000000000000000000000000000000000081565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610174576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6101843447612354565b9050868061010001516101c3576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101e68160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561021d576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f0361025a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610297576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102ab895f01518a60c001518a8a3361051e565b60c08a01525f6102ba87612391565b9050670de0b6b3a76400006102d560a0890160808a0161246b565b67ffffffffffffffff168b60c001516102ee919061248b565b6102f891906124a2565b60608201526103078a82610661565b504791505081811115610328576103285f846103238585612354565b610977565b50505f9091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016103b0576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155335f6103c03447612354565b9050846103e58160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561041c576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001515f03610459576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610496576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156104d4576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e687608001518860c001516109ad565b6104f8876104f388612391565b610661565b5047905081811115610513576105135f846103238585612354565b50505f909155505050565b5f82808203610559576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8585610567600185612354565b818110610576576105766124da565b90506020028101906105889190612507565b610599906080810190606001612543565b90505f6105a582610b1f565b905073ffffffffffffffffffffffffffffffffffffffff82166105cf576105cc3482612354565b90505b5f6105da8888610bd5565b90506105e68888610cdf565b6105f38a89898985610d4b565b5f826105fe85610b1f565b6106089190612354565b905089811015610653576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b81610120015115155f82610120015151111515146106ab576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8161012001511580156106f15750805f015173ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff1614155b15610728576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608082015173ffffffffffffffffffffffffffffffffffffffff1661083b577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637b9392328360c001518360200151845f01517f000000000000000000000000000000000000000000000000000000000000000086604001518860c0015188606001518a60e001518a60a001518b60c001518c60e001518d61010001518e61012001516040518e63ffffffff1660e01b81526004016108089c9b9a999897969594939291906125a8565b5f604051808303818588803b15801561081f575f5ffd5b505af1158015610831573d5f5f3e3d5ffd5b505050505061093c565b61086e82608001517f00000000000000000000000000000000000000000000000000000000000000008460c001516110f6565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637b9392328260200151835f0151856080015185604001518760c0015187606001518960e001518960a001518a60c001518b60e001518c61010001518d61012001516040518d63ffffffff1660e01b815260040161090e9c9b9a999897969594939291906125a8565b5f604051808303815f87803b158015610925575f5ffd5b505af1158015610937573d5f5f3e3d5ffd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161096b919061269a565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff8316156109a35761099e83838361122b565b505050565b61099e82826113aa565b805f036109e6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610a3f5780341015610a3b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201525f9073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610aa9573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610acd91906127ad565b905081811015610b13576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161064a565b61099e833330856114d0565b5f73ffffffffffffffffffffffffffffffffffffffff821615610bcd576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610ba4573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bc891906127ad565b610bcf565b475b92915050565b6060815f8167ffffffffffffffff811115610bf257610bf2611fb4565b604051908082528060200260200182016040528015610c1b578160200160208202803683370190505b5090505f805b83811015610cd457868682818110610c3b57610c3b6124da565b9050602002810190610c4d9190612507565b610c5e906080810190606001612543565b9150610c6982610b1f565b838281518110610c7b57610c7b6124da565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610ccc5734838281518110610cb457610cb46124da565b60200260200101818151610cc89190612354565b9052505b600101610c21565b509095945050505050565b5f5b8181101561099e5736838383818110610cfc57610cfc6124da565b9050602002810190610d0e9190612507565b9050610d2060e0820160c083016127c4565b15610d4257610d42610d386060830160408401612543565b82608001356109ad565b50600101610ce1565b838383838260018114611012575f8585610d66600185612354565b818110610d7557610d756124da565b9050602002810190610d879190612507565b610d98906080810190606001612543565b90505f89815b81811015610f3f57368d8d83818110610db957610db96124da565b9050602002810190610dcb9190612507565b9050610dfa610de06060830160408401612543565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610e5c5750610e5c610e136040830160208401612543565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610e735750610e73610e136020830183612543565b8015610ef65750610ef6610e8a60a08301836127df565b610e98916004915f91612847565b610ea19161286e565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610f2c576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f368f826116e5565b50600101610d9e565b505f90505b610f4f600185612354565b81101561100a575f888883818110610f6957610f696124da565b9050602002810190610f7b9190612507565b610f8c906080810190606001612543565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461100157858281518110610fd357610fd36124da565b6020026020010151610fe482610b1f565b610fee9190612354565b9250821561100157611001818885610977565b50600101610f44565b5050506110ea565b875f5b818110156110e757368b8b83818110611030576110306124da565b90506020028101906110429190612507565b9050611057610de06060830160408401612543565b806110705750611070610e136040830160208401612543565b80156110875750611087610e136020830183612543565b801561109e575061109e610e8a60a08301836127df565b6110d4576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110de8d826116e5565b50600101611015565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661111657505050565b73ffffffffffffffffffffffffffffffffffffffff8216611163576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa1580156111d6573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111fa91906127ad565b101561099e5761099e83837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6119b8565b73ffffffffffffffffffffffffffffffffffffffff8316611278576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166112c5576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201525f9073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa15801561132f573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061135391906127ad565b905080821115611399576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161064a565b6113a4848484611b25565b50505050565b73ffffffffffffffffffffffffffffffffffffffff82166113f7576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4781111561143a576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810182905247602482015260440161064a565b5f8273ffffffffffffffffffffffffffffffffffffffff16826040515f6040518083038185875af1925050503d805f8114611490576040519150601f19603f3d011682016040523d82523d5f602084013e611495565b606091505b505090508061099e576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841661151d576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661156a576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285915f918316906370a0823190602401602060405180830381865afa1580156115d8573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115fc91906127ad565b905061160a82868686611b7b565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611678573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061169c91906127ad565b6116a69190612354565b146116dd576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b6116fb6116f56020830183612543565b3b151590565b611731576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003611770576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f611784610de06060850160408601612543565b61178e575f611794565b82608001355b90505f6117af6117aa6060860160408701612543565b610b1f565b90505f6117c56117aa6080870160608801612543565b9050825f036117fb576117fb6117e16060870160408801612543565b6117f16040880160208901612543565b87608001356110f6565b8460800135821015611846576040517fcf479181000000000000000000000000000000000000000000000000000000008152608086013560048201526024810183905260440161064a565b5f806118556020880188612543565b73ffffffffffffffffffffffffffffffffffffffff168561187960a08a018a6127df565b6040516118879291906128d4565b5f6040518083038185875af1925050503d805f81146118c1576040519150601f19603f3d011682016040523d82523d5f602084013e6118c6565b606091505b5091509150816118d9576118d981611bd9565b5f6118ed6117aa60808a0160608b01612543565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961191e60208b018b612543565b61192e60608c0160408d01612543565b61193e60808d0160608e01612543565b8c60800135898711611950578661195a565b61195a8a88612354565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052611a448482611be3565b6113a45760405173ffffffffffffffffffffffffffffffffffffffff841660248201525f6044820152611b1b9085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611c9e565b6113a48482611c9e565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261099e9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611a99565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526113a49085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611a99565b8051602082018181fd5b5f5f5f8473ffffffffffffffffffffffffffffffffffffffff1684604051611c0b91906128e3565b5f604051808303815f865af19150503d805f8114611c44576040519150601f19603f3d011682016040523d82523d5f602084013e611c49565b606091505b5091509150818015611c73575080511580611c73575080806020019051810190611c7391906128f9565b8015611c95575073ffffffffffffffffffffffffffffffffffffffff85163b15155b95945050505050565b5f611cff826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611dab9092919063ffffffff16565b905080515f1480611d1f575080806020019051810190611d1f91906128f9565b61099e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161064a565b6060611db984845f85611dc1565b949350505050565b606082471015611e53576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161064a565b5f5f8673ffffffffffffffffffffffffffffffffffffffff168587604051611e7b91906128e3565b5f6040518083038185875af1925050503d805f8114611eb5576040519150601f19603f3d011682016040523d82523d5f602084013e611eba565b606091505b5091509150611ecb87838387611ed6565b979650505050505050565b60608315611f6b5782515f03611f645773ffffffffffffffffffffffffffffffffffffffff85163b611f64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161064a565b5081611db9565b611db98383815115611f805781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064a9190612914565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff8111828210171561200557612005611fb4565b60405290565b5f82601f83011261201a575f5ffd5b8135602083015f5f67ffffffffffffffff84111561203a5761203a611fb4565b506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85018116603f0116810181811067ffffffffffffffff8211171561208757612087611fb4565b60405283815290508082840187101561209e575f5ffd5b838360208301375f602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146120dd575f5ffd5b919050565b80151581146120ef575f5ffd5b50565b80356120dd816120e2565b5f610140828403121561210e575f5ffd5b612116611fe1565b823581529050602082013567ffffffffffffffff811115612135575f5ffd5b6121418482850161200b565b602083015250604082013567ffffffffffffffff811115612160575f5ffd5b61216c8482850161200b565b60408301525061217e606083016120ba565b606082015261218f608083016120ba565b60808201526121a060a083016120ba565b60a082015260c0828101359082015260e080830135908201526121c661010083016120f2565b6101008201526121d961012083016120f2565b61012082015292915050565b5f61014082840312156121f6575f5ffd5b50919050565b5f5f5f5f6060858703121561220f575f5ffd5b843567ffffffffffffffff811115612225575f5ffd5b612231878288016120fd565b945050602085013567ffffffffffffffff81111561224d575f5ffd5b8501601f8101871361225d575f5ffd5b803567ffffffffffffffff811115612273575f5ffd5b8760208260051b8401011115612287575f5ffd5b60209190910193509150604085013567ffffffffffffffff8111156122aa575f5ffd5b6122b6878288016121e5565b91505092959194509250565b5f5f604083850312156122d3575f5ffd5b823567ffffffffffffffff8111156122e9575f5ffd5b6122f5858286016120fd565b925050602083013567ffffffffffffffff811115612311575f5ffd5b61231d858286016121e5565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b81810381811115610bcf57610bcf612327565b803567ffffffffffffffff811681146120dd575f5ffd5b803563ffffffff811681146120dd575f5ffd5b5f61014082360312156123a2575f5ffd5b6123aa611fe1565b6123b3836120ba565b81526123c1602084016120ba565b60208201526123d2604084016120ba565b6040820152606083810135908201526123ed60808401612367565b60808201526123fe60a084016120ba565b60a082015261240f60c0840161237e565b60c082015261242060e0840161237e565b60e0820152612432610100840161237e565b61010082015261012083013567ffffffffffffffff811115612452575f5ffd5b61245e3682860161200b565b6101208301525092915050565b5f6020828403121561247b575f5ffd5b61248482612367565b9392505050565b8082028115828204841417610bcf57610bcf612327565b5f826124d5577f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b500490565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612539575f5ffd5b9190910192915050565b5f60208284031215612553575f5ffd5b612484826120ba565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b73ffffffffffffffffffffffffffffffffffffffff8d16815273ffffffffffffffffffffffffffffffffffffffff8c16602082015273ffffffffffffffffffffffffffffffffffffffff8b16604082015273ffffffffffffffffffffffffffffffffffffffff8a1660608201528860808201528760a08201528660c082015261264960e082018773ffffffffffffffffffffffffffffffffffffffff169052565b63ffffffff851661010082015263ffffffff841661012082015263ffffffff83166101408201526101806101608201525f61268861018083018461255c565b9e9d5050505050505050505050505050565b60208152815160208201525f602083015161014060408401526126c161016084018261255c565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160608501526126fc828261255c565b9150506060840151612726608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e084015161010084015261010084015161279561012085018215159052565b50610120840151801515610140850152509392505050565b5f602082840312156127bd575f5ffd5b5051919050565b5f602082840312156127d4575f5ffd5b8135612484816120e2565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612812575f5ffd5b83018035915067ffffffffffffffff82111561282c575f5ffd5b602001915036819003821315612840575f5ffd5b9250929050565b5f5f85851115612855575f5ffd5b83861115612861575f5ffd5b5050820193919092039150565b80357fffffffff0000000000000000000000000000000000000000000000000000000081169060048410156128cd577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b5f82518060208501845e5f920191825250919050565b5f60208284031215612909575f5ffd5b8151612484816120e2565b602081525f612484602083018461255c56fea264697066735822122060e0f500e54ca0d534b5ee5a5922a3f1ef3bd8c636d6bf2480dcb9392dfbb08e64736f6c634300081d0033";

type AcrossFacetV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AcrossFacetV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AcrossFacetV3__factory extends ContractFactory {
  constructor(...args: AcrossFacetV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _spokePool: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AcrossFacetV3> {
    return super.deploy(
      _spokePool,
      _wrappedNative,
      overrides || {}
    ) as Promise<AcrossFacetV3>;
  }
  override getDeployTransaction(
    _spokePool: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _spokePool,
      _wrappedNative,
      overrides || {}
    );
  }
  override attach(address: string): AcrossFacetV3 {
    return super.attach(address) as AcrossFacetV3;
  }
  override connect(signer: Signer): AcrossFacetV3__factory {
    return super.connect(signer) as AcrossFacetV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AcrossFacetV3Interface {
    return new utils.Interface(_abi) as AcrossFacetV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AcrossFacetV3 {
    return new Contract(address, _abi, signerOrProvider) as AcrossFacetV3;
  }
}
