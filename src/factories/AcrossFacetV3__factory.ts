/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { AcrossFacetV3, AcrossFacetV3Interface } from "../AcrossFacetV3";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_spokePool",
        type: "address",
        internalType: "contract IAcrossSpokePool",
      },
      {
        name: "_wrappedNative",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "spokePool",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IAcrossSpokePool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAcrossV3",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_acrossData",
        type: "tuple",
        internalType: "struct AcrossFacetV3.AcrossV3Data",
        components: [
          {
            name: "receiverAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "refundAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outputAmountPercent",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaAcrossV3",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_acrossData",
        type: "tuple",
        internalType: "struct AcrossFacetV3.AcrossV3Data",
        components: [
          {
            name: "receiverAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "refundAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outputAmountPercent",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "exclusiveRelayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "quoteTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "fillDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "exclusivityDeadline",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "wrappedNative",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200212238038062002122833981016040819052620000349162000065565b6001600160a01b039182166080521660a052620000a4565b6001600160a01b03811681146200006257600080fd5b50565b600080604083850312156200007957600080fd5b825162000086816200004c565b602084015190925062000099816200004c565b809150509250929050565b60805160a05161203e620000e46000396000818160db01526107a9015260008181607e0152818161075e0152818161085f015261088a015261203e6000f3fe60806040526004361061003f5760003560e01c806328832cbd1461004457806328cc431614610059578063afdac3d61461006c578063eb6d3a11146100c9575b600080fd5b61005761005236600461196c565b6100fd565b005b610057610067366004611a2b565b61033f565b34801561007857600080fd5b506100a07f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100d557600080fd5b506100a07f000000000000000000000000000000000000000000000000000000000000000081565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610178576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006101893447611abe565b9050868061010001516101c8576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101eb8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610222576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610260576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361029d576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102b289600001518a60c001518a8a3361052c565b60c08a015260006102c287611afd565b9050670de0b6b3a76400006102dd60a0890160808a01611bdb565b67ffffffffffffffff168b60c001516102f69190611bfd565b6103009190611c14565b606082015261030f8a82610674565b5047915050818111156103315761033160008461032c8585611abe565b610997565b505060009091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016103ba576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006103cb3447611abe565b9050846103f08160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610427576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610465576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104a2576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806101000151156104e0576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104f287608001518860c001516109cc565b610504876104ff88611afd565b610674565b50479050818111156105205761052060008461032c8585611abe565b50506000909155505050565b600082808203610568576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610577600185611abe565b81811061058657610586611c4f565b90506020028101906105989190611c7e565b6105a9906080810190606001611cbc565b905060006105b682610a81565b905073ffffffffffffffffffffffffffffffffffffffff82166105e0576105dd3482611abe565b90505b60006105ec8888610acc565b90506105f88888610bd8565b6106058a89898985610c45565b60008261061185610a81565b61061b9190611abe565b905089811015610666576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b8161012001511515600082610120015151111515146106bf576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8161012001511580156107065750806000015173ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff1614155b1561073d576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608082015173ffffffffffffffffffffffffffffffffffffffff16610855577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637b9392328360c00151836020015184600001517f000000000000000000000000000000000000000000000000000000000000000086604001518860c0015188606001518a60e001518a60a001518b60c001518c60e001518d61010001518e61012001516040518e63ffffffff1660e01b815260040161081e9c9b9a99989796959493929190611d3b565b6000604051808303818588803b15801561083757600080fd5b505af115801561084b573d6000803e3d6000fd5b505050505061095c565b61088882608001517f00000000000000000000000000000000000000000000000000000000000000008460c00151610ff7565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637b93923282602001518360000151856080015185604001518760c0015187606001518960e001518960a001518a60c001518b60e001518c61010001518d61012001516040518d63ffffffff1660e01b81526004016109299c9b9a99989796959493929190611d3b565b600060405180830381600087803b15801561094357600080fd5b505af1158015610957573d6000803e3d6000fd5b505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161098b9190611dd3565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff83166109c1576109bc8282611023565b505050565b6109bc838383611090565b80600003610a06576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610a5f5780341015610a5b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610a5b73ffffffffffffffffffffffffffffffffffffffff83163330846110fe565b600073ffffffffffffffffffffffffffffffffffffffff821615610ac457610abf73ffffffffffffffffffffffffffffffffffffffff83163061115b565b610ac6565b475b92915050565b60608160008167ffffffffffffffff811115610aea57610aea611731565b604051908082528060200260200182016040528015610b13578160200160208202803683370190505b5090506000805b83811015610bcd57868682818110610b3457610b34611c4f565b9050602002810190610b469190611c7e565b610b57906080810190606001611cbc565b9150610b6282610a81565b838281518110610b7457610b74611c4f565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610bc55734838281518110610bad57610bad611c4f565b60200260200101818151610bc19190611abe565b9052505b600101610b1a565b509095945050505050565b60005b818110156109bc5736838383818110610bf657610bf6611c4f565b9050602002810190610c089190611c7e565b9050610c1a60e0820160c08301611ee6565b15610c3c57610c3c610c326060830160408401611cbc565b82608001356109cc565b50600101610bdb565b838383838260018114610f125760008585610c61600185611abe565b818110610c7057610c70611c4f565b9050602002810190610c829190611c7e565b610c93906080810190606001611cbc565b9050600089815b81811015610e3e57368d8d83818110610cb557610cb5611c4f565b9050602002810190610cc79190611c7e565b9050610cf6610cdc6060830160408401611cbc565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610d595750610d59610d0f6040830160208401611cbc565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610d705750610d70610d0f6020830183611cbc565b8015610df55750610df5610d8760a0830183611f01565b610d9691600491600091611f6d565b610d9f91611f97565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610e2b576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e358f82611190565b50600101610c9a565b505060005b610e4e600185611abe565b811015610f0a576000888883818110610e6957610e69611c4f565b9050602002810190610e7b9190611c7e565b610e8c906080810190606001611cbc565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f0157858281518110610ed357610ed3611c4f565b6020026020010151610ee482610a81565b610eee9190611abe565b92508215610f0157610f01818885610997565b50600101610e43565b505050610feb565b8760005b81811015610fe857368b8b83818110610f3157610f31611c4f565b9050602002810190610f439190611c7e565b9050610f58610cdc6060830160408401611cbc565b80610f715750610f71610d0f6040830160208401611cbc565b8015610f885750610f88610d0f6020830183611cbc565b8015610f9f5750610f9f610d8760a0830183611f01565b610fd5576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610fdf8d82611190565b50600101610f16565b50505b50505050505050505050565b6109bc8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61146d565b73ffffffffffffffffffffffffffffffffffffffff8216611070576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a5b73ffffffffffffffffffffffffffffffffffffffff83168261159c565b73ffffffffffffffffffffffffffffffffffffffff82166110dd576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109bc73ffffffffffffffffffffffffffffffffffffffff841683836115b8565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d15600160005114171661114d57637939f4246000526004601cfd5b600060605260405250505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b6111a56111a06020830183611cbc565b611607565b6111db576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080810135600081900361121b576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611230610cdc6060850160408601611cbc565b61123b576000611241565b82608001355b9050600061125d6112586060860160408701611cbc565b610a81565b905060006112746112586080870160608801611cbc565b9050826000036112ab576112ab6112916060870160408801611cbc565b6112a16040880160208901611cbc565b8760800135610ff7565b84608001358210156112f6576040517fcf479181000000000000000000000000000000000000000000000000000000008152608086013560048201526024810183905260440161065d565b6000806113066020880188611cbc565b73ffffffffffffffffffffffffffffffffffffffff168561132a60a08a018a611f01565b604051611338929190611fdf565b60006040518083038185875af1925050503d8060008114611375576040519150601f19603f3d011682016040523d82523d6000602084013e61137a565b606091505b50915091508161138d5761138d8161169d565b60006113a261125860808a0160608b01611cbc565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896113d360208b018b611cbc565b6113e360608c0160408d01611cbc565b6113f360808d0160608e01611cbc565b8c60800135898711611405578661140f565b61140f8a88611abe565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416156115965773ffffffffffffffffffffffffffffffffffffffff83166114d6576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa15801561154b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156f9190611fef565b10156115965761159673ffffffffffffffffffffffffffffffffffffffff851684836116a7565b50505050565b60003860003884865af1610a5b5763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d1560016000511417166115fd576390b8ec186000526004601cfd5b6000603452505050565b6040805160178082528183019092526000918291906020820181803683370190505090506017600060208301853c60208101517f10ff0000000000000000000000000000000000000000000000000000000000007fffffff000000000000000000000000000000000000000000000000000000000082160161169457506023015160601c3b151592915050565b5050503b151590565b8051602082018181fd5b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d1560016000511417166115fd5760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d1560016000511417166115fd57633e3f8f736000526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561178457611784611731565b60405290565b600082601f83011261179b57600080fd5b813567ffffffffffffffff808211156117b6576117b6611731565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156117fc576117fc611731565b8160405283815286602085880101111561181557600080fd5b836020870160208301376000602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461185957600080fd5b919050565b8035801515811461185957600080fd5b6000610140828403121561188157600080fd5b611889611760565b905081358152602082013567ffffffffffffffff808211156118aa57600080fd5b6118b68583860161178a565b602084015260408401359150808211156118cf57600080fd5b506118dc8482850161178a565b6040830152506118ee60608301611835565b60608201526118ff60808301611835565b608082015261191060a08301611835565b60a082015260c082013560c082015260e082013560e082015261010061193781840161185e565b9082015261012061194983820161185e565b9082015292915050565b6000610140828403121561196657600080fd5b50919050565b6000806000806060858703121561198257600080fd5b843567ffffffffffffffff8082111561199a57600080fd5b6119a68883890161186e565b955060208701359150808211156119bc57600080fd5b818701915087601f8301126119d057600080fd5b8135818111156119df57600080fd5b8860208260051b85010111156119f457600080fd5b602083019550809450506040870135915080821115611a1257600080fd5b50611a1f87828801611953565b91505092959194509250565b60008060408385031215611a3e57600080fd5b823567ffffffffffffffff80821115611a5657600080fd5b611a628683870161186e565b93506020850135915080821115611a7857600080fd5b50611a8585828601611953565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610ac657610ac6611a8f565b803567ffffffffffffffff8116811461185957600080fd5b803563ffffffff8116811461185957600080fd5b60006101408236031215611b1057600080fd5b611b18611760565b611b2183611835565b8152611b2f60208401611835565b6020820152611b4060408401611835565b604082015260608301356060820152611b5b60808401611ad1565b6080820152611b6c60a08401611835565b60a0820152611b7d60c08401611ae9565b60c0820152611b8e60e08401611ae9565b60e0820152610100611ba1818501611ae9565b908201526101208381013567ffffffffffffffff811115611bc157600080fd5b611bcd3682870161178a565b918301919091525092915050565b600060208284031215611bed57600080fd5b611bf682611ad1565b9392505050565b8082028115828204841417610ac657610ac6611a8f565b600082611c4a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611cb257600080fd5b9190910192915050565b600060208284031215611cce57600080fd5b611bf682611835565b6000815180845260005b81811015611cfd57602081850181015186830182015201611ce1565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b73ffffffffffffffffffffffffffffffffffffffff8d811682528c811660208301528b811660408301528a81166060830152608082018a905260a0820189905260c08201889052861660e082015263ffffffff85811661010083015284811661012083015283166101408201526000610180610160830152611dc1610180830184611cd7565b9e9d5050505050505050505050505050565b602081528151602082015260006020830151610140806040850152611dfc610160850183611cd7565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152611e378382611cd7565b9250506060850151611e61608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120611ed48187018315159052565b90950151151593019290925250919050565b600060208284031215611ef857600080fd5b611bf68261185e565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611f3657600080fd5b83018035915067ffffffffffffffff821115611f5157600080fd5b602001915036819003821315611f6657600080fd5b9250929050565b60008085851115611f7d57600080fd5b83861115611f8a57600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015611fd75780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b60006020828403121561200157600080fd5b505191905056fea2646970667358221220a1df2e6eabeaeb83051d52de02cf670be1b890a74ea5485a847fd03e49c530e664736f6c63430008110033";

type AcrossFacetV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AcrossFacetV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AcrossFacetV3__factory extends ContractFactory {
  constructor(...args: AcrossFacetV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _spokePool: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AcrossFacetV3> {
    return super.deploy(
      _spokePool,
      _wrappedNative,
      overrides || {}
    ) as Promise<AcrossFacetV3>;
  }
  override getDeployTransaction(
    _spokePool: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _spokePool,
      _wrappedNative,
      overrides || {}
    );
  }
  override attach(address: string): AcrossFacetV3 {
    return super.attach(address) as AcrossFacetV3;
  }
  override connect(signer: Signer): AcrossFacetV3__factory {
    return super.connect(signer) as AcrossFacetV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AcrossFacetV3Interface {
    return new utils.Interface(_abi) as AcrossFacetV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AcrossFacetV3 {
    return new Contract(address, _abi, signerOrProvider) as AcrossFacetV3;
  }
}
