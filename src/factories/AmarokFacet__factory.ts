/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { AmarokFacet, AmarokFacetInterface } from "../AmarokFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_connextHandler",
        type: "address",
        internalType: "contract IConnextHandler",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaAmarok",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_amarokData",
        type: "tuple",
        internalType: "struct AmarokFacet.AmarokData",
        components: [
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "slippageTol",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "delegate",
            type: "address",
            internalType: "address",
          },
          {
            name: "destChainDomainId",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "payFeeWithSendingAsset",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaAmarok",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_amarokData",
        type: "tuple",
        internalType: "struct AmarokFacet.AmarokData",
        components: [
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "slippageTol",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "delegate",
            type: "address",
            internalType: "address",
          },
          {
            name: "destChainDomainId",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "payFeeWithSendingAsset",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NativeAssetNotSupported",
    inputs: [],
  },
  {
    type: "error",
    name: "NativeAssetTransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NoTransferToNullAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAnERC20Token",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002a1e38038062002a1e833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b60805161297c620000a2600039600081816107a7015281816107fc0152610905015261297c6000f3fe6080604052600436106100295760003560e01c806383f319171461002e5780638dc9932d14610043575b600080fd5b61004161003c366004612315565b610056565b005b6100416100513660046123d4565b6102b3565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e23447612441565b905086806101000151610121576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101448160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561017b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101b9576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101f6576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b88610219816080015173ffffffffffffffffffffffffffffffffffffffff161590565b15610250576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61025a8a88610520565b6102748a600001518b60c001518b8b338c60400135610574565b60c08b01526102838a88610714565b5047915050818111156102a5576102a56000846102a08585612441565b610a1e565b505060009091555050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161032e576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061033f3447612441565b905061034a8561247b565b80610100015115610387576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103908661247b565b60a081015173ffffffffffffffffffffffffffffffffffffffff166103e1576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361041f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361045c576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104658761247b565b608081015173ffffffffffffffffffffffffffffffffffffffff166104b6576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104c86104c28961247b565b88610520565b6104e56104db60a08a0160808b01612487565b8960c00135610a54565b6104f76104f18961247b565b88610714565b504791505081811115610514576105146000846102a08585612441565b50506000909155505050565b6101208201511515600061053483806124a9565b905011151514610570576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6000838082036105b0576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600086866105bf600185612441565b8181106105ce576105ce612515565b90506020028101906105e09190612544565b6105f1906080810190606001612487565b905060006105fe82610bc6565b905073ffffffffffffffffffffffffffffffffffffffff8216610628576106253482612441565b90505b60006106348989610c7f565b90506106408989610d8b565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff8916602082015290810187905261067b818b8b85610df8565b60008361068786610bc6565b6106919190612441565b905073ffffffffffffffffffffffffffffffffffffffff85166106bb576106b88882612441565b90505b8b811015610704576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d9052602481018290526044015b60405180910390fd5b9c9b505050505050505050505050565b81610120015115801561076657506107326040820160208301612487565b73ffffffffffffffffffffffffffffffffffffffff168260a0015173ffffffffffffffffffffffffffffffffffffffff1614155b1561079d576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107d082608001517f00000000000000000000000000000000000000000000000000000000000000008460c001516111e9565b6107e060e0820160c08301612582565b156108ee5773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166393f18ac561083160c0840160a0850161259f565b6108416040850160208601612487565b85608001518560800160208101906108599190612487565b86604001358860c0015161086d9190612441565b606088013561087c89806124a9565b8a604001356040518a63ffffffff1660e01b81526004016108a59998979695949392919061260e565b6020604051808303816000875af11580156108c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e89190612680565b506109e3565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016638aac16ba604083013561093f60c0850160a0860161259f565b61094f6040860160208701612487565b86608001518660800160208101906109679190612487565b60c0890151606089013561097b8a806124a9565b6040518a63ffffffff1660e01b815260040161099e989796959493929190612699565b60206040518083038185885af11580156109bc573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109e19190612680565b505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f182604051610a12919061276f565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff831615610a4a57610a45838383611320565b505050565b610a4582826114a2565b80600003610a8e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610ae35780341015610570576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b749190612680565b905081811015610bba576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016106fb565b610a45833330856115cc565b600073ffffffffffffffffffffffffffffffffffffffff821615610c77576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610c4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c729190612680565b610c79565b475b92915050565b60608160008167ffffffffffffffff811115610c9d57610c9d6120cf565b604051908082528060200260200182016040528015610cc6578160200160208202803683370190505b5090506000805b83811015610d8057868682818110610ce757610ce7612515565b9050602002810190610cf99190612544565b610d0a906080810190606001612487565b9150610d1582610bc6565b838281518110610d2757610d27612515565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610d785734838281518110610d6057610d60612515565b60200260200101818151610d749190612441565b9052505b600101610ccd565b509095945050505050565b60005b81811015610a455736838383818110610da957610da9612515565b9050602002810190610dbb9190612544565b9050610dcd60e0820160c08301612582565b15610def57610def610de56060830160408401612487565b8260800135610a54565b50600101610d8e565b6020840151604085015184918491849083600181146111025760008686610e20600185612441565b818110610e2f57610e2f612515565b9050602002810190610e419190612544565b610e52906080810190606001612487565b9050600089815b81811015610fff57368d8d83818110610e7457610e74612515565b9050602002810190610e869190612544565b9050610eb5610e9b6060830160408401612487565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610f185750610f18610ece6040830160208401612487565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610f2f5750610f2f610ece6020830183612487565b8015610fb45750610fb4610f4660a08301836124a9565b610f5591600491600091612882565b610f5e916128ac565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610fea576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e51610ff690826117e6565b50600101610e59565b505060005b61100f600185612441565b8110156110fa57600089898381811061102a5761102a612515565b905060200281019061103c9190612544565b61104d906080810190606001612487565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146110f15786828151811061109457611094612515565b60200260200101516110a582610bc6565b6110af9190612441565b9250600073ffffffffffffffffffffffffffffffffffffffff8216156110d65760006110d8565b865b905083156110ef576110ef828a6102a08488612441565b505b50600101611004565b5050506111dd565b8760005b818110156111da57368b8b8381811061112157611121612515565b90506020028101906111339190612544565b9050611148610e9b6060830160408401612487565b806111615750611161610ece6040830160208401612487565b80156111785750611178610ece6020830183612487565b801561118f575061118f610f4660a08301836124a9565b6111c5576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c516111d190826117e6565b50600101611106565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661120957505050565b73ffffffffffffffffffffffffffffffffffffffff8216611256576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa1580156112cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ef9190612680565b1015610a4557610a4583837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611ac4565b73ffffffffffffffffffffffffffffffffffffffff831661136d576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166113ba576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611427573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144b9190612680565b905080821115611491576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016106fb565b61149c848484611c32565b50505050565b73ffffffffffffffffffffffffffffffffffffffff82166114ef576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611532576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016106fb565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461158c576040519150601f19603f3d011682016040523d82523d6000602084013e611591565b606091505b5050905080610a45576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416611619576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611666576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa1580156116d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116fb9190612680565b905061170982868686611c88565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179d9190612680565b6117a79190612441565b146117de576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b6117fc6117f66020830183612487565b3b151590565b611832576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611872576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611887610e9b6060850160408601612487565b611892576000611898565b82608001355b905060006118b46118af6060860160408701612487565b610bc6565b905060006118cb6118af6080870160608801612487565b905082600003611902576119026118e86060870160408801612487565b6118f86040880160208901612487565b87608001356111e9565b846080013582101561194d576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016106fb565b60008061195d6020880188612487565b73ffffffffffffffffffffffffffffffffffffffff168561198160a08a018a6124a9565b60405161198f9291906128f4565b60006040518083038185875af1925050503d80600081146119cc576040519150601f19603f3d011682016040523d82523d6000602084013e6119d1565b606091505b5091509150816119e4576119e481611ce6565b60006119f96118af60808a0160608b01612487565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611a2a60208b018b612487565b611a3a60608c0160408d01612487565b611a4a60808d0160608e01612487565b8c60800135898711611a5c5786611a66565b611a668a88612441565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052611b508482611cf0565b61149c5760405173ffffffffffffffffffffffffffffffffffffffff8416602482015260006044820152611c289085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611db1565b61149c8482611db1565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610a459084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611ba6565b60405173ffffffffffffffffffffffffffffffffffffffff8085166024830152831660448201526064810182905261149c9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611ba6565b8051602082018181fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1684604051611d1a9190612904565b6000604051808303816000865af19150503d8060008114611d57576040519150601f19603f3d011682016040523d82523d6000602084013e611d5c565b606091505b5091509150818015611d86575080511580611d86575080806020019051810190611d869190612916565b8015611da8575073ffffffffffffffffffffffffffffffffffffffff85163b15155b95945050505050565b6000611e13826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611ec09092919063ffffffff16565b9050805160001480611e34575080806020019051810190611e349190612916565b610a45576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016106fb565b6060611ecf8484600085611ed7565b949350505050565b606082471015611f69576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016106fb565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611f929190612904565b60006040518083038185875af1925050503d8060008114611fcf576040519150601f19603f3d011682016040523d82523d6000602084013e611fd4565b606091505b5091509150611fe587838387611ff0565b979650505050505050565b6060831561208657825160000361207f5773ffffffffffffffffffffffffffffffffffffffff85163b61207f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106fb565b5081611ecf565b611ecf838381511561209b5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fb9190612933565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715612122576121226120cf565b60405290565b600082601f83011261213957600080fd5b813567ffffffffffffffff80821115612154576121546120cf565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561219a5761219a6120cf565b816040528381528660208588010111156121b357600080fd5b836020870160208301376000602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146121f757600080fd5b919050565b801515811461220a57600080fd5b50565b80356121f7816121fc565b6000610140828403121561222b57600080fd5b6122336120fe565b905081358152602082013567ffffffffffffffff8082111561225457600080fd5b61226085838601612128565b6020840152604084013591508082111561227957600080fd5b5061228684828501612128565b604083015250612298606083016121d3565b60608201526122a9608083016121d3565b60808201526122ba60a083016121d3565b60a082015260c082013560c082015260e082013560e08201526101006122e181840161220d565b908201526101206122f383820161220d565b9082015292915050565b600060e0828403121561230f57600080fd5b50919050565b6000806000806060858703121561232b57600080fd5b843567ffffffffffffffff8082111561234357600080fd5b61234f88838901612218565b9550602087013591508082111561236557600080fd5b818701915087601f83011261237957600080fd5b81358181111561238857600080fd5b8860208260051b850101111561239d57600080fd5b6020830195508094505060408701359150808211156123bb57600080fd5b506123c8878288016122fd565b91505092959194509250565b600080604083850312156123e757600080fd5b823567ffffffffffffffff808211156123ff57600080fd5b90840190610140828703121561241457600080fd5b9092506020840135908082111561242a57600080fd5b50612437858286016122fd565b9150509250929050565b81810381811115610c79577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c793683612218565b60006020828403121561249957600080fd5b6124a2826121d3565b9392505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126124de57600080fd5b83018035915067ffffffffffffffff8211156124f957600080fd5b60200191503681900382131561250e57600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261257857600080fd5b9190910192915050565b60006020828403121561259457600080fd5b81356124a2816121fc565b6000602082840312156125b157600080fd5b813563ffffffff811681146124a257600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600061010063ffffffff8c16835273ffffffffffffffffffffffffffffffffffffffff808c166020850152808b166040850152808a166060850152508760808401528660a08401528060c084015261266981840186886125c5565b9150508260e08301529a9950505050505050505050565b60006020828403121561269257600080fd5b5051919050565b63ffffffff89168152600073ffffffffffffffffffffffffffffffffffffffff808a16602084015280891660408401528088166060840152508560808301528460a083015260e060c08301526126f360e0830184866125c5565b9a9950505050505050505050565b60005b8381101561271c578181015183820152602001612704565b50506000910152565b6000815180845261273d816020860160208601612701565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081528151602082015260006020830151610140806040850152612798610160850183612725565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526127d38382612725565b92505060608501516127fd608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206128708187018315159052565b90950151151593019290925250919050565b6000808585111561289257600080fd5b8386111561289f57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156128ec5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b60008251612578818460208701612701565b60006020828403121561292857600080fd5b81516124a2816121fc565b6020815260006124a2602083018461272556fea2646970667358221220dd317b9be3587982ce0574adff08e5d55c34607f2b34e952b178a7c17888122c64736f6c63430008110033";

type AmarokFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AmarokFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AmarokFacet__factory extends ContractFactory {
  constructor(...args: AmarokFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _connextHandler: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AmarokFacet> {
    return super.deploy(
      _connextHandler,
      overrides || {}
    ) as Promise<AmarokFacet>;
  }
  override getDeployTransaction(
    _connextHandler: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_connextHandler, overrides || {});
  }
  override attach(address: string): AmarokFacet {
    return super.attach(address) as AmarokFacet;
  }
  override connect(signer: Signer): AmarokFacet__factory {
    return super.connect(signer) as AmarokFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AmarokFacetInterface {
    return new utils.Interface(_abi) as AmarokFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AmarokFacet {
    return new Contract(address, _abi, signerOrProvider) as AmarokFacet;
  }
}
