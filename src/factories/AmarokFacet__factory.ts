/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { AmarokFacet, AmarokFacetInterface } from "../AmarokFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IConnextHandler",
        name: "_connextHandler",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotBridgeToSameNetwork",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "relayerFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slippageTol",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "destChainDomainId",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "payFeeWithSendingAsset",
            type: "bool",
          },
        ],
        internalType: "struct AmarokFacet.AmarokData",
        name: "_amarokData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaAmarok",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "relayerFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slippageTol",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "destChainDomainId",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "payFeeWithSendingAsset",
            type: "bool",
          },
        ],
        internalType: "struct AmarokFacet.AmarokData",
        name: "_amarokData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaAmarok",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002bf538038062002bf5833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b608051612b53620000a26000396000818161072101528181610776015261087f0152612b536000f3fe6080604052600436106100295760003560e01c806383f319171461002e5780638dc9932d14610043575b600080fd5b61004161003c3660046123bc565b610056565b005b61004161005136600461247b565b6102c6565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e23447612517565b905086806101000151610121576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876101448160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561017b576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101b9576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036101f6576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b88610219816080015173ffffffffffffffffffffffffffffffffffffffff161590565b15610250576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61025a8a8861054b565b6102748a600001518b60c001518b8b338c6040013561059f565b60c08b01526102838a88610717565b50479150600090508282116102995760006102a3565b6102a38383612517565b905080156102b7576102b760008583610998565b50506000909255505050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610341576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006103523447612517565b905061035d8561252a565b8061010001511561039a576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103a38661252a565b60a081015173ffffffffffffffffffffffffffffffffffffffff166103f4576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610432576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361046f576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104788761252a565b608081015173ffffffffffffffffffffffffffffffffffffffff166104c9576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104db6104d58961252a565b8861054b565b6104f86104ee60a08a0160808b01612536565b8960c001356109ce565b61050a6105048961252a565b88610717565b504791506000905082821161052057600061052a565b61052a8383612517565b9050801561053e5761053e60008583610998565b5050600090925550505050565b6101208201511515600061055f8380612551565b90501115151461059b576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6000838082036105db576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600086866105ea600185612517565b8181106105f9576105f96125bd565b905060200281019061060b91906125ec565b61061c906080810190606001612536565b9050600061062982610b40565b905073ffffffffffffffffffffffffffffffffffffffff8216610653576106503482612517565b90505b600061065f8989610bf9565b905061066b8989610d05565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff891660208201529081018790526106a6818b8b85610d66565b6000836106b286610b40565b6106bc9190612517565b90508b811015610707576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d9052602481018290526044015b60405180910390fd5b9c9b505050505050505050505050565b61074a82608001517f00000000000000000000000000000000000000000000000000000000000000008460c0015161115c565b61075a60e0820160c0830161262a565b156108685773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166393f18ac56107ab60c0840160a08501612647565b6107bb6040850160208601612536565b85608001518560800160208101906107d39190612536565b86604001358860c001516107e79190612517565b60608801356107f68980612551565b8a604001356040518a63ffffffff1660e01b815260040161081f999897969594939291906126b6565b6020604051808303816000875af115801561083e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108629190612728565b5061095d565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016638aac16ba60408301356108b960c0850160a08601612647565b6108c96040860160208701612536565b86608001518660800160208101906108e19190612536565b60c089015160608901356108f58a80612551565b6040518a63ffffffff1660e01b8152600401610918989796959493929190612741565b60206040518083038185885af1158015610936573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061095b9190612728565b505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161098c9190612817565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff8316156109c4576109bf8383836112a7565b505050565b6109bf82826113d6565b73ffffffffffffffffffffffffffffffffffffffff8216610a23578034101561059b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600003610a5d576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aee9190612728565b905081811015610b34576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016106fe565b6109bf83333085611500565b600073ffffffffffffffffffffffffffffffffffffffff821615610bf1576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bec9190612728565b610bf3565b475b92915050565b60608160008167ffffffffffffffff811115610c1757610c17612113565b604051908082528060200260200182016040528015610c40578160200160208202803683370190505b5090506000805b83811015610cfa57868682818110610c6157610c616125bd565b9050602002810190610c7391906125ec565b610c84906080810190606001612536565b9150610c8f82610b40565b838281518110610ca157610ca16125bd565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610cf25734838281518110610cda57610cda6125bd565b60200260200101818151610cee9190612517565b9052505b600101610c47565b509095945050505050565b60005b818110156109bf576000838383818110610d2457610d246125bd565b9050602002810190610d3691906125ec565b610d3f9061292a565b90508060c0015115610d5d57610d5d816040015182608001516109ce565b50600101610d08565b6020840151604085015184918491849083600181146110755760008686610d8e600185612517565b818110610d9d57610d9d6125bd565b9050602002810190610daf91906125ec565b610dc0906080810190606001612536565b9050600089815b81811015610f6d57368d8d83818110610de257610de26125bd565b9050602002810190610df491906125ec565b9050610e23610e096060830160408401612536565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610e865750610e86610e3c6040830160208401612536565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610e9d5750610e9d610e3c6020830183612536565b8015610f225750610f22610eb460a0830183612551565b610ec3916004916000916129cf565b610ecc916129f9565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610f58576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e51610f64908261171a565b50600101610dc7565b505060005b610f7d600185612517565b81101561106d576000898983818110610f9857610f986125bd565b9050602002810190610faa91906125ec565b610fbb906080810190606001612536565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461106457868281518110611002576110026125bd565b602002602001015161101382610b40565b61101d9190612517565b9250600073ffffffffffffffffffffffffffffffffffffffff821615611044576000611046565b865b9050831561106257611062828a61105d8488612517565b610998565b505b50600101610f72565b505050611150565b8760005b8181101561114d57368b8b83818110611094576110946125bd565b90506020028101906110a691906125ec565b90506110bb610e096060830160408401612536565b806110d457506110d4610e3c6040830160208401612536565b80156110eb57506110eb610e3c6020830183612536565b80156111025750611102610eb460a0830183612551565b611138576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c51611144908261171a565b50600101611079565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831661117c57505050565b73ffffffffffffffffffffffffffffffffffffffff82166111c9576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa15801561123f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112639190612728565b9050818110156112a1576112a1848461129c847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612517565b611a30565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166112f4576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611361573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113859190612728565b9050808211156113cb576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044016106fe565b6112a1848484611bac565b73ffffffffffffffffffffffffffffffffffffffff8216611423576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611466576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018290524760248201526044016106fe565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146114c0576040519150601f19603f3d011682016040523d82523d6000602084013e6114c5565b606091505b50509050806109bf576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841661154d576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661159a576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa15801561160b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162f9190612728565b905061163d82868686611c02565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa1580156116ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d19190612728565b6116db9190612517565b14611712576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b61173061172a6020830183612536565b3b151590565b611766576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036117a6576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006117bb610e096060850160408601612536565b6117c65760006117cc565b82608001355b905060006117e86117e36060860160408701612536565b610b40565b905060006117ff6117e36080870160608801612536565b9050826000036118365761183661181c6060870160408801612536565b61182c6040880160208901612536565b876080013561115c565b8460800135821015611881576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016106fe565b6000806118916020880188612536565b73ffffffffffffffffffffffffffffffffffffffff16856118b560a08a018a612551565b6040516118c3929190612a41565b60006040518083038185875af1925050503d8060008114611900576040519150601f19603f3d011682016040523d82523d6000602084013e611905565b606091505b50915091508161195057600061191a82611c60565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fe9190612a51565b60006119656117e360808a0160608b01612536565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961199660208b018b612536565b6119a660608c0160408d01612536565b6119b660808d0160608e01612536565b8c608001358987116119c857866119d2565b6119d28a88612517565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611aa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611acb9190612728565b611ad59190612a64565b60405173ffffffffffffffffffffffffffffffffffffffff85166024820152604481018290529091506112a19085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611cde565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526109bf9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611b2a565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526112a19085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611b2a565b6060604482511015611ca557505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611cc16004808551611cb99190612517565b859190611dea565b905080806020019051810190611cd79190612a77565b9392505050565b6000611d40826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611f049092919063ffffffff16565b8051909150156109bf5780806020019051810190611d5e9190612aee565b6109bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016106fe565b606081611df881601f612a64565b1015611e30576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611e3a8284612a64565b84511015611e74576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611e935760405191506000825260208201604052611efb565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611ecc578051835260209283019201611eb4565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6060611f138484600085611f1b565b949350505050565b606082471015611fad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016106fe565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611fd69190612b0b565b60006040518083038185875af1925050503d8060008114612013576040519150601f19603f3d011682016040523d82523d6000602084013e612018565b606091505b509150915061202987838387612034565b979650505050505050565b606083156120ca5782516000036120c35773ffffffffffffffffffffffffffffffffffffffff85163b6120c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106fe565b5081611f13565b611f1383838151156120df5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fe9190612a51565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561216657612166612113565b60405290565b60405160e0810167ffffffffffffffff8111828210171561216657612166612113565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156121d6576121d6612113565b604052919050565b600067ffffffffffffffff8211156121f8576121f8612113565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261223557600080fd5b8135612248612243826121de565b61218f565b81815284602083860101111561225d57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461229e57600080fd5b919050565b80151581146122b157600080fd5b50565b803561229e816122a3565b600061014082840312156122d257600080fd5b6122da612142565b905081358152602082013567ffffffffffffffff808211156122fb57600080fd5b61230785838601612224565b6020840152604084013591508082111561232057600080fd5b5061232d84828501612224565b60408301525061233f6060830161227a565b60608201526123506080830161227a565b608082015261236160a0830161227a565b60a082015260c082013560c082015260e082013560e08201526101006123888184016122b4565b9082015261012061239a8382016122b4565b9082015292915050565b600060e082840312156123b657600080fd5b50919050565b600080600080606085870312156123d257600080fd5b843567ffffffffffffffff808211156123ea57600080fd5b6123f6888389016122bf565b9550602087013591508082111561240c57600080fd5b818701915087601f83011261242057600080fd5b81358181111561242f57600080fd5b8860208260051b850101111561244457600080fd5b60208301955080945050604087013591508082111561246257600080fd5b5061246f878288016123a4565b91505092959194509250565b6000806040838503121561248e57600080fd5b823567ffffffffffffffff808211156124a657600080fd5b9084019061014082870312156124bb57600080fd5b909250602084013590808211156124d157600080fd5b506124de858286016123a4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610bf357610bf36124e8565b6000610bf336836122bf565b60006020828403121561254857600080fd5b611cd78261227a565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261258657600080fd5b83018035915067ffffffffffffffff8211156125a157600080fd5b6020019150368190038213156125b657600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261262057600080fd5b9190910192915050565b60006020828403121561263c57600080fd5b8135611cd7816122a3565b60006020828403121561265957600080fd5b813563ffffffff81168114611cd757600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600061010063ffffffff8c16835273ffffffffffffffffffffffffffffffffffffffff808c166020850152808b166040850152808a166060850152508760808401528660a08401528060c0840152612711818401868861266d565b9150508260e08301529a9950505050505050505050565b60006020828403121561273a57600080fd5b5051919050565b63ffffffff89168152600073ffffffffffffffffffffffffffffffffffffffff808a16602084015280891660408401528088166060840152508560808301528460a083015260e060c083015261279b60e08301848661266d565b9a9950505050505050505050565b60005b838110156127c45781810151838201526020016127ac565b50506000910152565b600081518084526127e58160208601602086016127a9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815281516020820152600060208301516101408060408501526128406101608501836127cd565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe085840301606086015261287b83826127cd565b92505060608501516128a5608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206129188187018315159052565b90950151151593019290925250919050565b600060e0823603121561293c57600080fd5b61294461216c565b61294d8361227a565b815261295b6020840161227a565b602082015261296c6040840161227a565b604082015261297d6060840161227a565b60608201526080830135608082015260a083013567ffffffffffffffff8111156129a657600080fd5b6129b236828601612224565b60a0830152506129c460c084016122b4565b60c082015292915050565b600080858511156129df57600080fd5b838611156129ec57600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612a395780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b602081526000611cd760208301846127cd565b80820180821115610bf357610bf36124e8565b600060208284031215612a8957600080fd5b815167ffffffffffffffff811115612aa057600080fd5b8201601f81018413612ab157600080fd5b8051612abf612243826121de565b818152856020838501011115612ad457600080fd5b612ae58260208301602086016127a9565b95945050505050565b600060208284031215612b0057600080fd5b8151611cd7816122a3565b600082516126208184602087016127a956fea2646970667358221220a3eb07b006b0cbee44c1a0a633ac67780f49990103a600ef1092845b341640d764736f6c63430008110033";

type AmarokFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AmarokFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AmarokFacet__factory extends ContractFactory {
  constructor(...args: AmarokFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _connextHandler: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AmarokFacet> {
    return super.deploy(
      _connextHandler,
      overrides || {}
    ) as Promise<AmarokFacet>;
  }
  override getDeployTransaction(
    _connextHandler: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_connextHandler, overrides || {});
  }
  override attach(address: string): AmarokFacet {
    return super.attach(address) as AmarokFacet;
  }
  override connect(signer: Signer): AmarokFacet__factory {
    return super.connect(signer) as AmarokFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AmarokFacetInterface {
    return new utils.Interface(_abi) as AmarokFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AmarokFacet {
    return new Contract(address, _abi, signerOrProvider) as AmarokFacet;
  }
}
