/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { AmarokFacet, AmarokFacetInterface } from "../AmarokFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IConnextHandler",
        name: "_connextHandler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_srcChainDomain",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotBridgeToSameNetwork",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyContractOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
    ],
    name: "UnknownAmarokDomain",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
    ],
    name: "AmarokDomainSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "setAmarokDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "relayerFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slippageTol",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
        ],
        internalType: "struct AmarokFacet.AmarokData",
        name: "_amarokData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaAmarok",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "relayerFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slippageTol",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
        ],
        internalType: "struct AmarokFacet.AmarokData",
        name: "_amarokData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaAmarok",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002b2c38038062002b2c833981016040819052620000349162000051565b6001600160a01b0390911660805263ffffffff1660a052620000a3565b600080604083850312156200006557600080fd5b82516001600160a01b03811681146200007d57600080fd5b602084015190925063ffffffff811681146200009857600080fd5b809150509250929050565b60805160a051612a5f620000cd600039600050506000818161087f01526108ce0152612a5f6000f3fe6080604052600436106100345760003560e01c8063280c6deb1461003957806364a74ee21461005b578063ef27dc6f1461006e575b600080fd5b34801561004557600080fd5b50610059610054366004612129565b610081565b005b6100596100693660046123cf565b61011c565b61005961007c36600461248e565b6103c7565b610089610690565b60007feb4198458a814793befc1a2917bf545aff2a1c03cd5d74bd029e61245d484aaf60008481526020829052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff871690811790915590519293509185917ff7d9e84ed3fcc363e379b957a2727eab9d6cb676f99533cbe3b68dadc0153dd991a3505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610197576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006101a8344761252a565b9050868061010001516101e7576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8761020a8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610241576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361027f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036102bc576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886102df816080015173ffffffffffffffffffffffffffffffffffffffff161590565b15610316576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b896101200151151561032788610705565b151514610360576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103758a600001518b60c001518b8b3361071c565b60c08b01526103848a88610864565b504791506000905082821161039a5760006103a4565b6103a4838361252a565b905080156103b8576103b8600085836109b3565b50506000909255505050505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610442576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155336000610453344761252a565b905061045e8561253d565b8061010001511561049b576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104a48661253d565b60a081015173ffffffffffffffffffffffffffffffffffffffff166104f5576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610533576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610570576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105798761253d565b608081015173ffffffffffffffffffffffffffffffffffffffff166105ca576040517f5ded599700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105dc61014089016101208a01612549565b15156105e788610705565b151514610620576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61063d61063360a08a0160808b01612566565b8960c001356109e9565b61064f6106498961253d565b88610864565b504791506000905082821161066557600061066f565b61066f838361252a565b9050801561068357610683600085836109b3565b5050600090925550505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314610703576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000806107128380612581565b9050119050919050565b600082808203610758576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000858561076760018561252a565b818110610776576107766125ed565b9050602002810190610788919061261c565b610799906080810190606001612566565b905060006107a682610b5f565b905073ffffffffffffffffffffffffffffffffffffffff82166107d0576107cd348261252a565b90505b60006107dc8888610c18565b90506107e88888610d24565b6107f58a89898985610d85565b60008261080185610b5f565b61080b919061252a565b905089811015610856576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b60006108738360e00151611137565b90506108a883608001517f00000000000000000000000000000000000000000000000000000000000000008560c001516111b5565b60a0830151608084015160c085015173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001692638aac16ba9260408701359286929190829060608a01356109108b80612581565b6040518a63ffffffff1660e01b815260040161093398979695949392919061265a565b60206040518083038185885af1158015610951573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061097691906126d8565b507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1836040516109a69190612741565b60405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff8316156109df576109da838383611300565b505050565b6109da828261142f565b73ffffffffffffffffffffffffffffffffffffffff8216610a425780341015610a3e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610a7c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610ae9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0d91906126d8565b905081811015610b53576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161084d565b6109da83333085611559565b600073ffffffffffffffffffffffffffffffffffffffff821615610c10576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610be7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0b91906126d8565b610c12565b475b92915050565b60608160008167ffffffffffffffff811115610c3657610c36612162565b604051908082528060200260200182016040528015610c5f578160200160208202803683370190505b5090506000805b83811015610d1957868682818110610c8057610c806125ed565b9050602002810190610c92919061261c565b610ca3906080810190606001612566565b9150610cae82610b5f565b838281518110610cc057610cc06125ed565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610d115734838281518110610cf957610cf96125ed565b60200260200101818151610d0d919061252a565b9052505b600101610c66565b509095945050505050565b60005b818110156109da576000838383818110610d4357610d436125ed565b9050602002810190610d55919061261c565b610d5e90612836565b90508060c0015115610d7c57610d7c816040015182608001516109e9565b50600101610d27565b8383838382600181146110525760008585610da160018561252a565b818110610db057610db06125ed565b9050602002810190610dc2919061261c565b610dd3906080810190606001612566565b9050600089815b81811015610f7e57368d8d83818110610df557610df56125ed565b9050602002810190610e07919061261c565b9050610e36610e1c6060830160408401612566565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610e995750610e99610e4f6040830160208401612566565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610eb05750610eb0610e4f6020830183612566565b8015610f355750610f35610ec760a0830183612581565b610ed6916004916000916128db565b610edf91612905565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610f6b576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f758f82611773565b50600101610dda565b505060005b610f8e60018561252a565b81101561104a576000888883818110610fa957610fa96125ed565b9050602002810190610fbb919061261c565b610fcc906080810190606001612566565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461104157858281518110611013576110136125ed565b602002602001015161102482610b5f565b61102e919061252a565b92508215611041576110418188856109b3565b50600101610f83565b50505061112b565b8760005b8181101561112857368b8b83818110611071576110716125ed565b9050602002810190611083919061261c565b9050611098610e1c6060830160408401612566565b806110b157506110b1610e4f6040830160208401612566565b80156110c857506110c8610e4f6020830183612566565b80156110df57506110df610ec760a0830183612581565b611115576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61111f8d82611773565b50600101611056565b50505b50505050505050505050565b60008181527feb4198458a814793befc1a2917bf545aff2a1c03cd5d74bd029e61245d484aaf6020819052604082205463ffffffff168083036111ae576040517f34d1a6a800000000000000000000000000000000000000000000000000000000815263ffffffff8216600482015260240161084d565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff83166111d557505050565b73ffffffffffffffffffffffffffffffffffffffff8216611222576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015611298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112bc91906126d8565b9050818110156112fa576112fa84846112f5847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61252a565b611a89565b50505050565b73ffffffffffffffffffffffffffffffffffffffff831661134d576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa1580156113ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113de91906126d8565b905080821115611424576040517fcf479181000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161084d565b6112fa848484611be7565b73ffffffffffffffffffffffffffffffffffffffff821661147c576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156114bf576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810182905247602482015260440161084d565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611519576040519150601f19603f3d011682016040523d82523d6000602084013e61151e565b606091505b50509050806109da576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff84166115a6576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166115f3576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015611664573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168891906126d8565b905061169682868686611c3d565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015611706573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172a91906126d8565b611734919061252a565b1461176b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b6117896117836020830183612566565b3b151590565b6117bf576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036117ff576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611814610e1c6060850160408601612566565b61181f576000611825565b82608001355b9050600061184161183c6060860160408701612566565b610b5f565b9050600061185861183c6080870160608801612566565b90508260000361188f5761188f6118756060870160408801612566565b6118856040880160208901612566565b87608001356111b5565b84608001358210156118da576040517fcf479181000000000000000000000000000000000000000000000000000000008152608086013560048201526024810183905260440161084d565b6000806118ea6020880188612566565b73ffffffffffffffffffffffffffffffffffffffff168561190e60a08a018a612581565b60405161191c92919061294d565b60006040518083038185875af1925050503d8060008114611959576040519150601f19603f3d011682016040523d82523d6000602084013e61195e565b606091505b5091509150816119a957600061197382611c9b565b9050806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084d919061295d565b60006119be61183c60808a0160608b01612566565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896119ef60208b018b612566565b6119ff60608c0160408d01612566565b611a0f60808d0160608e01612566565b8c60800135898711611a215786611a2b565b611a2b8a8861252a565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b2491906126d8565b611b2e9190612970565b60405173ffffffffffffffffffffffffffffffffffffffff85166024820152604481018290529091506112fa9085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611d12565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526109da9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611b83565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526112fa9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611b83565b6060604482511015611ce057505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611cfc6004808551611cf4919061252a565b859190611e1e565b9050808060200190518101906111ae9190612983565b6000611d74826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611f1a9092919063ffffffff16565b8051909150156109da5780806020019051810190611d9291906129fa565b6109da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161084d565b606081611e2c81601f612970565b1015611e64576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611e6e8284612970565b84511015611ea8576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611ec75760405191506000825260208201604052611f11565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611f00578051835260209283019201611ee8565b5050858452601f01601f1916604052505b50949350505050565b6060611f298484600085611f31565b949350505050565b606082471015611fc3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161084d565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611fec9190612a17565b60006040518083038185875af1925050503d8060008114612029576040519150601f19603f3d011682016040523d82523d6000602084013e61202e565b606091505b509150915061203f8783838761204a565b979650505050505050565b606083156120e05782516000036120d95773ffffffffffffffffffffffffffffffffffffffff85163b6120d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161084d565b5081611f29565b611f2983838151156120f55781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084d919061295d565b6000806040838503121561213c57600080fd5b82359150602083013563ffffffff8116811461215757600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156121b5576121b5612162565b60405290565b60405160e0810167ffffffffffffffff811182821017156121b5576121b5612162565b604051601f8201601f1916810167ffffffffffffffff8111828210171561220757612207612162565b604052919050565b600067ffffffffffffffff82111561222957612229612162565b50601f01601f191660200190565b600082601f83011261224857600080fd5b813561225b6122568261220f565b6121de565b81815284602083860101111561227057600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146122b157600080fd5b919050565b80151581146122c457600080fd5b50565b80356122b1816122b6565b600061014082840312156122e557600080fd5b6122ed612191565b905081358152602082013567ffffffffffffffff8082111561230e57600080fd5b61231a85838601612237565b6020840152604084013591508082111561233357600080fd5b5061234084828501612237565b6040830152506123526060830161228d565b60608201526123636080830161228d565b608082015261237460a0830161228d565b60a082015260c082013560c082015260e082013560e082015261010061239b8184016122c7565b908201526101206123ad8382016122c7565b9082015292915050565b600060a082840312156123c957600080fd5b50919050565b600080600080606085870312156123e557600080fd5b843567ffffffffffffffff808211156123fd57600080fd5b612409888389016122d2565b9550602087013591508082111561241f57600080fd5b818701915087601f83011261243357600080fd5b81358181111561244257600080fd5b8860208260051b850101111561245757600080fd5b60208301955080945050604087013591508082111561247557600080fd5b50612482878288016123b7565b91505092959194509250565b600080604083850312156124a157600080fd5b823567ffffffffffffffff808211156124b957600080fd5b9084019061014082870312156124ce57600080fd5b909250602084013590808211156124e457600080fd5b506124f1858286016123b7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610c1257610c126124fb565b6000610c1236836122d2565b60006020828403121561255b57600080fd5b81356111ae816122b6565b60006020828403121561257857600080fd5b6111ae8261228d565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126125b657600080fd5b83018035915067ffffffffffffffff8211156125d157600080fd5b6020019150368190038213156125e657600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261265057600080fd5b9190910192915050565b63ffffffff89168152600073ffffffffffffffffffffffffffffffffffffffff808a16602084015280891660408401528088166060840152508560808301528460a083015260e060c08301528260e08301526101008385828501376000838501820152601f909301601f191690910190910198975050505050505050565b6000602082840312156126ea57600080fd5b5051919050565b60005b8381101561270c5781810151838201526020016126f4565b50506000910152565b6000815180845261272d8160208601602086016126f1565b601f01601f19169290920160200192915050565b60208152815160208201526000602083015161014080604085015261276a610160850183612715565b91506040850151601f198584030160608601526127878382612715565b92505060608501516127b1608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e08501516101008181870152808701519150506101206128248187018315159052565b90950151151593019290925250919050565b600060e0823603121561284857600080fd5b6128506121bb565b6128598361228d565b81526128676020840161228d565b60208201526128786040840161228d565b60408201526128896060840161228d565b60608201526080830135608082015260a083013567ffffffffffffffff8111156128b257600080fd5b6128be36828601612237565b60a0830152506128d060c084016122c7565b60c082015292915050565b600080858511156128eb57600080fd5b838611156128f857600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156129455780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b6020815260006111ae6020830184612715565b80820180821115610c1257610c126124fb565b60006020828403121561299557600080fd5b815167ffffffffffffffff8111156129ac57600080fd5b8201601f810184136129bd57600080fd5b80516129cb6122568261220f565b8181528560208385010111156129e057600080fd5b6129f18260208301602086016126f1565b95945050505050565b600060208284031215612a0c57600080fd5b81516111ae816122b6565b600082516126508184602087016126f156fea26469706673582212203baf766e4c5278f6201b6627fc6fc8865b54b63cd570b126086f84ea96b3445564736f6c63430008110033";

type AmarokFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AmarokFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AmarokFacet__factory extends ContractFactory {
  constructor(...args: AmarokFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _connextHandler: PromiseOrValue<string>,
    _srcChainDomain: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AmarokFacet> {
    return super.deploy(
      _connextHandler,
      _srcChainDomain,
      overrides || {}
    ) as Promise<AmarokFacet>;
  }
  override getDeployTransaction(
    _connextHandler: PromiseOrValue<string>,
    _srcChainDomain: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _connextHandler,
      _srcChainDomain,
      overrides || {}
    );
  }
  override attach(address: string): AmarokFacet {
    return super.attach(address) as AmarokFacet;
  }
  override connect(signer: Signer): AmarokFacet__factory {
    return super.connect(signer) as AmarokFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AmarokFacetInterface {
    return new utils.Interface(_abi) as AmarokFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AmarokFacet {
    return new Contract(address, _abi, signerOrProvider) as AmarokFacet;
  }
}
