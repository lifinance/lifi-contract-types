/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TestHyphenFacet,
  TestHyphenFacetInterface,
} from "../../HyphenFacet.t.sol/TestHyphenFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IHyphenRouter",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotBridgeToSameNetwork",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dex",
        type: "address",
      },
    ],
    name: "addDex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_signature",
        type: "bytes4",
      },
    ],
    name: "setFunctionApprovalBySignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaHyphen",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
    ],
    name: "swapAndStartBridgeTokensViaHyphen",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002bc438038062002bc4833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b608051612b22620000a26000396000818161084a015281816108c4015261097e0152612b226000f3fe60806040526004361061003f5760003560e01c8063536db266146100445780638bf6ef99146100665780639feb673114610079578063c561c1481461008c575b600080fd5b34801561005057600080fd5b5061006461005f3660046121db565b6100ac565b005b61006461007436600461245b565b6100b8565b610064610087366004612490565b6102f2565b34801561009857600080fd5b506100646100a736600461252a565b610535565b6100b5816105b3565b50565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610133576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018155336000610144344761259b565b90508380610100015115610184576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84806101200151156101c2576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856101e58160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b1561021c576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361025a576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610297576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102a987608001518860c001516106a0565b6102b287610820565b50479150600090508282116102c85760006102d2565b6102d2838361259b565b905080156102e6576102e660008583610a20565b50506000909255505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161036d576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061037e344761259b565b9050858061010001516103bd576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86806101200151156103fb576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8761041e8160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b15610455576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c00151600003610493576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e00151036104d0576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e589600001518a60c001518a8a33610a51565b60c08a01526104f389610820565b5047915060009050828211610509576000610513565b610513838361259b565b905080156105275761052760008583610a20565b505060009092555050505050565b6100b5817fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f6020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6105bc81610b94565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602081905260409091205460ff1615610610575050565b73ffffffffffffffffffffffffffffffffffffffff909116600081815260208381526040822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091556002909401805494850181558252902090910180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b73ffffffffffffffffffffffffffffffffffffffff82166106f957803410156106f5576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003610733576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156107a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c491906125ae565b90508181101561080f576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101839052602481018290526044015b60405180910390fd5b61081b83333085610c32565b505050565b608081015173ffffffffffffffffffffffffffffffffffffffff16156109325761087381608001517f00000000000000000000000000000000000000000000000000000000000000008360c00151610e4c565b60e0810151608082015160a083015160c08401516040517f55d7359500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016946355d73595946108fb94919390926004016125c7565b600060405180830381600087803b15801561091557600080fd5b505af1158015610929573d6000803e3d6000fd5b505050506109e6565b60c081015160a082015160e08301516040517fea36842100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169363ea3684219390926109b392600401612640565b6000604051808303818588803b1580156109cc57600080fd5b505af11580156109e0573d6000803e3d6000fd5b50505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f181604051610a15919061270d565b60405180910390a150565b73ffffffffffffffffffffffffffffffffffffffff831615610a475761081b838383610f97565b61081b82826110c6565b600082808203610a8d576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610a9c60018561259b565b818110610aab57610aab612820565b9050602002810190610abd919061284f565b610ace9060808101906060016121db565b90506000610adb826111f0565b905073ffffffffffffffffffffffffffffffffffffffff8216610b0557610b02348261259b565b90505b6000610b1188886112a9565b9050610b1d88886113b5565b610b2a8a89898985611416565b600082610b36856111f0565b610b40919061259b565b905089811015610b86576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b905260248101829052604401610806565b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116610be1576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163b6000036100b5576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416610c7f576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610ccc576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610d3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6191906125ae565b9050610d6f828686866117c8565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610ddf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0391906125ae565b610e0d919061259b565b14610e44576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610e6c57505050565b73ffffffffffffffffffffffffffffffffffffffff8216610eb9576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610f2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5391906125ae565b905081811015610f9157610f918484610f8c847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61259b565b6118a4565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610fe4576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611051573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107591906125ae565b9050808211156110bb576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610806565b610f918484846119a2565b73ffffffffffffffffffffffffffffffffffffffff8216611113576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611156576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610806565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146111b0576040519150601f19603f3d011682016040523d82523d6000602084013e6111b5565b606091505b505090508061081b576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff8216156112a1576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129c91906125ae565b6112a3565b475b92915050565b60608160008167ffffffffffffffff8111156112c7576112c76121f6565b6040519080825280602002602001820160405280156112f0578160200160208202803683370190505b5090506000805b838110156113aa5786868281811061131157611311612820565b9050602002810190611323919061284f565b6113349060808101906060016121db565b915061133f826111f0565b83828151811061135157611351612820565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff82166113a2573483828151811061138a5761138a612820565b6020026020010181815161139e919061259b565b9052505b6001016112f7565b509095945050505050565b60005b8181101561081b5760008383838181106113d4576113d4612820565b90506020028101906113e6919061284f565b6113ef9061288d565b90508060c001511561140d5761140d816040015182608001516106a0565b506001016113b8565b8383838382600181146116e3576000858561143260018561259b565b81811061144157611441612820565b9050602002810190611453919061284f565b6114649060808101906060016121db565b9050600089815b8181101561160f57368d8d8381811061148657611486612820565b9050602002810190611498919061284f565b90506114c76114ad60608301604084016121db565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061152a575061152a6114e060408301602084016121db565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561154157506115416114e060208301836121db565b80156115c657506115c661155860a0830183612932565b6115679160049160009161299e565b611570916129c8565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6115fc576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116068f826119f8565b5060010161146b565b505060005b61161f60018561259b565b8110156116db57600088888381811061163a5761163a612820565b905060200281019061164c919061284f565b61165d9060808101906060016121db565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146116d2578582815181106116a4576116a4612820565b60200260200101516116b5826111f0565b6116bf919061259b565b925082156116d2576116d2818885610a20565b50600101611614565b5050506117bc565b8760005b818110156117b957368b8b8381811061170257611702612820565b9050602002810190611714919061284f565b90506117296114ad60608301604084016121db565b8061174257506117426114e060408301602084016121db565b801561175957506117596114e060208301836121db565b8015611770575061177061155860a0830183612932565b6117a6576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117b08d826119f8565b506001016116e7565b50505b50505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610f919085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611d0e565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561191b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193f91906125ae565b6119499190612a10565b60405173ffffffffffffffffffffffffffffffffffffffff8516602482015260448101829052909150610f919085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611822565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261081b9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611822565b611a0e611a0860208301836121db565b3b151590565b611a44576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611a84576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611a996114ad60608501604086016121db565b611aa4576000611aaa565b82608001355b90506000611ac6611ac160608601604087016121db565b6111f0565b90506000611add611ac160808701606088016121db565b905082600003611b1457611b14611afa60608701604088016121db565b611b0a60408801602089016121db565b8760800135610e4c565b8460800135821015611b5f576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610806565b600080611b6f60208801886121db565b73ffffffffffffffffffffffffffffffffffffffff1685611b9360a08a018a612932565b604051611ba1929190612a23565b60006040518083038185875af1925050503d8060008114611bde576040519150601f19603f3d011682016040523d82523d6000602084013e611be3565b606091505b509150915081611c2e576000611bf882611e1a565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108069190612a33565b6000611c43611ac160808a0160608b016121db565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611c7460208b018b6121db565b611c8460608c0160408d016121db565b611c9460808d0160608e016121db565b8c60800135898711611ca65786611cb0565b611cb08a8861259b565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6000611d70826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611e989092919063ffffffff16565b80519091501561081b5780806020019051810190611d8e9190612a46565b61081b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610806565b6060604482511015611e5f57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611e7b6004808551611e73919061259b565b859190611eaf565b905080806020019051810190611e919190612a63565b9392505050565b6060611ea78484600085611fc9565b949350505050565b606081611ebd81601f612a10565b1015611ef5576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611eff8284612a10565b84511015611f39576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015611f585760405191506000825260208201604052611fc0565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611f91578051835260209283019201611f79565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60608247101561205b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610806565b73ffffffffffffffffffffffffffffffffffffffff85163b6120d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610806565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516121029190612ada565b60006040518083038185875af1925050503d806000811461213f576040519150601f19603f3d011682016040523d82523d6000602084013e612144565b606091505b509150915061215482828661215f565b979650505050505050565b6060831561216e575081611e91565b82511561217e5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108069190612a33565b803573ffffffffffffffffffffffffffffffffffffffff811681146121d657600080fd5b919050565b6000602082840312156121ed57600080fd5b611e91826121b2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715612249576122496121f6565b60405290565b60405160e0810167ffffffffffffffff81118282101715612249576122496121f6565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156122b9576122b96121f6565b604052919050565b600067ffffffffffffffff8211156122db576122db6121f6565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261231857600080fd5b813561232b612326826122c1565b612272565b81815284602083860101111561234057600080fd5b816020850160208301376000918101602001919091529392505050565b80151581146100b557600080fd5b80356121d68161235d565b6000610140828403121561238957600080fd5b612391612225565b905081358152602082013567ffffffffffffffff808211156123b257600080fd5b6123be85838601612307565b602084015260408401359150808211156123d757600080fd5b506123e484828501612307565b6040830152506123f6606083016121b2565b6060820152612407608083016121b2565b608082015261241860a083016121b2565b60a082015260c082013560c082015260e082013560e082015261010061243f81840161236b565b9082015261012061245183820161236b565b9082015292915050565b60006020828403121561246d57600080fd5b813567ffffffffffffffff81111561248457600080fd5b611ea784828501612376565b6000806000604084860312156124a557600080fd5b833567ffffffffffffffff808211156124bd57600080fd5b6124c987838801612376565b945060208601359150808211156124df57600080fd5b818601915086601f8301126124f357600080fd5b81358181111561250257600080fd5b8760208260051b850101111561251757600080fd5b6020830194508093505050509250925092565b60006020828403121561253c57600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611e9157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156112a3576112a361256c565b6000602082840312156125c057600080fd5b5051919050565b848152600073ffffffffffffffffffffffffffffffffffffffff808616602084015280851660408401525082606083015260a0608083015261263660a08301600481527f4c49464900000000000000000000000000000000000000000000000000000000602082015260400190565b9695505050505050565b73ffffffffffffffffffffffffffffffffffffffff83168152816020820152606060408201526000611ea760608301600481527f4c49464900000000000000000000000000000000000000000000000000000000602082015260400190565b60005b838110156126ba5781810151838201526020016126a2565b50506000910152565b600081518084526126db81602086016020860161269f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815281516020820152600060208301516101408060408501526127366101608501836126c3565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe085840301606086015261277183826126c3565b925050606085015161279b608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e085015161010081818701528087015191505061012061280e8187018315159052565b90950151151593019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261288357600080fd5b9190910192915050565b600060e0823603121561289f57600080fd5b6128a761224f565b6128b0836121b2565b81526128be602084016121b2565b60208201526128cf604084016121b2565b60408201526128e0606084016121b2565b60608201526080830135608082015260a083013567ffffffffffffffff81111561290957600080fd5b61291536828601612307565b60a08301525061292760c0840161236b565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261296757600080fd5b83018035915067ffffffffffffffff82111561298257600080fd5b60200191503681900382131561299757600080fd5b9250929050565b600080858511156129ae57600080fd5b838611156129bb57600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612a085780818660040360031b1b83161692505b505092915050565b808201808211156112a3576112a361256c565b8183823760009101908152919050565b602081526000611e9160208301846126c3565b600060208284031215612a5857600080fd5b8151611e918161235d565b600060208284031215612a7557600080fd5b815167ffffffffffffffff811115612a8c57600080fd5b8201601f81018413612a9d57600080fd5b8051612aab612326826122c1565b818152856020838501011115612ac057600080fd5b612ad182602083016020860161269f565b95945050505050565b6000825161288381846020870161269f56fea2646970667358221220c469f88c857a345f2534dea967dafa104b97ea3e29f0c48f317931ac4c1be4e464736f6c63430008110033";

type TestHyphenFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestHyphenFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestHyphenFacet__factory extends ContractFactory {
  constructor(...args: TestHyphenFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestHyphenFacet> {
    return super.deploy(_router, overrides || {}) as Promise<TestHyphenFacet>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, overrides || {});
  }
  override attach(address: string): TestHyphenFacet {
    return super.attach(address) as TestHyphenFacet;
  }
  override connect(signer: Signer): TestHyphenFacet__factory {
    return super.connect(signer) as TestHyphenFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestHyphenFacetInterface {
    return new utils.Interface(_abi) as TestHyphenFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestHyphenFacet {
    return new Contract(address, _abi, signerOrProvider) as TestHyphenFacet;
  }
}
