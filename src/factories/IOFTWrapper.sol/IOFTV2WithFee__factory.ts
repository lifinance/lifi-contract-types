/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IOFTV2WithFee,
  IOFTV2WithFeeInterface,
} from "../../IOFTWrapper.sol/IOFTV2WithFee";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "_toAddress",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "refundAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "zroPaymentAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "adapterParams",
            type: "bytes",
          },
        ],
        internalType: "struct IOFTV2.LzCallParams",
        name: "_callParams",
        type: "tuple",
      },
    ],
    name: "sendFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IOFTV2WithFee__factory {
  static readonly abi = _abi;
  static createInterface(): IOFTV2WithFeeInterface {
    return new utils.Interface(_abi) as IOFTV2WithFeeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IOFTV2WithFee {
    return new Contract(address, _abi, signerOrProvider) as IOFTV2WithFee;
  }
}
