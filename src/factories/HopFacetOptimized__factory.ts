/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  HopFacetOptimized,
  HopFacetOptimizedInterface,
} from "../HopFacetOptimized";

const _abi = [
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyContractOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "integrator",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "referrer",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fromAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "toAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toAmount",
        type: "uint256",
      },
    ],
    name: "LiFiGenericSwapCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "integrator",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "referrer",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fromAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "toAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toAmount",
        type: "uint256",
      },
    ],
    name: "LiFiSwappedGeneric",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bridges",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokensToApprove",
        type: "address[]",
      },
    ],
    name: "setApprovalForBridges",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bonderFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationAmountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationDeadline",
            type: "uint256",
          },
          {
            internalType: "contract IHopBridge",
            name: "hopBridge",
            type: "address",
          },
        ],
        internalType: "struct HopFacetOptimized.HopData",
        name: "_hopData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaHopL1ERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bonderFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationAmountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationDeadline",
            type: "uint256",
          },
          {
            internalType: "contract IHopBridge",
            name: "hopBridge",
            type: "address",
          },
        ],
        internalType: "struct HopFacetOptimized.HopData",
        name: "_hopData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaHopL1Native",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bonderFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationAmountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationDeadline",
            type: "uint256",
          },
          {
            internalType: "contract IHopBridge",
            name: "hopBridge",
            type: "address",
          },
        ],
        internalType: "struct HopFacetOptimized.HopData",
        name: "_hopData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaHopL2ERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bonderFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationAmountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationDeadline",
            type: "uint256",
          },
          {
            internalType: "contract IHopBridge",
            name: "hopBridge",
            type: "address",
          },
        ],
        internalType: "struct HopFacetOptimized.HopData",
        name: "_hopData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaHopL2Native",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bonderFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationAmountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationDeadline",
            type: "uint256",
          },
          {
            internalType: "contract IHopBridge",
            name: "hopBridge",
            type: "address",
          },
        ],
        internalType: "struct HopFacetOptimized.HopData",
        name: "_hopData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaHopL1ERC20",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bonderFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationAmountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationDeadline",
            type: "uint256",
          },
          {
            internalType: "contract IHopBridge",
            name: "hopBridge",
            type: "address",
          },
        ],
        internalType: "struct HopFacetOptimized.HopData",
        name: "_hopData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaHopL1Native",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bonderFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationAmountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationDeadline",
            type: "uint256",
          },
          {
            internalType: "contract IHopBridge",
            name: "hopBridge",
            type: "address",
          },
        ],
        internalType: "struct HopFacetOptimized.HopData",
        name: "_hopData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaHopL2ERC20",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bonderFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationAmountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationDeadline",
            type: "uint256",
          },
          {
            internalType: "contract IHopBridge",
            name: "hopBridge",
            type: "address",
          },
        ],
        internalType: "struct HopFacetOptimized.HopData",
        name: "_hopData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaHopL2Native",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612e9d806100206000396000f3fe6080604052600436106100955760003560e01c80636721556d11610069578063826149971161004e5780638261499714610128578063df55e1261461013b578063e62534161461014e57600080fd5b80636721556d14610102578063787f2d0e1461011557600080fd5b8062d2aed61461009a5780630680ded4146100af5780632b53e8f3146100cf5780634db91a00146100ef575b600080fd5b6100ad6100a83660046125f5565b61016e565b005b3480156100bb57600080fd5b506100ad6100ca36600461273d565b6102aa565b3480156100db57600080fd5b506100ad6100ea3660046127a9565b61034d565b6100ad6100fd3660046127a9565b610498565b6100ad6101103660046125f5565b6105bd565b6100ad6101233660046127a9565b61067e565b6100ad6101363660046125f5565b610755565b6100ad6101493660046125f5565b610876565b34801561015a57600080fd5b506100ad6101693660046127a9565b610947565b61018384600001518560c00151858533610a2c565b60c08086019190915261019b90820160a083016127fe565b60e085015160a086015160c0870151604080517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019490945273ffffffffffffffffffffffffffffffffffffffff92831660248501526044840191909152843560648401526020850135608484015284013560a4830152606084013560c4830152608084013560e4830152919091169063eea0d7b290610104015b600060405180830381600087803b15801561025557600080fd5b505af1158015610269573d6000803e3d6000fd5b505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18460405161029c9190612889565b60405180910390a150505050565b6102b2610b74565b60005b83811015610346576103348383838181106102d2576102d26129a1565b90506020020160208101906102e791906127fe565b8686848181106102f9576102f96129a1565b905060200201602081019061030e91906127fe565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610be9565b8061033e816129ff565b9150506102b5565b5050505050565b61036c61036060a08401608085016127fe565b33308560c00135610d31565b61037c60c0820160a083016127fe565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f560e08401356103ac60c0860160a087016127fe565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925273ffffffffffffffffffffffffffffffffffffffff16602482015260c085013560448201526060840135606482015260808401356084820152600060a4820181905260c482015260e4015b600060405180830381600087803b15801561044557600080fd5b505af1158015610459573d6000803e3d6000fd5b505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161048c9190612ae4565b60405180910390a15050565b6104a860c0820160a083016127fe565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f560c0840180359060e0860135906104dd9060a088016127fe565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600481019290925273ffffffffffffffffffffffffffffffffffffffff16602482015260c086013560448201526060850135606482015260808501356084820152600060a4820181905260c482015260e4015b6000604051808303818588803b15801561057557600080fd5b505af1158015610589573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161048c9190612ae4565b6105d284600001518560c00151858533610a2c565b60c0808601919091526105ea90820160a083016127fe565b60e085015160a086015160c08701516040517fdeace8f5000000000000000000000000000000000000000000000000000000008152600481019390935273ffffffffffffffffffffffffffffffffffffffff918216602484015260448301526060840135606483015260808401356084830152600060a4830181905260c4830152919091169063deace8f59060e40161023b565b61068e60c0820160a083016127fe565b73ffffffffffffffffffffffffffffffffffffffff1663eea0d7b260c0840180359060e0860135906106c39060a088016127fe565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff909116602483015260c08701356044830152853560648301526020860135608483015285013560a4820152606085013560c4820152608085013560e48201526101040161055c565b61076a84600001518560c00151858533610a2c565b60c08086019190915261078290820160a083016127fe565b60c085015160e086015160a08701516040517fdeace8f5000000000000000000000000000000000000000000000000000000008152600481019290925273ffffffffffffffffffffffffffffffffffffffff9081166024830152604482018390526060850135606483015260808501356084830152600060a4830181905260c4830152929092169163deace8f5919060e4015b6000604051808303818588803b15801561082e57600080fd5b505af1158015610842573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18460405161029c9190612889565b61088b84600001518560c00151858533610a2c565b60c0808601919091526108a390820160a083016127fe565b60c085015160e086015160a0870151604080517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019390935273ffffffffffffffffffffffffffffffffffffffff918216602484015260448301849052853560648401526020860135608484015285013560a4830152606085013560c4830152608085013560e4830152929092169163eea0d7b2919061010401610815565b61095a61036060a08401608085016127fe565b61096a60c0820160a083016127fe565b73ffffffffffffffffffffffffffffffffffffffff1663eea0d7b260e084013561099a60c0860160a087016127fe565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff909116602483015260c08601356044830152843560648301526020850135608483015284013560a4820152606084013560c4820152608084013560e48201526101040161042b565b600082808203610a68576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610a77600185612c2d565b818110610a8657610a866129a1565b9050602002810190610a989190612c40565b610aa99060808101906060016127fe565b90506000610ab682610f4b565b905073ffffffffffffffffffffffffffffffffffffffff8216610ae057610add3482612c2d565b90505b6000610aec8888611004565b9050610af88888611110565b610b058a8989898561117d565b600082610b1185610f4b565b610b1b9190612c2d565b905089811015610b66576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314610be7576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b73ffffffffffffffffffffffffffffffffffffffff8316610c0957505050565b73ffffffffffffffffffffffffffffffffffffffff8216610c56576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015610ccb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cef9190612c7e565b1015610d2c57610d018383600061152f565b610d2c83837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61152f565b505050565b73ffffffffffffffffffffffffffffffffffffffff8416610d7e576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610dcb576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610e3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e609190612c7e565b9050610e6e8286868661172f565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610ede573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f029190612c7e565b610f0c9190612c2d565b14610f43576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff821615610ffc576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610fd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff79190612c7e565b610ffe565b475b92915050565b60608160008167ffffffffffffffff811115611022576110226123ff565b60405190808252806020026020018201604052801561104b578160200160208202803683370190505b5090506000805b838110156111055786868281811061106c5761106c6129a1565b905060200281019061107e9190612c40565b61108f9060808101906060016127fe565b915061109a82610f4b565b8382815181106110ac576110ac6129a1565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff82166110fd57348382815181106110e5576110e56129a1565b602002602001018181516110f99190612c2d565b9052505b600101611052565b509095945050505050565b60005b81811015610d2c573683838381811061112e5761112e6129a1565b90506020028101906111409190612c40565b905061115260e0820160c08301612c97565b156111745761117461116a60608301604084016127fe565b8260800135611793565b50600101611113565b83838383826001811461144a5760008585611199600185612c2d565b8181106111a8576111a86129a1565b90506020028101906111ba9190612c40565b6111cb9060808101906060016127fe565b9050600089815b8181101561137657368d8d838181106111ed576111ed6129a1565b90506020028101906111ff9190612c40565b905061122e61121460608301604084016127fe565b73ffffffffffffffffffffffffffffffffffffffff161590565b80611291575061129161124760408301602084016127fe565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156112a857506112a861124760208301836127fe565b801561132d575061132d6112bf60a0830183612cb4565b6112ce91600491600091612d19565b6112d791612d43565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611363576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61136d8f82611909565b506001016111d2565b505060005b611386600185612c2d565b8110156114425760008888838181106113a1576113a16129a1565b90506020028101906113b39190612c40565b6113c49060808101906060016127fe565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114395785828151811061140b5761140b6129a1565b602002602001015161141c82610f4b565b6114269190612c2d565b9250821561143957611439818885611c1f565b5060010161137b565b505050611523565b8760005b8181101561152057368b8b83818110611469576114696129a1565b905060200281019061147b9190612c40565b905061149061121460608301604084016127fe565b806114a957506114a961124760408301602084016127fe565b80156114c057506114c061124760208301836127fe565b80156114d757506114d76112bf60a0830183612cb4565b61150d576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115178d82611909565b5060010161144e565b50505b50505050505050505050565b8015806115cf57506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156115a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115cd9190612c7e565b155b61165b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610b5d565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610d2c9084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611c50565b60405173ffffffffffffffffffffffffffffffffffffffff8085166024830152831660448201526064810182905261178d9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016116ad565b50505050565b806000036117cd576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166118265780341015611822576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015611893573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b79190612c7e565b9050818110156118fd576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610b5d565b610d2c83333085610d31565b61191f61191960208301836127fe565b3b151590565b611955576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101356000819003611995576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006119aa61121460608501604086016127fe565b6119b55760006119bb565b82608001355b905060006119d76119d260608601604087016127fe565b610f4b565b905060006119ee6119d260808701606088016127fe565b905082600003611a2557611a25611a0b60608701604088016127fe565b611a1b60408801602089016127fe565b8760800135610be9565b8460800135821015611a70576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610b5d565b600080611a8060208801886127fe565b73ffffffffffffffffffffffffffffffffffffffff1685611aa460a08a018a612cb4565b604051611ab2929190612d8b565b60006040518083038185875af1925050503d8060008114611aef576040519150601f19603f3d011682016040523d82523d6000602084013e611af4565b606091505b509150915081611b3f576000611b0982611d5c565b9050806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5d9190612d9b565b6000611b546119d260808a0160608b016127fe565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611b8560208b018b6127fe565b611b9560608c0160408d016127fe565b611ba560808d0160608e016127fe565b8c60800135898711611bb75786611bc1565b611bc18a88612c2d565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831615611c4657610d2c838383611dda565b610d2c8282611f56565b6000611cb2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166120809092919063ffffffff16565b805190915015610d2c5780806020019051810190611cd09190612dae565b610d2c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610b5d565b6060604482511015611da157505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611dbd6004808551611db59190612c2d565b859190612097565b905080806020019051810190611dd39190612dcb565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8316611e27576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611e74576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611ee1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f059190612c7e565b905080821115611f4b576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610b5d565b61178d8484846121b1565b73ffffffffffffffffffffffffffffffffffffffff8216611fa3576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611fe6576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610b5d565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114612040576040519150601f19603f3d011682016040523d82523d6000602084013e612045565b606091505b5050905080610d2c576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606061208f8484600085612207565b949350505050565b6060816120a581601f612e42565b10156120dd576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120e78284612e42565b84511015612121576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608215801561214057604051915060008252602082016040526121a8565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015612179578051835260209283019201612161565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610d2c9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016116ad565b606082471015612299576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610b5d565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516122c29190612e55565b60006040518083038185875af1925050503d80600081146122ff576040519150601f19603f3d011682016040523d82523d6000602084013e612304565b606091505b509150915061231587838387612320565b979650505050505050565b606083156123b65782516000036123af5773ffffffffffffffffffffffffffffffffffffffff85163b6123af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b5d565b508161208f565b61208f83838151156123cb5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5d9190612d9b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715612452576124526123ff565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561249f5761249f6123ff565b604052919050565b600067ffffffffffffffff8211156124c1576124c16123ff565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126124fe57600080fd5b813561251161250c826124a7565b612458565b81815284602083860101111561252657600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461256557600080fd5b50565b803561257381612543565b919050565b801515811461256557600080fd5b803561257381612578565b60008083601f8401126125a357600080fd5b50813567ffffffffffffffff8111156125bb57600080fd5b6020830191508360208260051b85010111156125d657600080fd5b9250929050565b600060c082840312156125ef57600080fd5b50919050565b60008060008061010080868803121561260d57600080fd5b853567ffffffffffffffff8082111561262557600080fd5b90870190610140828a03121561263a57600080fd5b61264261242e565b8235815260208301358281111561265857600080fd5b6126648b8286016124ed565b60208301525060408301358281111561267c57600080fd5b6126888b8286016124ed565b60408301525061269a60608401612568565b60608201526126ab60808401612568565b60808201526126bc60a08401612568565b60a082015260c083013560c082015260e083013560e08201526126e0848401612586565b8482015261012093506126f4848401612586565b8482015280975050602088013592508083111561271057600080fd5b505061271e87828801612591565b9094509250612732905086604087016125dd565b905092959194509250565b6000806000806040858703121561275357600080fd5b843567ffffffffffffffff8082111561276b57600080fd5b61277788838901612591565b9096509450602087013591508082111561279057600080fd5b5061279d87828801612591565b95989497509550505050565b60008060e083850312156127bc57600080fd5b823567ffffffffffffffff8111156127d357600080fd5b830161014081860312156127e657600080fd5b91506127f584602085016125dd565b90509250929050565b60006020828403121561281057600080fd5b8135611dd381612543565b60005b8381101561283657818101518382015260200161281e565b50506000910152565b6000815180845261285781602086016020860161281b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815281516020820152600060208301516101408060408501526128b261016085018361283f565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526128ed838261283f565b9250506060850151612917608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e085015161010081818701528087015191505061012061298a8187018315159052565b8601518015158387015290505b5090949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612a3057612a306129d0565b5060010190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612a6c57600080fd5b830160208101925035905067ffffffffffffffff811115612a8c57600080fd5b8036038213156125d657600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60208152813560208201526000612afe6020840184612a37565b610140806040860152612b1661016086018385612a9b565b9250612b256040870187612a37565b92507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868503016060870152612b5c848483612a9b565b935050612b6b60608701612568565b73ffffffffffffffffffffffffffffffffffffffff811660808701529150612b9560808701612568565b73ffffffffffffffffffffffffffffffffffffffff811660a08701529150612bbf60a08701612568565b73ffffffffffffffffffffffffffffffffffffffff811660c0870152915060c086013560e0860152610100915060e086013582860152612c00828701612586565b9150610120612c128187018415159052565b612c1d818801612586565b9250506129978186018315159052565b81810381811115610ffe57610ffe6129d0565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612c7457600080fd5b9190910192915050565b600060208284031215612c9057600080fd5b5051919050565b600060208284031215612ca957600080fd5b8135611dd381612578565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612ce957600080fd5b83018035915067ffffffffffffffff821115612d0457600080fd5b6020019150368190038213156125d657600080fd5b60008085851115612d2957600080fd5b83861115612d3657600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612d835780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b602081526000611dd3602083018461283f565b600060208284031215612dc057600080fd5b8151611dd381612578565b600060208284031215612ddd57600080fd5b815167ffffffffffffffff811115612df457600080fd5b8201601f81018413612e0557600080fd5b8051612e1361250c826124a7565b818152856020838501011115612e2857600080fd5b612e3982602083016020860161281b565b95945050505050565b80820180821115610ffe57610ffe6129d0565b60008251612c7481846020870161281b56fea2646970667358221220cc5de47fd8112cc1108292c6249880a2c75ea2e539d9a3d673b946c08d18f60264736f6c63430008110033";

type HopFacetOptimizedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HopFacetOptimizedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HopFacetOptimized__factory extends ContractFactory {
  constructor(...args: HopFacetOptimizedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HopFacetOptimized> {
    return super.deploy(overrides || {}) as Promise<HopFacetOptimized>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HopFacetOptimized {
    return super.attach(address) as HopFacetOptimized;
  }
  override connect(signer: Signer): HopFacetOptimized__factory {
    return super.connect(signer) as HopFacetOptimized__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HopFacetOptimizedInterface {
    return new utils.Interface(_abi) as HopFacetOptimizedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HopFacetOptimized {
    return new Contract(address, _abi, signerOrProvider) as HopFacetOptimized;
  }
}
