/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  HopFacetOptimized,
  HopFacetOptimizedInterface,
} from "../HopFacetOptimized";

const _abi = [
  {
    type: "function",
    name: "setApprovalForBridges",
    inputs: [
      {
        name: "bridges",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "tokensToApprove",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaHopL1ERC20",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_hopData",
        type: "tuple",
        internalType: "struct HopFacetOptimized.HopData",
        components: [
          {
            name: "bonderFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationAmountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hopBridge",
            type: "address",
            internalType: "contract IHopBridge",
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nativeFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaHopL1Native",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_hopData",
        type: "tuple",
        internalType: "struct HopFacetOptimized.HopData",
        components: [
          {
            name: "bonderFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationAmountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hopBridge",
            type: "address",
            internalType: "contract IHopBridge",
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nativeFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaHopL2ERC20",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_hopData",
        type: "tuple",
        internalType: "struct HopFacetOptimized.HopData",
        components: [
          {
            name: "bonderFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationAmountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hopBridge",
            type: "address",
            internalType: "contract IHopBridge",
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nativeFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaHopL2Native",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_hopData",
        type: "tuple",
        internalType: "struct HopFacetOptimized.HopData",
        components: [
          {
            name: "bonderFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationAmountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hopBridge",
            type: "address",
            internalType: "contract IHopBridge",
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nativeFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaHopL1ERC20",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_hopData",
        type: "tuple",
        internalType: "struct HopFacetOptimized.HopData",
        components: [
          {
            name: "bonderFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationAmountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hopBridge",
            type: "address",
            internalType: "contract IHopBridge",
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nativeFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaHopL1Native",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_hopData",
        type: "tuple",
        internalType: "struct HopFacetOptimized.HopData",
        components: [
          {
            name: "bonderFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationAmountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hopBridge",
            type: "address",
            internalType: "contract IHopBridge",
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nativeFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaHopL2ERC20",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_hopData",
        type: "tuple",
        internalType: "struct HopFacetOptimized.HopData",
        components: [
          {
            name: "bonderFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationAmountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hopBridge",
            type: "address",
            internalType: "contract IHopBridge",
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nativeFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaHopL2Native",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_hopData",
        type: "tuple",
        internalType: "struct HopFacetOptimized.HopData",
        components: [
          {
            name: "bonderFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationAmountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hopBridge",
            type: "address",
            internalType: "contract IHopBridge",
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nativeFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyContractOwner",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b506127a68061001c5f395ff3fe608060405260043610610093575f3560e01c806342afe79a116100665780638d03f4561161004c5780638d03f45614610123578063ca360ae014610136578063d40e64cc14610149575f5ffd5b806342afe79a146100fd57806355c99cd814610110575f5ffd5b806303add8c3146100975780630680ded4146100ac578063082bc047146100cb5780630b4cb5d8146100de575b5f5ffd5b6100aa6100a5366004611e18565b61015c565b005b3480156100b7575f5ffd5b506100aa6100c6366004611eb2565b6102b5565b6100aa6100d9366004611e18565b61034d565b3480156100e9575f5ffd5b506100aa6100f8366004611e18565b6103b2565b6100aa61010b366004612061565b6104ee565b6100aa61011e366004611e18565b610653565b6100aa610131366004612061565b61072a565b6100aa610144366004612061565b6107b8565b6100aa610157366004612061565b610888565b61016c60c0820160a083016121b3565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f561019a61010084013560c0860135612202565b60e08501356101af60c0870160a088016121b3565b8660c00135866060013587608001358860c00160208101906101d191906121b3565b60405160e089811b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482019790975273ffffffffffffffffffffffffffffffffffffffff958616602482015260448101949094526064840192909252608483015290911660a48201529085013560c482015260e4015b5f604051808303818588803b158015610263575f5ffd5b505af1158015610275573d5f5f3e3d5ffd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1826040516102a991906122bc565b60405180910390a15050565b6102bd6109af565b5f5b838110156103465761033e8383838181106102dc576102dc6123ff565b90506020020160208101906102f191906121b3565b868684818110610303576103036123ff565b905060200201602081019061031891906121b3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610a24565b6001016102bf565b5050505050565b61036c61036060a08401608085016121b3565b33308560c00135610a55565b61037c60c0820160a083016121b3565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f561010083013560e08501356101af60c0870160a088016121b3565b6103c561036060a08401608085016121b3565b6103d560c0820160a083016121b3565b73ffffffffffffffffffffffffffffffffffffffff1663eea0d7b260e084013561040560c0860160a087016121b3565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff909116602483015260c08601356044830152843560648301526020850135608483015284013560a4820152606084013560c4820152608084013560e4820152610104015f604051808303815f87803b1580156104a9575f5ffd5b505af11580156104bb573d5f5f3e3d5ffd5b505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1826040516102a991906122bc565b610508845f01518560c00151858533866101000135610aca565b60c08086019190915261052090820160a083016121b3565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f58261010001358660e001518760a001518860c00151866060013587608001358860c001602081019061056d91906121b3565b60405160e089811b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482019790975273ffffffffffffffffffffffffffffffffffffffff958616602482015260448101949094526064840192909252608483015290911660a48201529085013560c482015260e4015b5f604051808303818588803b1580156105ff575f5ffd5b505af1158015610611573d5f5f3e3d5ffd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1846040516106459190612478565b60405180910390a150505050565b61066360c0820160a083016121b3565b73ffffffffffffffffffffffffffffffffffffffff1663eea0d7b260c0840180359060e0860135906106989060a088016121b3565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff909116602483015260c08701356044830152853560648301526020860135608483015285013560a4820152606085013560c4820152608085013560e48201526101040161024c565b610744845f01518560c00151858533866101000135610aca565b60c08086019190915261075c90820160a083016121b3565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f58261010001358660c0015161078c9190612202565b8660e001518760a001518860c00151866060013587608001358860c001602081019061056d91906121b3565b6107cc845f01518560c00151858533610c65565b60c0808601919091526107e490820160a083016121b3565b60c085015160e086015160a0870151604080517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019390935273ffffffffffffffffffffffffffffffffffffffff918216602484015260448301849052853560648401526020860135608484015285013560a4830152606085013560c4830152608085013560e4830152929092169163eea0d7b29190610104016105e8565b61089c845f01518560c00151858533610c65565b60c0808601919091526108b490820160a083016121b3565b60e085015160a086015160c0870151604080517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019490945273ffffffffffffffffffffffffffffffffffffffff92831660248501526044840191909152843560648401526020850135608484015284013560a4830152606084013560c4830152608084013560e4830152919091169063eea0d7b290610104015f604051808303815f87803b15801561096a575f5ffd5b505af115801561097c573d5f5f3e3d5ffd5b505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1846040516106459190612478565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314610a22576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610a508383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610da3565b505050565b73ffffffffffffffffffffffffffffffffffffffff8216610aa2576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ac473ffffffffffffffffffffffffffffffffffffffff8516848484610eae565b50505050565b5f83808203610b05576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8686610b13600185612588565b818110610b2257610b226123ff565b9050602002810190610b34919061259b565b610b459060808101906060016121b3565b90505f610b5182610f06565b905073ffffffffffffffffffffffffffffffffffffffff8216610b7b57610b783482612588565b90505b5f610b868989610f50565b9050610b92898961105a565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff89166020820152908101879052610bcd818b8b856110c6565b5f83610bd886610f06565b610be29190612588565b905073ffffffffffffffffffffffffffffffffffffffff8516610c0c57610c098882612588565b90505b8b811015610c55576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d9052602481018290526044015b60405180910390fd5b9c9b505050505050505050505050565b5f82808203610ca0576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8585610cae600185612588565b818110610cbd57610cbd6123ff565b9050602002810190610ccf919061259b565b610ce09060808101906060016121b3565b90505f610cec82610f06565b905073ffffffffffffffffffffffffffffffffffffffff8216610d1657610d133482612588565b90505b5f610d218888610f50565b9050610d2d888861105a565b610d3a8a898989856114b3565b5f82610d4585610f06565b610d4f9190612588565b905089811015610d95576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b905260248101829052604401610c4c565b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610df0576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015610e63573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e8791906125d7565b1015610ac457610ac473ffffffffffffffffffffffffffffffffffffffff85168483611778565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af13d1560015f51141716610ef957637939f4245f526004601cfd5b5f60605260405250505050565b5f73ffffffffffffffffffffffffffffffffffffffff821615610f4857610f4373ffffffffffffffffffffffffffffffffffffffff8316306117ff565b610f4a565b475b92915050565b6060815f8167ffffffffffffffff811115610f6d57610f6d611f1e565b604051908082528060200260200182016040528015610f96578160200160208202803683370190505b5090505f805b8381101561104f57868682818110610fb657610fb66123ff565b9050602002810190610fc8919061259b565b610fd99060808101906060016121b3565b9150610fe482610f06565b838281518110610ff657610ff66123ff565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216611047573483828151811061102f5761102f6123ff565b602002602001018181516110439190612588565b9052505b600101610f9c565b509095945050505050565b5f5b81811015610a505736838383818110611077576110776123ff565b9050602002810190611089919061259b565b905061109b60e0820160c083016125ee565b156110bd576110bd6110b360608301604084016121b3565b8260800135611832565b5060010161105c565b6020840151604085015184918491849083600181146113cd575f86866110ed600185612588565b8181106110fc576110fc6123ff565b905060200281019061110e919061259b565b61111f9060808101906060016121b3565b90505f89815b818110156112c857368d8d83818110611140576111406123ff565b9050602002810190611152919061259b565b905061118161116760608301604084016121b3565b73ffffffffffffffffffffffffffffffffffffffff161590565b806111e357506111e361119a60408301602084016121b3565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b80156111fa57506111fa61119a60208301836121b3565b801561127d575061127d61121160a0830183612607565b61121f916004915f91612668565b6112289161268f565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6112b3576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e516112bf90826118e6565b50600101611125565b505f90505b6112d8600185612588565b8110156113c5575f8989838181106112f2576112f26123ff565b9050602002810190611304919061259b565b6113159060808101906060016121b3565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113bc5786828151811061135c5761135c6123ff565b602002602001015161136d82610f06565b6113779190612588565b92505f73ffffffffffffffffffffffffffffffffffffffff82161561139c575f61139e565b865b905083156113ba576113ba828a6113b58488612588565b611bb8565b505b506001016112cd565b5050506114a7565b875f5b818110156114a457368b8b838181106113eb576113eb6123ff565b90506020028101906113fd919061259b565b905061141261116760608301604084016121b3565b8061142b575061142b61119a60408301602084016121b3565b8015611442575061144261119a60208301836121b3565b8015611459575061145961121160a0830183612607565b61148f576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c5161149b90826118e6565b506001016113d0565b50505b50505050505050505050565b8383838382600181146116a3575f85856114ce600185612588565b8181106114dd576114dd6123ff565b90506020028101906114ef919061259b565b6115009060808101906060016121b3565b90505f89815b818110156115d857368d8d83818110611521576115216123ff565b9050602002810190611533919061259b565b905061154861116760608301604084016121b3565b80611561575061156161119a60408301602084016121b3565b8015611578575061157861119a60208301836121b3565b801561158f575061158f61121160a0830183612607565b6115c5576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115cf8f826118e6565b50600101611506565b505f90505b6115e8600185612588565b8110156113c5575f888883818110611602576116026123ff565b9050602002810190611614919061259b565b6116259060808101906060016121b3565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461169a5785828151811061166c5761166c6123ff565b602002602001015161167d82610f06565b6116879190612588565b9250821561169a5761169a818885611bb8565b506001016115dd565b875f5b818110156114a457368b8b838181106116c1576116c16123ff565b90506020028101906116d3919061259b565b90506116e861116760608301604084016121b3565b80611701575061170161119a60408301602084016121b3565b8015611718575061171861119a60208301836121b3565b801561172f575061172f61121160a0830183612607565b611765576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61176f8d826118e6565b506001016116a6565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af13d1560015f511417166117f6575f6034526f095ea7b30000000000000000000000005f525f38604460105f875af1508060345260205f604460105f875af13d1560015f511417166117f657633e3f8f735f526004601cfd5b5f603452505050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b805f0361186b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166118c457803410156118c0576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6118c073ffffffffffffffffffffffffffffffffffffffff8316333084610eae565b6118fb6118f660208301836121b3565b611be8565b611931576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003611970576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61198461116760608501604086016121b3565b61198e575f611994565b82608001355b90505f6119af6119aa60608601604087016121b3565b610f06565b90505f6119c56119aa60808701606088016121b3565b9050825f036119fb576119fb6119e160608701604088016121b3565b6119f160408801602089016121b3565b8760800135610a24565b8460800135821015611a46576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610c4c565b5f80611a5560208801886121b3565b73ffffffffffffffffffffffffffffffffffffffff1685611a7960a08a018a612607565b604051611a879291906126f5565b5f6040518083038185875af1925050503d805f8114611ac1576040519150601f19603f3d011682016040523d82523d5f602084013e611ac6565b606091505b509150915081611ad957611ad981611cc3565b5f611aed6119aa60808a0160608b016121b3565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611b1e60208b018b6121b3565b611b2e60608c0160408d016121b3565b611b3e60808d0160608e016121b3565b8c60800135898711611b505786611b5a565b611b5a8a88612588565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316611bdd57610a508282611ccd565b610a50838383611d3a565b6040805160038082528183019092525f91829182917fef0100000000000000000000000000000000000000000000000000000000000091839160208201818036833701905050863b945090507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060035f60208401893c863f93505f611c6c83612704565b90507fffffff000000000000000000000000000000000000000000000000000000000080851690821603611ca857506001979650505050505050565b5f86118015611cb75750818514155b98975050505050505050565b8051602082018181fd5b73ffffffffffffffffffffffffffffffffffffffff8216611d1a576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6118c073ffffffffffffffffffffffffffffffffffffffff831682611da8565b73ffffffffffffffffffffffffffffffffffffffff8216611d87576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a5073ffffffffffffffffffffffffffffffffffffffff84168383611dc1565b5f385f3884865af16118c05763b12d13eb5f526004601cfd5b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f511417166117f6576390b8ec185f526004601cfd5b5f6101208284031215611e12575f5ffd5b50919050565b5f5f6101408385031215611e2a575f5ffd5b823567ffffffffffffffff811115611e40575f5ffd5b83016101408186031215611e52575f5ffd5b9150611e618460208501611e01565b90509250929050565b5f5f83601f840112611e7a575f5ffd5b50813567ffffffffffffffff811115611e91575f5ffd5b6020830191508360208260051b8501011115611eab575f5ffd5b9250929050565b5f5f5f5f60408587031215611ec5575f5ffd5b843567ffffffffffffffff811115611edb575f5ffd5b611ee787828801611e6a565b909550935050602085013567ffffffffffffffff811115611f06575f5ffd5b611f1287828801611e6a565b95989497509550505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff81118282101715611f6f57611f6f611f1e565b60405290565b5f82601f830112611f84575f5ffd5b813567ffffffffffffffff811115611f9e57611f9e611f1e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff81118282101715611feb57611feb611f1e565b604052818152838201602001851015612002575f5ffd5b816020850160208301375f918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461203f575f5ffd5b50565b803561204d8161201e565b919050565b8035801515811461204d575f5ffd5b5f5f5f5f6101608587031215612075575f5ffd5b843567ffffffffffffffff81111561208b575f5ffd5b8501610140818803121561209d575f5ffd5b6120a5611f4b565b81358152602082013567ffffffffffffffff8111156120c2575f5ffd5b6120ce89828501611f75565b602083015250604082013567ffffffffffffffff8111156120ed575f5ffd5b6120f989828501611f75565b60408301525061210b60608301612042565b606082015261211c60808301612042565b608082015261212d60a08301612042565b60a082015260c0828101359082015260e080830135908201526121536101008301612052565b6101008201526121666101208301612052565b610120820152945050602085013567ffffffffffffffff811115612188575f5ffd5b61219487828801611e6a565b90945092506121a890508660408701611e01565b905092959194509250565b5f602082840312156121c3575f5ffd5b81356121ce8161201e565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b80820180821115610f4a57610f4a6121d5565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612248575f5ffd5b830160208101925035905067ffffffffffffffff811115612267575f5ffd5b803603821315611eab575f5ffd5b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60208082528235828201525f906122d590840184612215565b61014060408501526122ec61016085018284612275565b9150506122fc6040850185612215565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152612331838284612275565b9250505061234160608501612042565b73ffffffffffffffffffffffffffffffffffffffff811660808501525061236a60808501612042565b73ffffffffffffffffffffffffffffffffffffffff811660a08501525061239360a08501612042565b73ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084013560e084810191909152840135610100808501919091526123d6908501612052565b801515610120850152506123ed6101208501612052565b8015156101408501525b509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152815160208201525f6020830151610140604084015261249f61016084018261242c565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160608501526124da828261242c565b9150506060840151612504608085018273ffffffffffffffffffffffffffffffffffffffff169052565b50608084015173ffffffffffffffffffffffffffffffffffffffff811660a08501525060a084015173ffffffffffffffffffffffffffffffffffffffff811660c08501525060c084015160e084015260e084015161010084015261010084015161257361012085018215159052565b506101208401518015156101408501526123f7565b81810381811115610f4a57610f4a6121d5565b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126125cd575f5ffd5b9190910192915050565b5f602082840312156125e7575f5ffd5b5051919050565b5f602082840312156125fe575f5ffd5b6121ce82612052565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261263a575f5ffd5b83018035915067ffffffffffffffff821115612654575f5ffd5b602001915036819003821315611eab575f5ffd5b5f5f85851115612676575f5ffd5b83861115612682575f5ffd5b5050820193919092039150565b80357fffffffff0000000000000000000000000000000000000000000000000000000081169060048410156126ee577fffffffff00000000000000000000000000000000000000000000000000000000808560040360031b1b82161691505b5092915050565b818382375f9101908152919050565b805160208201517fffffff0000000000000000000000000000000000000000000000000000000000811691906003821015612769577fffffff0000000000000000000000000000000000000000000000000000000000808360030360031b1b82161692505b505091905056fea2646970667358221220be4841b85afebd9d3dc539531600f862f82930a408a7e5dc3a11c927006a0b4964736f6c634300081d0033";

type HopFacetOptimizedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HopFacetOptimizedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HopFacetOptimized__factory extends ContractFactory {
  constructor(...args: HopFacetOptimizedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HopFacetOptimized> {
    return super.deploy(overrides || {}) as Promise<HopFacetOptimized>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HopFacetOptimized {
    return super.attach(address) as HopFacetOptimized;
  }
  override connect(signer: Signer): HopFacetOptimized__factory {
    return super.connect(signer) as HopFacetOptimized__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HopFacetOptimizedInterface {
    return new utils.Interface(_abi) as HopFacetOptimizedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HopFacetOptimized {
    return new Contract(address, _abi, signerOrProvider) as HopFacetOptimized;
  }
}
