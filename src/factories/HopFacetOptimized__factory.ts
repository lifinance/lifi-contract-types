/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  HopFacetOptimized,
  HopFacetOptimizedInterface,
} from "../HopFacetOptimized";

const _abi = [
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bridge",
        type: "address",
      },
    ],
    name: "HopBridgeRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LiFiTransferRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "LiFiTransferStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bridges",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokensToApprove",
        type: "address[]",
      },
    ],
    name: "setApprovalForBridges",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bonderFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationAmountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationDeadline",
            type: "uint256",
          },
          {
            internalType: "contract IHopBridge",
            name: "hopBridge",
            type: "address",
          },
        ],
        internalType: "struct HopFacetOptimized.HopData",
        name: "_hopData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaHopL1ERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bonderFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationAmountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationDeadline",
            type: "uint256",
          },
          {
            internalType: "contract IHopBridge",
            name: "hopBridge",
            type: "address",
          },
        ],
        internalType: "struct HopFacetOptimized.HopData",
        name: "_hopData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaHopL1Native",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bonderFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationAmountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationDeadline",
            type: "uint256",
          },
          {
            internalType: "contract IHopBridge",
            name: "hopBridge",
            type: "address",
          },
        ],
        internalType: "struct HopFacetOptimized.HopData",
        name: "_hopData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaHopL2ERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bonderFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationAmountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationDeadline",
            type: "uint256",
          },
          {
            internalType: "contract IHopBridge",
            name: "hopBridge",
            type: "address",
          },
        ],
        internalType: "struct HopFacetOptimized.HopData",
        name: "_hopData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaHopL2Native",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bonderFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationAmountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationDeadline",
            type: "uint256",
          },
          {
            internalType: "contract IHopBridge",
            name: "hopBridge",
            type: "address",
          },
        ],
        internalType: "struct HopFacetOptimized.HopData",
        name: "_hopData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaHopL1ERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bonderFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationAmountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationDeadline",
            type: "uint256",
          },
          {
            internalType: "contract IHopBridge",
            name: "hopBridge",
            type: "address",
          },
        ],
        internalType: "struct HopFacetOptimized.HopData",
        name: "_hopData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaHopL1Native",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bonderFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationAmountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationDeadline",
            type: "uint256",
          },
          {
            internalType: "contract IHopBridge",
            name: "hopBridge",
            type: "address",
          },
        ],
        internalType: "struct HopFacetOptimized.HopData",
        name: "_hopData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaHopL2ERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bonderFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationAmountOutMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationDeadline",
            type: "uint256",
          },
          {
            internalType: "contract IHopBridge",
            name: "hopBridge",
            type: "address",
          },
        ],
        internalType: "struct HopFacetOptimized.HopData",
        name: "_hopData",
        type: "tuple",
      },
    ],
    name: "swapAndStartBridgeTokensViaHopL2Native",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612e0a806100206000396000f3fe6080604052600436106100955760003560e01c80636721556d11610069578063826149971161004e5780638261499714610142578063df55e12614610155578063e62534161461016857600080fd5b80636721556d1461010f578063787f2d0e1461012f57600080fd5b8062d2aed61461009a5780630680ded4146100bc5780632b53e8f3146100dc5780634db91a00146100fc575b600080fd5b3480156100a657600080fd5b506100ba6100b53660046124da565b610188565b005b3480156100c857600080fd5b506100ba6100d7366004612622565b6102c4565b3480156100e857600080fd5b506100ba6100f736600461268e565b61035f565b6100ba61010a36600461268e565b6104aa565b34801561011b57600080fd5b506100ba61012a3660046124da565b6105cf565b6100ba61013d36600461268e565b610690565b6100ba6101503660046124da565b610767565b6100ba6101633660046124da565b610888565b34801561017457600080fd5b506100ba61018336600461268e565b610959565b61019d84600001518560c00151858533610a3e565b60c0808601919091526101b590820160a083016126e3565b60e085015160a086015160c0870151604080517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019490945273ffffffffffffffffffffffffffffffffffffffff92831660248501526044840191909152843560648401526020850135608484015284013560a4830152606084013560c4830152608084013560e4830152919091169063eea0d7b290610104015b600060405180830381600087803b15801561026f57600080fd5b505af1158015610283573d6000803e3d6000fd5b505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1846040516102b6919061276e565b60405180910390a150505050565b60005b83811015610358576103468383838181106102e4576102e4612886565b90506020020160208101906102f991906126e3565b86868481811061030b5761030b612886565b905060200201602081019061032091906126e3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610b86565b80610350816128e4565b9150506102c7565b5050505050565b61037e61037260a08401608085016126e3565b33308560c00135610cd1565b61038e60c0820160a083016126e3565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f560e08401356103be60c0860160a087016126e3565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925273ffffffffffffffffffffffffffffffffffffffff16602482015260c085013560448201526060840135606482015260808401356084820152600060a4820181905260c482015260e4015b600060405180830381600087803b15801561045757600080fd5b505af115801561046b573d6000803e3d6000fd5b505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161049e91906129c9565b60405180910390a15050565b6104ba60c0820160a083016126e3565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f560c0840180359060e0860135906104ef9060a088016126e3565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600481019290925273ffffffffffffffffffffffffffffffffffffffff16602482015260c086013560448201526060850135606482015260808501356084820152600060a4820181905260c482015260e4015b6000604051808303818588803b15801561058757600080fd5b505af115801561059b573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161049e91906129c9565b6105e484600001518560c00151858533610a3e565b60c0808601919091526105fc90820160a083016126e3565b60e085015160a086015160c08701516040517fdeace8f5000000000000000000000000000000000000000000000000000000008152600481019390935273ffffffffffffffffffffffffffffffffffffffff918216602484015260448301526060840135606483015260808401356084830152600060a4830181905260c4830152919091169063deace8f59060e401610255565b6106a060c0820160a083016126e3565b73ffffffffffffffffffffffffffffffffffffffff1663eea0d7b260c0840180359060e0860135906106d59060a088016126e3565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff909116602483015260c08701356044830152853560648301526020860135608483015285013560a4820152606085013560c4820152608085013560e48201526101040161056e565b61077c84600001518560c00151858533610a3e565b60c08086019190915261079490820160a083016126e3565b60c085015160e086015160a08701516040517fdeace8f5000000000000000000000000000000000000000000000000000000008152600481019290925273ffffffffffffffffffffffffffffffffffffffff9081166024830152604482018390526060850135606483015260808501356084830152600060a4830181905260c4830152929092169163deace8f5919060e4015b6000604051808303818588803b15801561084057600080fd5b505af1158015610854573d6000803e3d6000fd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1846040516102b6919061276e565b61089d84600001518560c00151858533610a3e565b60c0808601919091526108b590820160a083016126e3565b60c085015160e086015160a0870151604080517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019390935273ffffffffffffffffffffffffffffffffffffffff918216602484015260448301849052853560648401526020860135608484015285013560a4830152606085013560c4830152608085013560e4830152929092169163eea0d7b2919061010401610827565b61096c61037260a08401608085016126e3565b61097c60c0820160a083016126e3565b73ffffffffffffffffffffffffffffffffffffffff1663eea0d7b260e08401356109ac60c0860160a087016126e3565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff909116602483015260c08601356044830152843560648301526020850135608483015284013560a4820152606084013560c4820152608084013560e48201526101040161043d565b600082808203610a7a576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585610a89600185612b12565b818110610a9857610a98612886565b9050602002810190610aaa9190612b25565b610abb9060808101906060016126e3565b90506000610ac882610eeb565b905073ffffffffffffffffffffffffffffffffffffffff8216610af257610aef3482612b12565b90505b6000610afe8888610fa4565b9050610b0a88886110b0565b610b178a89898985611116565b600082610b2385610eeb565b610b2d9190612b12565b905089811015610b78576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610ba657505050565b73ffffffffffffffffffffffffffffffffffffffff8216610bf3576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610c69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8d9190612b63565b905081811015610ccb57610ccb8484610cc6847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612b12565b6114c8565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8416610d1e576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610d6b576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610ddc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e009190612b63565b9050610e0e82868686611644565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610e7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea29190612b63565b610eac9190612b12565b14610ee3576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff821615610f9c576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610f73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f979190612b63565b610f9e565b475b92915050565b60608160008167ffffffffffffffff811115610fc257610fc26122c1565b604051908082528060200260200182016040528015610feb578160200160208202803683370190505b5090506000805b838110156110a55786868281811061100c5761100c612886565b905060200281019061101e9190612b25565b61102f9060808101906060016126e3565b915061103a82610eeb565b83828151811061104c5761104c612886565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff821661109d573483828151811061108557611085612886565b602002602001018181516110999190612b12565b9052505b600101610ff2565b509095945050505050565b60005b818110156111115760008383838181106110cf576110cf612886565b90506020028101906110e19190612b25565b6110ea90612b7c565b90508060c001511561110857611108816040015182608001516116a2565b506001016110b3565b505050565b8383838382600181146113e35760008585611132600185612b12565b81811061114157611141612886565b90506020028101906111539190612b25565b6111649060808101906060016126e3565b9050600089815b8181101561130f57368d8d8381811061118657611186612886565b90506020028101906111989190612b25565b90506111c76111ad60608301604084016126e3565b73ffffffffffffffffffffffffffffffffffffffff161590565b8061122a575061122a6111e060408301602084016126e3565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561124157506112416111e060208301836126e3565b80156112c657506112c661125860a0830183612c21565b61126791600491600091612c86565b61127091612cb0565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b6112fc576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113068f82611818565b5060010161116b565b505060005b61131f600185612b12565b8110156113db57600088888381811061133a5761133a612886565b905060200281019061134c9190612b25565b61135d9060808101906060016126e3565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113d2578582815181106113a4576113a4612886565b60200260200101516113b582610eeb565b6113bf9190612b12565b925082156113d2576113d2818885611b2e565b50600101611314565b5050506114bc565b8760005b818110156114b957368b8b8381811061140257611402612886565b90506020028101906114149190612b25565b90506114296111ad60608301604084016126e3565b8061144257506114426111e060408301602084016126e3565b801561145957506114596111e060208301836126e3565b8015611470575061147061125860a0830183612c21565b6114a6576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114b08d82611818565b506001016113e7565b50505b50505050505050505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561153f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115639190612b63565b61156d9190612cf8565b60405173ffffffffffffffffffffffffffffffffffffffff8516602482015260448101829052909150610ccb9085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611b5f565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610ccb9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016115c2565b73ffffffffffffffffffffffffffffffffffffffff82166116fb57803410156116f7576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b80600003611735576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156117a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c69190612b63565b90508181101561180c576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610b6f565b61111183333085610cd1565b61182e61182860208301836126e3565b3b151590565b611864576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b608081013560008190036118a4576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006118b96111ad60608501604086016126e3565b6118c45760006118ca565b82608001355b905060006118e66118e160608601604087016126e3565b610eeb565b905060006118fd6118e160808701606088016126e3565b9050826000036119345761193461191a60608701604088016126e3565b61192a60408801602089016126e3565b8760800135610b86565b846080013582101561197f576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610b6f565b60008061198f60208801886126e3565b73ffffffffffffffffffffffffffffffffffffffff16856119b360a08a018a612c21565b6040516119c1929190612d0b565b60006040518083038185875af1925050503d80600081146119fe576040519150601f19603f3d011682016040523d82523d6000602084013e611a03565b606091505b509150915081611a4e576000611a1882611c6b565b9050806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6f9190612d1b565b6000611a636118e160808a0160608b016126e3565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889611a9460208b018b6126e3565b611aa460608c0160408d016126e3565b611ab460808d0160608e016126e3565b8c60800135898711611ac65786611ad0565b611ad08a88612b12565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831615611b5557611111838383611ce9565b6111118282611e18565b6000611bc1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611f429092919063ffffffff16565b8051909150156111115780806020019051810190611bdf9190612d2e565b611111576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610b6f565b6060604482511015611cb057505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611ccc6004808551611cc49190612b12565b859190611f59565b905080806020019051810190611ce29190612d4b565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8316611d36576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611da3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc79190612b63565b905080821115611e0d576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610b6f565b610ccb848484612073565b73ffffffffffffffffffffffffffffffffffffffff8216611e65576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115611ea8576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610b6f565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611f02576040519150601f19603f3d011682016040523d82523d6000602084013e611f07565b606091505b5050905080611111576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060611f5184846000856120c9565b949350505050565b606081611f6781601f612cf8565b1015611f9f576040517f47aaf07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611fa98284612cf8565b84511015611fe3576040517f3b99b53d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082158015612002576040519150600082526020820160405261206a565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561203b578051835260209283019201612023565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526111119084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016115c2565b60608247101561215b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610b6f565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516121849190612dc2565b60006040518083038185875af1925050503d80600081146121c1576040519150601f19603f3d011682016040523d82523d6000602084013e6121c6565b606091505b50915091506121d7878383876121e2565b979650505050505050565b606083156122785782516000036122715773ffffffffffffffffffffffffffffffffffffffff85163b612271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b6f565b5081611f51565b611f51838381511561228d5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6f9190612d1b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715612314576123146122c1565b60405290565b60405160e0810167ffffffffffffffff81118282101715612314576123146122c1565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612384576123846122c1565b604052919050565b600067ffffffffffffffff8211156123a6576123a66122c1565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126123e357600080fd5b81356123f66123f18261238c565b61233d565b81815284602083860101111561240b57600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461244a57600080fd5b50565b803561245881612428565b919050565b801515811461244a57600080fd5b80356124588161245d565b60008083601f84011261248857600080fd5b50813567ffffffffffffffff8111156124a057600080fd5b6020830191508360208260051b85010111156124bb57600080fd5b9250929050565b600060c082840312156124d457600080fd5b50919050565b6000806000806101008086880312156124f257600080fd5b853567ffffffffffffffff8082111561250a57600080fd5b90870190610140828a03121561251f57600080fd5b6125276122f0565b8235815260208301358281111561253d57600080fd5b6125498b8286016123d2565b60208301525060408301358281111561256157600080fd5b61256d8b8286016123d2565b60408301525061257f6060840161244d565b60608201526125906080840161244d565b60808201526125a160a0840161244d565b60a082015260c083013560c082015260e083013560e08201526125c584840161246b565b8482015261012093506125d984840161246b565b848201528097505060208801359250808311156125f557600080fd5b505061260387828801612476565b9094509250612617905086604087016124c2565b905092959194509250565b6000806000806040858703121561263857600080fd5b843567ffffffffffffffff8082111561265057600080fd5b61265c88838901612476565b9096509450602087013591508082111561267557600080fd5b5061268287828801612476565b95989497509550505050565b60008060e083850312156126a157600080fd5b823567ffffffffffffffff8111156126b857600080fd5b830161014081860312156126cb57600080fd5b91506126da84602085016124c2565b90509250929050565b6000602082840312156126f557600080fd5b8135611ce281612428565b60005b8381101561271b578181015183820152602001612703565b50506000910152565b6000815180845261273c816020860160208601612700565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081528151602082015260006020830151610140806040850152612797610160850183612724565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526127d28382612724565b92505060608501516127fc608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e085015161010081818701528087015191505061012061286f8187018315159052565b8601518015158387015290505b5090949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612915576129156128b5565b5060010190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261295157600080fd5b830160208101925035905067ffffffffffffffff81111561297157600080fd5b8036038213156124bb57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b602081528135602082015260006129e3602084018461291c565b6101408060408601526129fb61016086018385612980565b9250612a0a604087018761291c565b92507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868503016060870152612a41848483612980565b935050612a506060870161244d565b73ffffffffffffffffffffffffffffffffffffffff811660808701529150612a7a6080870161244d565b73ffffffffffffffffffffffffffffffffffffffff811660a08701529150612aa460a0870161244d565b73ffffffffffffffffffffffffffffffffffffffff811660c0870152915060c086013560e0860152610100915060e086013582860152612ae582870161246b565b9150610120612af78187018415159052565b612b0281880161246b565b92505061287c8186018315159052565b81810381811115610f9e57610f9e6128b5565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612b5957600080fd5b9190910192915050565b600060208284031215612b7557600080fd5b5051919050565b600060e08236031215612b8e57600080fd5b612b9661231a565b612b9f8361244d565b8152612bad6020840161244d565b6020820152612bbe6040840161244d565b6040820152612bcf6060840161244d565b60608201526080830135608082015260a083013567ffffffffffffffff811115612bf857600080fd5b612c04368286016123d2565b60a083015250612c1660c0840161246b565b60c082015292915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612c5657600080fd5b83018035915067ffffffffffffffff821115612c7157600080fd5b6020019150368190038213156124bb57600080fd5b60008085851115612c9657600080fd5b83861115612ca357600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612cf05780818660040360031b1b83161692505b505092915050565b80820180821115610f9e57610f9e6128b5565b8183823760009101908152919050565b602081526000611ce26020830184612724565b600060208284031215612d4057600080fd5b8151611ce28161245d565b600060208284031215612d5d57600080fd5b815167ffffffffffffffff811115612d7457600080fd5b8201601f81018413612d8557600080fd5b8051612d936123f18261238c565b818152856020838501011115612da857600080fd5b612db9826020830160208601612700565b95945050505050565b60008251612b5981846020870161270056fea2646970667358221220a2157e9a744d05fa1b8e954f85488e5fd1931aea78546bf66cc42463c9eda13564736f6c63430008110033";

type HopFacetOptimizedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HopFacetOptimizedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HopFacetOptimized__factory extends ContractFactory {
  constructor(...args: HopFacetOptimizedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HopFacetOptimized> {
    return super.deploy(overrides || {}) as Promise<HopFacetOptimized>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HopFacetOptimized {
    return super.attach(address) as HopFacetOptimized;
  }
  override connect(signer: Signer): HopFacetOptimized__factory {
    return super.connect(signer) as HopFacetOptimized__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HopFacetOptimizedInterface {
    return new utils.Interface(_abi) as HopFacetOptimizedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HopFacetOptimized {
    return new Contract(address, _abi, signerOrProvider) as HopFacetOptimized;
  }
}
