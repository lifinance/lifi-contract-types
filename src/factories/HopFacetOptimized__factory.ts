/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  HopFacetOptimized,
  HopFacetOptimizedInterface,
} from "../HopFacetOptimized";

const _abi = [
  {
    type: "function",
    name: "setApprovalForBridges",
    inputs: [
      {
        name: "bridges",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "tokensToApprove",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaHopL1ERC20",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_hopData",
        type: "tuple",
        internalType: "struct HopFacetOptimized.HopData",
        components: [
          {
            name: "bonderFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationAmountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hopBridge",
            type: "address",
            internalType: "contract IHopBridge",
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nativeFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaHopL1Native",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_hopData",
        type: "tuple",
        internalType: "struct HopFacetOptimized.HopData",
        components: [
          {
            name: "bonderFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationAmountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hopBridge",
            type: "address",
            internalType: "contract IHopBridge",
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nativeFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaHopL2ERC20",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_hopData",
        type: "tuple",
        internalType: "struct HopFacetOptimized.HopData",
        components: [
          {
            name: "bonderFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationAmountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hopBridge",
            type: "address",
            internalType: "contract IHopBridge",
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nativeFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaHopL2Native",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_hopData",
        type: "tuple",
        internalType: "struct HopFacetOptimized.HopData",
        components: [
          {
            name: "bonderFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationAmountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hopBridge",
            type: "address",
            internalType: "contract IHopBridge",
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nativeFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaHopL1ERC20",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_hopData",
        type: "tuple",
        internalType: "struct HopFacetOptimized.HopData",
        components: [
          {
            name: "bonderFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationAmountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hopBridge",
            type: "address",
            internalType: "contract IHopBridge",
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nativeFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaHopL1Native",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_hopData",
        type: "tuple",
        internalType: "struct HopFacetOptimized.HopData",
        components: [
          {
            name: "bonderFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationAmountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hopBridge",
            type: "address",
            internalType: "contract IHopBridge",
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nativeFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaHopL2ERC20",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_hopData",
        type: "tuple",
        internalType: "struct HopFacetOptimized.HopData",
        components: [
          {
            name: "bonderFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationAmountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hopBridge",
            type: "address",
            internalType: "contract IHopBridge",
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nativeFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaHopL2Native",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_hopData",
        type: "tuple",
        internalType: "struct HopFacetOptimized.HopData",
        components: [
          {
            name: "bonderFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationAmountOutMin",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationDeadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hopBridge",
            type: "address",
            internalType: "contract IHopBridge",
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
          {
            name: "relayerFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nativeFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AssetSwapped",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "dex",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "NativeAssetTransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NoTransferToNullAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAnERC20Token",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyContractOwner",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b50612fb78061001d5f395ff3fe608060405260043610610093575f3560e01c806342afe79a116100665780638d03f4561161004c5780638d03f45614610123578063ca360ae014610136578063d40e64cc14610149575f80fd5b806342afe79a146100fd57806355c99cd814610110575f80fd5b806303add8c3146100975780630680ded4146100ac578063082bc047146100cb5780630b4cb5d8146100de575b5f80fd5b6100aa6100a5366004612656565b61015c565b005b3480156100b7575f80fd5b506100aa6100c63660046126f1565b6102b5565b6100aa6100d9366004612656565b61034d565b3480156100e9575f80fd5b506100aa6100f8366004612656565b6103b2565b6100aa61010b3660046128a2565b6104ee565b6100aa61011e366004612656565b610653565b6100aa6101313660046128a2565b61072a565b6100aa6101443660046128a2565b6107b8565b6100aa6101573660046128a2565b610888565b61016c60c0820160a083016129df565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f561019a61010084013560c0860135612a2e565b60e08501356101af60c0870160a088016129df565b8660c00135866060013587608001358860c00160208101906101d191906129df565b60405160e089811b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482019790975273ffffffffffffffffffffffffffffffffffffffff958616602482015260448101949094526064840192909252608483015290911660a48201529085013560c482015260e4015b5f604051808303818588803b158015610263575f80fd5b505af1158015610275573d5f803e3d5ffd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1826040516102a99190612ae8565b60405180910390a15050565b6102bd6109af565b5f5b838110156103465761033e8383838181106102dc576102dc612c3a565b90506020020160208101906102f191906129df565b86868481811061030357610303612c3a565b905060200201602081019061031891906129df565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610a24565b6001016102bf565b5050505050565b61036c61036060a08401608085016129df565b33308560c00135610b5e565b61037c60c0820160a083016129df565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f561010083013560e08501356101af60c0870160a088016129df565b6103c561036060a08401608085016129df565b6103d560c0820160a083016129df565b73ffffffffffffffffffffffffffffffffffffffff1663eea0d7b260e084013561040560c0860160a087016129df565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff909116602483015260c08601356044830152843560648301526020850135608483015284013560a4820152606084013560c4820152608084013560e4820152610104015f604051808303815f87803b1580156104a9575f80fd5b505af11580156104bb573d5f803e3d5ffd5b505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1826040516102a99190612ae8565b610508845f01518560c00151858533866101000135610d73565b60c08086019190915261052090820160a083016129df565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f58261010001358660e001518760a001518860c00151866060013587608001358860c001602081019061056d91906129df565b60405160e089811b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482019790975273ffffffffffffffffffffffffffffffffffffffff958616602482015260448101949094526064840192909252608483015290911660a48201529085013560c482015260e4015b5f604051808303818588803b1580156105ff575f80fd5b505af1158015610611573d5f803e3d5ffd5b50505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1846040516106459190612cd2565b60405180910390a150505050565b61066360c0820160a083016129df565b73ffffffffffffffffffffffffffffffffffffffff1663eea0d7b260c0840180359060e0860135906106989060a088016129df565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff909116602483015260c08701356044830152853560648301526020860135608483015285013560a4820152606085013560c4820152608085013560e48201526101040161024c565b610744845f01518560c00151858533866101000135610d73565b60c08086019190915261075c90820160a083016129df565b73ffffffffffffffffffffffffffffffffffffffff1663deace8f58261010001358660c0015161078c9190612a2e565b8660e001518760a001518860c00151866060013587608001358860c001602081019061056d91906129df565b6107cc845f01518560c00151858533610f0e565b60c0808601919091526107e490820160a083016129df565b60c085015160e086015160a0870151604080517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019390935273ffffffffffffffffffffffffffffffffffffffff918216602484015260448301849052853560648401526020860135608484015285013560a4830152606085013560c4830152608085013560e4830152929092169163eea0d7b29190610104016105e8565b61089c845f01518560c00151858533610f0e565b60c0808601919091526108b490820160a083016129df565b60e085015160a086015160c0870151604080517feea0d7b2000000000000000000000000000000000000000000000000000000008152600481019490945273ffffffffffffffffffffffffffffffffffffffff92831660248501526044840191909152843560648401526020850135608484015284013560a4830152606084013560c4830152608084013560e4830152919091169063eea0d7b290610104015f604051808303815f87803b15801561096a575f80fd5b505af115801561097c573d5f803e3d5ffd5b505050507fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f1846040516106459190612cd2565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff163314610a22576040517f277d76f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b73ffffffffffffffffffffffffffffffffffffffff8316610a4457505050565b73ffffffffffffffffffffffffffffffffffffffff8216610a91576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015610b04573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b289190612de3565b1015610b5957610b5983837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61104c565b505050565b73ffffffffffffffffffffffffffffffffffffffff8416610bab576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610bf8576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285915f918316906370a0823190602401602060405180830381865afa158015610c66573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c8a9190612de3565b9050610c98828686866111bf565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610d06573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d2a9190612de3565b610d349190612dfa565b14610d6b576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b5f83808203610dae576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8686610dbc600185612dfa565b818110610dcb57610dcb612c3a565b9050602002810190610ddd9190612e0d565b610dee9060808101906060016129df565b90505f610dfa8261121d565b905073ffffffffffffffffffffffffffffffffffffffff8216610e2457610e213482612dfa565b90505b5f610e2f89896112d3565b9050610e3b89896113dd565b604080516060810182528c815273ffffffffffffffffffffffffffffffffffffffff89166020820152908101879052610e76818b8b85611449565b5f83610e818661121d565b610e8b9190612dfa565b905073ffffffffffffffffffffffffffffffffffffffff8516610eb557610eb28882612dfa565b90505b8b811015610efe576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018d9052602481018290526044015b60405180910390fd5b9c9b505050505050505050505050565b5f82808203610f49576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8585610f57600185612dfa565b818110610f6657610f66612c3a565b9050602002810190610f789190612e0d565b610f899060808101906060016129df565b90505f610f958261121d565b905073ffffffffffffffffffffffffffffffffffffffff8216610fbf57610fbc3482612dfa565b90505b5f610fca88886112d3565b9050610fd688886113dd565b610fe38a89898985611835565b5f82610fee8561121d565b610ff89190612dfa565b90508981101561103e576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b905260248101829052604401610ef5565b9a9950505050505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790526110d88482611af9565b6111b95760405173ffffffffffffffffffffffffffffffffffffffff841660248201525f60448201526111af9085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611bb4565b6111b98482611bb4565b50505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526111b99085907f23b872dd000000000000000000000000000000000000000000000000000000009060840161112d565b5f73ffffffffffffffffffffffffffffffffffffffff8216156112cb576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156112a2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112c69190612de3565b6112cd565b475b92915050565b6060815f8167ffffffffffffffff8111156112f0576112f0612758565b604051908082528060200260200182016040528015611319578160200160208202803683370190505b5090505f805b838110156113d25786868281811061133957611339612c3a565b905060200281019061134b9190612e0d565b61135c9060808101906060016129df565b91506113678261121d565b83828151811061137957611379612c3a565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff82166113ca57348382815181106113b2576113b2612c3a565b602002602001018181516113c69190612dfa565b9052505b60010161131f565b509095945050505050565b5f5b81811015610b5957368383838181106113fa576113fa612c3a565b905060200281019061140c9190612e0d565b905061141e60e0820160c08301612e49565b156114405761144061143660608301604084016129df565b8260800135611cc1565b506001016113df565b60208401516040850151849184918490836001811461174f575f8686611470600185612dfa565b81811061147f5761147f612c3a565b90506020028101906114919190612e0d565b6114a29060808101906060016129df565b90505f89815b8181101561164b57368d8d838181106114c3576114c3612c3a565b90506020028101906114d59190612e0d565b90506115046114ea60608301604084016129df565b73ffffffffffffffffffffffffffffffffffffffff161590565b80611566575061156661151d60408301602084016129df565b73ffffffffffffffffffffffffffffffffffffffff165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b801561157d575061157d61151d60208301836129df565b8015611600575061160061159460a0830183612e64565b6115a2916004915f91612ec5565b6115ab91612eec565b7fffffffff00000000000000000000000000000000000000000000000000000000165f9081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b611636576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8e516116429082611e33565b506001016114a8565b50505f5b61165a600185612dfa565b811015611747575f89898381811061167457611674612c3a565b90506020028101906116869190612e0d565b6116979060808101906060016129df565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461173e578682815181106116de576116de612c3a565b60200260200101516116ef8261121d565b6116f99190612dfa565b92505f73ffffffffffffffffffffffffffffffffffffffff82161561171e575f611720565b865b9050831561173c5761173c828a6117378488612dfa565b612106565b505b5060010161164f565b505050611829565b875f5b8181101561182657368b8b8381811061176d5761176d612c3a565b905060200281019061177f9190612e0d565b90506117946114ea60608301604084016129df565b806117ad57506117ad61151d60408301602084016129df565b80156117c457506117c461151d60208301836129df565b80156117db57506117db61159460a0830183612e64565b611811576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c5161181d9082611e33565b50600101611752565b50505b50505050505050505050565b838383838260018114611a24575f8585611850600185612dfa565b81811061185f5761185f612c3a565b90506020028101906118719190612e0d565b6118829060808101906060016129df565b90505f89815b8181101561195a57368d8d838181106118a3576118a3612c3a565b90506020028101906118b59190612e0d565b90506118ca6114ea60608301604084016129df565b806118e357506118e361151d60408301602084016129df565b80156118fa57506118fa61151d60208301836129df565b8015611911575061191161159460a0830183612e64565b611947576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6119518f82611e33565b50600101611888565b50505f5b611969600185612dfa565b811015611747575f88888381811061198357611983612c3a565b90506020028101906119959190612e0d565b6119a69060808101906060016129df565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611a1b578582815181106119ed576119ed612c3a565b60200260200101516119fe8261121d565b611a089190612dfa565b92508215611a1b57611a1b818885612106565b5060010161195e565b875f5b8181101561182657368b8b83818110611a4257611a42612c3a565b9050602002810190611a549190612e0d565b9050611a696114ea60608301604084016129df565b80611a825750611a8261151d60408301602084016129df565b8015611a995750611a9961151d60208301836129df565b8015611ab05750611ab061159460a0830183612e64565b611ae6576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611af08d82611e33565b50600101611a27565b5f805f8473ffffffffffffffffffffffffffffffffffffffff1684604051611b219190612f34565b5f604051808303815f865af19150503d805f8114611b5a576040519150601f19603f3d011682016040523d82523d5f602084013e611b5f565b606091505b5091509150818015611b89575080511580611b89575080806020019051810190611b899190612f45565b8015611bab575073ffffffffffffffffffffffffffffffffffffffff85163b15155b95945050505050565b5f611c15826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166121379092919063ffffffff16565b905080515f1480611c35575080806020019051810190611c359190612f45565b610b59576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610ef5565b805f03611cfa576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611d535780341015611d4f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201525f9073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015611dbd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611de19190612de3565b905081811015611e27576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610ef5565b610b5983333085610b5e565b611e49611e4360208301836129df565b3b151590565b611e7f576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808101355f819003611ebe576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f611ed26114ea60608501604086016129df565b611edc575f611ee2565b82608001355b90505f611efd611ef860608601604087016129df565b61121d565b90505f611f13611ef860808701606088016129df565b9050825f03611f4957611f49611f2f60608701604088016129df565b611f3f60408801602089016129df565b8760800135610a24565b8460800135821015611f94576040517fcf4791810000000000000000000000000000000000000000000000000000000081526080860135600482015260248101839052604401610ef5565b5f80611fa360208801886129df565b73ffffffffffffffffffffffffffffffffffffffff1685611fc760a08a018a612e64565b604051611fd5929190612f60565b5f6040518083038185875af1925050503d805f811461200f576040519150601f19603f3d011682016040523d82523d5f602084013e612014565b606091505b509150915081612027576120278161214d565b5f61203b611ef860808a0160608b016129df565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961206c60208b018b6129df565b61207c60608c0160408d016129df565b61208c60808d0160608e016129df565b8c6080013589871161209e57866120a8565b6120a88a88612dfa565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83161561212d57610b59838383612157565b610b5982826122d0565b606061214584845f856123f6565b949350505050565b8051602082018181fd5b73ffffffffffffffffffffffffffffffffffffffff83166121a4576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166121f1576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201525f9073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa15801561225b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061227f9190612de3565b9050808211156122c5576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610ef5565b6111b984848461250b565b73ffffffffffffffffffffffffffffffffffffffff821661231d576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115612360576040517fcf47918100000000000000000000000000000000000000000000000000000000815260048101829052476024820152604401610ef5565b5f8273ffffffffffffffffffffffffffffffffffffffff16826040515f6040518083038185875af1925050503d805f81146123b6576040519150601f19603f3d011682016040523d82523d5f602084013e6123bb565b606091505b5050905080610b59576040517f5a04673700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082471015612488576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610ef5565b5f808673ffffffffffffffffffffffffffffffffffffffff1685876040516124b09190612f34565b5f6040518083038185875af1925050503d805f81146124ea576040519150601f19603f3d011682016040523d82523d5f602084013e6124ef565b606091505b509150915061250087838387612561565b979650505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610b599084907fa9059cbb000000000000000000000000000000000000000000000000000000009060640161112d565b606083156125f65782515f036125ef5773ffffffffffffffffffffffffffffffffffffffff85163b6125ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610ef5565b5081612145565b612145838381511561260b5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef59190612f6f565b5f6101208284031215612650575f80fd5b50919050565b5f80610140808486031215612669575f80fd5b833567ffffffffffffffff81111561267f575f80fd5b840180860382131561268f575f80fd5b92506126a09050846020850161263f565b90509250929050565b5f8083601f8401126126b9575f80fd5b50813567ffffffffffffffff8111156126d0575f80fd5b6020830191508360208260051b85010111156126ea575f80fd5b9250929050565b5f805f8060408587031215612704575f80fd5b843567ffffffffffffffff8082111561271b575f80fd5b612727888389016126a9565b9096509450602087013591508082111561273f575f80fd5b5061274c878288016126a9565b95989497509550505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff811182821017156127a9576127a9612758565b60405290565b5f82601f8301126127be575f80fd5b813567ffffffffffffffff808211156127d9576127d9612758565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561281f5761281f612758565b81604052838152866020858801011115612837575f80fd5b836020870160208301375f602085830101528094505050505092915050565b73ffffffffffffffffffffffffffffffffffffffff81168114612877575f80fd5b50565b803561288581612856565b919050565b8015158114612877575f80fd5b80356128858161288a565b5f805f8061016085870312156128b6575f80fd5b843567ffffffffffffffff808211156128cd575f80fd5b9086019061014082890312156128e1575f80fd5b6128e9612785565b823581526020830135828111156128fe575f80fd5b61290a8a8286016127af565b602083015250604083013582811115612921575f80fd5b61292d8a8286016127af565b60408301525061293f6060840161287a565b60608201526129506080840161287a565b608082015261296160a0840161287a565b60a082015260c083013560c082015260e083013560e0820152610100612988818501612897565b9082015261012061299a848201612897565b90820152955060208701359150808211156129b3575f80fd5b506129c0878288016126a9565b90945092506129d49050866040870161263f565b905092959194509250565b5f602082840312156129ef575f80fd5b81356129fa81612856565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b808201808211156112cd576112cd612a01565b5f8083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612a74575f80fd5b830160208101925035905067ffffffffffffffff811115612a93575f80fd5b8036038213156126ea575f80fd5b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60208152813560208201525f612b016020840184612a41565b610140806040860152612b1961016086018385612aa1565b9250612b286040870187612a41565b92507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868503016060870152612b5f848483612aa1565b935050612b6e6060870161287a565b73ffffffffffffffffffffffffffffffffffffffff811660808701529150612b986080870161287a565b73ffffffffffffffffffffffffffffffffffffffff811660a08701529150612bc260a0870161287a565b73ffffffffffffffffffffffffffffffffffffffff811660c0870152915060c086013560e0860152610100915060e086013582860152612c03828701612897565b9150610120612c158187018415159052565b612c20818801612897565b925050612c308186018315159052565b5090949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f5b83811015612c81578181015183820152602001612c69565b50505f910152565b5f8151808452612ca0816020860160208601612c67565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152815160208201525f6020830151610140806040850152612cfa610160850183612c89565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152612d358382612c89565b9250506060850151612d5f608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120612dd28187018315159052565b860151801515838701529050612c30565b5f60208284031215612df3575f80fd5b5051919050565b818103818111156112cd576112cd612a01565b5f82357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612e3f575f80fd5b9190910192915050565b5f60208284031215612e59575f80fd5b81356129fa8161288a565b5f8083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612e97575f80fd5b83018035915067ffffffffffffffff821115612eb1575f80fd5b6020019150368190038213156126ea575f80fd5b5f8085851115612ed3575f80fd5b83861115612edf575f80fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612f2c5780818660040360031b1b83161692505b505092915050565b5f8251612e3f818460208701612c67565b5f60208284031215612f55575f80fd5b81516129fa8161288a565b818382375f9101908152919050565b602081525f6129fa6020830184612c8956fea2646970667358221220a1b97276e5c691f69803451ef970e728a68604e302372e73f3bed7e5cb154d2364736f6c63430008160033";

type HopFacetOptimizedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HopFacetOptimizedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HopFacetOptimized__factory extends ContractFactory {
  constructor(...args: HopFacetOptimizedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HopFacetOptimized> {
    return super.deploy(overrides || {}) as Promise<HopFacetOptimized>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HopFacetOptimized {
    return super.attach(address) as HopFacetOptimized;
  }
  override connect(signer: Signer): HopFacetOptimized__factory {
    return super.connect(signer) as HopFacetOptimized__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HopFacetOptimizedInterface {
    return new utils.Interface(_abi) as HopFacetOptimizedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HopFacetOptimized {
    return new Contract(address, _abi, signerOrProvider) as HopFacetOptimized;
  }
}
