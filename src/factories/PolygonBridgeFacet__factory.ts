/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  PolygonBridgeFacet,
  PolygonBridgeFacetInterface,
} from "../PolygonBridgeFacet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_rootChainManager",
        type: "address",
        internalType: "contract IRootChainManager",
      },
      {
        name: "_erc20Predicate",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startBridgeTokensViaPolygonBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapAndStartBridgeTokensViaPolygonBridge",
    inputs: [
      {
        name: "_bridgeData",
        type: "tuple",
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "_swapData",
        type: "tuple[]",
        internalType: "struct LibSwap.SwapData[]",
        components: [
          {
            name: "callTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "approveTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receivingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "fromAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "requiresDeposit",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "LiFiGenericSwapCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiSwappedGeneric",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "integrator",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referrer",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "fromAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "toAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fromAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "toAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferCompleted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferRecovered",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "receivingAssetId",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiFiTransferStarted",
    inputs: [
      {
        name: "bridgeData",
        type: "tuple",
        indexed: false,
        internalType: "struct ILiFi.BridgeData",
        components: [
          {
            name: "transactionId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "bridge",
            type: "string",
            internalType: "string",
          },
          {
            name: "integrator",
            type: "string",
            internalType: "string",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          {
            name: "sendingAssetId",
            type: "address",
            internalType: "address",
          },
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destinationChainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "hasSourceSwaps",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "hasDestinationCall",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CannotBridgeToSameNetwork",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "CumulativeSlippageTooHigh",
    inputs: [
      {
        name: "minAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "receivedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InformationMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidContract",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReceiver",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapFromZeroBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "NullAddrIsNotAValidSpender",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001dcb38038062001dcb833981016040819052620000349162000065565b6001600160a01b039182166080521660a052620000a4565b6001600160a01b03811681146200006257600080fd5b50565b600080604083850312156200007957600080fd5b825162000086816200004c565b602084015190925062000099816200004c565b809150509250929050565b60805160a051611cf3620000d860003960006106fb0152600081816105d50152818161068201526107b30152611cf36000f3fe6080604052600436106100295760003560e01c8063af62c7d61461002e578063b4f3758114610043575b600080fd5b61004161003c366004611823565b610056565b005b610041610051366004611860565b61027d565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016100d1576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181553360006100e234476118fa565b90508380610100015115610122576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8480610120015115610160576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856101838160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156101ba576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516000036101f8576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e0015103610235576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61024787608001518860c001516104a8565b6102508761055d565b5047915050818111156102725761027260008461026d85856118fa565b610858565b505060009091555050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016102f8576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815533600061030934476118fa565b905085806101000151610348576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8680610120015115610386576040517f50dc905c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876103a98160a0015173ffffffffffffffffffffffffffffffffffffffff161590565b156103e0576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c0015160000361041e576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b468160e001510361045b576040517f4ac09ad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61047089600001518a60c001518a8a3361088d565b60c08a015261047e8961055d565b50479150508181111561049b5761049b60008461026d85856118fa565b5050600090915550505050565b806000036104e2576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661053b5780341015610537576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61053773ffffffffffffffffffffffffffffffffffffffff83163330846109d5565b6000610581826080015173ffffffffffffffffffffffffffffffffffffffff161590565b156106385760c082015160a08301516040517f4faa8a2600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201527f000000000000000000000000000000000000000000000000000000000000000090911691634faa8a26916024016000604051808303818588803b15801561061a57600080fd5b505af115801561062e573d6000803e3d6000fd5b505050505061081d565b60808201516040517fea60c7c400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201527f00000000000000000000000000000000000000000000000000000000000000009091169063ea60c7c490602401602060405180830381865afa1580156106cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ef9190611934565b905061072482608001517f00000000000000000000000000000000000000000000000000000000000000008460c00151610a32565b60008260c0015160405160200161073d91815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260a085015160808601517fe3dec8fb00000000000000000000000000000000000000000000000000000000845291935073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169263e3dec8fb926107e9929186906004016119bc565b600060405180830381600087803b15801561080357600080fd5b505af1158015610817573d6000803e3d6000fd5b50505050505b7fcba69f43792f9f399347222505213b55af8e0b0b54b893085c2e27ecbe1644f18260405161084c91906119fe565b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff83166108825761087d8282610a5e565b505050565b61087d838383610acb565b6000828082036108c9576040517f0503c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085856108d86001856118fa565b8181106108e7576108e7611b11565b90506020028101906108f99190611b40565b61090a906080810190606001611b7e565b9050600061091782610b39565b905073ffffffffffffffffffffffffffffffffffffffff82166109415761093e34826118fa565b90505b600061094d8888610b84565b90506109598888610c90565b6109668a89898985610cfd565b60008261097285610b39565b61097c91906118fa565b9050898110156109c7576040517f275c273c000000000000000000000000000000000000000000000000000000008152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d156001600051141716610a2457637939f4246000526004601cfd5b600060605260405250505050565b61087d8383837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6110af565b73ffffffffffffffffffffffffffffffffffffffff8216610aab576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61053773ffffffffffffffffffffffffffffffffffffffff8316826111c2565b73ffffffffffffffffffffffffffffffffffffffff8216610b18576040517f1e4ec46b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61087d73ffffffffffffffffffffffffffffffffffffffff841683836111de565b600073ffffffffffffffffffffffffffffffffffffffff821615610b7c57610b7773ffffffffffffffffffffffffffffffffffffffff83163061122d565b610b7e565b475b92915050565b60608160008167ffffffffffffffff811115610ba257610ba26115f5565b604051908082528060200260200182016040528015610bcb578160200160208202803683370190505b5090506000805b83811015610c8557868682818110610bec57610bec611b11565b9050602002810190610bfe9190611b40565b610c0f906080810190606001611b7e565b9150610c1a82610b39565b838281518110610c2c57610c2c611b11565b602090810291909101015273ffffffffffffffffffffffffffffffffffffffff8216610c7d5734838281518110610c6557610c65611b11565b60200260200101818151610c7991906118fa565b9052505b600101610bd2565b509095945050505050565b60005b8181101561087d5736838383818110610cae57610cae611b11565b9050602002810190610cc09190611b40565b9050610cd260e0820160c08301611b9b565b15610cf457610cf4610cea6060830160408401611b7e565b82608001356104a8565b50600101610c93565b838383838260018114610fca5760008585610d196001856118fa565b818110610d2857610d28611b11565b9050602002810190610d3a9190611b40565b610d4b906080810190606001611b7e565b9050600089815b81811015610ef657368d8d83818110610d6d57610d6d611b11565b9050602002810190610d7f9190611b40565b9050610dae610d946060830160408401611b7e565b73ffffffffffffffffffffffffffffffffffffffff161590565b80610e115750610e11610dc76040830160208401611b7e565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1e602052604090205460ff1690565b8015610e285750610e28610dc76020830183611b7e565b8015610ead5750610ead610e3f60a0830183611bb6565b610e4e91600491600091611c22565b610e5791611c4c565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527f7a8ac5d3b7183f220a0602439da45ea337311d699902d1ed11a3725a714e7f1f602052604090205460ff1690565b610ee3576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610eed8f82611262565b50600101610d52565b505060005b610f066001856118fa565b811015610fc2576000888883818110610f2157610f21611b11565b9050602002810190610f339190611b40565b610f44906080810190606001611b7e565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610fb957858281518110610f8b57610f8b611b11565b6020026020010151610f9c82610b39565b610fa691906118fa565b92508215610fb957610fb9818885610858565b50600101610efb565b5050506110a3565b8760005b818110156110a057368b8b83818110610fe957610fe9611b11565b9050602002810190610ffb9190611b40565b9050611010610d946060830160408401611b7e565b806110295750611029610dc76040830160208401611b7e565b80156110405750611040610dc76020830183611b7e565b80156110575750611057610e3f60a0830183611bb6565b61108d576040517f9453980400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110978d82611262565b50600101610fce565b50505b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166110fc576040517f63ba9bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015283919086169063dd62ed3e90604401602060405180830381865afa158015611171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111959190611c94565b10156111bc576111bc73ffffffffffffffffffffffffffffffffffffffff85168483611561565b50505050565b60003860003884865af16105375763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d156001600051141716611223576390b8ec186000526004601cfd5b6000603452505050565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b6112996112726020830183611b7e565b3f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470141590565b6112cf576040517f6eefed2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080810135600081900361130f576040517fe46e079c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611324610d946060850160408601611b7e565b61132f576000611335565b82608001355b9050600061135161134c6060860160408701611b7e565b610b39565b9050600061136861134c6080870160608801611b7e565b90508260000361139f5761139f6113856060870160408801611b7e565b6113956040880160208901611b7e565b8760800135610a32565b84608001358210156113ea576040517fcf47918100000000000000000000000000000000000000000000000000000000815260808601356004820152602481018390526044016109be565b6000806113fa6020880188611b7e565b73ffffffffffffffffffffffffffffffffffffffff168561141e60a08a018a611bb6565b60405161142c929190611cad565b60006040518083038185875af1925050503d8060008114611469576040519150601f19603f3d011682016040523d82523d6000602084013e61146e565b606091505b50915091508161148157611481816115eb565b600061149661134c60808a0160608b01611b7e565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38896114c760208b018b611b7e565b6114d760608c0160408d01611b7e565b6114e760808d0160608e01611b7e565b8c608001358987116114f95786611503565b6115038a886118fa565b6040805196875273ffffffffffffffffffffffffffffffffffffffff95861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b81601452806034526f095ea7b300000000000000000000000060005260206000604460106000875af13d1560016000511417166112235760006034526f095ea7b3000000000000000000000000600052600038604460106000875af1508060345260206000604460106000875af13d15600160005114171661122357633e3f8f736000526004601cfd5b8051602082018181fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611648576116486115f5565b60405290565b600082601f83011261165f57600080fd5b813567ffffffffffffffff8082111561167a5761167a6115f5565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156116c0576116c06115f5565b816040528381528660208588010111156116d957600080fd5b836020870160208301376000602085830101528094505050505092915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461171b57600080fd5b50565b8035611729816116f9565b919050565b8035801515811461172957600080fd5b6000610140828403121561175157600080fd5b611759611624565b905081358152602082013567ffffffffffffffff8082111561177a57600080fd5b6117868583860161164e565b6020840152604084013591508082111561179f57600080fd5b506117ac8482850161164e565b6040830152506117be6060830161171e565b60608201526117cf6080830161171e565b60808201526117e060a0830161171e565b60a082015260c082013560c082015260e082013560e082015261010061180781840161172e565b9082015261012061181983820161172e565b9082015292915050565b60006020828403121561183557600080fd5b813567ffffffffffffffff81111561184c57600080fd5b6118588482850161173e565b949350505050565b60008060006040848603121561187557600080fd5b833567ffffffffffffffff8082111561188d57600080fd5b6118998783880161173e565b945060208601359150808211156118af57600080fd5b818601915086601f8301126118c357600080fd5b8135818111156118d257600080fd5b8760208260051b85010111156118e757600080fd5b6020830194508093505050509250925092565b81810381811115610b7e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006020828403121561194657600080fd5b8151611951816116f9565b9392505050565b6000815180845260005b8181101561197e57602081850181015186830182015201611962565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff8086168352808516602084015250606060408301526119f56060830184611958565b95945050505050565b602081528151602082015260006020830151610140806040850152611a27610160850183611958565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016060860152611a628382611958565b9250506060850151611a8c608086018273ffffffffffffffffffffffffffffffffffffffff169052565b50608085015173ffffffffffffffffffffffffffffffffffffffff811660a08601525060a085015173ffffffffffffffffffffffffffffffffffffffff811660c08601525060c085015160e085015260e0850151610100818187015280870151915050610120611aff8187018315159052565b90950151151593019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112611b7457600080fd5b9190910192915050565b600060208284031215611b9057600080fd5b8135611951816116f9565b600060208284031215611bad57600080fd5b6119518261172e565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611beb57600080fd5b83018035915067ffffffffffffffff821115611c0657600080fd5b602001915036819003821315611c1b57600080fd5b9250929050565b60008085851115611c3257600080fd5b83861115611c3f57600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015611c8c5780818660040360031b1b83161692505b505092915050565b600060208284031215611ca657600080fd5b5051919050565b818382376000910190815291905056fea2646970667358221220cc17530ac9c88bcf03837a9b19ea7759835be7d7e6b310447ea217c4c3bdb54264736f6c63430008110033";

type PolygonBridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonBridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonBridgeFacet__factory extends ContractFactory {
  constructor(...args: PolygonBridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rootChainManager: PromiseOrValue<string>,
    _erc20Predicate: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonBridgeFacet> {
    return super.deploy(
      _rootChainManager,
      _erc20Predicate,
      overrides || {}
    ) as Promise<PolygonBridgeFacet>;
  }
  override getDeployTransaction(
    _rootChainManager: PromiseOrValue<string>,
    _erc20Predicate: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rootChainManager,
      _erc20Predicate,
      overrides || {}
    );
  }
  override attach(address: string): PolygonBridgeFacet {
    return super.attach(address) as PolygonBridgeFacet;
  }
  override connect(signer: Signer): PolygonBridgeFacet__factory {
    return super.connect(signer) as PolygonBridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonBridgeFacetInterface {
    return new utils.Interface(_abi) as PolygonBridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonBridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as PolygonBridgeFacet;
  }
}
