/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TransferEventEmitter,
  TransferEventEmitterInterface,
} from "../TransferEventEmitter";

const _abi = [
  {
    type: "function",
    name: "emitTransferEvent",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "TokensTransferred",
    inputs: [
      {
        name: "token",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "from",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610154806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b5d26df014610030575b600080fd5b61004361003e3660046100d3565b610045565b005b6040805173ffffffffffffffffffffffffffffffffffffffff868116825285811660208301528416818301526060810183905290517f70c5f97fd0068e96984b8116fe83eefbff3b91244565bf311a3cba619b4ecbc79181900360800190a150505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146100ce57600080fd5b919050565b600080600080608085870312156100e957600080fd5b6100f2856100aa565b9350610100602086016100aa565b925061010e604086016100aa565b939692955092936060013592505056fea2646970667358221220b8b831ff96f9e7dde4e1dd64a2c595899f214bae314f50032d5e2c0d7e3cdd1564736f6c63430008110033";

type TransferEventEmitterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransferEventEmitterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransferEventEmitter__factory extends ContractFactory {
  constructor(...args: TransferEventEmitterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TransferEventEmitter> {
    return super.deploy(overrides || {}) as Promise<TransferEventEmitter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TransferEventEmitter {
    return super.attach(address) as TransferEventEmitter;
  }
  override connect(signer: Signer): TransferEventEmitter__factory {
    return super.connect(signer) as TransferEventEmitter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferEventEmitterInterface {
    return new utils.Interface(_abi) as TransferEventEmitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransferEventEmitter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TransferEventEmitter;
  }
}
