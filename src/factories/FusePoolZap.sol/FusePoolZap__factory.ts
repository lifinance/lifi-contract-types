/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FusePoolZap,
  FusePoolZapInterface,
} from "../../FusePoolZap.sol/FusePoolZap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_fusePoolDirectory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "InvalidPoolAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "InvalidSupplyToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "MintingError",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ZappedIn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_supplyToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "zapIn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "zapIn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161154a38038061154a83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516114b96100916000396000818160c6015261063201526114b96000f3fe6080604052600436106100295760003560e01c80637f31d7671461002e578063fe47068d14610050575b600080fd5b34801561003a57600080fd5b5061004e6100493660046112f0565b610063565b005b61004e61005e366004611331565b6105cf565b73ffffffffffffffffffffffffffffffffffffffff8316158061013357506040517f1e1c6a0700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301527f00000000000000000000000000000000000000000000000000000000000000001690631e1c6a0790602401602060405180830381865afa15801561010d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610131919061134e565b155b15610187576040517fbf6f485400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024015b60405180910390fd5b806000036101c1576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f31ff47fa00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152600091908516906331ff47fa90602401602060405180830381865afa158015610231573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102559190611370565b905073ffffffffffffffffffffffffffffffffffffffff81166102bc576040517f80855e9e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260240161017e565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610329573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034d919061138d565b905061035b84333086610b3a565b61037d73ffffffffffffffffffffffffffffffffffffffff8516836000610d54565b61039e73ffffffffffffffffffffffffffffffffffffffff85168385610d54565b6040517fa0712d680000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff83169063a0712d68906024016020604051808303816000875af115801561040b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042f919061138d565b506040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600090829073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa15801561049f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c3919061138d565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815233600482015291900360248201819052915073ffffffffffffffffffffffffffffffffffffffff84169063a9059cbb906044016020604051808303816000875af115801561053b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055f919061134e565b508273ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fd7879fe88ac1f070dbb9697d39e6b022615c004aad3a6ab63c2423d30bde8223836040516105bf91815260200190565b60405180910390a3505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116158061069f57506040517f1e1c6a0700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301527f00000000000000000000000000000000000000000000000000000000000000001690631e1c6a0790602401602060405180830381865afa158015610679573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069d919061134e565b155b156106ee576040517fbf6f485400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015260240161017e565b34600003610728576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f31ff47fa0000000000000000000000000000000000000000000000000000000081526000600482018190529073ffffffffffffffffffffffffffffffffffffffff8316906331ff47fa90602401602060405180830381865afa158015610796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ba9190611370565b905073ffffffffffffffffffffffffffffffffffffffff811661080c576040517f80855e9e0000000000000000000000000000000000000000000000000000000081526000600482015260240161017e565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089d919061138d565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f1249c58b000000000000000000000000000000000000000000000000000000001790529051919250600091829173ffffffffffffffffffffffffffffffffffffffff8616913491610920916113ca565b60006040518083038185875af1925050503d806000811461095d576040519150601f19603f3d011682016040523d82523d6000602084013e610962565b606091505b506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529193509150600090849073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa1580156109d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fb919061138d565b03905082158015610a0a575080155b15610a4357816040517f95428dd500000000000000000000000000000000000000000000000000000000815260040161017e9190611430565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810182905273ffffffffffffffffffffffffffffffffffffffff86169063a9059cbb906044016020604051808303816000875af1158015610ab6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ada919061134e565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fd7879fe88ac1f070dbb9697d39e6b022615c004aad3a6ab63c2423d30bde8223836040516105bf91815260200190565b73ffffffffffffffffffffffffffffffffffffffff8416610b87576040517fd1bebf0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610bd4576040517f21f7434500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610c45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c69919061138d565b9050610c7782868686610f59565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152849183918516906370a0823190602401602060405180830381865afa158015610ce7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0b919061138d565b610d159190611443565b14610d4c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b801580610df457506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610dce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df2919061138d565b155b610e80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161017e565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610f549084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610fbd565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610fb79085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401610ed2565b50505050565b600061101f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166110c99092919063ffffffff16565b805190915015610f54578080602001905181019061103d919061134e565b610f54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161017e565b60606110d884846000856110e2565b90505b9392505050565b606082471015611174576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161017e565b73ffffffffffffffffffffffffffffffffffffffff85163b6111f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161017e565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161121b91906113ca565b60006040518083038185875af1925050503d8060008114611258576040519150601f19603f3d011682016040523d82523d6000602084013e61125d565b606091505b509150915061126d828286611278565b979650505050505050565b606083156112875750816110db565b8251156112975782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017e9190611430565b73ffffffffffffffffffffffffffffffffffffffff811681146112ed57600080fd5b50565b60008060006060848603121561130557600080fd5b8335611310816112cb565b92506020840135611320816112cb565b929592945050506040919091013590565b60006020828403121561134357600080fd5b81356110db816112cb565b60006020828403121561136057600080fd5b815180151581146110db57600080fd5b60006020828403121561138257600080fd5b81516110db816112cb565b60006020828403121561139f57600080fd5b5051919050565b60005b838110156113c15781810151838201526020016113a9565b50506000910152565b600082516113dc8184602087016113a6565b9190910192915050565b600081518084526113fe8160208601602086016113a6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006110db60208301846113e6565b8181038181111561147d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9291505056fea26469706673582212201995bafa8ebbcc641135faf495d6649c00da841903af2b3403f4dae6ed45368764736f6c63430008110033";

type FusePoolZapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FusePoolZapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FusePoolZap__factory extends ContractFactory {
  constructor(...args: FusePoolZapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _fusePoolDirectory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FusePoolZap> {
    return super.deploy(
      _fusePoolDirectory,
      overrides || {}
    ) as Promise<FusePoolZap>;
  }
  override getDeployTransaction(
    _fusePoolDirectory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_fusePoolDirectory, overrides || {});
  }
  override attach(address: string): FusePoolZap {
    return super.attach(address) as FusePoolZap;
  }
  override connect(signer: Signer): FusePoolZap__factory {
    return super.connect(signer) as FusePoolZap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FusePoolZapInterface {
    return new utils.Interface(_abi) as FusePoolZapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FusePoolZap {
    return new Contract(address, _abi, signerOrProvider) as FusePoolZap;
  }
}
