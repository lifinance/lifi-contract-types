{
  "compilerOptions": {
    "declaration": true /* Generates corresponding '.d.ts' file. */,
    "outDir": "dist" /* Redirect output structure to the directory. */,
    "baseUrl": "./",
    "rootDir": "./src",
    "composite": true,
    "noEmitOnError": false,

    // Incremental builds
    // NOTE: Enabling incremental builds speeds up `tsc`. Keep in mind though that it does not reliably bust the cache when the `tsconfig.json` file changes.
    "incremental": true,
    // Type checking
    "strict": true,
    "useDefineForClassFields": true, // Not enabled by default in `strict` mode unless we bump `target` to ES2022.
    "noFallthroughCasesInSwitch": true, // Not enabled by default in `strict` mode.
    "noImplicitReturns": true, // Not enabled by default in `strict` mode.
    "useUnknownInCatchVariables": true, // TODO: This would normally be enabled in `strict` mode but would require some adjustments to the codebase.
    "noImplicitOverride": true, // Not enabled by default in `strict` mode.
    "noUnusedParameters": true, // Not enabled by default in `strict` mode.
    // JavaScript support
    "allowJs": false,
    "checkJs": false,
    // Interop constraints
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": false,
    "forceConsistentCasingInFileNames": true,
    // Language and environment
    "moduleResolution": "NodeNext",
    "module": "NodeNext",
    "target": "ES2021", // Setting this to `ES2021` enables native support for `Node v16+`: https://github.com/microsoft/TypeScript/wiki/Node-Target-Mapping.
    "lib": [
      "ES2022" // By using ES2022 we get access to the `.cause` property on `Error` instances.
    ],
    // Skip type checking for node modules
    "skipLibCheck": true
  },
  "include": ["src"],
  "exclude": ["dist"]
}
